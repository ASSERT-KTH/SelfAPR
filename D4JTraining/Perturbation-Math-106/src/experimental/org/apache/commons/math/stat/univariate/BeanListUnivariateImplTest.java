[REPLACE]^private double one ;^36^^^^^^^[REPLACE] private double one = 1;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private float two ;^37^^^^^^^[REPLACE] private float two = 2;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private int three = 2;^38^^^^^^^[REPLACE] private int three = 3;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double mean  = null ;^39^^^^^^^[REPLACE] private double mean = 2;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double sumSq ;^40^^^^^^^[REPLACE] private double sumSq = 18;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double sum  = null ;^41^^^^^^^[REPLACE] private double sum = 8;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double var  = null ;^42^^^^^^^[REPLACE] private double var = 0.666666666666666666667;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double std  = null ;^43^^^^^^^[REPLACE] private double std = Math.sqrt ( var ) ;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double n  = null ;^44^^^^^^^[REPLACE] private double n = 4;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double min  = null ;^45^^^^^^^[REPLACE] private double min = 1;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double max  = null ;^46^^^^^^^[REPLACE] private double max = 3;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double skewness  = null ;^47^^^^^^^[REPLACE] private double skewness = 0;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double kurtosis ;^48^^^^^^^[REPLACE] private double kurtosis = 0.5;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double tolerance ;^49^^^^^^^[REPLACE] private double tolerance = 10E-15;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private List patientList  = null ;^52^^^^^^^[REPLACE] private List patientList = null;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^patientList ;^59^^^^^58^78^[REPLACE] patientList = new ArrayList (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs1 = new VitalStats (  new Double ( 120.0D ) , new Double ( 96.4 )   ) ;^62^63^^^^58^78^[REPLACE] VitalStats vs1 = new VitalStats (  new Double ( 120.0 ) , new Double ( 96.4 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p3 = new Patient ( vs3, new Integer ( 42 )  )  ;^64^^^^^58^78^[REPLACE] Patient p1 = new Patient (  vs1, new Integer (  35  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patientList.add ( p2 )  ;^65^^^^^58^78^[REPLACE] patientList.add (  p1  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs2 = new VitalStats (  new Double ( 70.0D ) , new Double ( 97.4 )   ) ;^68^69^^^^58^78^[REPLACE] VitalStats vs2 = new VitalStats (  new Double ( 70.0 ) , new Double ( 97.4 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p3 = new Patient ( vs3, new Integer ( 42 )  )  ;^70^^^^^58^78^[REPLACE] Patient p2 = new Patient (  vs2, new Integer (  23  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patientList.add (  p3  ) ;^71^^^^^58^78^[REPLACE] patientList.add (  p2  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs3 = new VitalStats (  new Double ( 4.0d ) , new Double ( 98.6 )   ) ;^74^75^^^^58^78^[REPLACE] VitalStats vs3 = new VitalStats (  new Double ( 90.0 ) , new Double ( 98.6 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^76^^^^^58^78^[ADD] Patient p3 = new Patient (  vs3, new Integer (  42  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patientList.add (  p2  ) ;^77^^^^^58^78^[REPLACE] patientList.add (  p3  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Mean heart rate unexpected", 93.333, ageU.getMean (  ) , 0.001  ) ;^104^105^^^^99^117^[REPLACE] assertEquals (  "Mean heart rate unexpected", 93.333, heartU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^heartU .getMin (  )  , 0.001  ) ;^105^^^^^99^117^[REPLACE] heartU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^105^^^^^99^117^[ADD] heartU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Max heart rate unexpected", 120.0, ageU .getMean (  )  , 0.001  ) ;^106^107^^^^99^117^[REPLACE] assertEquals (  "Max heart rate unexpected", 120.0, heartU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^heartU.getMean (  ) , 0.001  ) ;^107^^^^^99^117^[REPLACE] heartU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Mean age unexpected", 33.333, heartU.getMean (  ) , 0.001  ) ;^112^113^^^^99^117^[REPLACE] assertEquals (  "Mean age unexpected", 33.333, ageU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^ageU.getMax (  )  ;^113^^^^^99^117^[REPLACE] ageU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Max age unexpected", 42.0, heartU.getMax (  ) , 0.001  ) ;^114^115^^^^99^117^[REPLACE] assertEquals (  "Max age unexpected", 42.0, ageU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^ageU .getMean (  )  , 0.001  ) ;^115^^^^^99^117^[REPLACE] ageU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^double[] values = new double[]{ 35.0 , 23.0 , 42.0 , 10.0 }  ;^142^^^^^140^165^[REPLACE] double[] values = {35d, 23d, 42d};^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p3 = new Patient ( vs3, new Integer ( 42 )  )  ;^144^^^^^140^165^[REPLACE] DescriptiveStatistics u = new BeanListUnivariateImpl (  patientList, "age"  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u .getMin (  )  ,tolerance ) ;^145^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getMax (  )  ;^145^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REMOVE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^146^^^^^140^165^[REMOVE] ^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^variance ( values )  ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^147^148^^^^140^165^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ; assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u.getMean (  ) , tolerance ) ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils .mean ( values )  , u.getMax (  ) , tolerance ) ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getN (  )  ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^149^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.mean ( values ) , u.getVariance (  ) , tolerance ) ;^149^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u2.getVariance (  )  ;^149^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics u22 =  ( DescriptiveStatistics ) TestUtils.serializeAndRecover ( u ) ;^152^^^^^140^165^[REPLACE] DescriptiveStatistics u2 =  ( DescriptiveStatistics ) TestUtils.serializeAndRecover ( u ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count", 0, u2.getN (  ) , tolerance )  ;^153^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getN (  )  ;^153^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", max ( values ) , u2.getMax (  ) , tolerance )  ;^154^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^154^^^^^140^165^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^variance ( values )  ;^154^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^154^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^155^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^155^^^^^140^165^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^155^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^156^^^^^140^165^[ADD] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils .mean ( values )  , u2.getMax (  ) , tolerance ) ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getMax (  )  ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^156^157^^^^140^165^[ADD] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ; assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^157^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.mean ( values ) , u2.getVariance (  ) , tolerance ) ;^157^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^157^^^^^140^165^[ADD] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u2.clear (  )  ;^159^^^^^140^165^[REPLACE] u.clear (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count", 0, u2.getN (  ) , tolerance )  ;^160^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u .getMin (  )  ,tolerance ) ;^160^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^160^^^^^140^165^[ADD] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u2.getN (  ) ;^162^^^^^140^165^[REPLACE] u2.clear (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count", 3, u2.getN (  ) , tolerance )  ;^163^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u2.getMin (  ) ,tolerance ) ;^163^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
