[REPLACE]^private double[][] m1  = null ;^34^^^^^^^[REPLACE] private double[][] m1 = {{1}};^ [CLASS] CholeskySolverTest  
[REPLACE]^private double m1Det ;^35^^^^^^^[REPLACE] private double m1Det = 1.0d;^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m2 ;^37^38^^^^37^38^[REPLACE] private double[][] m2 = {{1, 0} , {0, 2}};^ [CLASS] CholeskySolverTest  
[REPLACE]^private double m2Det  = null ;^39^^^^^^^[REPLACE] private double m2Det = 2.0d;^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m3 = {{3, 0, 0}, {0, 2, 0}, {0, 0, 3}};^41^42^43^^^41^43^[REPLACE] private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^ [CLASS] CholeskySolverTest  
[REPLACE]^private double m3Det  = null ;^44^^^^^^^[REPLACE] private double m3Det = 6.0d;^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m4 = {{3, 0, 0}, {2, 3, 0}, {4, 5, 6}};^46^47^48^^^46^48^[REPLACE] private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^ [CLASS] CholeskySolverTest  
[REPLACE]^private double m4Det = 18.0Dd;^49^^^^^^^[REPLACE] private double m4Det = 18.0d;^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m5 ;^51^52^53^54^^51^55^[REPLACE] private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^ [CLASS] CholeskySolverTest  
[REPLACE]^private float m5Det = 2700.0Dd;^56^^^^^^^[REPLACE] private double m5Det = 2700.0d;^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m6 ;^59^60^61^^^59^61^[REPLACE] private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^ [CLASS] CholeskySolverTest  
[REPLACE]^private double[][] m7 ;^63^64^^^^63^64^[REPLACE] private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^ [CLASS] CholeskySolverTest  
[REPLACE]^testDecompose ( m6, "Decomposing matrix m6" )  ;^116^^^^^113^135^[REPLACE] testDecompose ( m1, "Decomposing matrix m1" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^117^^^^^113^135^[REPLACE] testDecompose ( m2, "Decomposing matrix m2" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^118^^^^^113^135^[REPLACE] testDecompose ( m3, "Decomposing matrix m3" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^119^^^^^113^135^[REPLACE] testDecompose ( m4, "Decomposing matrix m4" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^120^^^^^113^135^[REPLACE] testDecompose ( m5, "Decomposing matrix m5" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^testDecompose ( m6, "Decomposing matrix m6" ) ;fail ( "Decomposing matrix m6" ) ;^124^125^126^127^^113^135^[ADD] try { testDecompose ( m6, "Decomposing matrix m6" ) ; fail ( "Decomposing matrix m6" ) ; } catch  ( IllegalArgumentException e )  {}^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^125^^^^^113^135^[REPLACE] testDecompose ( m6, "Decomposing matrix m6" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^125^126^^^^113^135^[ADD] testDecompose ( m6, "Decomposing matrix m6" ) ; fail ( "Decomposing matrix m6" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^fail ( "Decomposing matrix m7" )  ;^126^^^^^113^135^[REPLACE] fail ( "Decomposing matrix m6" ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REMOVE]^solver.decompose ( pdMatrix )  ;^126^^^^^113^135^[REMOVE] ^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^CholeskySolver solver = new CholeskySolver (  ) ;solver.decompose ( new RealMatrixImpl ( m7 )  ) ;fail ( "Decomposing matrix m7" ) ;^129^130^131^132^133^113^135^[ADD] try { CholeskySolver solver = new CholeskySolver (  ) ; solver.decompose ( new RealMatrixImpl ( m7 )  ) ; fail ( "Decomposing matrix m7" ) ; } catch  ( IllegalArgumentException e )  {}^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^130^131^^^^113^135^[ADD] CholeskySolver solver = new CholeskySolver (  ) ; solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^130^^^^^113^135^[ADD] CholeskySolver solver = new CholeskySolver (  ) ;^[METHOD] testDecompose [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^CholeskySolver solver = new CholeskySolver (  ) ;solver.solve ( new double[] {1,2,3} ) ;fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^144^145^146^147^148^141^170^[ADD] try { CholeskySolver solver = new CholeskySolver (  ) ; solver.solve ( new double[] {1,2,3} ) ; fail ( "solving a liniar equitation with a missing matrix should fail" ) ; } catch  ( IllegalStateException e )  {}^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^145^^^^^141^170^[ADD] CholeskySolver solver = new CholeskySolver (  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^TestSuite suite = new TestSuite ( class )  ;^145^^^^^141^170^[REPLACE] CholeskySolver solver = new CholeskySolver (  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^148^149^150^^^141^170^[ADD] catch  ( IllegalStateException e )  {}^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m1, "Decomposing matrix m1" )  ;^151^^^^^141^170^[REPLACE] testSolve ( m1, "Solving matrix m1" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testSolve ( m3, "Solving matrix m3" )  ;^152^^^^^141^170^[REPLACE] testSolve ( m2, "Solving matrix m2" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m3, "Decomposing matrix m3" )  ;^153^^^^^141^170^[REPLACE] testSolve ( m3, "Solving matrix m3" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^153^^^^^141^170^[ADD] testSolve ( m3, "Solving matrix m3" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m4, "Decomposing matrix m4" )  ;^154^^^^^141^170^[REPLACE] testSolve ( m4, "Solving matrix m4" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testSolve ( m3, "Solving matrix m3" )  ;^155^^^^^141^170^[REPLACE] testSolve ( m5, "Solving matrix m5" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^testSolve ( m6, "Solving matrix m6" ) ;fail ( "Solving matrix m6" ) ;^159^160^161^162^^141^170^[ADD] try { testSolve ( m6, "Solving matrix m6" ) ; fail ( "Solving matrix m6" ) ; } catch  ( IllegalArgumentException e )  {}^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^testDecompose ( m6, "Decomposing matrix m6" )  ;^160^^^^^141^170^[REPLACE] testSolve ( m6, "Solving matrix m6" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^fail ( "Solving matrix m3[3x3], v[4]" )  ;^161^^^^^141^170^[REPLACE] fail ( "Solving matrix m6" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^161^^^^^141^170^[ADD] fail ( "Solving matrix m6" ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^162^163^164^^^141^170^[ADD] catch  ( IllegalArgumentException e )  {}  try {^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^CholeskySolver solver = new CholeskySolver (  ) ;solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;fail ( "Solving matrix m3[3x3], v[4]" ) ;^164^165^166^167^168^141^170^[ADD] try { CholeskySolver solver = new CholeskySolver (  ) ; solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ; fail ( "Solving matrix m3[3x3], v[4]" ) ; } catch  ( IllegalArgumentException e )  {}^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[ADD]^^165^166^^^^141^170^[ADD] CholeskySolver solver = new CholeskySolver (  ) ; solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^TestSuite suite = new TestSuite ( class )  ;^165^^^^^141^170^[REPLACE] CholeskySolver solver = new CholeskySolver (  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] [CLASS] CholeskySolverTest   [TYPE]  double[][] m1  m2  m3  m4  m5  m6  m7  [TYPE]  CholeskySolver solver  [TYPE]  IllegalStateException e  [TYPE]  boolean false  true  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  IllegalArgumentException e 
[REPLACE]^RealMatrix triangularMatrix = new RealMatrixImpl ( m7 ) ;^223^224^^^^221^240^[REPLACE] RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  x.getData ( triangularMatrix.transpose (  )  ) ;^225^226^^^^221^240^[REPLACE] RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^TestSuite suite = new TestSuite ( class )  ;^230^^^^^221^240^[REPLACE] double[] c = new double[lowerTriangularMatrix.length];^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^c[i] +;^233^^^^^221^240^[REPLACE] c[i] += lowerTriangularMatrix[i][j];^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[ADD]^^231^232^233^^235^221^240^[ADD] for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j]; solver.decompose ( pdMatrix ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[ADD]^^232^233^^235^236^221^240^[ADD] for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j]; solver.decompose ( pdMatrix ) ; RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^solver .getDecomposition (  )  ;^235^^^^^221^240^[REPLACE] solver.decompose ( pdMatrix ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix )  ;^236^^^^^221^240^[REPLACE] RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0d )  ) ;^238^239^^^^221^240^[REPLACE] assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10D )  ) ;^239^^^^^221^240^[REPLACE] areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REPLACE]^areEqual ( pdMatrix.RealMatrixImpl ( triangularMatrix ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^[REPLACE] areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
[REMOVE]^triangularMatrix.multiply ( triangularMatrix.transpose (  )  )  ;^239^^^^^221^240^[REMOVE] ^[METHOD] testSolve [TYPE] void [PARAMETER] double[][] lowerTriangularMatrix String message [CLASS] CholeskySolverTest   [TYPE]  CholeskySolver solver  [TYPE]  boolean false  true  [TYPE]  RealMatrix triangularMatrix  x  [TYPE]  double[] c  [TYPE]  double m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  [TYPE]  double[][] lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  [TYPE]  RealMatrixImpl pdMatrix  [TYPE]  String message  [TYPE]  int i  j 
