[REPLACE]^private static final long serialVersionUID ;^40^^^^^^^[REPLACE] private static final long serialVersionUID = -5593383832225844641L;^ [CLASS] Max  
[REPLACE]^private float value;^46^^^^^^^[REPLACE] private double value;^ [CLASS] Max  
[REPLACE]^n = 0L;^52^^^^^51^54^[REPLACE] n = 0;^[METHOD] <init> [TYPE] Max() [PARAMETER] [CLASS] Max   [TYPE]  double value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value  =  value ;^53^^^^^51^54^[REPLACE] value = Double.NaN;^[METHOD] <init> [TYPE] Max() [PARAMETER] [CLASS] Max   [TYPE]  double value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^53^^^^^51^54^[ADD] value = Double.NaN;^[METHOD] <init> [TYPE] Max() [PARAMETER] [CLASS] Max   [TYPE]  double value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( d > value && Double.isNaN ( value )  )  {^60^^^^^59^64^[REPLACE] if  ( d > value || Double.isNaN ( value )  )  {^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value =  null;^61^^^^^59^64^[REPLACE] value = d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^61^^^^^59^64^[ADD] value = d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value ;^70^^^^^69^72^[REPLACE] value = Double.NaN;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^n = 0;^70^71^^^^69^72^[ADD] value = Double.NaN; n = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^n = 3;^71^^^^^69^72^[REPLACE] n = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return max;^78^^^^^77^79^[REPLACE] return value;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return value;^85^^^^^84^86^[REPLACE] return n;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] Max   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = begin; i < begin + length; i++ )  { if  ( !Double.isNaN ( values[i] )  )  {^111^^^^^110^121^[REPLACE] double max = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^^111^^^^^110^121^[ADD] double max = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^if  ( test ( values, begin, length - 4 )  )  {^112^^^^^110^121^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^if  ( Double.isNaN ( values[i] )  )  {^115^^^^^110^121^[REPLACE] if  ( !Double.isNaN ( values[i] )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^max =  ( max  <=  values[i] )  ? max : values[i];^116^^^^^110^121^[REPLACE] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + begin - 4; i++ )  {^114^^^^^110^121^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^max  =  values[i];^116^^^^^110^121^[REPLACE] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^value  =  max ;^116^^^^^110^121^[REPLACE] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^max =  null[begin];^113^^^^^110^121^[REPLACE] max = values[begin];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^^116^^^^^110^121^[ADD] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = length; i < begin + length; i++ )  {^114^^^^^110^121^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^max  =  max ;^116^^^^^110^121^[REPLACE] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length - 4; i++ )  {^114^^^^^110^121^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^max =  ( max > values[i] )  ? max : values[i];^115^116^117^^^110^121^[ADD] if  ( !Double.isNaN ( values[i] )  )  { max =  ( max > values[i] )  ? max : values[i]; }^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^max =  ( max  >=  values[i] )  ? max : values[i];^116^^^^^110^121^[REPLACE] max =  ( max > values[i] )  ? max : values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^return value;^120^^^^^110^121^[REPLACE] return max;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Max   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  max  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
