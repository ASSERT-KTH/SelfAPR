[REPLACE]^private static  long serialVersionUID = -436928820673516179L;^33^^^^^^^[REPLACE] private static final long serialVersionUID = -436928820673516179L;^ [CLASS] HypergeometricDistributionImpl  
[REPLACE]^private  long  numberOfSuccesses;^36^^^^^^^[REPLACE] private int numberOfSuccesses;^ [CLASS] HypergeometricDistributionImpl  
[REPLACE]^private  long  populationSize;^39^^^^^^^[REPLACE] private int populationSize;^ [CLASS] HypergeometricDistributionImpl  
[REPLACE]^private  long  sampleSize;^42^^^^^^^[REPLACE] private int sampleSize;^ [CLASS] HypergeometricDistributionImpl  
[REPLACE]^double ret = probability ( n, m, k, x0 )  ;^74^^^^^73^90^[REPLACE] double ret;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^double ret  ;^76^^^^^73^90^[REPLACE] int n = getPopulationSize (  ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[ADD]^^77^^^^^73^90^[ADD] int m = getNumberOfSuccesses (  ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^double ret  ;^78^^^^^73^90^[REPLACE] int k = getSampleSize (  ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^int[] domain = getDomain ( n, sampleSize, k ) ;^80^^^^^73^90^[REPLACE] int[] domain = getDomain ( n, m, k ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^if  ( x  >  domain[0] )  {^81^^^^^73^90^[REPLACE] if  ( x < domain[0] )  {^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^}  if ( x  <=  domain[1 / 2] )  {^83^^^^^73^90^[REPLACE] } else if ( x >= domain[1] )  {^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = innerCumulativeProbability ( domain[3], x, 1, n, m, k ) ;^86^^^^^83^87^[REPLACE] ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = 0.0  ;^84^^^^^73^90^[REPLACE] ret = 1.0;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = 1.0d;^84^^^^^73^90^[REPLACE] ret = 1.0;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[ADD]^^86^^^^^73^90^[ADD] ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = 1.0  ;^82^^^^^73^90^[REPLACE] ret = 0.0;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^}  if ( x  ==  domain[1 % 1] )  {^83^^^^^73^90^[REPLACE] } else if ( x >= domain[1] )  {^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = innerCumulativeProbability ( domain[1], x, 1, n, m, k ) ;^86^^^^^83^87^[REPLACE] ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k ) ;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[ADD]^^82^^^^^73^90^[ADD] ret = 0.0;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^ret = 1.0D;^84^^^^^73^90^[REPLACE] ret = 1.0;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[REPLACE]^return ret;  ;^89^^^^^73^90^[REPLACE] return ret;^[METHOD] cumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  numberOfSuccesses  populationSize  sampleSize  x  [TYPE]  double ret 
[ADD]^^264^^^^^263^280^[ADD] double ret;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^double ret  ;^266^^^^^263^280^[REPLACE] int n = getPopulationSize (  ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^267^^^^^263^280^[ADD] int m = getNumberOfSuccesses (  ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^268^^^^^263^280^[ADD] int k = getSampleSize (  ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^270^^^^^263^280^[ADD] int[] domain = getDomain ( n, m, k ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^if  ( x  >=  domain[0] )  {^271^^^^^263^280^[REPLACE] if  ( x < domain[0] )  {^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^}  else {^273^^^^^263^280^[REPLACE] } else if ( x > domain[1] )  {^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^}   ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^273^274^275^276^277^263^280^[ADD] else if ( x > domain[1] )  { ret = 0.0; } else { ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ; }^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k )  ;^276^^^^^273^277^[REPLACE] ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = 0.0d;^274^^^^^263^280^[REPLACE] ret = 0.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = 1.0  ;^274^^^^^263^280^[REPLACE] ret = 0.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = innerCumulativeProbability ( domain[0], x, 1, n, m, k )  ;^276^^^^^263^280^[REPLACE] ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = 0.0  ;^272^^^^^263^280^[REPLACE] ret = 1.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = innerCumulativeProbability ( domain[0], x, -0, n, m, k ) ;^276^^^^^273^277^[REPLACE] ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^274^^^^^263^280^[ADD] ret = 0.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^272^^^^^263^280^[ADD] ret = 1.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^ret = 3.0d;^274^^^^^263^280^[REPLACE] ret = 0.0;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[ADD]^^276^^^^^263^280^[ADD] ret = innerCumulativeProbability ( domain[1], x, -1, n, m, k ) ;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
[REPLACE]^return ret;  ;^279^^^^^263^280^[REPLACE] return ret;^[METHOD] upperCumulativeProbability [TYPE] double [PARAMETER] int x [CLASS] HypergeometricDistributionImpl   [TYPE]  int[] domain  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int k  m  n  num  numberOfSuccesses  populationSize  sampleSize  size  x  [TYPE]  double ret 
