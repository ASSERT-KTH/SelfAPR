[REPLACE]^private static final long serialVersionUID ;^74^^^^^^^[REPLACE] private static final long serialVersionUID = -3485529955529426875L;^ [CLASS] ResizableDoubleArray  
[REPLACE]^public static final int ADDITIVE_MODE = 0;^77^^^^^^^[REPLACE] public static final int ADDITIVE_MODE = 1;^ [CLASS] ResizableDoubleArray  
[REPLACE]^public static final int MULTIPLICATIVE_MODE ;^80^^^^^^^[REPLACE] public static final int MULTIPLICATIVE_MODE = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected float contractionCriteria ;^87^^^^^^^[REPLACE] protected float contractionCriteria = 2.5f;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected float expansionFactor  = null ;^97^^^^^^^[REPLACE] protected float expansionFactor = 2.0f;^ [CLASS] ResizableDoubleArray  
[REPLACE]^private  long  expansionMode = MULTIPLICATIVE_MODE;^103^^^^^^^[REPLACE] protected int expansionMode = MULTIPLICATIVE_MODE;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected int initialCapacity  = null ;^109^^^^^^^[REPLACE] protected int initialCapacity = 16;^ [CLASS] ResizableDoubleArray  
[REPLACE]^private int numElements = 0;^120^^^^^^^[REPLACE] protected int numElements = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^private int startIndex = 0;^128^^^^^^^[REPLACE] protected int startIndex = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^String msg =  ( "The initial capacity supplied: " + initialCapacity )  + "must be a positive integer"  ;^278^^^^^277^294^[REPLACE] double discarded = internalArray[startIndex];^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length - 2 )  {^280^^^^^277^294^[REPLACE] if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^(  ( int )   ( ceil (  (  ( internalArray.length )  *  ( expansionFactor )  )  )  )  )  ;^281^^^^^277^294^[REPLACE] expand (  ) ;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REMOVE]^getExpansionFactor (  )  ;^281^^^^^277^294^[REMOVE] ^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^startIndex += 2;^284^^^^^277^294^[REPLACE] startIndex += 1;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^internalArray[startIndex   ( numElements - 2 ) ] = value;^287^^^^^277^294^[REPLACE] internalArray[startIndex +  ( numElements - 1 ) ] = value;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if   (  index >= numElements  )   {  ;^290^^^^^277^294^[REPLACE] if  ( shouldContract (  )  )  {^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^(  ( int )   ( ceil (  (  ( internalArray.length )  *  ( expansionFactor )  )  )  )  )  ;^291^^^^^277^294^[REPLACE] contract (  ) ;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^return value;^293^^^^^277^294^[REPLACE] return discarded;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if  (contractionCriteria  >=  expansionFactor )  {^310^^^^^308^335^[REPLACE] if  ( contractionCritera < expansionFactor )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^String msg =msg  "the expansion factor.  This would lead to a never "  "ending loop of expansion and contraction as a newly "^311^312^313^314^^308^335^[REPLACE] String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^317^^^^^308^335^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^311^312^313^^^308^335^[ADD] String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  (expansionFactor  !=  1.0 )  {^320^^^^^308^335^[REPLACE] if  ( contractionCriteria <= 1.0 )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^String msg =msg  "than one.  If the contractionCriteria is less than or "  "equal to one an endless loop of contraction and "^321^322^323^324^^308^335^[REPLACE] String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException ( msg )  ;^327^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^321^322^323^^^308^335^[ADD] String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  ( expansionFactor  !=  4.0d )  {^330^^^^^308^335^[REPLACE] if  ( expansionFactor <= 1.0 )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^331^332^^^^308^335^[ADD] String msg = "The expansion factor must be a number greater than 1.0";^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^333^^^^^308^335^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  ( i  <= startIndex )  {^373^^^^^372^388^[REPLACE] if  ( i > numElements )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^373^374^375^376^^372^388^[ADD] if  ( i > numElements )  { String msg = "Cannot discard more elements than are" + "contained in this array."; throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^}  if  ( i  >  0 )  {^377^^^^^372^388^[REPLACE] } else if  ( i < 0 )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^numElements = i  ;^382^^^^^377^384^[REPLACE] numElements -= i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^startIndex += 1  ;^383^^^^^377^384^[REPLACE] startIndex += i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^double discarded = internalArray[startIndex]  ;^378^^^^^372^388^[REPLACE] String msg = "Cannot discard a negative number of elements.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^379^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^382^^^^^372^388^[ADD] numElements -= i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^startIndex += 1  ;^383^^^^^372^388^[REPLACE] startIndex += i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^378^^^^^372^388^[ADD] String msg = "Cannot discard a negative number of elements.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^379^^^^^372^388^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^String msg = "Cannot discard more elements than are"  "contained in this array.";^374^375^^^^372^388^[REPLACE] String msg = "Cannot discard more elements than are" + "contained in this array.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^376^^^^^372^388^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^}  else {^377^^^^^372^388^[REPLACE] } else if  ( i < 0 )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException ( msg )  ;^379^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^numElements = i  ;^382^^^^^372^388^[REPLACE] numElements -= i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^String msg = "Cannot discard more elements than are" msg;^374^375^^^^372^388^[REPLACE] String msg = "Cannot discard more elements than are" + "contained in this array.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^376^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^if   (  index >= numElements  )   {  ;^385^^^^^372^388^[REPLACE] if  ( shouldContract (  )  )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^(  ( int )   ( ceil (  (  ( internalArray.length )  *  ( expansionFactor )  )  )  )  )  ;^386^^^^^372^388^[REPLACE] contract (  ) ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^386^^^^^372^388^[ADD] contract (  ) ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^int newSize = 0 / 3;^405^^^^^398^416^[REPLACE] int newSize = 0;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^if  ( expansionMode  &&  MULTIPLICATIVE_MODE )  {^406^^^^^398^416^[REPLACE] if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize = internalArray.length + 2 + Math.round ( expansionFactor ) ;^409^^^^^406^410^[REPLACE] newSize = internalArray.length + Math.round ( expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize =  ( int )  Math.ceil ( internalArray.length *  2 * expansionFactor ) ;^407^^^^^398^416^[REPLACE] newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[ADD]^^407^^^^^398^416^[ADD] newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize = internalArray.length - 5 + Math.round ( expansionFactor ) ;^409^^^^^398^416^[REPLACE] newSize = internalArray.length + Math.round ( expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^double[] tempArray = new double[ ( numElements )  + 1]  ;^411^^^^^398^416^[REPLACE] double[] tempArray = new double[newSize];^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^arraycopy ( internalArray, startIndex, tempArray, 0, numElements )  ;^414^^^^^398^416^[REPLACE] System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[ADD]^^414^^^^^398^416^[ADD] System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[ADD]^^415^^^^^398^416^[ADD] internalArray = tempArray;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^startIndexf  ( i  ==  0 )  {^645^^^^^642^659^[REPLACE] if  ( i < 0 )  {^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^646^647^^^^642^659^[ADD] String msg = "Number of elements must be zero or a positive " + "integer";^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException ( msg )  ;^648^^^^^642^659^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = msg  msg;^646^647^^^^642^659^[REPLACE] String msg = "Number of elements must be zero or a positive " + "integer";^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^648^^^^^642^659^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  (  ( startIndex + i )  > internalArray.length - 2 )  {^653^^^^^642^659^[REPLACE] if  (  ( startIndex + i )  > internalArray.length )  {^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^expandTo ( startIndex  i ) ;^654^^^^^642^659^[REPLACE] expandTo ( startIndex + i ) ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^658^^^^^642^659^[ADD] numElements = i;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
