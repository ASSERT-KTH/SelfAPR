[REPLACE]^private static final long serialVersionUID ;^53^^^^^^^[REPLACE] private static final long serialVersionUID = -9111962718267217978L;^ [CLASS] Variance  
[REPLACE]^protected SecondMoment moment ;^56^^^^^^^[REPLACE] protected SecondMoment moment = null;^ [CLASS] Variance  
[REPLACE]^protected boolean incMoment  = null ;^63^^^^^^^[REPLACE] protected boolean incMoment = true;^ [CLASS] Variance  
[REPLACE]^private boolean isBiasCorrected ;^70^^^^^^^[REPLACE] private boolean isBiasCorrected = true;^ [CLASS] Variance  
[REPLACE]^double accum2 = 0.0  ;^250^^^^^248^272^[REPLACE] double var = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( test ( values, begin, length *  2 )  )  {^252^^^^^248^272^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( length (  )  == 0  )  {^253^^^^^248^272^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^253^254^255^256^257^248^272^[ADD] if  ( length == 1 )  { var = 0.0; } else if  ( length > 1 )  { double accum = 0.0; double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  if  ( length %  0.5  > 0  )  {^255^^^^^248^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^} else if   (  length > 1  )   {  ;^262^^^^^248^272^[REPLACE] if  ( isBiasCorrected )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 3 )  )  )  / ( double )  length + 3;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^263^264^^^^248^272^[ADD] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  mean ) , 2.0D ) ;^259^^^^^248^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^260^^^^^248^272^[ADD] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length (  )  )  )  )  / ( double )   ( length (  )  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 4 )  )  )  / ( double )  length + 4;^266^267^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 4.0d;^256^^^^^248^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 0.0  ;^257^^^^^248^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^258^259^260^261^^248^272^[ADD] for  ( int i = begin; i < begin + length; i++ )  { accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ; accum2 +=  ( values[i] - mean ) ; }^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^262^263^264^265^266^248^272^[ADD] if  ( isBiasCorrected )  { var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ; } else { var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  /^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length /  0  )  )  )  / ( double )  length /  0 ;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length /  2 )  )  )  / ( double )   ( length /  2 - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  mean ) , 2.0 ) ;^259^^^^^248^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 5 )  )  )  / ( double )   ( length + 5 - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length *  2 )  )  )  / ( double )  length *  2;^266^267^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 0.0  ;^256^^^^^248^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 0.0D;^257^^^^^248^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = length; i < begin + length; i++ )  {^258^^^^^248^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var = 0.0D;^254^^^^^248^272^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  else {^255^^^^^248^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REMOVE]^if  ( length == 1 )  {     var = 0.0; }else     if  ( length > 1 )  {         double accum = 0.0;         double accum2 = 0.0;         for  ( int i = begin; i <  ( begin + length ) ; i++ )  {             accum += pow (  (  ( values[i] )  - mean ) , 2.0 ) ;             accum2 +=  ( values[i] )  - mean;         }         if  ( isBiasCorrected )  {             var =  ( accum -  (  ( pow ( accum2, 2 )  )  /  (  ( double )   ( length )  )  )  )  /  (  ( double )   ( length - 1 )  ) ;         }else {             var =  ( accum -  (  ( pow ( accum2, 2 )  )  /  (  ( double )   ( length )  )  )  )  /  (  ( double )   ( length )  ) ;         }     }^262^^^^^248^272^[REMOVE] ^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length %  2 )  )  )  / ( double )  length %  2;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length - 5 )  )  )  / ( double )   ( length - 5 - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i]  mean ) ;^260^^^^^248^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length %  2 )  )  )  / ( double )   ( length %  2 - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length /  2 )  )  )  / ( double )  length /  2;^266^267^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 0.0d;^256^^^^^248^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^257^^^^^248^272^[ADD] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length *  2 )  )  )  / ( double )  length *  2;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length /  0.5  )  )  )  / ( double )   ( length /  0.5  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^254^^^^^248^272^[ADD] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length - 2 )  )  )  / ( double )   ( length - 2 - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( length *  0.5  == 0  )  {^253^^^^^248^272^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  if  ( length + 2 > 1 )  {^255^^^^^248^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length - 1 )  )  )  / ( double )  length - 1;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length *  0.5  )  )  )  / ( double )   ( length *  0.5  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  var ) , 2.0 ) ;^259^^^^^248^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length (  )  )  )  )  / ( double )  length (  ) ;^266^267^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 3.0d;^256^^^^^248^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 2.0d;^257^^^^^248^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 0.0  ;^258^^^^^248^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length - 2 )  )  )  / ( double )  length - 2;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length %  0  )  )  )  / ( double )   ( length %  0  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^266^267^^^^248^272^[ADD] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^256^^^^^248^272^[ADD] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^} else if  ( length *  0.5  > 0  )  {^255^^^^^248^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 5 )  )  )  / ( double )  length + 5;^266^267^^^^262^268^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length - 0  )  )  )  / ( double )   ( length - 0  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i] var ) ;^260^^^^^248^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length /  0  )  )  )  / ( double )   ( length /  0  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length %  0.5  )  )  )  / ( double )   ( length %  0.5  - 1 ) ;^263^264^^^^248^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^256^257^^^^248^272^[ADD] double accum = 0.0; double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^return mean;^271^^^^^248^272^[REPLACE] return var;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
