[REPLACE]^private static UnivariateStatistic sum ;^39^^^^^^^[REPLACE] private static UnivariateStatistic sum = new Sum (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private  UnivariateStatistic sumSq = new SumOfSquares (  ) ;^42^^^^^^^[REPLACE] private static UnivariateStatistic sumSq = new SumOfSquares (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static UnivariateStatistic prod ;^45^^^^^^^[REPLACE] private static UnivariateStatistic prod = new Product (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static UnivariateStatistic sumLog  = null ;^48^^^^^^^[REPLACE] private static UnivariateStatistic sumLog = new SumOfLogs (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static UnivariateStatistic min  = null ;^51^^^^^^^[REPLACE] private static UnivariateStatistic min = new Min (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private  UnivariateStatistic max = new Max (  ) ;^54^^^^^^^[REPLACE] private static UnivariateStatistic max = new Max (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private  UnivariateStatistic mean = new Mean (  ) ;^57^^^^^^^[REPLACE] private static UnivariateStatistic mean = new Mean (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static Variance variance ;^60^^^^^^^[REPLACE] private static Variance variance = new Variance (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static Percentile percentile ;^63^^^^^^^[REPLACE] private static Percentile percentile = new Percentile (  ) ;^ [CLASS] StatUtils  
[REPLACE]^private static GeometricMean geometricMean  = null ;^66^^^^^^^[REPLACE] private static GeometricMean geometricMean = new GeometricMean (  ) ;^ [CLASS] StatUtils  
[REPLACE]^return sum .evaluate ( values , this , null )  ;^87^^^^^86^88^[REPLACE] return sum.evaluate ( values ) ;^[METHOD] sum [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return variance.evaluate ( values, begin, length ) ;^106^^^^^104^107^[REPLACE] return sum.evaluate ( values, begin, length ) ;^[METHOD] sum [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return sumSq .evaluate ( values , false , this )  ;^121^^^^^120^122^[REPLACE] return sumSq.evaluate ( values ) ;^[METHOD] sumSq [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sumSq .evaluate ( values )  ;^140^^^^^138^141^[REPLACE] return sumSq.evaluate ( values, begin, length ) ;^[METHOD] sumSq [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return max.evaluate ( values ) ;^154^^^^^153^155^[REPLACE] return prod.evaluate ( values ) ;^[METHOD] product [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sum.evaluate ( values, begin, length ) ;^173^^^^^171^174^[REPLACE] return prod.evaluate ( values, begin, length ) ;^[METHOD] product [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return sumLog .evaluate ( values , this , null )  ;^190^^^^^189^191^[REPLACE] return sumLog.evaluate ( values ) ;^[METHOD] sumLog [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sum.evaluate ( values, begin, length ) ;^212^^^^^210^213^[REPLACE] return sumLog.evaluate ( values, begin, length ) ;^[METHOD] sumLog [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return max.evaluate ( values ) ;^229^^^^^228^230^[REPLACE] return mean.evaluate ( values ) ;^[METHOD] mean [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sum.evaluate ( values, begin, length ) ;^251^^^^^249^252^[REPLACE] return mean.evaluate ( values, begin, length ) ;^[METHOD] mean [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return geometricMean .evaluate ( values , null , this )  ;^268^^^^^267^269^[REPLACE] return geometricMean.evaluate ( values ) ;^[METHOD] geometricMean [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return geometricMean .evaluate ( values )  ;^290^^^^^288^291^[REPLACE] return geometricMean.evaluate ( values, begin, length ) ;^[METHOD] geometricMean [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return max.evaluate ( values ) ;^310^^^^^309^311^[REPLACE] return variance.evaluate ( values ) ;^[METHOD] variance [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sum.evaluate ( values, begin, length ) ;^335^^^^^333^336^[REPLACE] return variance.evaluate ( values, begin, length ) ;^[METHOD] variance [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return variance.evaluate ( values, begin, length ) ;^366^^^^^364^367^[REPLACE] return variance.evaluate ( values, mean, begin, length ) ;^[METHOD] variance [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double mean  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return variance .evaluate ( values )  ;^392^^^^^391^393^[REPLACE] return variance.evaluate ( values, mean ) ;^[METHOD] variance [TYPE] double [PARAMETER] final double[] values final double mean [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double mean  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return mean.evaluate ( values ) ;^413^^^^^412^414^[REPLACE] return max.evaluate ( values ) ;^[METHOD] max [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return max .evaluate ( values )  ;^440^^^^^438^441^[REPLACE] return max.evaluate ( values, begin, length ) ;^[METHOD] max [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return max.evaluate ( values ) ;^461^^^^^460^462^[REPLACE] return min.evaluate ( values ) ;^[METHOD] min [TYPE] double [PARAMETER] final double[] values [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return sum.evaluate ( values, begin, length ) ;^488^^^^^486^489^[REPLACE] return min.evaluate ( values, begin, length ) ;^[METHOD] min [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return percentile .evaluate ( values )  ;^515^^^^^514^516^[REPLACE] return percentile.evaluate ( values,p ) ;^[METHOD] percentile [TYPE] double [PARAMETER] final double[] values final double p [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double p  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^return variance.evaluate ( values, begin, length ) ;^547^^^^^545^548^[REPLACE] return percentile.evaluate ( values, begin, length, p ) ;^[METHOD] percentile [TYPE] double [PARAMETER] final double[] values final int begin final int length final double p [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double p  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^int n = sample2.length;^562^^^^^560^572^[REPLACE] int n = sample1.length;^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^if  ( n  != sample2.length + 2 ) {^563^^^^^560^572^[REPLACE] if  ( n  != sample2.length || n < 1 )  {^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^563^564^565^566^^560^572^[ADD] if  ( n  != sample2.length || n < 1 )  { throw new IllegalArgumentException ( "Input arrays must have the same  ( positive )  length." ) ; }^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^return ;^564^565^^^^560^572^[REPLACE] throw new IllegalArgumentException ( "Input arrays must have the same  ( positive )  length." ) ;^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^564^565^^^^560^572^[ADD] throw new IllegalArgumentException ( "Input arrays must have the same  ( positive )  length." ) ;^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^double result = 1;^567^^^^^560^572^[REPLACE] double result = 0;^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^for  ( int i = 0; i  >=  n; i++ )  {^568^^^^^560^572^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^568^569^570^^^560^572^[ADD] for  ( int i = 0; i < n; i++ )  { result += sample1[i] - sample2[i]; }^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^diff = sample1[i] - sample2[i]; ;^569^^^^^560^572^[REPLACE] result += sample1[i] - sample2[i];^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^569^^^^^560^572^[ADD] result += sample1[i] - sample2[i];^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^for  ( int i = 1; i < n; i++ )  {^568^^^^^560^572^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^return max.evaluate ( values ) ;^571^^^^^560^572^[REPLACE] return result;^[METHOD] sumDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double result  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^return sumDifference ( sample1, sample2 )  /  ( double )  sample1.length - 4;^586^^^^^584^587^[REPLACE] return sumDifference ( sample1, sample2 )  /  ( double )  sample1.length;^[METHOD] meanDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 [CLASS] StatUtils   [TYPE]  GeometricMean geometricMean  [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance 
[REPLACE]^double sum2 = 0d;^603^^^^^601^616^[REPLACE] double sum1 = 0d;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^double sum1 = 0d;^604^^^^^601^616^[REPLACE] double sum2 = 0d;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^604^605^^^^601^616^[ADD] double sum2 = 0d; double diff = 0d;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^double sum2 = 0d;^605^^^^^601^616^[REPLACE] double diff = 0d;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^int n = sample1.length;^605^606^607^608^609^601^616^[ADD] double diff = 0d; int n = sample1.length; if  ( n < 2 || n != sample2.length )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^int n = sample2.length;^606^^^^^601^616^[REPLACE] int n = sample1.length;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^606^^^^^601^616^[ADD] int n = sample1.length;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^if  ( n < 2 ) {^607^^^^^601^616^[REPLACE] if  ( n < 2 || n != sample2.length )  {^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REMOVE]^if  (  ( n !=  ( sample2.length )  )  ||  ( n < 1 )  )  {     throw new IllegalArgumentException ( "Input arrays must have the same  ( positive )  length." ) ; }^607^^^^^601^616^[REMOVE] ^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^return ;^608^^^^^601^616^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^608^^^^^601^616^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^for  ( int i = 1; i  !=  n; i++ )  {^610^^^^^601^616^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^result += sample1[i] - sample2[i]; ;^611^^^^^601^616^[REPLACE] diff = sample1[i] - sample2[i];^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^sum1 +=  ( diff - meanDifference )   ;^612^^^^^601^616^[REPLACE] sum1 +=  ( diff - meanDifference )  * ( diff - meanDifference ) ;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^sum2 += diff  >  meanDifference;^613^^^^^601^616^[REPLACE] sum2 += diff - meanDifference;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^sum2 += diff  ||  meanDifference;^613^^^^^601^616^[REPLACE] sum2 += diff - meanDifference;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^613^614^^^^601^616^[ADD] sum2 += diff - meanDifference; }^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^for  ( int i = 2; i < n; i++ )  {^610^^^^^601^616^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[ADD]^^610^611^612^613^614^601^616^[ADD] for  ( int i = 0; i < n; i++ )  { diff = sample1[i] - sample2[i]; sum1 +=  ( diff - meanDifference )  * ( diff - meanDifference ) ; sum2 += diff - meanDifference; }^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
[REPLACE]^return  ( sum4 -  ( sum2 * sum2  |   ( double )  n )  )   |   ( double )   ( n - 4 ) ;^615^^^^^601^616^[REPLACE] return  ( sum1 -  ( sum2 * sum2 /  ( double )  n )  )  /  ( double )   ( n - 1 ) ;^[METHOD] varianceDifference [TYPE] double [PARAMETER] final double[] sample1 final double[] sample2 double meanDifference [CLASS] StatUtils   [TYPE]  Percentile percentile  [TYPE]  boolean false  true  [TYPE]  double[] sample1  sample2  [TYPE]  double diff  meanDifference  sum1  sum2  [TYPE]  GeometricMean geometricMean  [TYPE]  UnivariateStatistic max  mean  min  prod  sum  sumLog  sumSq  [TYPE]  Variance variance  [TYPE]  int i  n 
