[REPLACE]^private static  long serialVersionUID = 5728716329662425188L;^43^^^^^^^[REPLACE] private static final long serialVersionUID = 5728716329662425188L;^ [CLASS] StandardDeviation  
[REPLACE]^private Variance variance ;^46^^^^^^^[REPLACE] private Variance variance = null;^ [CLASS] StandardDeviation  
[REPLACE]^variance = new Variance ( m2 ) ; ;^53^^^^^52^54^[REPLACE] variance = new Variance (  ) ;^[METHOD] <init> [TYPE] StandardDeviation() [PARAMETER] [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  true 
[REPLACE]^variance = new Variance (  ) ; ;^62^^^^^61^63^[REPLACE] variance = new Variance ( m2 ) ;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] SecondMoment m2 [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  SecondMoment m2 
[ADD]^^62^^^^^61^63^[ADD] variance = new Variance ( m2 ) ;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] SecondMoment m2 [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  SecondMoment m2 
[REPLACE]^variance =  new Variance (  )  ; ;^76^^^^^75^77^[REPLACE] variance = new Variance ( isBiasCorrected ) ;^[METHOD] <init> [TYPE] StandardDeviation(boolean) [PARAMETER] boolean isBiasCorrected [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  isBiasCorrected  true 
[REPLACE]^variance = new Variance ( isBiasCorrected ) ; ;^91^^^^^90^92^[REPLACE] variance = new Variance ( isBiasCorrected, m2 ) ;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] boolean isBiasCorrected SecondMoment m2 [CLASS] StandardDeviation   [TYPE]  boolean false  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  SecondMoment m2 
[REPLACE]^variance.evaluate ( d ) ;^98^^^^^97^99^[REPLACE] variance.increment ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  double d 
[ADD]^^98^^^^^97^99^[ADD] variance.increment ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  double d 
[REPLACE]^return variance.clear (  ) ;^105^^^^^104^106^[REPLACE] return variance.getN (  ) ;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  true 
[REPLACE]^return   variance.getResult (  )  ;^112^^^^^111^113^[REPLACE] return Math.sqrt ( variance.getResult (  )  ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  true 
[REPLACE]^variance.getN (  ) ;^119^^^^^118^120^[REPLACE] variance.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  true 
[REPLACE]^return   variance.evaluate ( values )  ;^137^^^^^136^138^[REPLACE] return Math.sqrt ( variance.evaluate ( values )  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  Variance variance 
[REPLACE]^return   variance.evaluate ( values  ;^159^^^^^158^160^[REPLACE] return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  int begin  length 
[REPLACE]^return Math.sqrt ( variance.evaluate ( values, mean, begin, begin )  ) ;^188^^^^^186^189^[REPLACE] return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  double mean  [TYPE]  int begin  length 
[REPLACE]^return   variance.evaluate ( values  ;^213^^^^^212^214^[REPLACE] return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean [CLASS] StandardDeviation   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  double mean 
[REPLACE]^return variance.Variance (  ) ;^220^^^^^219^221^[REPLACE] return variance.isBiasCorrected (  ) ;^[METHOD] isBiasCorrected [TYPE] boolean [PARAMETER] [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  true 
[REPLACE]^variance.setBiasCorrected ( true ) ;^227^^^^^226^228^[REPLACE] variance.setBiasCorrected ( isBiasCorrected ) ;^[METHOD] setBiasCorrected [TYPE] void [PARAMETER] boolean isBiasCorrected [CLASS] StandardDeviation   [TYPE]  long serialVersionUID  [TYPE]  Variance variance  [TYPE]  boolean false  isBiasCorrected  true 
