[REPLACE]^private static final long serialVersionUID  = null ;^46^^^^^^^[REPLACE] private static final long serialVersionUID = -370076995648386763L;^ [CLASS] SumOfLogs  
[REPLACE]^private  long  n;^49^^^^^^^[REPLACE] private int n;^ [CLASS] SumOfLogs  
[REPLACE]^value ;^60^^^^^59^62^[REPLACE] value = 0d;^[METHOD] <init> [TYPE] SumOfLogs() [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^n = 3;^61^^^^^59^62^[REPLACE] n = 0;^[METHOD] <init> [TYPE] SumOfLogs() [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^value +=  Math.log ( null ) ;^68^^^^^67^70^[REPLACE] value += Math.log ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^if  ( n  !=  1 )  {^76^^^^^75^81^[REPLACE] if  ( n > 0 )  {^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[ADD]^return value;return Double.NaN;^76^77^78^79^80^75^81^[ADD] if  ( n > 0 )  { return value; } else { return Double.NaN; }^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^return sumLog;^79^^^^^75^81^[REPLACE] return Double.NaN;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^return sumLog;^77^^^^^75^81^[REPLACE] return value;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^return sumLog;^87^^^^^86^88^[REPLACE] return n;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^value  = null ;^94^^^^^93^96^[REPLACE] value = 0d;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[ADD]^^94^^^^^93^96^[ADD] value = 0d;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^n = 3;^95^^^^^93^96^[REPLACE] n = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double d  value  [TYPE]  long serialVersionUID  [TYPE]  int n 
[REPLACE]^for  ( int i = begin; i < begin + length; i++ )  { sumLog += Math.log ( values[i] ) ;^116^^^^^115^124^[REPLACE] double sumLog = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^if  ( test ( values, begin, length (  )  )  )  {^117^^^^^115^124^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^for  ( int i = begin; i < begin + length (  ) ; i++ )  {^119^^^^^115^124^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^sumLog +=  Math.log ( null[i] ) ;^120^^^^^115^124^[REPLACE] sumLog += Math.log ( values[i] ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^sumLog = 4.0d;^118^^^^^115^124^[REPLACE] sumLog = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^for  ( int i = n; i < begin + length; i++ )  {^119^^^^^115^124^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^for  ( int i = n; i < begin + length + 4; i++ )  {^119^^^^^115^124^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[ADD]^^120^^^^^115^124^[ADD] sumLog += Math.log ( values[i] ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^sumLog = 1.0d;^118^^^^^115^124^[REPLACE] sumLog = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[ADD]^^119^120^121^^^115^124^[ADD] for  ( int i = begin; i < begin + length; i++ )  { sumLog += Math.log ( values[i] ) ; }^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
[REPLACE]^return value;^123^^^^^115^124^[REPLACE] return sumLog;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] SumOfLogs   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sumLog  value  [TYPE]  long serialVersionUID  [TYPE]  int begin  i  length  n 
