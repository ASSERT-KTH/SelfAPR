[REPLACE]^private static  long serialVersionUID = -3845586908418844111;^43^^^^^^^[REPLACE] private static final long serialVersionUID = -3845586908418844111L;^ [CLASS] Frequency NaturalComparator  
[REPLACE]^private TreeMap freqTable ;^46^^^^^^^[REPLACE] private TreeMap freqTable = null;^ [CLASS] Frequency NaturalComparator  
[REPLACE]^freqTable = new TreeMap ( comparator ) ; ;^52^^^^^51^53^[REPLACE] freqTable = new TreeMap (  ) ;^[METHOD] <init> [TYPE] Frequency() [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^freqTable = new TreeMap (  ) ; ;^61^^^^^60^62^[REPLACE] freqTable = new TreeMap ( comparator ) ;^[METHOD] <init> [TYPE] Comparator) [PARAMETER] Comparator comparator [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  Comparator comparator 
[REPLACE]^Comparator c = freqTable.comparator (  ) ;^71^^^^^70^87^[REPLACE] NumberFormat nf = NumberFormat.getPercentInstance (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Iterator values = valuesIterator (  ) ;^72^^^^^70^87^[REPLACE] StringBuffer outBuffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^outBuffer.append ( nf.format ( getPct ( value )  )  ) ;^73^^^^^70^87^[REPLACE] outBuffer.append ( "Value \t Freq. \t Pct. \t Cum Pct. \n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Iterator iter = freqTable .get ( value )  .iterator (  ) ;^74^^^^^70^87^[REPLACE] Iterator iter = freqTable.keySet (  ) .iterator (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Object value = iter .hasNext (  )  ;^76^^^^^70^87^[REPLACE] Object value = iter.next (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^return outBuffer.StringBuffer (  ) ;^86^^^^^70^87^[REPLACE] return outBuffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Object value = iter.next (  ) ;^96^^^^^95^111^[REPLACE] Object obj = v;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^^96^^^^^95^111^[ADD] Object obj = v;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( ! v instanceof Integer )  {^97^^^^^95^111^[REPLACE] if  ( v instanceof Integer )  {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^obj =  new Long (  (  ( Integer )  v ) .longValue (  )  ) ;^98^^^^^95^111^[REPLACE] obj = new Long (  (  ( Integer )  v ) .longValue (  )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( count != null )  {^102^^^^^95^111^[REPLACE] if  ( count == null )  {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long (serialVersionUID (  )  + 1 )  ) ;^105^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( count.Long (  )  + 1 )  ) ;^105^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( 1L )  ) ;^103^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^Long count =  ( Long )  freqTable.get ( obj ) ;freqTable.put ( obj, new Long ( 1 )  ) ;^100^101^102^103^104^95^111^[ADD] try { Long count =  ( Long )  freqTable.get ( obj ) ; if  ( count == null )  { freqTable.put ( obj, new Long ( 1 )  ) ; } else {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( serialVersionUID (  )  + 1 )  ) ;^105^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( 0 )  ) ;^103^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^Long count =  ( Long )  freqTable.values ( obj ) ;^101^^^^^95^111^[REPLACE] Long count =  ( Long )  freqTable.get ( obj ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^^101^^^^^95^111^[ADD] Long count =  ( Long )  freqTable.get ( obj ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^return ;^109^^^^^95^111^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^result = value.longValue (  ) ;^119^^^^^118^120^[REPLACE] addValue ( new Long ( v )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  int v 
[REPLACE]^result = value.longValue (  ) ;^128^^^^^127^129^[REPLACE] addValue ( new Long ( v.longValue (  )  )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Integer v [CLASS] Frequency NaturalComparator   [TYPE]  Integer v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID 
[REPLACE]^addValue ( new Long ( serialVersionUID )  ) ;^137^^^^^136^138^[REPLACE] addValue ( new Long ( v )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] long v [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^addValue ( new Long ( v.longValue (  )  )  ) ;^146^^^^^145^147^[REPLACE] addValue ( new Character ( v )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] char v [CLASS] Frequency NaturalComparator   [TYPE]  char v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  v 
[REPLACE]^freqTable.TreeMap (  ) ;^151^^^^^150^152^[REPLACE] freqTable.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^return freqTable .get ( false )  .iterator (  ) ;^164^^^^^163^165^[REPLACE] return freqTable.keySet (  ) .iterator (  ) ;^[METHOD] valuesIterator [TYPE] Iterator [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^long result = 0L;^175^^^^^174^181^[REPLACE] long result = 0;^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^Object nextValue = values.next (  ) ;^176^^^^^174^181^[REPLACE] Iterator iterator = freqTable.values (  ) .iterator (  ) ;^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[ADD]^^176^^^^^174^181^[ADD] Iterator iterator = freqTable.values (  ) .iterator (  ) ;^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^while  ( iterator.next (  )  )   {^177^^^^^174^181^[REPLACE] while  ( iterator.hasNext (  )  )   {^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^result +=   (  ( Long )  null.next (  )  ) .longValue (  ) ;^178^^^^^174^181^[REPLACE] result +=  (  ( Long )  iterator.next (  )  ) .longValue (  ) ;^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return serialVersionUID;^180^^^^^174^181^[REPLACE] return result;^[METHOD] getSumFreq [TYPE] long [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  Iterator iterator  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^if  ( ! v instanceof Integer )  {^190^^^^^189^203^[REPLACE] if  ( v instanceof Integer )  {^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^return getCumFreq (  (  ( Integer )  v ) .longValue (  )  ) ;^191^^^^^189^203^[REPLACE] return getCount (  (  ( Integer )  v ) .longValue (  )  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^long result = 2;^193^^^^^189^203^[REPLACE] long result = 0;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( count == null )  {^196^^^^^189^203^[REPLACE] if  ( count != null )  {^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^result = value.longValue (  ) ; ;^197^^^^^189^203^[REPLACE] result = count.longValue (  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[ADD]^^197^^^^^189^203^[ADD] result = count.longValue (  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[ADD]^Long count =   ( Long )  freqTable.get ( v ) ;result = count.longValue (  ) ;^194^195^196^197^198^189^203^[ADD] try { Long count =   ( Long )  freqTable.get ( v ) ; if  ( count != null )  { result = count.longValue (  ) ; }^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( count == this )  {^196^^^^^189^203^[REPLACE] if  ( count != null )  {^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^Long count =   ( Long )  freqTable.values ( v ) ;^195^^^^^189^203^[REPLACE] Long count =   ( Long )  freqTable.get ( v ) ;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[ADD]^^195^^^^^189^203^[ADD] Long count =   ( Long )  freqTable.get ( v ) ;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^return serialVersionUID;^202^^^^^189^203^[REPLACE] return result;^[METHOD] getCount [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  ClassCastException ex 
[REPLACE]^return getCount (  new Character ( v )   ) ;^212^^^^^211^213^[REPLACE] return getCount ( new Long ( v )  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] int v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  int v 
[REPLACE]^return getCount (  new Character ( serialVersionUID )   ) ;^222^^^^^221^223^[REPLACE] return getCount ( new Long ( v )  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] long v [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^return getCount (  new Long ( v )   ) ;^232^^^^^231^233^[REPLACE] return getCount ( new Character ( v )  ) ;^[METHOD] getCount [TYPE] long [PARAMETER] char v [CLASS] Frequency NaturalComparator   [TYPE]  char v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^if  ( getSumFreq (  )   ||  0 / 3 )  {^247^^^^^246^251^[REPLACE] if  ( getSumFreq (  )  == 0 )  {^[METHOD] getPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[ADD]^return Double.NaN;^247^248^249^^^246^251^[ADD] if  ( getSumFreq (  )  == 0 )  { return Double.NaN; }^[METHOD] getPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return result;^248^^^^^246^251^[REPLACE] return Double.NaN;^[METHOD] getPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return  ( double )  getCount ( v )   ;^250^^^^^246^251^[REPLACE] return  ( double )  getCount ( v )  /  ( double )  getSumFreq (  ) ;^[METHOD] getPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return getPct (  new Character ( v )   ) ;^261^^^^^260^262^[REPLACE] return getPct ( new Long ( v )  ) ;^[METHOD] getPct [TYPE] double [PARAMETER] int v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  int v 
[REPLACE]^return getPct (  new Character ( v )   ) ;^272^^^^^271^273^[REPLACE] return getPct ( new Long ( v )  ) ;^[METHOD] getPct [TYPE] double [PARAMETER] long v [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^return getPct (  new Long ( v )   ) ;^283^^^^^282^284^[REPLACE] return getPct ( new Character ( v )  ) ;^[METHOD] getPct [TYPE] double [PARAMETER] char v [CLASS] Frequency NaturalComparator   [TYPE]  char v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^if  ( getSumFreq (  )   ||  0 )  {^297^^^^^296^336^[REPLACE] if  ( getSumFreq (  )  == 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^return 0;^297^298^299^^^296^336^[ADD] if  ( getSumFreq (  )  == 0 )  { return 0; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 1;^298^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 2;^298^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( ! v instanceof Integer )  {^300^^^^^296^336^[REPLACE] if  ( v instanceof Integer )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^300^301^302^^^296^336^[ADD] if  ( v instanceof Integer )  { return getCumFreq (  (  ( Integer )  v ) .longValue (  )  ) ; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return getCount (  (  ( Integer )  v ) .longValue (  )  ) ;^301^^^^^296^336^[REPLACE] return getCumFreq (  (  ( Integer )  v ) .longValue (  )  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Comparator c = freqTable.clear (  ) ;^303^^^^^296^336^[REPLACE] Comparator c = freqTable.comparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c != this  )  {^304^^^^^296^336^[REPLACE] if  ( c == null )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^c  = null ;^305^^^^^296^336^[REPLACE] c = new NaturalComparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^305^^^^^296^336^[ADD] c = new NaturalComparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^long result = 3;^307^^^^^296^336^[REPLACE] long result = 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( value == null )  {^311^^^^^296^336^[REPLACE] if  ( value != null )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result = count.longValue (  ) ; ;^312^^^^^296^336^[REPLACE] result = value.longValue (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^Long value =  ( Long )  freqTable.get ( v ) ;result = value.longValue (  ) ;^309^310^311^312^313^296^336^[ADD] try { Long value =  ( Long )  freqTable.get ( v ) ; if  ( value != null )  { result = value.longValue (  ) ; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REMOVE]^if  (  ( getSumFreq (  )  )  == 0 )  {     return NaN; }^311^^^^^296^336^[REMOVE] ^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Long nextValuealue =  ( Long )  freqTable.get ( v ) ;^310^^^^^296^336^[REPLACE] Long value =  ( Long )  freqTable.get ( v ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^315^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, freqTable.firstKey (  )  )   !=  4 )  {^318^^^^^296^336^[REPLACE] if  ( c.compare ( v, freqTable.firstKey (  )  )  < 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 0L;^319^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 0 + 0;^319^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, freqTable.firstKey (  )  )   <  0 )  {^322^^^^^296^336^[REPLACE] if  ( c.compare ( v, freqTable.lastKey (  )  )  >= 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return  (  ( Comparable ) o1 ) .compareTo ( o2 ) ;^323^^^^^296^336^[REPLACE] return getSumFreq (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Iterator iterator = freqTable.values (  ) .iterator (  ) ;^326^^^^^296^336^[REPLACE] Iterator values = valuesIterator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^326^^^^^296^336^[ADD] Iterator values = valuesIterator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, nextValue )   !=  0 )  {^329^^^^^296^336^[REPLACE] if  ( c.compare ( v, nextValue )  > 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^332^^^^^329^333^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result +=  getCount ( v ) ;^330^^^^^296^336^[REPLACE] result += getCount ( nextValue ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^332^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Object.hasNextValue = values.next (  ) ;^328^^^^^296^336^[REPLACE] Object nextValue = values.next (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, nextValue )   <=  0 )  {^329^^^^^296^336^[REPLACE] if  ( c.compare ( v, nextValue )  > 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result +=  getCount ( null ) ;^330^^^^^296^336^[REPLACE] result += getCount ( nextValue ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Object nextValue = values .hasNext (  )  ;^328^^^^^296^336^[REPLACE] Object nextValue = values.next (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^335^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return getCumFreq (  new Character ( v )   ) ;^347^^^^^346^348^[REPLACE] return getCumFreq ( new Long ( v )  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] int v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  int v 
[REPLACE]^return getCumFreq (  new Character ( v )   ) ;^359^^^^^358^360^[REPLACE] return getCumFreq ( new Long ( v )  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] long v [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^return getCumFreq (  new Long ( v )   ) ;^371^^^^^370^372^[REPLACE] return getCumFreq ( new Character ( v )  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] char v [CLASS] Frequency NaturalComparator   [TYPE]  char v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^if  (serialVersionUID (  )   ||  0 )  {^388^^^^^387^392^[REPLACE] if  ( getSumFreq (  )  == 0 )  {^[METHOD] getCumPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return result;^389^^^^^387^392^[REPLACE] return Double.NaN;^[METHOD] getCumPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return  ( double )  getCumFreq ( v )   ;^391^^^^^387^392^[REPLACE] return  ( double )  getCumFreq ( v )  /  ( double )  getSumFreq (  ) ;^[METHOD] getCumPct [TYPE] double [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Object v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return getCumPct (  new Character ( v )   ) ;^404^^^^^403^405^[REPLACE] return getCumPct ( new Long ( v )  ) ;^[METHOD] getCumPct [TYPE] double [PARAMETER] int v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  int v 
[REPLACE]^return getCumPct (  new Character ( serialVersionUID )   ) ;^417^^^^^416^418^[REPLACE] return getCumPct ( new Long ( v )  ) ;^[METHOD] getCumPct [TYPE] double [PARAMETER] long v [CLASS] Frequency NaturalComparator   [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  boolean false  true 
[REPLACE]^return getCumPct (  new Long ( v )   ) ;^430^^^^^429^431^[REPLACE] return getCumPct ( new Character ( v )  ) ;^[METHOD] getCumPct [TYPE] double [PARAMETER] char v [CLASS] Frequency NaturalComparator   [TYPE]  char v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return  (  ( Comparable ) o1 ) .compareTo ( o1 ) ;^452^^^^^451^453^[REPLACE] return  (  ( Comparable ) o1 ) .compareTo ( o2 ) ;^[METHOD] compare [TYPE] int [PARAMETER] Object o1 Object o2 [CLASS] Frequency NaturalComparator   [TYPE]  Object o1  o2  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v 
[REPLACE]^return  (  ( Comparable ) o1 ) .compareTo ( o1 ) ;^452^^^^^451^453^[REPLACE] return  (  ( Comparable ) o1 ) .compareTo ( o2 ) ;^[METHOD] compare [TYPE] int [PARAMETER] Object o1 Object o2 [CLASS] NaturalComparator   [TYPE]  boolean false  true  [TYPE]  Object o1  o2 
