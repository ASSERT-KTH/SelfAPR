[REPLACE]^private static  long serialVersionUID = -3845586908418844111L;^43^^^^^^^[REPLACE] private static final long serialVersionUID = -3845586908418844111L;^ [CLASS] Frequency NaturalComparator  
[REPLACE]^private TreeMap freqTable ;^46^^^^^^^[REPLACE] private TreeMap freqTable = null;^ [CLASS] Frequency NaturalComparator  
[REPLACE]^long result = 0  ;^71^^^^^70^87^[REPLACE] NumberFormat nf = NumberFormat.getPercentInstance (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^long result = 0  ;^72^^^^^70^87^[REPLACE] StringBuffer outBuffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^freqTable.keySet (  ) .iterator (  )  ;^73^^^^^70^87^[REPLACE] outBuffer.append ( "Value \t Freq. \t Pct. \t Cum Pct. \n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[ADD]^^73^^^^^70^87^[ADD] outBuffer.append ( "Value \t Freq. \t Pct. \t Cum Pct. \n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Iterator iter = freqTable.values (  ) .iterator (  ) ;^74^^^^^70^87^[REPLACE] Iterator iter = freqTable.keySet (  ) .iterator (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^Object value = iter .hasNext (  )  ;^76^^^^^70^87^[REPLACE] Object value = iter.next (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^return outBuffer.StringBuffer (  ) ;^86^^^^^70^87^[REPLACE] return outBuffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Frequency NaturalComparator   [TYPE]  StringBuffer outBuffer  [TYPE]  boolean false  true  [TYPE]  Iterator iter  [TYPE]  Object value  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat nf 
[REPLACE]^long result = 0  ;^96^^^^^95^111^[REPLACE] Object obj = v;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( ! v instanceof Integer )  {^97^^^^^95^111^[REPLACE] if  ( v instanceof Integer )  {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^obj = new Long (  (  ( Integer )  v ) .longValue (  )  ) ;^97^98^99^^^95^111^[ADD] if  ( v instanceof Integer )  { obj = new Long (  (  ( Integer )  v ) .longValue (  )  ) ; }^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^obj =  new Long (  (  ( Integer )  v ) .longValue (  )  ) ;^98^^^^^95^111^[REPLACE] obj = new Long (  (  ( Integer )  v ) .longValue (  )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if   (  count != null  )   {  ;^102^^^^^95^111^[REPLACE] if  ( count == null )  {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^freqTable.put ( obj, new Long ( 1 )  ) ;freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^102^103^104^105^106^95^111^[ADD] if  ( count == null )  { freqTable.put ( obj, new Long ( 1 )  ) ; } else { freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ; }^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long (serialVersionUID (  )   1 )  ) ;^105^^^^^102^106^[REPLACE] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( count.Long (  )  + 1 )  ) ;^105^^^^^102^106^[REPLACE] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( 4 )  ) ;^103^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^Long count =  ( Long )  freqTable.get ( obj ) ;freqTable.put ( obj, new Long ( 1 )  ) ;^100^101^102^103^104^95^111^[ADD] try { Long count =  ( Long )  freqTable.get ( obj ) ; if  ( count == null )  { freqTable.put ( obj, new Long ( 1 )  ) ; } else {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( count != null )  {^102^^^^^95^111^[REPLACE] if  ( count == null )  {^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[ADD]^^105^^^^^102^106^[ADD] freqTable.put ( obj, new Long ( count.longValue (  )  + 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^freqTable.put ( obj, new Long ( 1 * 1 )  ) ;^103^^^^^95^111^[REPLACE] freqTable.put ( obj, new Long ( 1 )  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^Long count =  ( Long )  freqTable .keySet (  )  ;^101^^^^^95^111^[REPLACE] Long count =  ( Long )  freqTable.get ( obj ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^Long count =  ( Long )  freqTable.values ( obj ) ;^101^^^^^95^111^[REPLACE] Long count =  ( Long )  freqTable.get ( obj ) ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^return ;^109^^^^^95^111^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addValue [TYPE] void [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  Long count  [TYPE]  Object obj  v  [TYPE]  boolean false  true  [TYPE]  TreeMap freqTable  [TYPE]  long serialVersionUID  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( getSumFreq (  )   &&  0 )  {^297^^^^^296^336^[REPLACE] if  ( getSumFreq (  )  == 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^return 0;^297^298^299^^^296^336^[ADD] if  ( getSumFreq (  )  == 0 )  { return 0; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 2;^298^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 4;^298^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( ! v instanceof Integer )  {^300^^^^^296^336^[REPLACE] if  ( v instanceof Integer )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return   (    (  Comparable  )  o1  )  .compareTo  (  o2  )  ;  ;^301^^^^^296^336^[REPLACE] return getCumFreq (  (  ( Integer )  v ) .longValue (  )  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Comparator c = freqTable.clear (  ) ;^303^^^^^296^336^[REPLACE] Comparator c = freqTable.comparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c != null )  {^304^^^^^296^336^[REPLACE] if  ( c == null )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^304^305^306^^^296^336^[ADD] if  ( c == null )  { c = new NaturalComparator (  ) ; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^305^^^^^296^336^[ADD] c = new NaturalComparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^c  = null ;^305^^^^^296^336^[REPLACE] c = new NaturalComparator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^307^^^^^296^336^[ADD] long result = 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( value == null )  {^311^^^^^296^336^[REPLACE] if  ( value != null )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^result = value.longValue (  ) ;^311^312^313^^^296^336^[ADD] if  ( value != null )  { result = value.longValue (  ) ; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result = count.longValue (  )  ;^312^^^^^296^336^[REPLACE] result = value.longValue (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^Long value =  ( Long )  freqTable.get ( v ) ;result = value.longValue (  ) ;^309^310^311^312^313^296^336^[ADD] try { Long value =  ( Long )  freqTable.get ( v ) ; if  ( value != null )  { result = value.longValue (  ) ; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^^312^^^^^296^336^[ADD] result = value.longValue (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Long count =  (  ( Long )   ( freqTable.get ( v )  )  )  ;^310^^^^^296^336^[REPLACE] Long value =  ( Long )  freqTable.get ( v ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^315^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, freqTable.firstKey (  )  )   <=  0 )  {^318^^^^^296^336^[REPLACE] if  ( c.compare ( v, freqTable.firstKey (  )  )  < 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[ADD]^return 0;^318^319^320^^^296^336^[ADD] if  ( c.compare ( v, freqTable.firstKey (  )  )  < 0 )  { return 0; }^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 0L;^319^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return 3;^319^^^^^296^336^[REPLACE] return 0;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, freqTable.lastKey (  )  )   !=  1 )  {^322^^^^^296^336^[REPLACE] if  ( c.compare ( v, freqTable.lastKey (  )  )  >= 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return getSumFreq  (    )  ;  ;^323^^^^^296^336^[REPLACE] return getSumFreq (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^long result = 0  ;^326^^^^^296^336^[REPLACE] Iterator values = valuesIterator (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^if  ( c.compare ( v, nextValue )   !=  0 )  {^329^^^^^296^336^[REPLACE] if  ( c.compare ( v, nextValue )  > 0 )  {^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return result;  ;^332^^^^^329^333^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result +=  getCount ( v ) ;^330^^^^^296^336^[REPLACE] result += getCount ( nextValue ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^result +=  getCount ( null ) ;^330^^^^^296^336^[REPLACE] result += getCount ( nextValue ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^332^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^Object.hasNextValue = values.next (  ) ;^328^^^^^296^336^[REPLACE] Object nextValue = values.next (  ) ;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
[REPLACE]^return serialVersionUID;^335^^^^^296^336^[REPLACE] return result;^[METHOD] getCumFreq [TYPE] long [PARAMETER] Object v [CLASS] Frequency NaturalComparator   [TYPE]  boolean false  true  [TYPE]  ClassCastException ex  [TYPE]  Long value  [TYPE]  Iterator values  [TYPE]  Object nextValue  v  [TYPE]  TreeMap freqTable  [TYPE]  long result  serialVersionUID  v  [TYPE]  Comparator c 
