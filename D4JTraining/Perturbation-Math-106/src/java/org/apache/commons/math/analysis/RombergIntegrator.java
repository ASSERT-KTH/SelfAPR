[REPLACE]^static  long serialVersionUID = -1058849527738180243;^36^^^^^^^[REPLACE] static final long serialVersionUID = -1058849527738180243L;^ [CLASS] RombergIntegrator  
[REPLACE]^int i = 1 >>> 0, j, m = maximalIterationCount + 1 >>> 0;^62^^^^^60^92^[REPLACE] int i = 1, j, m = maximalIterationCount + 1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^62^^^^^60^92^[ADD] int i = 1, j, m = maximalIterationCount + 1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^int i = 1, j, m = maximalIterationCount  1;^62^^^^^60^92^[REPLACE] int i = 1, j, m = maximalIterationCount + 1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^65^^^^^60^92^[ADD] double r, t[][] = new double[m][m], s, olds;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^double olds  ;^65^^^^^60^92^[REPLACE] double r, t[][] = new double[m][m], s, olds;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^super ( f, 32 )  ;^67^^^^^60^92^[REPLACE] clearResult (  ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^verifyIterationCount (  ) ;TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ;t[0][0] = qtrap.stage ( min, max, 0 ) ;^68^69^^71^72^60^92^[ADD] verifyInterval ( min, max ) ; verifyIterationCount (  ) ; TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ; t[0][0] = qtrap.stage ( min, max, 0 ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^int i = 1  ;^71^^^^^60^92^[REPLACE] TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^t[i][0] = qtrap.stage ( min, max, i )  ;^72^^^^^60^92^[REPLACE] t[0][0] = qtrap.stage ( min, max, 0 ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^olds = t[4][4];^73^^^^^60^92^[REPLACE] olds = t[0][0];^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( i  <=  minimalIterationCount )  {^82^^^^^60^92^[REPLACE] if  ( i >= minimalIterationCount )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( Math.abs ( s - olds )   ==  Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^60^92^[REPLACE] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^83^84^85^86^^60^92^[ADD] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^return result;  ;^85^^^^^60^92^[REPLACE] return result;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( Math.abs ( s - olds )   >=  Math.abs ( relativeAccuracy * olds )  )  {^83^^^^^60^92^[REPLACE] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^t[i][1] = qtrap.stage ( min, max, i ) ;^75^^^^^60^92^[REPLACE] t[i][0] = qtrap.stage ( min, max, i ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^for  ( j = 2; j <= i; j++ )  {^76^^^^^60^92^[REPLACE] for  ( j = 1; j <= i; j++ )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^r =  ( 1L <<  ( 2 * j )  )  1;^78^^^^^60^92^[REPLACE] r =  ( 1L <<  ( 2 * j )  )  -1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^t[i][j] = t[i][j-4]   ( t[i][j-4] - t[i-4][j-4] )  / r;^79^^^^^60^92^[REPLACE] t[i][j] = t[i][j-1] +  ( t[i][j-1] - t[i-1][j-1] )  / r;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^s =  null[i][i];^81^^^^^60^92^[REPLACE] s = t[i][i];^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^olds =  null;^88^^^^^60^92^[REPLACE] olds = s;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^return ;^91^^^^^60^92^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] RombergIntegrator   [TYPE]  double[][] t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  r  s  [TYPE]  int i  j  m  [TYPE]  TrapezoidIntegrator qtrap 
