[REPLACE]^private static final long serialVersionUID  = null ;^32^^^^^^^[REPLACE] private static final long serialVersionUID = 7137520585963699578L;^ [CLASS] BisectionSolver  
[REPLACE]^super ( f, 100, 1.0E-6 )  ;^75^^^^^73^105^[REPLACE] clearResult (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^verifyInterval ( m,max ) ;^76^^^^^73^105^[REPLACE] verifyInterval ( min,max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[ADD]^^77^78^^^^73^105^[ADD] double m; double fm;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[ADD]^^78^^^^^73^105^[ADD] double fm;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^double fm  ;^79^^^^^73^105^[REPLACE] double fmin;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^int i = 4;^81^^^^^73^105^[REPLACE] int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^if  ( fm * fmin  <  0.0 )  {^87^^^^^73^105^[REPLACE] if  ( fm * fmin > 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^min = m  ;^92^^^^^87^93^[REPLACE] max = m;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^max = m  ;^89^^^^^73^105^[REPLACE] min = m;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( max - min )   >=  absoluteAccuracy )  {^95^^^^^73^105^[REPLACE] if  ( Math.abs ( max - min )  <= absoluteAccuracy )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^m =  UnivariateRealSolverUtils.midpoint ( max, max ) ;^96^^^^^73^105^[REPLACE] m = UnivariateRealSolverUtils.midpoint ( min, max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^return m;  ;^98^^^^^73^105^[REPLACE] return m;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^m =  UnivariateRealSolverUtils.midpoint ( max, max ) ;^83^^^^^73^105^[REPLACE] m = UnivariateRealSolverUtils.midpoint ( min, max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[ADD]^^84^85^^^^73^105^[ADD] fmin = f.value ( min ) ; fm = f.value ( m ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[ADD]^^85^^^^^73^105^[ADD] fm = f.value ( m ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[REPLACE]^min = m  ;^92^^^^^73^105^[REPLACE] max = m;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
[ADD]^^103^104^^^^73^105^[ADD] throw new ConvergenceException ( "Maximum number of iterations exceeded: "  + maximalIterationCount ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BisectionSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double fm  fmin  m  max  min  [TYPE]  int i 
