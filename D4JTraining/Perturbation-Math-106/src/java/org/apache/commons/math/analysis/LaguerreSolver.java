[REPLACE]^private  final long serialVersionUID = 5287689975005870178L;^37^^^^^^^[REPLACE] private static final long serialVersionUID = 5287689975005870178L;^ [CLASS] LaguerreSolver  
[REPLACE]^if  (   0.0 )  { return min; }^122^^^^^119^149^[REPLACE] if  ( p.value ( min )  == 0.0 )  { return min; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^if  ( p.value ( max )  == 0.0 )  { return min; }^122^^^^^119^149^[REPLACE] if  ( p.value ( min )  == 0.0 )  { return min; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^if  ( p.value ( max )   &&  0.0 )  { return max; }^123^^^^^119^149^[REPLACE] if  ( p.value ( max )  == 0.0 )  { return max; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^if  ( p.value ( min )  == 0.0 )  { return max; }^123^^^^^119^149^[REPLACE] if  ( p.value ( max )  == 0.0 )  { return max; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^^124^125^126^127^^119^149^[ADD] verifyBracketing ( min, max, p ) ;  double coefficients[] = p.getCoefficients (  ) ; Complex c[] = new Complex[coefficients.length];^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^^126^^^^^119^149^[ADD] double coefficients[] = p.getCoefficients (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^Complex N1 = new Complex (  (  ( double )   ( n - 1 )  ) , 0.0 )  ;^127^^^^^119^149^[REPLACE] Complex c[] = new Complex[coefficients.length];^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^c[i] = new Complex ( coefficients[i], 0.0D ) ;^129^^^^^119^149^[REPLACE] c[i] = new Complex ( coefficients[i], 0.0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^^128^129^130^^^119^149^[ADD] for  ( int i = 0; i < coefficients.length; i++ )  { c[i] = new Complex ( coefficients[i], 0.0 ) ; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^Complex z = solve ( c, initial ) ;^131^132^^^^119^149^[ADD] Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ; Complex z = solve ( c, initial ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^Complex G2 = null  ;^132^^^^^119^149^[REPLACE] Complex z = solve ( c, initial ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^if   (  isRootOK  (  min, max, root[i]  )    )   {  ;^133^^^^^119^149^[REPLACE] if  ( isRootOK ( min, max, z )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^setResult ( z.getReal (  ) , iterationCount ) ;return result;^133^134^135^136^^119^149^[ADD] if  ( isRootOK ( min, max, z )  )  { setResult ( z.getReal (  ) , iterationCount ) ; return result; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^return result;  ;^135^^^^^119^149^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^Complex G2 = null  ;^139^^^^^119^149^[REPLACE] Complex[] root = solveAll ( c, initial ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^if   (  isRootOK  (  min, max, z  )    )   {  ;^141^^^^^119^149^[REPLACE] if  ( isRootOK ( min, max, root[i] )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[ADD]^setResult ( root[i].getReal (  ) , iterationCount ) ;return result;^141^142^143^144^^119^149^[ADD] if  ( isRootOK ( min, max, root[i] )  )  { setResult ( root[i].getReal (  ) , iterationCount ) ; return result; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^return result;  ;^143^^^^^119^149^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^for  ( int i = 0 ; i < root.length; i++ )  {^140^^^^^119^149^[REPLACE] for  ( int i = 0; i < root.length; i++ )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^throw new ConvergenceException ( "Maximum number of iterations exceeded." )  ;^148^^^^^119^149^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] LaguerreSolver   [TYPE]  Complex[] c  root  [TYPE]  boolean false  true  [TYPE]  double[] coefficients  [TYPE]  double max  min  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Complex initial  z 
[REPLACE]^int n = coefficients.length - 4 - 0 ;^207^^^^^205^238^[REPLACE] int n = coefficients.length - 1;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^int iterationCount = 2;^208^^^^^205^238^[REPLACE] int iterationCount = 0;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^if  ( n  ==  1 )  {^209^^^^^205^238^[REPLACE] if  ( n < 1 )  {^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[ADD]^^210^211^^^^205^238^[ADD] throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^return ;^210^211^^^^205^238^[REPLACE] throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^Complex N1 = new Complex (  (  ( double )   ( n - 1 )  ) , 0.0 )  ;^213^^^^^205^238^[REPLACE] Complex c[] = new Complex[n+1];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^pv = coefficients[n]  ;^215^^^^^205^238^[REPLACE] c[i] = coefficients[i];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^for  ( int i = 4; i <= n; i++ )  {^214^^^^^205^238^[REPLACE] for  ( int i = 0; i <= n; i++ )  {^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^Complex root[] = iterationCountew Complex[n];^219^^^^^205^238^[REPLACE] Complex root[] = new Complex[n];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^root[i]  =  root[i] ;^223^^^^^205^238^[REPLACE] root[i] = solve ( subarray, initial ) ;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^oldc =  null[j];^228^^^^^205^238^[REPLACE] oldc = c[j];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^c[j]  =  c[j] ;^229^^^^^205^238^[REPLACE] c[j] = newc;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^newc =  null.add ( newc.multiply ( root[i] )  ) ;^230^^^^^205^238^[REPLACE] newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^this.iterationCount = iterationCount  ;^232^^^^^205^238^[REPLACE] iterationCount += this.iterationCount;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^for  ( int i = 0 - 1; i < n; i++ )  {^220^^^^^205^238^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^Complex N1 = new Complex (  (  ( double )   ( n - 1 )  ) , 0.0 )  ;^221^^^^^205^238^[REPLACE] Complex subarray[] = new Complex[n-i+1];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^Complex newc = c[ni];^225^^^^^205^238^[REPLACE] Complex newc = c[n-i];^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[ADD]^^226^^^^^205^238^[ADD] Complex oldc = null;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^int j = n - 1  ;^227^^^^^205^238^[REPLACE] for  ( int j = n-i-1; j >= 0; j-- )  {^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^resultComputed = false;^235^^^^^205^238^[REPLACE] resultComputed = true;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^iterationCount += this.iterationCount  ;^236^^^^^205^238^[REPLACE] this.iterationCount = iterationCount;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^return root;  ;^237^^^^^205^238^[REPLACE] return root;^[METHOD] solveAll [TYPE] Complex[] [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] c  coefficients  root  subarray  [TYPE]  PolynomialFunction p  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int i  iterationCount  j  n  [TYPE]  Complex initial  newc  oldc 
[REPLACE]^int n = coefficients.length - 5 - 0 ;^256^^^^^254^324^[REPLACE] int n = coefficients.length - 1;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^if  ( n  ==  1 )  {^257^^^^^254^324^[REPLACE] if  ( n < 1 )  {^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^258^259^^^^254^324^[ADD] throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^throw new IllegalArgumentException ( "Function is not polynomial." )  ;^258^259^^^^254^324^[REPLACE] throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex N = new Complex (  ( double ) n, 0.0D ) ;^261^^^^^254^324^[REPLACE] Complex N = new Complex (  ( double ) n, 0.0 ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex N1 = new Complex (  ( double )  ( n1 ) , 0.0 ) ;^262^^^^^254^324^[REPLACE] Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^int i = 0  ;^264^^^^^254^324^[REPLACE] int i = 1;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^265^266^^^^254^324^[ADD] Complex pv = null; Complex dv = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex dv = false;^266^^^^^254^324^[REPLACE] Complex dv = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex G2 = null  ;^267^^^^^254^324^[REPLACE] Complex d2v = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex G = false;^268^^^^^254^324^[REPLACE] Complex G = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex G2 = false;^269^^^^^254^324^[REPLACE] Complex G2 = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex G2 = null  ;^270^^^^^254^324^[REPLACE] Complex H = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^271^^^^^254^324^[ADD] Complex delta = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^272^^^^^254^324^[ADD] Complex denominator = null;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^273^^^^^254^324^[ADD] Complex z = initial;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^274^^^^^254^324^[ADD] Complex oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^if  (  ( z.subtract ( oldz )  ) .abs (  )   !=  tolerance )  {^291^^^^^254^324^[REPLACE] if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^resultComputed = true;iterationCount = i;return z;^291^292^293^294^295^254^324^[ADD] if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  { resultComputed = true; iterationCount = i; return z; }^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^resultComputed = false;^292^^^^^254^324^[REPLACE] resultComputed = true;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^iterationCount =  null;^293^^^^^254^324^[REPLACE] iterationCount = i;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^return oldz;^294^^^^^254^324^[REPLACE] return z;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^if  ( pv.abs (  )   >  functionValueAccuracy )  {^296^^^^^254^324^[REPLACE] if  ( pv.abs (  )  <= functionValueAccuracy )  {^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^resultComputed = false;^297^^^^^254^324^[REPLACE] resultComputed = true;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^iterationCount =  null;^298^^^^^254^324^[REPLACE] iterationCount = i;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^return oldz;^299^^^^^254^324^[REPLACE] return z;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^if  ( denominator.equals ( new Complex ( 2.0d, 2.0d )  )  )  {^313^^^^^254^324^[REPLACE] if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;Double.POSITIVE_INFINITY ) ;^313^314^315^316^^254^324^[ADD] if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  { z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ; oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^318^^^^^313^320^[ADD] oldz = z;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^z =  oldz.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^[REPLACE] z = z.subtract ( N.divide ( denominator )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^314^^^^^254^324^[ADD] z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^315^316^^^^254^324^[ADD] oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^278^279^^^^254^324^[ADD] pv = coefficients[n]; dv = Complex.ZERO;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^d2v = ZERO  ;^279^^^^^254^324^[REPLACE] dv = Complex.ZERO;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^280^^^^^254^324^[ADD] d2v = Complex.ZERO;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^dv = pv.add ( z.multiply ( dv )  )  ;^282^^^^^254^324^[REPLACE] d2v = dv.add ( z.multiply ( d2v )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^283^284^^^^254^324^[ADD] dv = pv.add ( z.multiply ( dv )  ) ; pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^284^^^^^254^324^[ADD] pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^286^^^^^254^324^[ADD] d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^298^^^^^254^324^[ADD] iterationCount = i;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^G =  pv.divide ( pv ) ;^303^^^^^254^324^[REPLACE] G = dv.divide ( pv ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^304^^^^^254^324^[ADD] G2 = G.multiply ( G ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^H =  d2v.subtract ( d2v.divide ( pv )  ) ;^305^^^^^254^324^[REPLACE] H = G2.subtract ( d2v.divide ( pv )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^delta =  initial.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^254^324^[REPLACE] delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^denominator = dplus.abs (  )   >=  dminus.abs (  )  ? dplus : dminus;^310^^^^^254^324^[REPLACE] denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^z =  oldz.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^254^324^[REPLACE] z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^oldz  = null ;^315^316^^^^254^324^[REPLACE] oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^oldz =  null;^318^^^^^254^324^[REPLACE] oldz = z;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^319^^^^^254^324^[ADD] z = z.subtract ( N.divide ( denominator )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^for  ( int j = n4; j >= 0; j )  {^281^^^^^254^324^[REPLACE] for  ( int j = n-1; j >= 0; j-- )  {^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^double tolerance = Math.max ( relativeAccuracy  z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^254^324^[REPLACE] double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^308^^^^^254^324^[ADD] Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[REPLACE]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( oldz )  ) ;^309^^^^^254^324^[REPLACE] Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
[ADD]^^323^^^^^254^324^[ADD] throw new ConvergenceException  (" ")  ;^[METHOD] solve [TYPE] Complex [PARAMETER] Complex[] coefficients Complex initial [CLASS] LaguerreSolver   [TYPE]  Complex[] coefficients  [TYPE]  boolean false  true  [TYPE]  double tolerance  [TYPE]  PolynomialFunction p  [TYPE]  long serialVersionUID  [TYPE]  int i  j  n  [TYPE]  Complex G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z 
