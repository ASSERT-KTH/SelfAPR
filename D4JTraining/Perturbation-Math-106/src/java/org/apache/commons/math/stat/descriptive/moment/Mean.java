[REPLACE]^private static final long serialVersionUID = -1296043746617791564;^53^^^^^^^[REPLACE] private static final long serialVersionUID = -1296043746617791564L;^ [CLASS] Mean  
[REPLACE]^private boolean incMoment;^64^^^^^^^[REPLACE] protected boolean incMoment;^ [CLASS] Mean  
[REPLACE]^incMoment = false; ;^68^^^^^67^70^[REPLACE] incMoment = true;^[METHOD] <init> [TYPE] Mean() [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^moment =  new Sum (  )  ;^69^^^^^67^70^[REPLACE] moment = new FirstMoment (  ) ;^[METHOD] <init> [TYPE] Mean() [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^this.moment =  moment;^78^^^^^77^80^[REPLACE] this.moment = m1;^[METHOD] <init> [TYPE] FirstMoment) [PARAMETER] FirstMoment m1 [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^incMoment = true;^79^^^^^77^80^[REPLACE] incMoment = false;^[METHOD] <init> [TYPE] FirstMoment) [PARAMETER] FirstMoment m1 [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( test ( values, begin, length )  )  {^86^^^^^85^89^[REPLACE] if  ( incMoment )  {^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID  [TYPE]  double d 
[ADD]^^86^87^88^^^85^89^[ADD] if  ( incMoment )  { moment.increment ( d ) ; }^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID  [TYPE]  double d 
[REPLACE]^moment.clear (  ) ;^87^^^^^85^89^[REPLACE] moment.increment ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID  [TYPE]  double d 
[REPLACE]^if  ( test ( values, begin, length )  )  {^95^^^^^94^98^[REPLACE] if  ( incMoment )  {^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[ADD]^^95^96^97^^^94^98^[ADD] if  ( incMoment )  { moment.clear (  ) ; }^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^moment.getN (  ) ;^96^^^^^94^98^[REPLACE] moment.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^return Double.NaN;^104^^^^^103^105^[REPLACE] return moment.m1;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^return moment.clear (  ) ;^111^^^^^110^112^[REPLACE] return moment.getN (  ) ;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  boolean false  incMoment  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( test ( values, begin, length - 5 )  )  {^131^^^^^130^136^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  Sum sum  [TYPE]  boolean false  incMoment  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return sum .Mean ( moment )   /  (  ( double )  length - 1 ) ;^133^^^^^130^136^[REPLACE] return sum.evaluate ( values, begin, length )  /  (  ( double )  length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  Sum sum  [TYPE]  boolean false  incMoment  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^132^133^^^^130^136^[ADD] Sum sum = new Sum (  ) ; return sum.evaluate ( values, begin, length )  /  (  ( double )  length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  Sum sum  [TYPE]  boolean false  incMoment  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return sum.evaluate ( values, begin, length + 2 )  /  (  ( double )  length + 2 ) ;^133^^^^^130^136^[REPLACE] return sum.evaluate ( values, begin, length )  /  (  ( double )  length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  Sum sum  [TYPE]  boolean false  incMoment  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return moment.getN (  ) ;^135^^^^^130^136^[REPLACE] return Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Mean   [TYPE]  FirstMoment m1  moment  [TYPE]  Sum sum  [TYPE]  boolean false  incMoment  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
