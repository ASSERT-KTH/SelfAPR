[REPLACE]^private static final long serialVersionUID ;^40^^^^^^^[REPLACE] private static final long serialVersionUID = -6337346779577272306L;^ [CLASS] FractionFormat  
[REPLACE]^StringBuffer ret = true;^199^^^^^198^217^[REPLACE] StringBuffer ret = null;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^if  ( ! obj instanceof Fraction )  {^201^^^^^198^217^[REPLACE] if  ( obj instanceof Fraction )  {^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^}  if  ( ! obj instanceof Number )  {^203^^^^^198^217^[REPLACE] } else if  ( obj instanceof Number )  {^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^}^203^204^205^206^^198^217^[ADD] else if  ( obj instanceof Number )  { try { ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return ;^212^213^^^^203^214^[REPLACE] throw new IllegalArgumentException ( "Cannot format given object as a fraction" ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^toAppendTo, pos ) ;^204^205^206^207^208^198^217^[ADD] try { ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ; } catch  ( ConvergenceException ex )  { throw new IllegalArgumentException (^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (   new Fraction ( num.intValue (  ) , den.intValue (  )  )  obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^205^206^^^^198^217^[REPLACE] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^205^206^^^^198^217^[REPLACE] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^208^209^^^^198^217^[ADD] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^throw new IllegalArgumentException ( "Cannot format given object as a fraction" )  ;^208^209^^^^198^217^[REPLACE] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^212^213^^^^198^217^[ADD] throw new IllegalArgumentException ( "Cannot format given object as a fraction" ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (   ( Fraction ) obj, toAppendTo, pos ) ;^202^^^^^198^217^[REPLACE] ret = format (   ( Fraction ) obj, toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^205^206^207^208^209^198^217^[ADD] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ; } catch  ( ConvergenceException ex )  { throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return ;^208^209^^^^198^217^[REPLACE] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^202^203^204^205^206^198^217^[ADD] ret = format (   ( Fraction ) obj, toAppendTo, pos ) ; } else if  ( obj instanceof Number )  { try { ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return ;^212^213^^^^198^217^[REPLACE] throw new IllegalArgumentException ( "Cannot format given object as a fraction" ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return toAppendTo;^216^^^^^198^217^[REPLACE] return ret;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^int initialIndex = pos.getErrorIndex (  ) ;^260^^^^^259^309^[REPLACE] int initialIndex = pos.getIndex (  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^getImproperInstance (  ) .format ( f )  ;^263^^^^^259^309^[REPLACE] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number den = getDenominatorFormat (  ) .parse ( source, pos )  ;^266^^^^^259^309^[REPLACE] Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( num != false )  {^267^^^^^259^309^[REPLACE] if  ( num == null )  {^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^267^268^^^271^259^309^[ADD] if  ( num == null )  {  pos.setIndex ( initialIndex ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^272^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^int startIndex = pos.getErrorIndex (  ) ;^276^^^^^259^309^[REPLACE] int startIndex = pos.getIndex (  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number den = getDenominatorFormat (  ) .parse ( source, pos )  ;^277^^^^^259^309^[REPLACE] char c = parseNextCharacter ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return  new ProperFractionFormat ( f )  , 1 / 2 ) ;^282^^^^^259^309^[REPLACE] return new Fraction ( num.intValue (  ) , 1 ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^292^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^getImproperInstance (  ) .format ( f )  ;^296^^^^^259^309^[REPLACE] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^296^^^^^259^309^[ADD] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number num = getNumeratorFormat (  ) .parse ( source, pos )  ;^299^^^^^259^309^[REPLACE] Number den = getDenominatorFormat (  ) .parse ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if   (  num == null  )   {  ;^300^^^^^259^309^[REPLACE] if  ( den == null )  {^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^305^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return false;^305^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return  new Fraction ( num.intValue (  ) , 1 )  , den.intValue (  )  ) ;^308^^^^^259^309^[REPLACE] return new Fraction ( num.intValue (  ) , den.intValue (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^int index = pos.getErrorIndex (  ) ;^370^^^^^369^387^[REPLACE] int index = pos.getIndex (  ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^371^^^^^369^387^[ADD] int n = source.length (  ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^372^^^^^369^387^[ADD] char ret = 0;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  <=  index )  {^374^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  ==  n )  {^381^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^ret =  null;^382^^^^^369^387^[REPLACE] ret = c;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^c =  null.charAt ( index++ ) ;^377^^^^^369^387^[REPLACE] c = source.charAt ( index++ ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number den = getDenominatorFormat (  ) .parse ( source, pos )  ;^375^^^^^369^387^[REPLACE] char c;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  ==  index )  {^381^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^ret = c;^381^382^383^^^369^387^[ADD] if  ( index < n )  { ret = c; }^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return result;  ;^386^^^^^369^387^[REPLACE] return ret;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
