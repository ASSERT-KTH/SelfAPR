[REPLACE]^private static final  short  serialVersionUID = 3350616277306882875L;^33^^^^^^^[REPLACE] private static final long serialVersionUID = 3350616277306882875L;^ [CLASS] BrentSolver  
[REPLACE]^( abs ( y0 )  )  ;^84^^^^^82^192^[REPLACE] clearResult (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^84^^^^^82^192^[ADD] clearResult (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^verifyInterval ( min, tolerance ) ;^85^^^^^82^192^[REPLACE] verifyInterval ( min, max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x0 = tolerance;^90^^^^^82^192^[REPLACE] double x0 = min;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x1 = tolerance;^91^^^^^82^192^[REPLACE] double x1 = max;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^92^^^^^82^192^[ADD] double y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double p1  ;^93^^^^^82^192^[REPLACE] double y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = f.value ( x1 )  ;^94^^^^^82^192^[REPLACE] y0 = f.value ( x0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y0 = f.value ( x0 )  ;^95^^^^^82^192^[REPLACE] y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( y0 * y1  <=  0 )  {^98^^^^^82^192^[REPLACE] if  ( y0 * y1 >= 0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^99^100^101^^^82^192^[ADD] throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" +^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^105^^^^^82^192^[ADD] double x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y2 = y2;^106^^^^^82^192^[REPLACE] double y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double delta =y1  x0;^107^^^^^82^192^[REPLACE] double delta = x1 - x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double oldDelta = tolerance;^108^^^^^82^192^[REPLACE] double oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^int i = 3;^110^^^^^82^192^[REPLACE] int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y0 )   ==  Math.abs ( y1 )  )  {^112^^^^^82^192^[REPLACE] if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2  ;^113^^^^^82^192^[REPLACE] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2  ;^114^^^^^82^192^[REPLACE] x1 = x2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^115^^^^^82^192^[REPLACE] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^116^^^^^82^192^[ADD] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^117^^^^^82^192^[REPLACE] y1 = y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2  ;^118^^^^^82^192^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y1 )   <  functionValueAccuracy )  {^120^^^^^82^192^[REPLACE] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( abs ( dx )  )  <= tolerance )  {     setResult ( x1, i ) ;     return result; }^120^^^^^82^192^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return result;  ;^125^^^^^82^192^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if   (  Math.abs  (  delta  )   > tolerance  )   {  ;^130^^^^^82^192^[REPLACE] if  ( Math.abs ( dx )  <= tolerance )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return result;  ;^132^^^^^82^192^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (  ( Math.abs ( oldDelta )  < tolerance )  ) {^134^135^^^^82^192^[REPLACE] if  (  ( Math.abs ( oldDelta )  < tolerance )  || ( Math.abs ( y0 )  <= Math.abs ( y1 )  )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( x0  ) {^143^^^^^134^170^[REPLACE] if  ( x0 == x2 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^143^144^145^146^^134^170^[ADD] if  ( x0 == x2 )  {  p = dx * r3; p1 = 1.0 - r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p = r3   ( dx  r1   ( r1 - r2 )  -  ( x1 - x0 )    ( r2 - 1.0 )  ) ;^151^^^^^143^153^[REPLACE] p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p1 =  ( r1 - 1.0D )    ( r2 - 1.0D )    ( r3 - 1.0D ) ;^152^^^^^143^153^[REPLACE] p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^149^^^^^143^153^[ADD] double r1 = y0 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r2 = y1  y2;^150^^^^^143^153^[REPLACE] double r2 = y1 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p =oldDelta  r3;^145^^^^^134^170^[REPLACE] p = dx * r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^146^^^^^134^170^[ADD] p1 = 1.0 - r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( p  != p1 )  {^154^^^^^134^170^[REPLACE] if  ( p > 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p1 = -p1  ;^157^^^^^154^158^[REPLACE] p = -p;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p = -p  ;^155^^^^^134^170^[REPLACE] p1 = -p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( 2.0D * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  && p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^134^170^[REPLACE] if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  tolerance;^167^^^^^159^169^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = x1 - x0  ;^168^^^^^159^169^[REPLACE] delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  dx;^164^^^^^159^169^[REPLACE] delta = 0.5 * dx;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  null;^165^^^^^159^169^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^145^^^^^134^170^[ADD] p = dx * r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p = r3   ( dx  r1   ( r1 - r2 )  -  ( x1 - x0 )    ( r2 - 1.0 )  ) ;^151^^^^^134^170^[REPLACE] p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p1 =  ( r1 - 1.0 )    ( r2 - 1.0 )    ( r3 - 1.0 ) ;^152^^^^^134^170^[REPLACE] p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^157^^^^^134^170^[ADD] p = -p;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  dx;^164^^^^^134^170^[REPLACE] delta = 0.5 * dx;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  tolerance;^165^^^^^134^170^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^167^^^^^134^170^[ADD] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = x1 - x0  ;^168^^^^^134^170^[REPLACE] delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^140^^^^^134^170^[ADD] double r3 = y1 / y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double p1  ;^141^^^^^134^170^[REPLACE] double p;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double p  ;^142^^^^^134^170^[REPLACE] double p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^149^^^^^134^170^[ADD] double r1 = y0 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r2 = y1 y0;^150^^^^^134^170^[REPLACE] double r2 = y1 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  dx;^137^^^^^134^170^[REPLACE] delta = 0.5 * dx;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  tolerance;^138^^^^^134^170^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( x0  !=  x2 )  {^143^^^^^82^192^[REPLACE] if  ( x0 == x2 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^152^^^^^143^153^[ADD] p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r3 = y1 / y0  ;^149^^^^^143^153^[REPLACE] double r1 = y0 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r2 = y0 y0;^150^^^^^143^153^[REPLACE] double r2 = y1 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^145^^^^^82^192^[ADD] p = dx * r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p1 =y0  r3;^146^^^^^82^192^[REPLACE] p1 = 1.0 - r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( p  ==  2.0d )  {^154^^^^^82^192^[REPLACE] if  ( p > 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p = -p  ;^155^^^^^82^192^[REPLACE] p1 = -p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  && p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^159^160^^^^82^192^[REPLACE] if  ( 2.0 * p >= 1.5 * dx * p1 - Math.abs ( tolerance * p1 )  || p >= Math.abs ( 0.5 * oldDelta * p1 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^delta = p / p1;^167^168^^^^159^169^[ADD] oldDelta = delta; delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^168^^^^^159^169^[ADD] delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^165^^^^^159^169^[ADD] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( delta )   <=  tolerance )  {^175^^^^^82^192^[REPLACE] if  ( Math.abs ( delta )  > tolerance )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^} else if   (  dx <= 0.0  )   {  ;^177^^^^^82^192^[REPLACE] } else if  ( dx > 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  ( dx <= 0.0 )  {     x1 = x1 -  ( 0.5 * tolerance ) ; }^177^^^^^82^192^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^}  else {^179^^^^^82^192^[REPLACE] } else if  ( dx <= 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1 +  ( 0.5 * tolerance )  ;^180^^^^^82^192^[REPLACE] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1 y1;^180^^^^^82^192^[REPLACE] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  1.0d * tolerance;^178^^^^^82^192^[REPLACE] x1 = x1 + 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^} else if   (  dx > 0.0  )   {  ;^179^^^^^82^192^[REPLACE] } else if  ( dx <= 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  0.5 * tolerance;^180^^^^^82^192^[REPLACE] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1 -  ( 0.5 * tolerance )  ;^178^^^^^82^192^[REPLACE] x1 = x1 + 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 =y1  0.5 * tolerance;^180^^^^^82^192^[REPLACE] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^176^^^^^82^192^[ADD] x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^}  if  ( dx  <=  0.0 )  {^177^^^^^82^192^[REPLACE] } else if  ( dx > 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^}   x1 = x1 - 0.5 * tolerance;^179^180^181^^^82^192^[ADD] else if  ( dx <= 0.0 )  { x1 = x1 - 0.5 * tolerance; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  0.5D * tolerance;^180^^^^^82^192^[REPLACE] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^}  if  ( dx  == oldDelta )  {^179^^^^^82^192^[REPLACE] } else if  ( dx <= 0.0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^}^179^180^181^^^82^192^[ADD] else if  ( dx <= 0.0 )  { x1 = x1 - 0.5 * tolerance; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (  ( y1 > 0 + 1 )   !=   ( y2 > 0 + 1 )  )  {^183^^^^^82^192^[REPLACE] if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^184^^^^^82^192^[REPLACE] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2  ;^185^^^^^82^192^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = x1  x0;^186^^^^^82^192^[REPLACE] delta = x1 - x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^187^^^^^82^192^[ADD] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^115^^^^^82^192^[ADD] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^116^^^^^82^192^[REPLACE] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5D  dx;^137^^^^^82^192^[REPLACE] delta = 0.5 * dx;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  null;^138^^^^^82^192^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p = dx  r3;^145^^^^^82^192^[REPLACE] p = dx * r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^146^^^^^82^192^[ADD] p1 = 1.0 - r3;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^151^^^^^82^192^[ADD] p = r3 *  ( dx * r1 *  ( r1 - r2 )  -  ( x1 - x0 )  *  ( r2 - 1.0 )  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^152^^^^^82^192^[ADD] p1 =  ( r1 - 1.0 )  *  ( r2 - 1.0 )  *  ( r3 - 1.0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^p1 = -p1  ;^157^^^^^82^192^[REPLACE] p = -p;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  dx;^164^^^^^82^192^[REPLACE] delta = 0.5 * dx;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =  tolerance;^165^^^^^82^192^[REPLACE] oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^167^168^^^^82^192^[ADD] oldDelta = delta; delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^168^^^^^82^192^[ADD] delta = p / p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2  ;^172^^^^^82^192^[REPLACE] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^173^^^^^82^192^[REPLACE] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  delta;^176^^^^^82^192^[REPLACE] x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  0.5 * tolerance;^178^^^^^82^192^[REPLACE] x1 = x1 + 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^180^^^^^82^192^[ADD] x1 = x1 - 0.5 * tolerance;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y0 = f.value ( x0 )  ;^182^^^^^82^192^[REPLACE] y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^184^^^^^82^192^[ADD] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^186^187^^^^82^192^[ADD] delta = x1 - x0; oldDelta = delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double dx =  ( x2  x1 ) ;^127^^^^^82^192^[REPLACE] double dx =  ( x2 - x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^128^129^^^^82^192^[ADD] double tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r3 = y1  y0;^140^^^^^82^192^[REPLACE] double r3 = y1 / y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double p1  ;^141^^^^^82^192^[REPLACE] double p;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double p  ;^142^^^^^82^192^[REPLACE] double p1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^149^150^^^^82^192^[ADD] double r1 = y0 / y2; double r2 = y1 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double r1 = y0 / y2  ;^150^^^^^82^192^[REPLACE] double r2 = y1 / y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return ;^191^^^^^82^192^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] BrentSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  dx  max  min  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
