[REPLACE]^private static final long serialVersionUID  = null ;^34^^^^^^^[REPLACE] private static final long serialVersionUID = -1146319659338487221L;^ [CLASS] AbstractIntegerDistribution  
[REPLACE]^if  ( p < 0.0 && p > 1.0 )  {^125^^^^^124^169^[REPLACE] if  ( p < 0.0 || p > 1.0 )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REMOVE]^if  ( x0 > x1 )  {     throw new IllegalArgumentException ( "lower endpoint must be less than or equal to upper endpoint" ) ; }^125^^^^^124^169^[REMOVE] ^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^return ;^126^127^^^^124^169^[REPLACE] throw new IllegalArgumentException ( "p must be between 0 and 1.0  ( inclusive ) " ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^126^127^^^^124^169^[ADD] throw new IllegalArgumentException ( "p must be between 0 and 1.0  ( inclusive ) " ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^int x1 = getDomainUpperBound ( p )  ;^132^^^^^124^169^[REPLACE] int x0 = getDomainLowerBound ( p ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^133^^^^^124^169^[ADD] int x1 = getDomainUpperBound ( p ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^int x1 = getDomainUpperBound ( p )  ;^134^^^^^124^169^[REPLACE] double pm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^if  ( pm  >=  p )  {^138^^^^^124^169^[REPLACE] if  ( pm > p )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^if  (x1  !=  x0 )  {^150^^^^^138^158^[REPLACE] if  ( xm == x0 )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^150^151^^153^^138^158^[ADD] if  ( xm == x0 )  {  ++x0;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^x1 = xm  ;^156^^^^^150^157^[REPLACE] x0 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^x1 = xm  ;^156^^^^^138^158^[REPLACE] x0 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^if  ( xm  ) {^140^^^^^124^169^[REPLACE] if  ( xm == x1 )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^146^^^^^140^147^[ADD] x1 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^x0 = xm  ;^146^^^^^124^169^[REPLACE] x1 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^if  ( xm  &&  x0 )  {^140^^^^^124^169^[REPLACE] if  ( xm == x1 )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REMOVE]^if  ( xm == x0 )  {     ++x0; }else {     x0 = xm; }^140^^^^^124^169^[REMOVE] ^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^if  ( x1  ||  xm )  {^150^^^^^124^169^[REPLACE] if  ( xm == x0 )  {^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^137^^^^^124^169^[ADD] pm = cumulativeProbability ( xm ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^146^^^^^124^169^[ADD] x1 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^x1 = xm  ;^156^^^^^124^169^[REPLACE] x0 = xm;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^136^^^^^124^169^[ADD] int xm = x0 +  ( x1 - x0 )  / 2;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[ADD]^^162^^^^^124^169^[ADD] pm = cumulativeProbability ( x0 ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^pm = cumulativeProbability ( xm )  ;^165^^^^^124^169^[REPLACE] pm = cumulativeProbability ( x0 ) ;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
[REPLACE]^return xm;^168^^^^^124^169^[REPLACE] return x0;^[METHOD] inverseCumulativeProbability [TYPE] int [PARAMETER] final double p [CLASS] AbstractIntegerDistribution   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double p  pm  [TYPE]  int x0  x1  xm 
