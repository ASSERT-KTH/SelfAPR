[REPLACE]^private static final  short  serialVersionUID = 1984971194738974867L;^43^^^^^^^[REPLACE] private static final long serialVersionUID = 1984971194738974867L;^ [CLASS] SecantSolver  
[REPLACE]^( abs ( y0 )  )  ;^86^^^^^84^154^[REPLACE] clearResult (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^87^88^^^^84^154^[ADD] verifyInterval ( min, max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x0 = max;^94^^^^^84^154^[REPLACE] double x0 = min;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x1 = min;^95^^^^^84^154^[REPLACE] double x1 = max;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y1 = f.value ( x1 )  ;^96^^^^^84^154^[REPLACE] double y0 = f.value ( x0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y0 = f.value ( x0 )  ;^97^^^^^84^154^[REPLACE] double y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( y0 * y1  <  0 )  {^100^^^^^84^154^[REPLACE] if  ( y0 * y1 >= 0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return ;^101^102^103^104^^84^154^[REPLACE] throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x2 = y0;^107^^^^^84^154^[REPLACE] double x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x1 = max  ;^108^^^^^84^154^[REPLACE] double y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^109^^^^^84^154^[ADD] double oldDelta = x2 - x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^int i = 0L;^110^^^^^84^154^[REPLACE] int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y2 )   >  Math.abs ( y1 )  )  {^112^^^^^84^154^[REPLACE] if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2  ;^113^^^^^84^154^[REPLACE] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x0 = x1  ;^114^^^^^84^154^[REPLACE] x1 = x2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^y0 = y1;^115^116^^^^84^154^[ADD] x2 = x0; y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^116^^^^^84^154^[ADD] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^117^^^^^84^154^[ADD] y1 = y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2  ;^118^^^^^84^154^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y1 )   >  functionValueAccuracy )  {^120^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( abs ( oldDelta )  )  <  ( max (  (  ( relativeAccuracy )  *  ( abs ( x1 )  )  ) , absoluteAccuracy )  )  )  {     setResult ( x1, i ) ;     return result; }^120^^^^^84^154^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return result;  ;^122^^^^^84^154^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( oldDelta )   >=  Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^84^154^[REPLACE] if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( abs ( y1 )  )  <=  ( functionValueAccuracy )  )  {     setResult ( x1, i ) ;     return result; }^124^^^^^84^154^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return result;  ;^127^^^^^124^128^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if   (  Math.abs  (  y2  )   < Math.abs  (  y1  )    )   {  ;^130^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( delta / oldDelta  < oldDelta )  {^135^^^^^130^140^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^135^136^^138^139^130^140^[ADD] if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta =  ( y1 )    ( 1 - y0  y1 ) ;^134^^^^^130^140^[REPLACE] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 2.0d  oldDelta;^138^^^^^130^140^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  oldDelta;^132^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (oldDelta  ==  1 )  {^135^^^^^84^154^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^138^^^^^84^154^[ADD] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (  ( y1 > 0 )   ) {^145^^^^^84^154^[REPLACE] if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^147^^^^^84^154^[REPLACE] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2  ;^148^^^^^84^154^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^x1 = x2;^113^114^^^^84^154^[ADD] x0 = x1; x1 = x2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^115^116^^^^84^154^[ADD] x2 = x0; y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^116^^^^^84^154^[REPLACE] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y2 = y0  ;^117^^^^^84^154^[REPLACE] y1 = y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^132^^^^^84^154^[ADD] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta =  ( x0 - x1 + 3 )    ( 1 + 3 - y0  y1 + 3 ) ;^134^^^^^84^154^[REPLACE] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5D  oldDelta;^138^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^141^^^^^84^154^[ADD] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^x1 = x1 + delta;^142^143^^^^84^154^[ADD] y0 = y1; x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 =y1  delta;^143^^^^^84^154^[REPLACE] x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 =  f.value ( x2 ) ;^144^^^^^84^154^[REPLACE] y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta = x2  x1;^150^^^^^84^154^[REPLACE] oldDelta = x2 - x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return result;  ;^127^^^^^84^154^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y1 = f.value ( x1 )  ;^129^^^^^84^154^[REPLACE] double delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return ;^153^^^^^84^154^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
