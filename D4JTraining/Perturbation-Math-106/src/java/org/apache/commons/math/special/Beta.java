[REPLACE]^private static final double DEFAULT_EPSILON  = null ;^31^^^^^^^[REPLACE] private static final double DEFAULT_EPSILON = 10e-9;^ [CLASS] Beta 1  
[REPLACE]^double m  ;^119^^^^^118^154^[REPLACE] double ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^if  ( Double.isNaN ( x )  && Double.isNaN ( a )  && Double.isNaN ( b )  &&  ( x < 0 * 3 )  && ( x > 1 )  &&  ( a <= 0 * 3.0 * 3 )  &&  ( b <= 0 * 3.0 * 3 )  ) {^121^122^123^^^118^154^[REPLACE] if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^121^122^123^124^^118^154^[ADD] if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) { ret = Double.NaN;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^}  if  ( x  <   ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^118^154^[REPLACE] } else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^if  ( n % 2  !=  0 )  {^132^^^^^125^151^[REPLACE] if  ( n % 2 == 0 )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m =  ( n - 1.0 )   2.0;^137^^^^^132^140^[REPLACE] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = - (  ( a + m )  *  ( a + b + m )  * x )   (  ( a +  ( 2L * m )  )  *  ( a +  ( 2L * m )  + 1.0 )  ) ;^138^139^^^^132^140^[REPLACE] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m = n  2.0;^133^^^^^125^151^[REPLACE] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret =  ( m *  ( b - m )  * x )   (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^[REPLACE] ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m =  ( n - 1.0 )   2.0;^137^^^^^125^151^[REPLACE] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^138^139^^^^125^151^[ADD] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0d - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0d  fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^[REPLACE] ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return DEFAULT_EPSILON;^141^^^^^125^151^[REPLACE] return ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return 2.0d;^145^^^^^125^151^[REPLACE] return 1.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ContinuedFraction fraction = maxIterationsew ContinuedFraction (  )  {^128^^^^^125^151^[REPLACE] ContinuedFraction fraction = new ContinuedFraction (  )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double m  ;^130^^^^^125^151^[REPLACE] double ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^131^^^^^125^151^[ADD] double m;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^126^^^^^118^154^[ADD] ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^if  ( n % 0  && n )  {^132^^^^^118^154^[REPLACE] if  ( n % 2 == 0 )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = - (  ( a + m )  *  ( a + b + m )  * x )   (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^[REPLACE] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m = n maxIterations;^133^^^^^118^154^[REPLACE] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret =  ( m *  ( b - m )  * x )   (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^118^154^[REPLACE] ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m = maxIterations  4.0d;^133^^^^^118^154^[REPLACE] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^137^^^^^118^154^[ADD] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = - (  ( a + m )  *  ( a + b + m )  * x )   (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^118^154^[REPLACE] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0  fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^118^154^[REPLACE] ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return ret;  ;^141^^^^^118^154^[REPLACE] return ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return 1.0;  ;^145^^^^^118^154^[REPLACE] return 1.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^128^129^130^^^118^154^[ADD] ContinuedFraction fraction = new ContinuedFraction (  )  { protected double getB ( int n, double x )  { double ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double m  ;^130^^^^^118^154^[REPLACE] double ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double ret  ;^131^^^^^118^154^[REPLACE] double m;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret  = null ;^124^^^^^121^151^[REPLACE] ret = Double.NaN;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^if  (   0 )  {^132^^^^^125^151^[REPLACE] if  ( n % 2 == 0 )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^m = n / 2.0;(  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^132^133^134^135^^125^151^[ADD] if  ( n % 2 == 0 )  { m = n / 2.0; ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^133^^^^^125^151^[ADD] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m =maxIterations  2.0;^133^^^^^125^151^[REPLACE] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m =  ( n - 1.0D )   2.0;^137^^^^^125^151^[REPLACE] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = - (  ( a + m )  *  ( a + b + m )  * x )   (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^[REPLACE] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0  fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^[REPLACE] ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double ret  ;^128^^^^^125^151^[REPLACE] ContinuedFraction fraction = new ContinuedFraction (  )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double ret  ;^131^^^^^125^151^[REPLACE] double m;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = 1.0  regularizedBeta ( 1.0  x, b, a, epsilon, maxIterations ) ;^126^^^^^118^154^[REPLACE] ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^if  ( n  ||  0 )  {^132^^^^^118^154^[REPLACE] if  ( n % 2 == 0 )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[ADD]^^137^^^^^132^140^[ADD] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m = n  2.0;^133^^^^^118^154^[REPLACE] m = n / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret =  ( m *  ( b - m )  * x )   (  ( a +  ( 2 - 1 * m )  - 1 )  *  ( a +  ( 2 - 1 * m )  )  ) ;^134^135^^^^118^154^[REPLACE] ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret  =  ret ;^124^^^^^118^154^[REPLACE] ret = Double.NaN;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = 1.0D  regularizedBeta ( 1.0D  x, b, a, epsilon, maxIterations ) ;^126^^^^^118^154^[REPLACE] ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^m =  ( n - 1.0 )   2.0;^137^^^^^118^154^[REPLACE] m =  ( n - 1.0 )  / 2.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^ret = - (  ( a + m )  *  ( a + b + m )  * x )   (  ( a +  ( 2 / 2 * m )  )  *  ( a +  ( 2 / 2 * m )  + 1.0 )  ) ;^138^139^^^^118^154^[REPLACE] ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return DEFAULT_EPSILON;^141^^^^^118^154^[REPLACE] return ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return 1.0D;^145^^^^^118^154^[REPLACE] return 1.0;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^double ret  ;^128^^^^^118^154^[REPLACE] ContinuedFraction fraction = new ContinuedFraction (  )  {^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
[REPLACE]^return DEFAULT_EPSILON;^153^^^^^118^154^[REPLACE] return ret;^[METHOD] regularizedBeta [TYPE] double [PARAMETER] double x final double a final double b double epsilon int maxIterations [CLASS] Beta 1   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  epsilon  m  ret  x  [TYPE]  int maxIterations  n  [TYPE]  ContinuedFraction fraction 
