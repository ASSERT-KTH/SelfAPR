[REPLACE]^public static final Fraction ONE  = null ;^31^^^^^^^[REPLACE] public static final Fraction ONE = new Fraction ( 1, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ZERO = new Fraction ( 1, 1 ) ;^34^^^^^^^[REPLACE] public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^private static final long serialVersionUID ;^37^^^^^^^[REPLACE] private static final long serialVersionUID = 65382027393090L;^ [CLASS] Fraction  
[REPLACE]^private  short  denominator;^40^^^^^^^[REPLACE] private int denominator;^ [CLASS] Fraction  
[REPLACE]^double r0 = epsilon;^74^^^^^73^123^[REPLACE] double r0 = value;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int a0 =  ( int ) Math.floor ( r1 ) ;^75^^^^^73^123^[REPLACE] int a0 =  ( int ) Math.floor ( r0 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  ( Math.floor ( q0 - value )   >  epsilon )  {^79^^^^^73^123^[REPLACE] if  ( Math.abs ( a0 - value )  < epsilon )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.numerator = p2  ;^80^^^^^73^123^[REPLACE] this.numerator = a0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.denominator = 1 % 1;^81^^^^^73^123^[REPLACE] this.denominator = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^return;  ;^82^^^^^73^123^[REPLACE] return;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.denominator = den  ;^81^^^^^73^123^[REPLACE] this.denominator = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int p0 = 3;^85^^^^^73^123^[REPLACE] int p0 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int q1 = 1;^86^^^^^73^123^[REPLACE] int q0 = 0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^87^88^^^^73^123^[ADD] int p1 = a0; int q1 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int q0 = 0  ;^88^^^^^73^123^[REPLACE] int q1 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^90^91^^^^73^123^[ADD] int p2 = 0; int q2 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^91^^^^^73^123^[ADD] int q2 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int n = 0 + 1;^93^^^^^73^123^[REPLACE] int n = 0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^boolean stop = true;^94^^^^^73^123^[REPLACE] boolean stop = false;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  ( n < maxIterations || Math.abs ( convergent - value )  > epsilon )  {^103^^^^^73^123^[REPLACE] if  ( n < maxIterations && Math.abs ( convergent - value )  > epsilon )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^111^^^^^103^112^[ADD] stop = true;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^a0 = a1  ;^104^^^^^73^123^[REPLACE] p0 = p1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^q0 = q1;^105^106^^^^73^123^[ADD] p1 = p2; q0 = q1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^a0 = a1  ;^106^^^^^73^123^[REPLACE] q0 = q1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1  ;^107^^^^^73^123^[REPLACE] q1 = q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1  ;^108^^^^^73^123^[REPLACE] a0 = a1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^a0 = a1  ;^109^^^^^73^123^[REPLACE] r0 = r1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q2 =  ( a1 * q1 )  + q0  ;^99^^^^^73^123^[REPLACE] p2 =  ( a1 * p1 )  + p0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q2 =  ( a1 * q1 )   q0;^100^^^^^73^123^[REPLACE] q2 =  ( a1 * q1 )  + q0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^p0 = p1  ;^105^^^^^73^123^[REPLACE] p1 = p2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^109^^^^^73^123^[ADD] r0 = r1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^stop = false;^111^^^^^73^123^[REPLACE] stop = true;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^double r1 = 1.0   ( r0 - a0 ) ;^97^^^^^73^123^[REPLACE] double r1 = 1.0 /  ( r0 - a0 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int a1 =  ( int ) Math.floor ( r0 ) ;^98^^^^^73^123^[REPLACE] int a1 =  ( int ) Math.floor ( r1 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^double convergent =  ( double ) p2   ( double ) q2;^102^^^^^73^123^[REPLACE] double convergent =  ( double ) p2 /  ( double ) q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  ( numerator  ==  numerator )  {^115^^^^^73^123^[REPLACE] if  ( n >= maxIterations )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^115^116^117^118^^73^123^[ADD] if  ( n >= maxIterations )  { throw new ConvergenceException ( "Unable to convert double to fraction" ) ; }^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^return ;^116^117^^^^73^123^[REPLACE] throw new ConvergenceException ( "Unable to convert double to fraction" ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.numerator = a0  ;^120^^^^^73^123^[REPLACE] this.numerator = p2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^121^^^^^73^123^[ADD] this.denominator = q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^addSub ( fraction, true )  ;^122^^^^^73^123^[REPLACE] reduce (  ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^addSub ( fraction, true )  ;^133^^^^^132^148^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( numerator  ||  0 )  {^134^^^^^132^148^[REPLACE] if  ( den == 0 )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^134^135^136^^^132^148^[ADD] if  ( den == 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ;^135^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^135^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( numerator  <=  q0 )  {^137^^^^^132^148^[REPLACE] if  ( den < 0 )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^137^138^139^140^141^132^148^[ADD] if  ( den < 0 )  { if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( num == Integer.MIN_VALUE && den == Integer.MIN_VALUE )  {^138^139^^^^132^148^[REPLACE] if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REMOVE]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^138^^^^^132^148^[REMOVE] ^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ;^140^^^^^138^141^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^142^143^^^^132^148^[ADD] num = -num; den = -den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^den =  -numerator;^143^^^^^132^148^[REPLACE] den = -den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^throw new IllegalArgumentException ( "The fraction must not be null" )  ;^140^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^den =  -null;^143^^^^^132^148^[REPLACE] den = -den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ;^140^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^this.numerator = p2  ;^145^^^^^132^148^[REPLACE] this.numerator = num;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^this.denominator = q2  ;^146^^^^^132^148^[REPLACE] this.denominator = den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^addSub ( fraction, true )  ;^147^^^^^132^148^[REPLACE] reduce (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^int ret = 0L;^171^^^^^170^186^[REPLACE] int ret = 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  (other  ==  object )  {^173^^^^^170^186^[REPLACE] if  ( this != object )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  ( first  <=  second )  {^178^^^^^170^186^[REPLACE] if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  if  ( first  !=  second )  {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 3;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 1L;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^179^^^^^170^186^[ADD] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  if  ( first  <  second )  {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 0;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -4;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1  ;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^Fraction rhs =  (  ( Fraction )   ( other )  )  ;^174^^^^^170^186^[REPLACE] Fraction other =  ( Fraction ) object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^double second = other.doubleValue (  ) ;^175^176^^^^170^186^[ADD] double first = doubleValue (  ) ; double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^double second = other.negate (  ) ;^176^^^^^170^186^[REPLACE] double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  ( first  >=  second )  {^178^^^^^170^186^[REPLACE] if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^181^^^^^170^186^[ADD] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1L;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  else {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^}^180^181^182^^^170^186^[ADD] else if  ( first > second )  { ret = 1; }^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 4;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^double second = ret.doubleValue (  ) ;^176^^^^^170^186^[REPLACE] double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^return numerator;^185^^^^^170^186^[REPLACE] return ret;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^int d = gcd ( numerator, denominator )  ;^207^^^^^206^227^[REPLACE] boolean ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( this  &&  other )  {^209^^^^^206^227^[REPLACE] if  ( this == other )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^}  else {^211^^^^^206^227^[REPLACE] } else if  ( other == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^Fraction rhs =  ( Fraction ) other;^214^215^^217^218^211^224^[ADD] try {  Fraction rhs =  ( Fraction ) other; ret =  ( numerator == rhs.numerator )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^218^219^^^^211^224^[ADD] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^222^^^^^211^224^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^Fraction other =  (  ( Fraction )   ( object )  )  ;^217^^^^^211^224^[REPLACE] Fraction rhs =  ( Fraction ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^220^221^222^^^211^224^[ADD] catch  ( ClassCastException ex )  {  ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^212^^^^^206^227^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^Fraction rhs =  ( Fraction ) other;^214^215^^217^218^206^227^[ADD] try {  Fraction rhs =  ( Fraction ) other; ret =  ( numerator == rhs.numerator )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^218^219^^^^206^227^[ADD] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^217^^^^^206^227^[ADD] Fraction rhs =  ( Fraction ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  (true )  ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^222^^^^^206^227^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^Fraction other =  (  ( Fraction )   ( object )  )  ;^217^^^^^206^227^[REPLACE] Fraction rhs =  ( Fraction ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^220^221^222^^^206^227^[ADD] catch  ( ClassCastException ex )  {  ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = false;^210^^^^^206^227^[REPLACE] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^}  if  ( other != this )  {^211^^^^^206^227^[REPLACE] } else if  ( other == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )   ||  ( denominator == rhs.denominator ) ;^218^219^^^^211^224^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^217^^^^^211^224^[ADD] Fraction rhs =  ( Fraction ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )  ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^210^^^^^206^227^[ADD] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^return ret;  ;^226^^^^^206^227^[REPLACE] return ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( fraction != false )  {^338^^^^^337^382^[REPLACE] if  ( fraction == null )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^338^339^340^^^337^382^[ADD] if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^339^^^^^337^382^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^339^^^^^337^382^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if   (  denominator == 0  )   {  ;^342^^^^^337^382^[REPLACE] if  ( numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return isAdd ? fraction : fraction .reduce (  )  ;^343^^^^^337^382^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( fraction.numerator  !=  0 )  {^345^^^^^337^382^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return this;  ;^346^^^^^337^382^[REPLACE] return this;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return null;^346^^^^^337^382^[REPLACE] return this;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d1 = MathUtils.gcd ( denominator, ret.denominator ) ;^350^^^^^337^382^[REPLACE] int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( d3 ||tmodd3 )  {^351^^^^^337^382^[REPLACE] if  ( d1==1 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, ret.denominator )  ) ;^355^356^357^358^^337^382^[REPLACE] return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^353^^^^^337^382^[ADD] int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int upv = MathUtils.subAndCheck ( fraction.numerator, denominator ) ;^354^^^^^337^382^[REPLACE] int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, uvp )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^337^382^[REPLACE] return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d = gcd ( numerator, denominator )  ;^353^^^^^337^382^[REPLACE] int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int upv = MathUtils.mulAndCheck ( rhs.numerator, denominator ) ;^354^^^^^337^382^[REPLACE] int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf (tmodd1tmodd1 )  ) ;^363^364^^^^337^382^[REPLACE] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominatord1 )  ) ;^365^366^^^^337^382^[REPLACE] BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger t = isAdd ? uvp.add ( upv )  : uvp .getReducedFraction ( denominator , den )  ;^367^^^^^337^382^[REPLACE] BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int tmodd1 = t.mod ( BigInteger .intValue (  )   ) .intValue (  ) ;^370^^^^^337^382^[REPLACE] int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^371^^^^^337^382^[ADD] int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmodd1, d1 ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger w = t.add ( BigInteger.valueOf ( tmodd1 )  ) ;^374^^^^^337^382^[REPLACE] BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  (tmodd1 (  )   ==  31 )  {^375^^^^^337^382^[REPLACE] if  ( w.bitLength (  )  > 31 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^375^376^377^378^^337^382^[ADD] if  ( w.bitLength (  )  > 31 )  { throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^376^377^^^^337^382^[REPLACE] throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominatord1, fraction.denominatord2 )  ) ;^379^380^381^^^337^382^[REPLACE] return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( tmodd1  ) {^442^^^^^441^465^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REMOVE]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^442^^^^^441^465^[REMOVE] ^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^443^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^443^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if   (  numerator >= 0  )   {  ;^445^^^^^441^465^[REPLACE] if  ( numerator==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return   (  float  )  doubleValue  (    )  ;  ;^446^^^^^441^465^[REPLACE] return ZERO;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( denominator==Integer.MIN_VALUE ) {^449^^^^^441^465^[REPLACE] if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator /= d  ;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^450^^^^^441^465^[ADD] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator/=3; denominator/=3;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( denominator  <=  0 )  {^452^^^^^441^465^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^452^453^454^455^456^441^465^[ADD] if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE ) {^453^454^^^^441^465^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new IllegalArgumentException ( "The fraction must not be null" )  ;^455^^^^^453^456^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator =  -null;^457^^^^^441^465^[REPLACE] numerator = -numerator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^458^^^^^441^465^[ADD] denominator = -denominator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new IllegalArgumentException ( "The fraction must not be null" )  ;^455^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^453^454^^^^441^465^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^455^^^^^453^456^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator =  -uvp;^457^^^^^441^465^[REPLACE] numerator = -numerator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator =  -tmodd1;^458^^^^^441^465^[REPLACE] denominator = -denominator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^461^^^^^441^465^[ADD] int gcd = MathUtils.gcd ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^462^^^^^441^465^[ADD] numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^return new Fraction ( numerator, denominator ) ;^463^464^^^^441^465^[ADD] denominator /= gcd; return new Fraction ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return  new Fraction ( denominator, numerator )  ;^464^^^^^441^465^[REPLACE] return new Fraction ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
