[REPLACE]^private static final long serialVersionUID  = null ;^51^^^^^^^[REPLACE] private static final long serialVersionUID = -1011428905656140431L;^ [CLASS] BigMatrixImpl  
[REPLACE]^private BigDecimal data[][]  = null ;^54^^^^^^^[REPLACE] private BigDecimal data[][] = null;^ [CLASS] BigMatrixImpl  
[REPLACE]^private BigDecimal lu[][]  = null ;^59^^^^^^^[REPLACE] private BigDecimal lu[][] = null;^ [CLASS] BigMatrixImpl  
[REPLACE]^private int[] permutation  = null ;^62^^^^^^^[REPLACE] private int[] permutation = null;^ [CLASS] BigMatrixImpl  
[REPLACE]^private  long  parity = 1;^65^^^^^^^[REPLACE] private int parity = 1;^ [CLASS] BigMatrixImpl  
[REPLACE]^private int roundingMode ;^68^^^^^^^[REPLACE] private int roundingMode = BigDecimal.ROUND_HALF_UP;^ [CLASS] BigMatrixImpl  
[REPLACE]^private int scale  = null ;^71^^^^^^^[REPLACE] private int scale = 64;^ [CLASS] BigMatrixImpl  
[REPLACE]^protected static BigDecimal TOO_SMALL ;^74^^^^^^^[REPLACE] protected static BigDecimal TOO_SMALL = new BigDecimal ( 10E-12 ) ;^ [CLASS] BigMatrixImpl  
[REPLACE]^static final BigDecimal ZERO ;^77^^^^^^^[REPLACE] static final BigDecimal ZERO = new BigDecimal ( 0 ) ;^ [CLASS] BigMatrixImpl  
[REPLACE]^static final BigDecimal ONE  = null ;^79^^^^^^^[REPLACE] static final BigDecimal ONE = new BigDecimal ( 1 ) ;^ [CLASS] BigMatrixImpl  
[REPLACE]^if  (  columnDimension <=0 )  {^96^^^^^95^102^[REPLACE] if  ( rowDimension <=0 || columnDimension <=0 )  {^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[REMOVE]^if  (  ( d[row].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^96^^^^^95^102^[REMOVE] ^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^97^98^^^^95^102^[REPLACE] throw new IllegalArgumentException ( "row and column dimensions must be positive" ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[REPLACE]^data =  new BigDecimal[scale][columnDimension];^100^^^^^95^102^[REPLACE] data = new BigDecimal[rowDimension][columnDimension];^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[REPLACE]^lu = false;^101^^^^^95^102^[REPLACE] lu = null;^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[ADD]^^101^^^^^95^102^[ADD] lu = null;^[METHOD] <init> [TYPE] BigMatrixImpl(int,int) [PARAMETER] int rowDimension int columnDimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] data  lu 
[REPLACE]^this.copyIn ( data ) ;^116^^^^^115^118^[REPLACE] this.copyIn ( d ) ;^[METHOD] <init> [TYPE] BigDecimal[][]) [PARAMETER] BigDecimal[][] d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^lu = true;^117^^^^^115^118^[REPLACE] lu = null;^[METHOD] <init> [TYPE] BigDecimal[][]) [PARAMETER] BigDecimal[][] d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  parity  roundingMode  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^int nRows = v.length;^132^^^^^131^150^[REPLACE] int nRows = d.length;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^132^^^^^131^150^[ADD] int nRows = d.length;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( nRows  || row )  {^133^^^^^131^150^[REPLACE] if  ( nRows == 0 )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^133^134^135^136^^131^150^[ADD] if  ( nRows == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return ;^134^135^^^^131^150^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^int nCols = d[0 ].length;^137^^^^^131^150^[REPLACE] int nCols = d[0].length;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( nCols  ||  0L )  {^138^^^^^131^150^[REPLACE] if  ( nCols == 0 )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^139^140^^^^131^150^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^139^140^^^^131^150^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return ;^139^140^^^^131^150^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( d[row].length *  2 != nCols )  {^143^^^^^131^150^[REPLACE] if  ( d[row].length != nCols )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REMOVE]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^143^^^^^131^150^[REMOVE] ^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^144^145^^^^131^150^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 1; row  > rowDimension; row++ )  {^142^^^^^131^150^[REPLACE] for  ( int row = 1; row < nRows; row++ )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^142^143^144^145^146^131^150^[ADD] for  ( int row = 1; row < nRows; row++ )  { if  ( d[row].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( d[row].length + 3 != nCols )  {^143^^^^^131^150^[REPLACE] if  ( d[row].length != nCols )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^143^144^145^146^^131^150^[ADD] if  ( d[row].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return ;^144^145^^^^131^150^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 4; row < nRows; row++ )  {^142^^^^^131^150^[REPLACE] for  ( int row = 1; row < nRows; row++ )  {^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^this.solve ( d ) ;^148^^^^^131^150^[REPLACE] this.copyIn ( d ) ;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^lu = this;^149^^^^^131^150^[REPLACE] lu = null;^[METHOD] <init> [TYPE] BigMatrixImpl(double[][]) [PARAMETER] double[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^int nRows = v.length;^162^^^^^161^180^[REPLACE] int nRows = d.length;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^162^^^^^161^180^[ADD] int nRows = d.length;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( nRows  !=  4 )  {^163^^^^^161^180^[REPLACE] if  ( nRows == 0 )  {^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return ;^164^165^^^^161^180^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^164^165^^^^161^180^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^int nCols = d[0 ].length;^167^^^^^161^180^[REPLACE] int nCols = d[0].length;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( nCols  ||  0 )  {^168^^^^^161^180^[REPLACE] if  ( nCols == 0 )  {^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^168^169^170^171^^161^180^[ADD] if  ( nCols == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^169^170^^^^161^180^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^169^170^^^^161^180^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  ( d[row].length (  )  != nCols )  {^173^^^^^161^180^[REPLACE] if  ( d[row].length != nCols )  {^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^174^175^^^^161^180^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^174^175^^^^161^180^[ADD] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 1; row  >  nRows; row++ )  {^172^^^^^161^180^[REPLACE] for  ( int row = 1; row < nRows; row++ )  {^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^172^173^174^175^176^161^180^[ADD] for  ( int row = 1; row < nRows; row++ )  { if  ( d[row].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return ;^174^175^^^^161^180^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 1 * 1; row < nRows; row++ )  {^172^^^^^161^180^[REPLACE] for  ( int row = 1; row < nRows; row++ )  {^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^this.BigMatrixImpl ( d ) ;^178^^^^^161^180^[REPLACE] this.copyIn ( d ) ;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^lu = this;^179^^^^^161^180^[REPLACE] lu = null;^[METHOD] <init> [TYPE] String[][]) [PARAMETER] String[][] d [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^int nRows = d.length;^192^^^^^191^197^[REPLACE] int nRows = v.length;^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[ADD]^^192^193^^^^191^197^[ADD] int nRows = v.length; data = new BigDecimal[nRows][1];^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^data = new BigDecimal[nRows][1 % 3];^193^^^^^191^197^[REPLACE] data = new BigDecimal[nRows][1];^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 3; row  >  nRows; row++ )  {^194^^^^^191^197^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^data[row][1] = v[row];^195^^^^^191^197^[REPLACE] data[row][0] = v[row];^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^data[row][0 + 0] = v[row];^195^^^^^191^197^[REPLACE] data[row][0] = v[row];^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^for  ( int row = 0L; row < nRows; row++ )  {^194^^^^^191^197^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] <init> [TYPE] BigDecimal[]) [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  [TYPE]  BigDecimal[] v  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^return new BigMatrixImpl ( this.getData (  )  ) ;^205^^^^^204^206^[REPLACE] return new BigMatrixImpl ( this.copyOut (  )  ) ;^[METHOD] copy [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu 
[REPLACE]^if  (  this.getRowDimension (  )  != m.getRowDimension (  )  )  {^216^217^^^^215^229^[REPLACE] if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^218^^^^^215^229^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^218^^^^^215^229^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int rowCount = this .getColumnDimension (  )  ;^220^^^^^215^229^[REPLACE] int rowCount = this.getRowDimension (  ) ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int columnCount = this .getRowDimension (  )  ;^221^^^^^215^229^[REPLACE] int columnCount = this.getColumnDimension (  ) ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^222^^^^^215^229^[REPLACE] BigDecimal[][] outData = new BigDecimal[rowCount][columnCount];^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0; row  <=  rowCount; row++ )  {^223^^^^^215^229^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( introwCount = 0; col  !=  columnCount; col++ )  {^224^^^^^215^229^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ; ;^225^^^^^215^229^[REPLACE] outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 4; col < columnCount; col++ )  {^224^^^^^215^229^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 1; col  >= rowCount; col++ )  {^224^^^^^215^229^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^224^225^226^^^215^229^[ADD] for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ; }^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 4; row < rowCount; row++ )  {^223^^^^^215^229^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^228^^^^^215^229^[REPLACE] return new BigMatrixImpl ( outData ) ;^[METHOD] add [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this .getColumnDimension (  )   != m^239^240^^^^238^252^[REPLACE] if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^239^240^241^242^^238^252^[ADD] if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return ;^241^^^^^238^252^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^241^^^^^238^252^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int rowCount = this.getColumnDimension (  ) ;^243^^^^^238^252^[REPLACE] int rowCount = this.getRowDimension (  ) ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int columnCount = this .getRowDimension (  )  ;^244^^^^^238^252^[REPLACE] int columnCount = this.getColumnDimension (  ) ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^245^^^^^238^252^[REPLACE] BigDecimal[][] outData = new BigDecimal[rowCount][columnCount];^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 2; row  >  rowCount; row++ )  {^246^^^^^238^252^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0; col  >=  columnCount; col++ )  {^247^^^^^238^252^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ; ;^248^^^^^238^252^[REPLACE] outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^248^^^^^238^252^[ADD] outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 3; col < columnCount; col++ )  {^247^^^^^238^252^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 3; col  !=  columnCount; col++ )  {^247^^^^^238^252^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^247^248^249^^^238^252^[ADD] for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ; }^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 1; row < rowCount; row++ )  {^246^^^^^238^252^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^246^247^248^249^^238^252^[ADD] for  ( int row = 0; row < rowCount; row++ )  { for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ; }^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 2; col < columnCount; col++ )  {^247^^^^^238^252^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^251^^^^^238^252^[REPLACE] return new BigMatrixImpl ( outData ) ;^[METHOD] subtract [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int rowCount = this .getColumnDimension (  )  ;^261^^^^^260^270^[REPLACE] int rowCount = this.getRowDimension (  ) ;^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int columnCount = this.getRowDimension (  ) ;^262^^^^^260^270^[REPLACE] int columnCount = this.getColumnDimension (  ) ;^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^263^^^^^260^270^[REPLACE] BigDecimal[][] outData = new BigDecimal[rowCount][columnCount];^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int roundingMode = 0; row  !=  roundingMode; row++ )  {^264^^^^^260^270^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 4; col  <=  columnCount; col++ )  {^265^^^^^260^270^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^265^266^267^^^260^270^[ADD] for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].add ( d ) ; }^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^outData[row][col] = data[row][col].multiply ( d ) ; ;^266^^^^^260^270^[REPLACE] outData[row][col] = data[row][col].add ( d ) ;^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0 - 4; col < columnCount; col++ )  {^265^^^^^260^270^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( intscale = 0; col  >  columnCount; col++ )  {^265^^^^^260^270^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 3; row < rowCount; row++ )  {^264^^^^^260^270^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 2; col < columnCount; col++ )  {^265^^^^^260^270^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^269^^^^^260^270^[REPLACE] return new BigMatrixImpl ( outData ) ;^[METHOD] scalarAdd [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int rowCount = this .getColumnDimension (  )  ;^278^^^^^277^287^[REPLACE] int rowCount = this.getRowDimension (  ) ;^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int columnCount = this .getRowDimension (  )  ;^279^^^^^277^287^[REPLACE] int columnCount = this.getColumnDimension (  ) ;^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^280^^^^^277^287^[REPLACE] BigDecimal[][] outData = new BigDecimal[rowCount][columnCount];^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^280^^^^^277^287^[ADD] BigDecimal[][] outData = new BigDecimal[rowCount][columnCount];^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 4; row  ==  rowCount; row++ )  {^281^^^^^277^287^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^281^282^283^284^^277^287^[ADD] for  ( int row = 0; row < rowCount; row++ )  { for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].multiply ( d ) ; }^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( intscale = 0; col  >=  columnCount; col++ )  {^282^^^^^277^287^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^282^283^284^^^277^287^[ADD] for  ( int col = 0; col < columnCount; col++ )  { outData[row][col] = data[row][col].multiply ( d ) ; }^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^outData[row][col] = data[row][col].add ( d ) ; ;^283^^^^^277^287^[REPLACE] outData[row][col] = data[row][col].multiply ( d ) ;^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0 * 4; col < columnCount; col++ )  {^282^^^^^277^287^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0; col  !=  columnCount; col++ )  {^282^^^^^277^287^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^283^^^^^277^287^[ADD] outData[row][col] = data[row][col].multiply ( d ) ;^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0 + 0; row < rowCount; row++ )  {^281^^^^^277^287^[REPLACE] for  ( int row = 0; row < rowCount; row++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 1; col < columnCount; col++ )  {^282^^^^^277^287^[REPLACE] for  ( int col = 0; col < columnCount; col++ )  {^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return new BigMatrixImpl ( lu ) ;^286^^^^^277^287^[REPLACE] return new BigMatrixImpl ( outData ) ;^[METHOD] scalarMultiply [TYPE] BigMatrix [PARAMETER] BigDecimal d [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^if  ( this.getColumnDimension (  )   ==  m.getRowDimension (  )  )  {^297^^^^^296^315^[REPLACE] if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^298^^^^^296^315^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^298^^^^^296^315^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int nRows = this .getColumnDimension (  )  ;^300^^^^^296^315^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int nCols = m .getRowDimension (  )  ;^301^^^^^296^315^[REPLACE] int nCols = m.getColumnDimension (  ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int nSum = this.getRowDimension (  ) ;^302^^^^^296^315^[REPLACE] int nSum = this.getColumnDimension (  ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigDecimal[] out = new BigDecimal[v.length];^303^^^^^296^315^[REPLACE] BigDecimal[][] outData = new BigDecimal[nRows][nCols];^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigDecimal tmp = ZERO;^304^^^^^296^315^[REPLACE] BigDecimal sum = ZERO;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0; row  >=  nRows; row++ )  {^305^^^^^296^315^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int scale = 0; col  <=  nCols; col++ )  {^306^^^^^296^315^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 3; i  >  nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^sum =  TOO_SMALL.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^[REPLACE] sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^309^^^^^296^315^[ADD] sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^sum ;^307^^^^^296^315^[REPLACE] sum = ZERO;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^lu[row][col] = sum; ;^311^^^^^296^315^[REPLACE] outData[row][col] = sum;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^311^^^^^296^315^[ADD] outData[row][col] = sum;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0 - 1; i < nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  (rowDimensionnt i = 0; i  >  nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^sum  =  sum ;^307^^^^^296^315^[REPLACE] sum = ZERO;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0 + 3; col < nCols; col++ )  {^306^^^^^296^315^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0L; i < nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0; col  ==  nCols; col++ )  {^306^^^^^296^315^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  (rowDimensionnt i = 0; i  ==  nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0 / 2; i < nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0; i  >  rowDimension; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^307^^^^^296^315^[ADD] sum = ZERO;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0 * 3; row < nRows; row++ )  {^305^^^^^296^315^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 1; col < nCols; col++ )  {^306^^^^^296^315^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0 << 4; i < nSum; i++ )  {^308^^^^^296^315^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^314^^^^^296^315^[REPLACE] return new BigMatrixImpl ( outData ) ;^[METHOD] multiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return m.multiply ( null ) ;^325^^^^^324^326^[REPLACE] return m.multiply ( this ) ;^[METHOD] preMultiply [TYPE] BigMatrix [PARAMETER] BigMatrix m [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return data;^336^^^^^335^337^[REPLACE] return copyOut (  ) ;^[METHOD] getData [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int nRows = this.getRowDimension (  ) ;^348^^^^^347^357^[REPLACE] int nRows = getRowDimension (  ) ;^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^int ncols = this.getColumnDimension (  ) ;^349^^^^^347^357^[REPLACE] int nCols = getColumnDimension (  ) ;^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][1];^350^^^^^347^357^[REPLACE] double d[][] = new double[nRows][nCols];^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 0; i  !=  nRows; i++ )  {^351^^^^^347^357^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int j=0; j >= nCols;j++ )  {^352^^^^^347^357^[REPLACE] for  ( int j=0; j<nCols;j++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^out[i] = data[row][i].doubleValue (  ) ; ;^353^^^^^347^357^[REPLACE] d[i][j] = data[i][j].doubleValue (  ) ;^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^353^^^^^347^357^[ADD] d[i][j] = data[i][j].doubleValue (  ) ;^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int j=0 - 1; j<nCols;j++ )  {^352^^^^^347^357^[REPLACE] for  ( int j=0; j<nCols;j++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int j=0; j <= nCols;j++ )  {^352^^^^^347^357^[REPLACE] for  ( int j=0; j<nCols;j++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int i = 3; i < nRows; i++ )  {^351^^^^^347^357^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int j=1; j<nCols;j++ )  {^352^^^^^347^357^[REPLACE] for  ( int j=0; j<nCols;j++ )  {^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return det;^356^^^^^347^357^[REPLACE] return d;^[METHOD] getDataAsDoubleArray [TYPE] double[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] d  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return det;^367^^^^^366^368^[REPLACE] return data;^[METHOD] getDataRef [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return data;^377^^^^^376^378^[REPLACE] return roundingMode;^[METHOD] getRoundingMode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^this.roundingMode =  scale;^386^^^^^385^387^[REPLACE] this.roundingMode = roundingMode;^[METHOD] setRoundingMode [TYPE] void [PARAMETER] int roundingMode [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return data;^396^^^^^395^397^[REPLACE] return scale;^[METHOD] getScale [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^this.scale =  rowDimension;^405^^^^^404^406^[REPLACE] this.scale = scale;^[METHOD] setScale [TYPE] void [PARAMETER] int scale [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^405^^^^^404^406^[ADD] this.scale = scale;^[METHOD] setScale [TYPE] void [PARAMETER] int scale [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][1];^415^^^^^414^424^[REPLACE] BigDecimal maxColSum = ZERO;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^415^^^^^414^424^[ADD] BigDecimal maxColSum = ZERO;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 0; col  >=  this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^[REPLACE] for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0; row  == rowDimension (  ) ; row++ )  {^418^^^^^414^424^[REPLACE] for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ; ;^419^^^^^414^424^[REPLACE] sum = sum.add ( data[row][col].abs (  )  ) ;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^maxColSum =  sum.max ( sum ) ;^421^^^^^414^424^[REPLACE] maxColSum = maxColSum.max ( sum ) ;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^421^^^^^414^424^[ADD] maxColSum = maxColSum.max ( sum ) ;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^BigDecimal tmp = ZERO;^417^^^^^414^424^[REPLACE] BigDecimal sum = ZERO;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^417^^^^^414^424^[ADD] BigDecimal sum = ZERO;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0 + 1; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^[REPLACE] for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0; row  != rowDimension (  ) ; row++ )  {^418^^^^^414^424^[REPLACE] for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^418^419^420^^^414^424^[ADD] for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  { sum = sum.add ( data[row][col].abs (  )  ) ; }^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^419^^^^^414^424^[ADD] sum = sum.add ( data[row][col].abs (  )  ) ;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int col = 3; col < this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^[REPLACE] for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[ADD]^^416^417^418^419^420^414^424^[ADD] for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  { BigDecimal sum = ZERO; for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  { sum = sum.add ( data[row][col].abs (  )  ) ; }^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^for  ( int row = 0 + 2; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^[REPLACE] for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^return sum;^423^^^^^414^424^[REPLACE] return maxColSum;^[METHOD] getNorm [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData 
[REPLACE]^if  (  startRow > endRow || endRow > data.length %  2 || startColumn < 0  || startColumn > endColumn || endColumn > data[0 ].length %  2  )  {^440^441^442^^^438^455^[REPLACE] if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REMOVE]^if  ( ! ( isValidCoordinate ( row, column )  )  )  {     throw new MatrixIndexException ( "matrix entry does not exist" ) ; }^440^^^^^438^455^[REMOVE] ^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^return ;^443^444^^^^438^455^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; ;^443^444^^^^438^455^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^443^444^^^^438^455^[ADD] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( roundingMode+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^[REPLACE] BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^446^447^^^^438^455^[ADD] BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^BigDecimal[][] subMatrixData = subMatrix.getData (  ) ;^448^^^^^438^455^[REPLACE] BigDecimal[][] subMatrixData = subMatrix.getDataRef (  ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int i = startRow; i  <  endRow; i++ )  {^449^^^^^438^455^[REPLACE] for  ( int i = startRow; i <= endRow; i++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = startColumn; j  !=  endColumn; j++ )  {^450^^^^^438^455^[REPLACE] for  ( int j = startColumn; j <= endColumn; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i  !=  startRow][j  !=  startColumn] = data[i][j];^451^^^^^438^455^[REPLACE] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^451^^^^^438^455^[ADD] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i  ^  startRow][j  ^  startColumn] = data[i][j];^451^^^^^438^455^[REPLACE] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = rowCount; j <= endColumn; j++ )  {^450^^^^^438^455^[REPLACE] for  ( int j = startColumn; j <= endColumn; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^450^451^452^^^438^455^[ADD] for  ( int j = startColumn; j <= endColumn; j++ )  { subMatrixData[i - startRow][j - startColumn] = data[i][j]; }^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i  |  startRow][j  |  startColumn] = data[i][j];^451^^^^^438^455^[REPLACE] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i -rowDimension][j - startColumn] = data[i][j];^451^^^^^438^455^[REPLACE] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = 0; j < data[0].length; j++ )  { if  ( j > 0 )^449^^^^^438^455^[REPLACE] for  ( int i = startRow; i <= endRow; i++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = row; j <= endColumn; j++ )  {^450^^^^^438^455^[REPLACE] for  ( int j = startColumn; j <= endColumn; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^return data;^454^^^^^438^455^[REPLACE] return subMatrix;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^if  ( permutation.length %  2 * selectedColumns.length %  2 == 0  )  {^470^^^^^468^488^[REPLACE] if  ( selectedRows.length * selectedColumns.length == 0 )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^return ;^471^472^^^^468^488^[REPLACE] throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( permutation.length, selectedColumns.length ) ;^474^475^^^^468^488^[REPLACE] BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^BigDecimal[][] subMatrixData = subMatrix.getData (  ) ;^476^^^^^468^488^[REPLACE] BigDecimal[][] subMatrixData = subMatrix.getDataRef (  ) ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int i = 0; i < selectedRows.length %  2; i++ )  {^478^^^^^468^488^[REPLACE] for  ( int i = 0; i < selectedRows.length; i++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^478^479^480^481^^468^488^[ADD] for  ( int i = 0; i < selectedRows.length; i++ )  { for  ( int j = 0; j < selectedColumns.length; j++ )  { subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]]; }^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( rowDimensionnt j = 0; j < selectedColumns.length *  0.5 ; j++ )  {^479^^^^^468^488^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i][j] ;^480^^^^^468^488^[REPLACE] subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^subMatrixData[i][j]  =  subMatrixData[i][j] ;^480^^^^^468^488^[REPLACE] subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = 0 ; j < selectedColumns.length; j++ )  {^479^^^^^468^488^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = 0; j < selectedColumns.length /  0.5 ; j++ )  {^479^^^^^468^488^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^480^^^^^468^488^[ADD] subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^477^478^479^480^481^468^488^[ADD] try  { for  ( int i = 0; i < selectedRows.length; i++ )  { for  ( int j = 0; j < selectedColumns.length; j++ )  { subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]]; }^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int i = 0; i < selectedRows.length + 1; i++ )  {^478^^^^^468^488^[REPLACE] for  ( int i = 0; i < selectedRows.length; i++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = 0 ; j < selectedColumns.length /  2; j++ )  {^479^^^^^468^488^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int j = 0; j < selectedColumns.length (  ) ; j++ )  {^479^^^^^468^488^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^for  ( int i = 0 ; i < selectedRows.length; i++ )  {^478^^^^^468^488^[REPLACE] for  ( int i = 0; i < selectedRows.length; i++ )  {^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[ADD]^^479^480^481^^^468^488^[ADD] for  ( int j = 0; j < selectedColumns.length; j++ )  { subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]]; }^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^485^^^^^468^488^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^return data;^487^^^^^468^488^[REPLACE] return subMatrix;^[METHOD] getSubMatrix [TYPE] BigMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl subMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrixData 
[REPLACE]^if  (  ( row < 0 )  &&  ( column < 0 )  ) {^519^^^^^518^553^[REPLACE] if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^520^521^^^^518^553^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = subMatrixData.length;^523^^^^^518^553^[REPLACE] int nRows = subMatrix.length;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( nRows  ||  2 )  {^524^^^^^518^553^[REPLACE] if  ( nRows == 0 )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^525^526^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^525^526^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^525^526^^^^518^553^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^int nCols = subMatrixData[0 ].length;^528^^^^^518^553^[REPLACE] int nCols = subMatrix[0].length;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( nCols  && startColumn )  {^529^^^^^518^553^[REPLACE] if  ( nCols == 0 )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^530^531^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^530^531^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( subMatrix[r].length /  2 != nCols )  {^534^^^^^518^553^[REPLACE] if  ( subMatrix[r].length != nCols )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^535^536^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int r = 1; r  ==  nRows; r++ )  {^533^^^^^518^553^[REPLACE] for  ( int r = 1; r < nRows; r++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^533^534^535^536^537^518^553^[ADD] for  ( int r = 1; r < nRows; r++ )  { if  ( subMatrix[r].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( subMatrix[r].length %  2 != nCols )  {^534^^^^^518^553^[REPLACE] if  ( subMatrix[r].length != nCols )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^534^535^536^537^^518^553^[ADD] if  ( subMatrix[r].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^535^536^^^^518^553^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^535^536^^^^518^553^[ADD] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int r = 2; r < nRows; r++ )  {^533^^^^^518^553^[REPLACE] for  ( int r = 1; r < nRows; r++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  (subMatrixData != this )  {^539^^^^^518^553^[REPLACE] if  ( data == null )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  ( row > 0 ) && ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^518^553^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^540^541^^^^518^553^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^540^541^542^543^544^518^553^[ADD] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new BigDecimal[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^data = new BigDecimal[nRows][1]; ;^542^^^^^518^553^[REPLACE] data = new BigDecimal[nRows][nCols];^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^542^^^^^518^553^[ADD] data = new BigDecimal[nRows][nCols];^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^( "matrix must be initialized to perfom this method" ) ;data = new BigDecimal[nRows][nCols];System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^540^541^542^543^544^518^553^[ADD] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new BigDecimal[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ;^540^541^^^^518^553^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^542^543^^^^518^553^[ADD] data = new BigDecimal[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  && ( nCols + startColumn > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^518^553^[REPLACE] if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; ;^547^548^^^^518^553^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  > rowDimension; i++ )  {^549^^^^^518^553^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^System.arraycopy ( subMatrix[i], 0 - 2, data[row  >  i], column, nCols ) ;^550^^^^^518^553^[REPLACE] System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < nRows; i++ )  {^549^^^^^518^553^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^lu = this;^552^^^^^518^553^[REPLACE] lu = null;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[ADD]^^552^^^^^518^553^[ADD] lu = null;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] BigDecimal[][] subMatrix int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate (  row, 0 * 0 )  )  {^564^^^^^563^571^[REPLACE] if  (  !isValidCoordinate (  row, 0 )  )  {^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^565^^^^^563^571^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int ncols = this.getRowDimension (  ) ;^567^^^^^563^571^[REPLACE] int ncols = this.getColumnDimension (  ) ;^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[0][ncols];^568^^^^^563^571^[REPLACE] BigDecimal[][] out = new BigDecimal[1][ncols];^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^System.arraycopy ( data[row], 1, out[1], 1, ncols ) ;^569^^^^^563^571^[REPLACE] System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^570^^^^^563^571^[REPLACE] return new BigMatrixImpl ( out ) ;^[METHOD] getRowMatrix [TYPE] BigMatrix [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate (  0L, startColumn )  )  {^582^^^^^581^591^[REPLACE] if  (  !isValidCoordinate (  0, column )  )  {^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^583^^^^^581^591^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^583^^^^^581^591^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^583^^^^^581^591^[ADD] throw new MatrixIndexException  (" ")  ;^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getColumnDimension (  ) ;^585^^^^^581^591^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][3];^586^^^^^581^591^[REPLACE] BigDecimal[][] out = new BigDecimal[nRows][1];^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( intstartRow = 0; row  !=  nRows; row++ )  {^587^^^^^581^591^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[row][3] = data[row][column];^588^^^^^581^591^[REPLACE] out[row][0] = data[row][column];^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[row][0 / 3] = data[row][column];^588^^^^^581^591^[REPLACE] out[row][0] = data[row][column];^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^588^^^^^581^591^[ADD] out[row][0] = data[row][column];^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0 - 2; row < nRows; row++ )  {^587^^^^^581^591^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^587^588^589^^^581^591^[ADD] for  ( int row = 0; row < nRows; row++ )  { out[row][0] = data[row][column]; }^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^590^^^^^581^591^[REPLACE] return new BigMatrixImpl ( out ) ;^[METHOD] getColumnMatrix [TYPE] BigMatrix [PARAMETER] int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate (  row, 0 << 2  )   )  {^604^^^^^603^611^[REPLACE] if  (  !isValidCoordinate (  row, 0  )   )  {^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^605^^^^^603^611^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int ncols = this.getRowDimension (  ) ;^607^^^^^603^611^[REPLACE] int ncols = this.getColumnDimension (  ) ;^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^607^^^^^603^611^[ADD] int ncols = this.getColumnDimension (  ) ;^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[] out = new BigDecimal[nCols];^608^^^^^603^611^[REPLACE] BigDecimal[] out = new BigDecimal[ncols];^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^System.arraycopy ( data[row], 0 >> 2, out, 0 >> 2, ncols ) ;^609^^^^^603^611^[REPLACE] System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^610^^^^^603^611^[REPLACE] return out;^[METHOD] getRow [TYPE] BigDecimal[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate (  row, 0 - 0  )   )  {^625^^^^^624^634^[REPLACE] if  (  !isValidCoordinate (  row, 0  )   )  {^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^626^^^^^624^634^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^626^^^^^624^634^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^626^^^^^624^634^[ADD] throw new MatrixIndexException  (" ")  ;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int ncols = this.getRowDimension (  ) ;^628^^^^^624^634^[REPLACE] int ncols = this.getColumnDimension (  ) ;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^double[] out = new double[nrows];^629^^^^^624^634^[REPLACE] double[] out = new double[ncols];^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^629^^^^^624^634^[ADD] double[] out = new double[ncols];^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0;i > ncols;i++ )  {^630^^^^^624^634^[REPLACE] for  ( int i=0;i<ncols;i++ )  {^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[i] = data[i][col].doubleValue (  ) ; ;^631^^^^^624^634^[REPLACE] out[i] = data[row][i].doubleValue (  ) ;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=4;i<ncols;i++ )  {^630^^^^^624^634^[REPLACE] for  ( int i=0;i<ncols;i++ )  {^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^630^631^632^^^624^634^[ADD] for  ( int i=0;i<ncols;i++ )  { out[i] = data[row][i].doubleValue (  ) ; }^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^633^^^^^624^634^[REPLACE] return out;^[METHOD] getRowAsDoubleArray [TYPE] double[] [PARAMETER] int row [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate ( 2, rowDimension )   )  {^647^^^^^646^656^[REPLACE] if  (  !isValidCoordinate ( 0, col )   )  {^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^648^^^^^646^656^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getColumnDimension (  ) ;^650^^^^^646^656^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][1];^651^^^^^646^656^[REPLACE] BigDecimal[] out = new BigDecimal[nRows];^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 1; i  !=  nRows; i++ )  {^652^^^^^646^656^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^652^653^654^^^646^656^[ADD] for  ( int i = 0; i < nRows; i++ )  { out[i] = data[i][col]; }^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[i] ;^653^^^^^646^656^[REPLACE] out[i] = data[i][col];^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[i]  =  out[i] ;^653^^^^^646^656^[REPLACE] out[i] = data[i][col];^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 2; i < nRows; i++ )  {^652^^^^^646^656^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^655^^^^^646^656^[REPLACE] return out;^[METHOD] getColumn [TYPE] BigDecimal[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (  !isValidCoordinate (  0 % 4, col  )   )  {^670^^^^^669^679^[REPLACE] if  (  !isValidCoordinate (  0, col  )   )  {^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^671^^^^^669^679^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nrows = this.getColumnDimension (  ) ;^673^^^^^669^679^[REPLACE] int nrows = this.getRowDimension (  ) ;^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^double[] out = new double[ncols];^674^^^^^669^679^[REPLACE] double[] out = new double[nrows];^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0 + 3;i > nrows;i++ )  {^675^^^^^669^679^[REPLACE] for  ( int i=0;i<nrows;i++ )  {^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^675^676^677^^^669^679^[ADD] for  ( int i=0;i<nrows;i++ )  { out[i] = data[i][col].doubleValue (  ) ; }^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[i] = data[row][i].doubleValue (  ) ; ;^676^^^^^669^679^[REPLACE] out[i] = data[i][col].doubleValue (  ) ;^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=1;i<nrows;i++ )  {^675^^^^^669^679^[REPLACE] for  ( int i=0;i<nrows;i++ )  {^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^678^^^^^669^679^[REPLACE] return out;^[METHOD] getColumnAsDoubleArray [TYPE] double[] [PARAMETER] int col [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( !isValidCoordinate ( row,startColumn )  )  {^698^^^^^696^702^[REPLACE] if  ( !isValidCoordinate ( row,column )  )  {^[METHOD] getEntry [TYPE] BigDecimal [PARAMETER] int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^699^^^^^696^702^[REPLACE] throw new MatrixIndexException  (" ")  ;^[METHOD] getEntry [TYPE] BigDecimal [PARAMETER] int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^699^^^^^696^702^[ADD] throw new MatrixIndexException  (" ")  ;^[METHOD] getEntry [TYPE] BigDecimal [PARAMETER] int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return data;^701^^^^^696^702^[REPLACE] return data[row][column];^[METHOD] getEntry [TYPE] BigDecimal [PARAMETER] int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return getEntry ( row,startColumn ) .doubleValue (  ) ;^721^^^^^720^722^[REPLACE] return getEntry ( row,column ) .doubleValue (  ) ;^[METHOD] getEntryAsDouble [TYPE] double [PARAMETER] int row int column [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this .getColumnDimension (  )  ;^730^^^^^729^740^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nCols = this.getRowDimension (  ) ;^731^^^^^729^740^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigMatrixImpl out = new BigMatrixImpl ( rowCount, nRows ) ;^732^^^^^729^740^[REPLACE] BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] outData = out.getData (  ) ;^733^^^^^729^740^[REPLACE] BigDecimal[][] outData = out.getDataRef (  ) ;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^733^^^^^729^740^[ADD] BigDecimal[][] outData = out.getDataRef (  ) ;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 4; row  !=  nRows; row++ )  {^734^^^^^729^740^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( intstartRow = 1; col  !=  nCols; col++ )  {^735^^^^^729^740^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^outData[col][row] ;^736^^^^^729^740^[REPLACE] outData[col][row] = data[row][col];^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^736^^^^^729^740^[ADD] outData[col][row] = data[row][col];^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 3; col < nCols; col++ )  {^735^^^^^729^740^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0; col  != startRow; col++ )  {^735^^^^^729^740^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^735^736^737^^^729^740^[ADD] for  ( int col = 0; col < nCols; col++ )  { outData[col][row] = data[row][col]; }^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^outData[col][row]  =  outData[col][row] ;^736^^^^^729^740^[REPLACE] outData[col][row] = data[row][col];^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^outData[col][row]  = null ;^736^^^^^729^740^[REPLACE] outData[col][row] = data[row][col];^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 2; row < nRows; row++ )  {^734^^^^^729^740^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0 % 3; col < nCols; col++ )  {^735^^^^^729^740^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^739^^^^^729^740^[REPLACE] return out;^[METHOD] transpose [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrixImpl out  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return solve ( MatrixUtils.createBigIdentityMatrix ( this.getColumnDimension (  )  )  ) ;^749^750^^^^748^751^[REPLACE] return solve ( MatrixUtils.createBigIdentityMatrix ( this.getRowDimension (  )  )  ) ;^[METHOD] inverse [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( isSquare (  )  )  {^760^^^^^759^772^[REPLACE] if  ( !isSquare (  )  )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^761^^^^^759^772^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^761^^^^^759^772^[ADD] throw new InvalidMatrixException  (" ")  ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( this.isSingular (  )  )  {^763^^^^^759^772^[REPLACE] if  ( isSingular (  )  )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 0; i  !=  this.getRow (  ) ; i++ )  {^767^^^^^759^772^[REPLACE] for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^det =  null.multiply ( lu[i][i] ) ;^768^^^^^759^772^[REPLACE] det = det.multiply ( lu[i][i] ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^768^^^^^759^772^[ADD] det = det.multiply ( lu[i][i] ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^det =  d.multiply ( lu[i][i] ) ;^768^^^^^759^772^[REPLACE] det = det.multiply ( lu[i][i] ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return d;^770^^^^^759^772^[REPLACE] return det;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal det  =  ONE .doubleValue (  )  ;^766^^^^^759^772^[REPLACE] BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^[REPLACE] for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return data;^764^^^^^759^772^[REPLACE] return ZERO;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  >=  this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^[REPLACE] for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal det  =  ONE ;^766^^^^^759^772^[REPLACE] BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^766^^^^^759^772^[ADD] BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 + 2; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^[REPLACE] for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getDeterminant [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return  ( this.getColumn (  )  == this.getRowDimension (  )  ) ;^779^^^^^778^780^[REPLACE] return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[METHOD] isSquare [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  (subMatrixData != null )  {^787^^^^^786^797^[REPLACE] if  ( lu == null )  {^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^787^788^789^790^^786^797^[ADD] if  ( lu == null )  { try { luDecompose (  ) ; return false;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return true;^795^^^^^786^797^[REPLACE] return false;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^luDecompose (  ) ;return false;return true;^788^789^790^791^792^786^797^[ADD] try { luDecompose (  ) ; return false; } catch  ( InvalidMatrixException ex )  { return true;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return true;^790^^^^^786^797^[REPLACE] return false;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return false;^792^^^^^786^797^[REPLACE] return true;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return trace;^792^^^^^786^797^[REPLACE] return true;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^791^792^^^^786^797^[ADD] catch  ( InvalidMatrixException ex )  { return true;^[METHOD] isSingular [TYPE] boolean [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  InvalidMatrixException ex  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return data[0].length;^805^^^^^804^806^[REPLACE] return data.length;^[METHOD] getRowDimension [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return data[0 ].length;^814^^^^^813^815^[REPLACE] return data[0].length;^[METHOD] getColumnDimension [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( isSquare (  )  )  {^826^^^^^825^834^[REPLACE] if  ( !isSquare (  )  )  {^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^827^^^^^825^834^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal trace = data[2][2];^829^^^^^825^834^[REPLACE] BigDecimal trace = data[0][0];^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 1; i  ==  this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^[REPLACE] for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^830^831^832^^^825^834^[ADD] for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  { trace = trace.add ( data[i][i] ) ; }^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^trace =  maxColSum.add ( data[i][i] ) ;^831^^^^^825^834^[REPLACE] trace = trace.add ( data[i][i] ) ;^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^831^^^^^825^834^[ADD] trace = trace.add ( data[i][i] ) ;^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 1 + 0; i < this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^[REPLACE] for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return maxColSum;^833^^^^^825^834^[REPLACE] return trace;^[METHOD] getTrace [TYPE] BigDecimal [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( v.length %  0.5  != this.getColumnDimension (  )  )  {^844^^^^^843^858^[REPLACE] if  ( v.length != this.getColumnDimension (  )  )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^844^845^846^^^843^858^[ADD] if  ( v.length != this.getColumnDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return ;^845^^^^^843^858^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^845^^^^^843^858^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getColumnDimension (  ) ;^847^^^^^843^858^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^847^^^^^843^858^[ADD] int nRows = this.getRowDimension (  ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nCols = this .getRowDimension (  )  ;^848^^^^^843^858^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^BigDecimal[] out = new BigDecimal[v.length];^848^849^^^^843^858^[ADD] int nCols = this.getColumnDimension (  ) ; BigDecimal[] out = new BigDecimal[v.length];^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal bd[] = new BigDecimal[v.length];^849^^^^^843^858^[REPLACE] BigDecimal[] out = new BigDecimal[v.length];^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0; row  !=  nRows; row++ )  {^850^^^^^843^858^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 0; i  ==  nCols; i++ )  {^852^^^^^843^858^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ; ;^853^^^^^843^858^[REPLACE] sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[col] = sum; ;^855^^^^^843^858^[REPLACE] out[row] = sum;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal tmp = ZERO;^851^^^^^843^858^[REPLACE] BigDecimal sum = ZERO;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 / 3; i < nCols; i++ )  {^852^^^^^843^858^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^852^853^854^^^843^858^[ADD] for  ( int i = 0; i < nCols; i++ )  { sum = sum.add ( data[row][i].multiply ( v[i] )  ) ; }^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 0; i  >  nCols; i++ )  {^852^^^^^843^858^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0 - 1; row < nRows; row++ )  {^850^^^^^843^858^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < nCols; i++ )  {^852^^^^^843^858^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^857^^^^^843^858^[REPLACE] return out;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[] out = new BigDecimal[v.length];^868^^^^^867^873^[REPLACE] BigDecimal bd[] = new BigDecimal[v.length];^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0;i<bd.length *  0.5 ;i++ )  {^869^^^^^867^873^[REPLACE] for  ( int i=0;i<bd.length;i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^data[i][j] = new BigDecimal ( in[i][j] ) ; ;^870^^^^^867^873^[REPLACE] bd[i] = new BigDecimal ( v[i] ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0 ;i<bd.length;i++ )  {^869^^^^^867^873^[REPLACE] for  ( int i=0;i<bd.length;i++ )  {^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^869^870^871^^^867^873^[ADD] for  ( int i=0;i<bd.length;i++ )  { bd[i] = new BigDecimal ( v[i] ) ; }^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return data;^872^^^^^867^873^[REPLACE] return operate ( bd ) ;^[METHOD] operate [TYPE] BigDecimal[] [PARAMETER] double[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] v  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this .getColumnDimension (  )  ;^883^^^^^882^897^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^if  ( v.length %  2 != nRows )  {^884^^^^^882^897^[REPLACE] if  ( v.length != nRows )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^885^^^^^882^897^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^885^^^^^882^897^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nCols = this .getRowDimension (  )  ;^887^^^^^882^897^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[] out = new BigDecimal[ncols];^888^^^^^882^897^[REPLACE] BigDecimal[] out = new BigDecimal[nCols];^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( intscale = 0; startRow  <=  nCols; col++ )  {^889^^^^^882^897^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  !=  nRows; i++ )  {^891^^^^^882^897^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ; ;^892^^^^^882^897^[REPLACE] sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^892^^^^^882^897^[ADD] sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^out[row] = sum; ;^894^^^^^882^897^[REPLACE] out[col] = sum;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^BigDecimal tmp = ZERO;^890^^^^^882^897^[REPLACE] BigDecimal sum = ZERO;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 / 3; i < nRows; i++ )  {^891^^^^^882^897^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^891^892^893^^^882^897^[ADD] for  ( int i = 0; i < nRows; i++ )  { sum = sum.add ( data[i][col].multiply ( v[i] )  ) ; }^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 3; i  == rowDimension; i++ )  {^891^^^^^882^897^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0 % 2; col < nCols; col++ )  {^889^^^^^882^897^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[ADD]^^889^890^891^892^893^882^897^[ADD] for  ( int col = 0; col < nCols; col++ )  { BigDecimal sum = ZERO; for  ( int i = 0; i < nRows; i++ )  { sum = sum.add ( data[i][col].multiply ( v[i] )  ) ; }^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 - 3; i < nRows; i++ )  {^891^^^^^882^897^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^return det;^896^^^^^882^897^[REPLACE] return out;^[METHOD] preMultiply [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] v [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] out  v  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  subMatrix  subMatrixData 
[REPLACE]^int nRows = this .getColumnDimension (  )  ;^911^^^^^910^922^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( b.length - 1 != nRows )  {^912^^^^^910^922^[REPLACE] if  ( b.length != nRows )  {^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^912^913^914^^^910^922^[ADD] if  ( b.length != nRows )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return ;^913^^^^^910^922^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^913^^^^^910^922^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^913^^^^^910^922^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^915^^^^^910^922^[REPLACE] BigMatrix bMatrix = new BigMatrixImpl ( b ) ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] solution =  (  ( BigMatrixImpl )   ( solve ( bMatrix )  )  ) .getData (  ) ;^916^^^^^910^922^[REPLACE] BigDecimal[][] solution =  (  ( BigMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][1];^917^^^^^910^922^[REPLACE] BigDecimal[] out = new BigDecimal[nRows];^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 4; row  ==  nRows; row++ )  {^918^^^^^910^922^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^out[row] = solution[row][1];^919^^^^^910^922^[REPLACE] out[row] = solution[row][0];^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^out[row] = solution[row][2];^919^^^^^910^922^[REPLACE] out[row] = solution[row][0];^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 3; row < nRows; row++ )  {^918^^^^^910^922^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^918^919^920^^^910^922^[ADD] for  ( int row = 0; row < nRows; row++ )  { out[row] = solution[row][0]; }^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return det;^921^^^^^910^922^[REPLACE] return out;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] BigDecimal[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix bMatrix  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] b  out  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal bd[] = new BigDecimal[v.length];^936^^^^^935^941^[REPLACE] BigDecimal bd[] = new BigDecimal[b.length];^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0;i<bd.length /  0.5 ;i++ )  {^937^^^^^935^941^[REPLACE] for  ( int i=0;i<bd.length;i++ )  {^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bd[i] =  new BigDecimal ( v[i] )  ; ;^938^^^^^935^941^[REPLACE] bd[i] = new BigDecimal ( b[i] ) ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i=0 ;i<bd.length;i++ )  {^937^^^^^935^941^[REPLACE] for  ( int i=0;i<bd.length;i++ )  {^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^937^938^939^^^935^941^[ADD] for  ( int i=0;i<bd.length;i++ )  { bd[i] = new BigDecimal ( b[i] ) ; }^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return data;^940^^^^^935^941^[REPLACE] return solve ( bd ) ;^[METHOD] solve [TYPE] BigDecimal[] [PARAMETER] double[] b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[] b  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  BigDecimal[] bd  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( b.getRowDimension (  )   ==  this.getRowDimension (  )  )  {^955^^^^^954^1000^[REPLACE] if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return ;^956^^^^^954^1000^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^956^^^^^954^1000^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^956^^^^^954^1000^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( !this.setScale (  )  )  {^958^^^^^954^1000^[REPLACE] if  ( !this.isSquare (  )  )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^959^^^^^954^1000^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^959^^^^^954^1000^[ADD] throw new InvalidMatrixException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( this .isSquare (  )   )  {^961^^^^^954^1000^[REPLACE] if  ( this.isSingular (  )  )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^962^^^^^954^1000^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCol = this.getRowDimension (  ) ;^965^^^^^954^1000^[REPLACE] int nCol = this.getColumnDimension (  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^965^966^^^^954^1000^[ADD] int nCol = this.getColumnDimension (  ) ; int nColB = b.getColumnDimension (  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nColB = b .getRowDimension (  )  ;^966^^^^^954^1000^[REPLACE] int nColB = b.getColumnDimension (  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^966^967^^^^954^1000^[ADD] int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRowB = b .getColumnDimension (  )  ;^967^^^^^954^1000^[REPLACE] int nRowB = b.getRowDimension (  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[] out = new BigDecimal[v.length];^970^^^^^954^1000^[REPLACE] BigDecimal[][] bp = new BigDecimal[nRowB][nColB];^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( introwDimension = 0; row  !=  nRowB; row++ )  {^971^^^^^954^1000^[REPLACE] for  ( int row = 0; row < nRowB; row++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 3; col  <=  nColB; col++ )  {^972^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nColB; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[row][col]  =  bp[row][col] ;^973^^^^^954^1000^[REPLACE] bp[row][col] = b.getEntry ( permutation[row], col ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[row][col]  = null ;^973^^^^^954^1000^[REPLACE] bp[row][col] = b.getEntry ( permutation[row], col ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 4; col < nColB; col++ )  {^972^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nColB; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( introwCount = 0; col  <=  nColB; col++ )  {^972^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nColB; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[row][col] ;^973^^^^^954^1000^[REPLACE] bp[row][col] = b.getEntry ( permutation[row], col ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 4; row < nRowB; row++ )  {^971^^^^^954^1000^[REPLACE] for  ( int row = 0; row < nRowB; row++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 2; col < nColB; col++ )  {^972^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nColB; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0; col  >  nCol; col++ )  {^978^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nCol; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i =rowDimension + 1; i < nCol; i++ )  {^979^^^^^954^1000^[REPLACE] for  ( int i = col + 1; i < nCol; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  >=  nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[i][j]  =  bp[i][j] ;^981^^^^^954^1000^[REPLACE] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[i][j] ;^981^^^^^954^1000^[REPLACE] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 1; j < nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  >  nrows; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^980^981^982^^^954^1000^[ADD] for  ( int j = 0; j < nColB; j++ )  { bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^981^^^^^954^1000^[ADD] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = col +roundingMode; i < nCol; i++ )  {^979^^^^^954^1000^[REPLACE] for  ( int i = col + 1; i < nCol; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^979^980^981^982^^954^1000^[ADD] for  ( int i = col + 1; i < nCol; i++ )  { for  ( int j = 0; j < nColB; j++ )  { bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 / 3; j < nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = col +startRow; i < nCol; i++ )  {^979^^^^^954^1000^[REPLACE] for  ( int i = col + 1; i < nCol; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 + 4; j < nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  <=  nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0 / 4; col < nCol; col++ )  {^978^^^^^954^1000^[REPLACE] for  ( int col = 0; col < nCol; col++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^978^979^980^981^982^954^1000^[ADD] for  ( int col = 0; col < nCol; col++ )  { for  ( int i = col + 1; i < nCol; i++ )  { for  ( int j = 0; j < nColB; j++ )  { bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = rowDimension +startRow; i < nCol; i++ )  {^979^^^^^954^1000^[REPLACE] for  ( int i = col + 1; i < nCol; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 >> 3; j < nColB; j++ )  {^980^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = nCol -row; col >= 0; col-- )  {^987^^^^^954^1000^[REPLACE] for  ( int col = nCol - 1; col >= 0; col-- )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  <=  nColB; j++ )  {^988^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ; ;^989^^^^^954^1000^[REPLACE] bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i  ==  col; i++ )  {^991^^^^^954^1000^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  <=  nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[i][j]  =  bp[i][j] ;^993^^^^^954^1000^[REPLACE] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 << 1; j < nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^992^993^994^^^954^1000^[ADD] for  ( int j = 0; j < nColB; j++ )  { bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  >=  nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^993^^^^^954^1000^[ADD] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[i][j] ;^993^^^^^954^1000^[REPLACE] bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 4; j < nColB; j++ )  {^988^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 2; i < col; i++ )  {^991^^^^^954^1000^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 * 4; j < nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^988^989^990^^^954^1000^[ADD] for  ( int j = 0; j < nColB; j++ )  { bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 0; i  >  scale; i++ )  {^991^^^^^954^1000^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^991^992^993^994^^954^1000^[ADD] for  ( int i = 0; i < col; i++ )  { for  ( int j = 0; j < nColB; j++ )  { bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j  ==  nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 1; j < nColB; j++ )  {^992^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col =nrows - 1; col >= 0; col-- )  {^987^^^^^954^1000^[REPLACE] for  ( int col = nCol - 1; col >= 0; col-- )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^987^988^989^990^^954^1000^[ADD] for  ( int col = nCol - 1; col >= 0; col-- )  { for  ( int j = 0; j < nColB; j++ )  { bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ; }^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 3; j < nColB; j++ )  {^988^^^^^954^1000^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < col; i++ )  {^991^^^^^954^1000^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigMatrixImpl outMat = new BigMatrixImpl ( subMatrixData ) ;^998^^^^^954^1000^[REPLACE] BigMatrixImpl outMat = new BigMatrixImpl ( bp ) ;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return data;^999^^^^^954^1000^[REPLACE] return outMat;^[METHOD] solve [TYPE] BigMatrix [PARAMETER] BigMatrix b [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix b  [TYPE]  BigMatrixImpl outMat  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = this .getColumnDimension (  )  ;^1022^^^^^1020^1094^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCols = this .getRowDimension (  )  ;^1023^^^^^1020^1094^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( nRows  == rowDimension )  {^1024^^^^^1020^1094^[REPLACE] if  ( nRows != nCols )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return ;^1025^^^^^1020^1094^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^1025^^^^^1020^1094^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu ;^1027^^^^^1020^1094^[REPLACE] lu = this.getData (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^permutation =  new int[startRow];^1030^^^^^1020^1094^[REPLACE] permutation = new int[nRows];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( introundingMode = 0 - 3; row  !=  nRows; row++ )  {^1031^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^permutation[col] = temp; ;^1032^^^^^1020^1094^[REPLACE] permutation[row] = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1032^^^^^1020^1094^[ADD] permutation[row] = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 3; row < nRows; row++ )  {^1031^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^parity = 2;^1034^^^^^1020^1094^[REPLACE] parity = 1;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( sum.abs (  ) .compareTo ( largest )   !=  1 )  {^1061^^^^^1020^1094^[REPLACE] if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^largest =  maxColSum.abs (  ) ;^1062^^^^^1020^1094^[REPLACE] largest = sum.abs (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1062^^^^^1020^1094^[ADD] largest = sum.abs (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^max =  roundingMode;^1063^^^^^1020^1094^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( lu[max][col].abs (  ) .compareTo (temp )   >=  0 )  {^1068^^^^^1020^1094^[REPLACE] if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = false;^1069^^^^^1020^1094^[REPLACE] lu = null;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1069^^^^^1020^1094^[ADD] lu = null;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return ;^1070^^^^^1020^1094^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( max  ==  col )  {^1074^^^^^1020^1094^[REPLACE] if  ( max != col )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  <= rowDimension; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^tmp =  lu[startRow][i];^1077^^^^^1020^1094^[REPLACE] tmp = lu[max][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[max][i]  =  lu[max][i] ;^1078^^^^^1020^1094^[REPLACE] lu[max][i] = lu[col][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[col][i] ;^1079^^^^^1020^1094^[REPLACE] lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1077^^^^^1020^1094^[ADD] tmp = lu[max][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1078^1079^^^^1020^1094^[ADD] lu[max][i] = lu[col][i]; lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1079^^^^^1020^1094^[ADD] lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^permutation[max]  =  permutation[max] ;^1082^^^^^1020^1094^[REPLACE] permutation[max] = permutation[col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^permutation[row] = row; ;^1083^^^^^1020^1094^[REPLACE] permutation[col] = temp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^parity  =  parity ;^1084^^^^^1020^1094^[REPLACE] parity = -parity;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal sum = ZERO;^1075^^^^^1020^1094^[REPLACE] BigDecimal tmp = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1075^^^^^1020^1094^[ADD] BigDecimal tmp = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1076^1077^1078^1079^1080^1020^1094^[ADD] for  ( int i = 0; i < nCols; i++ )  { tmp = lu[max][i]; lu[max][i] = lu[col][i]; lu[col][i] = tmp; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCols = getColumnDimension (  ) ;^1081^^^^^1020^1094^[REPLACE] int temp = permutation[max];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1081^^^^^1020^1094^[ADD] int temp = permutation[max];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int startRow = 0; col  ==  nCols; col++ )  {^1037^^^^^1020^1094^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1037^1038^1039^^^1020^1094^[ADD] for  ( int col = 0; col < nCols; col++ )  {  BigDecimal sum = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( sum.abs (  ) .compareTo ( trace )   &&  1 )  {^1061^^^^^1020^1094^[REPLACE] if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^max =  null;^1063^^^^^1020^1094^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )   ==  0L )  {^1068^^^^^1020^1094^[REPLACE] if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = this;^1069^^^^^1020^1094^[REPLACE] lu = null;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^1070^^^^^1020^1094^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt rowDimension = 0; i  !=  nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[max][i]  = null ;^1078^^^^^1020^1094^[REPLACE] lu[max][i] = lu[col][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[col][i]  =  lu[col][i] ;^1079^^^^^1020^1094^[REPLACE] lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^tmp =  lu[null][i];^1077^^^^^1020^1094^[REPLACE] tmp = lu[max][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu[max][i] ;^1078^^^^^1020^1094^[REPLACE] lu[max][i] = lu[col][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^permutation[col] = temp;^1082^1083^^^^1020^1094^[ADD] permutation[max] = permutation[col]; permutation[col] = temp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 2; i < nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( intstartRow = 0; row  >  col; row++ )  {^1042^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < col; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1042^1043^1044^1045^1046^1020^1094^[ADD] for  ( int row = 0; row < col; row++ )  { sum = lu[row][col]; for  ( int i = 0; i < row; i++ )  { sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 0; i  >=  row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  maxColSum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1020^1094^[REPLACE] sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[parity][col];^1043^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1045^^^^^1020^1094^[ADD] sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^outData[row][col] = sum; ;^1047^^^^^1020^1094^[REPLACE] lu[row][col] = sum;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 + 4; i < row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 2; i  <=  row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = col; row  <=  nRows; row++ )  {^1053^^^^^1020^1094^[REPLACE] for  ( int row = col; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( sum.abs (  ) .max ( trace )   !=  4 )  {^1061^^^^^1020^1094^[REPLACE] if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^largest = sum.abs (  ) ;max = row;^1061^1062^1063^1064^^1020^1094^[ADD] if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  { largest = sum.abs (  ) ; max = row; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^max =  startRow;^1063^^^^^1020^1094^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1063^^^^^1020^1094^[ADD] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 0L; i  >  row; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  null.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1020^1094^[REPLACE] sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1056^^^^^1020^1094^[ADD] sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[null][col];^1054^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^outData[row][col] = sum; ;^1058^^^^^1020^1094^[REPLACE] lu[row][col] = sum;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 2; i < col; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 0 - 0; i  <=  startRow; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  maxColSum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1020^1094^[REPLACE] sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt rowDimension = 0; i  <=  nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = col  |  3; row < nRows; row |  |  )  {^1088^^^^^1020^1094^[REPLACE] for  ( int row = col + 1; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ; ;^1089^^^^^1020^1094^[REPLACE] lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[startRow][col];^1043^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[startRow][col];^1054^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal tmp = ZERO;^1039^^^^^1020^1094^[REPLACE] BigDecimal sum = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1039^^^^^1020^1094^[ADD] BigDecimal sum = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 1; row < col; row++ )  {^1042^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < col; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 3; i < row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1044^1045^1046^^^1020^1094^[ADD] for  ( int i = 0; i < row; i++ )  { sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int max = startRow;^1051^^^^^1020^1094^[REPLACE] int max = col;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][1];^1052^^^^^1020^1094^[REPLACE] BigDecimal largest = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = startRow; row < nRows; row++ )  {^1053^^^^^1020^1094^[REPLACE] for  ( int row = col; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 1; i < col; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 3; i < nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row =rowDimension + 1; row < nRows; row++ )  {^1088^^^^^1020^1094^[REPLACE] for  ( int row = col + 1; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 2; row  >  startRow; row++ )  {^1042^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < col; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  == rowDimension; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[rowCount][col];^1043^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1043^^^^^1020^1094^[ADD] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 3; i  >  row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = col; row  > roundingMode; row++ )  {^1053^^^^^1020^1094^[REPLACE] for  ( int row = col; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( sum.abs (  ) .compareTo ( largest )   && nrows )  {^1061^^^^^1020^1094^[REPLACE] if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^max =  rowDimension;^1063^^^^^1020^1094^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  (rowDimensionnt i = 0; i  ==  startColumn; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^max =  parity;^1063^^^^^1020^1094^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 * 4; i < col; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  >=  col; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i  >  nCols; i++ )  {^1076^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^sum =  lu[rowCount][col];^1054^^^^^1020^1094^[REPLACE] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = true;^1069^^^^^1020^1094^[REPLACE] lu = null;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^parity ;^1084^^^^^1020^1094^[REPLACE] parity = -parity;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1084^^^^^1020^1094^[ADD] parity = -parity;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1089^^^^^1020^1094^[ADD] lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 3; col < nCols; col++ )  {^1037^^^^^1020^1094^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 2; row < col; row++ )  {^1042^^^^^1020^1094^[REPLACE] for  ( int row = 0; row < col; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 >>> 1; i < row; i++ )  {^1044^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int max = rowCount;^1051^^^^^1020^1094^[REPLACE] int max = col;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1052^^^^^1020^1094^[ADD] BigDecimal largest = ZERO;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = rowCount; row < nRows; row++ )  {^1053^^^^^1020^1094^[REPLACE] for  ( int row = col; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1053^1054^1055^1056^1057^1020^1094^[ADD] for  ( int row = col; row < nRows; row++ )  { sum = lu[row][col]; for  ( int i = 0; i < col; i++ )  { sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 3; i < col; i++ )  {^1055^^^^^1020^1094^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = startRow +row; row < nRows; row++ )  {^1088^^^^^1020^1094^[REPLACE] for  ( int row = col + 1; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1070^^^^^1020^1094^[ADD] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = getRowDimension (  ) ;^1101^^^^^1100^1118^[REPLACE] StringBuffer res = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res .toString (  )  ;^1102^^^^^1100^1118^[REPLACE] res.append ( "BigMatrixImpl{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( data == null )  {^1103^^^^^1100^1118^[REPLACE] if  ( data != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1103^1104^1105^1106^1107^1100^1118^[ADD] if  ( data != null )  { for  ( int i = 0; i < data.length; i++ )  { if  ( i > 0 ) res.append ( "," ) ; res.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( i  <  0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res.append ( "}" ) ;^1106^^^^^1100^1118^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1106^1107^^^^1100^1118^[ADD] res.append ( "," ) ; res.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( j  <=  0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^[REPLACE] if  ( j > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1109^1110^1111^1112^^1100^1118^[ADD] if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res .append ( null )  ;^1110^^^^^1100^1118^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1110^^^^^1100^1118^[ADD] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i < data.length (  ) ; i++ )  {^1104^^^^^1100^1118^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1104^1105^1106^1107^^1100^1118^[ADD] for  ( int i = 0; i < data.length; i++ )  { if  ( i > 0 ) res.append ( "," ) ; res.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( i  ==  0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res .append ( null )  ;^1106^^^^^1100^1118^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( j  !=  0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^[REPLACE] if  ( j > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res.append ( "}" ) ;^1110^^^^^1100^1118^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 ; j < data[0 ].length %  0 .5 ; j++ )  {^1108^^^^^1100^1118^[REPLACE] for  ( int j = 0; j < data[0].length; j++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^res.append ( "," ) ;res.append ( data[i][j] ) ;^1109^1110^1111^1112^^1100^1118^[ADD] if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REMOVE]^( this.getRowDimension (  )  )  ) ;^1110^^^^^1100^1118^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0 ; j < data[0 ].length; j++ )  {^1108^^^^^1100^1118^[REPLACE] for  ( int j = 0; j < data[0].length; j++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1108^1109^1110^1111^1112^1100^1118^[ADD] for  ( int j = 0; j < data[0].length; j++ )  { if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res .append ( this )  ;^1110^^^^^1100^1118^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 ; i < data.length; i++ )  {^1104^^^^^1100^1118^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( i  >=  1 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( j  <  0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^[REPLACE] if  ( j > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0; i < data.length /  2; i++ )  {^1104^^^^^1100^1118^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( i  <  0 >>> 1 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( j  >=  1 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^[REPLACE] if  ( j > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^res.append ( data[i][j] ) ;^1110^1111^^^^1100^1118^[ADD] res.append ( "," ) ; res.append ( data[i][j] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j = 0; j < data[0].length + 3; j++ )  {^1108^^^^^1100^1118^[REPLACE] for  ( int j = 0; j < data[0].length; j++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt j = 0; j < data[0].length - 4; j++ )  {^1108^^^^^1100^1118^[REPLACE] for  ( int j = 0; j < data[0].length; j++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^res.append ( "," ) ;^1116^^^^^1100^1118^[REPLACE] res.append ( "}" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1116^1117^^^^1100^1118^[ADD] res.append ( "}" ) ; return res.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return res.StringBuffer (  ) ;^1117^^^^^1100^1118^[REPLACE] return res.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( object  &&  this  )  {^1130^^^^^1129^1150^[REPLACE] if  ( object == this  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return false;^1131^^^^^1129^1150^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( ! object instanceof BigMatrixImpl == true )  {^1133^^^^^1129^1150^[REPLACE] if  ( object instanceof BigMatrixImpl == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^return false;^1133^1134^1135^^^1129^1150^[ADD] if  ( object instanceof BigMatrixImpl == false )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return true;^1134^^^^^1129^1150^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigMatrixImpl outMat = new BigMatrixImpl ( bp ) ;^1136^^^^^1129^1150^[REPLACE] BigMatrix m =  ( BigMatrix )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getRowDimension (  ) ;^1137^^^^^1129^1150^[REPLACE] int nRows = getRowDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int ncols = this.getColumnDimension (  ) ;^1138^^^^^1129^1150^[REPLACE] int nCols = getColumnDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1138^^^^^1129^1150^[ADD] int nCols = getColumnDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( m.getColumnDimension (  )  != nCols ) {^1139^^^^^1129^1150^[REPLACE] if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return true;^1140^^^^^1129^1150^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( !data[row][col] .setScale ( scale )   )  {^1144^^^^^1129^1150^[REPLACE] if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1144^1145^1146^^^1129^1150^[ADD] if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return true;^1145^^^^^1129^1150^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0; row  >=  nRows; row++ )  {^1142^^^^^1129^1150^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1142^1143^1144^1145^1146^1129^1150^[ADD] for  ( int row = 0; row < nRows; row++ )  { for  ( int col = 0; col < nCols; col++ )  { if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( !data[row][col].equals ( m.getEntry ( row, startRow )  )  )  {^1144^^^^^1129^1150^[REPLACE] if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0; col  >=  nCols; col++ )  {^1143^^^^^1129^1150^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1143^1144^1145^1146^^1129^1150^[ADD] for  ( int col = 0; col < nCols; col++ )  { if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( data[row][col].equals ( m.getEntry ( row, col )  )  )  {^1144^^^^^1129^1150^[REPLACE] if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0 / 1; col < nCols; col++ )  {^1143^^^^^1129^1150^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0; col  !=  nCols; col++ )  {^1143^^^^^1129^1150^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( !data[row][col].equals ( m.getEntry ( r, col )  )  )  {^1144^^^^^1129^1150^[REPLACE] if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 2; row < nRows; row++ )  {^1142^^^^^1129^1150^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 3; col < nCols; col++ )  {^1143^^^^^1129^1150^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return false;^1149^^^^^1129^1150^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  BigMatrix m  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int ret = 7 % 3;^1158^^^^^1157^1170^[REPLACE] int ret = 7;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1158^^^^^1157^1170^[ADD] int ret = 7;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getRowDimension (  ) ;^1159^^^^^1157^1170^[REPLACE] int nRows = getRowDimension (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1159^1160^^^^1157^1170^[ADD] int nRows = getRowDimension (  ) ; int nCols = getColumnDimension (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int ncols = this.getColumnDimension (  ) ;^1160^^^^^1157^1170^[REPLACE] int nCols = getColumnDimension (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1160^^^^^1157^1170^[ADD] int nCols = getColumnDimension (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 31 + nCols; ;^1161^^^^^1157^1170^[REPLACE] ret = ret * 31 + nRows;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1161^1162^^^^1157^1170^[ADD] ret = ret * 31 + nRows; ret = ret * 31 + nCols;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 31 + nRows; ;^1162^^^^^1157^1170^[REPLACE] ret = ret * 31 + nCols;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1162^^^^^1157^1170^[ADD] ret = ret * 31 + nCols;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0; row  >=  nRows; row++ )  {^1163^^^^^1157^1170^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1163^1164^1165^1166^1167^1157^1170^[ADD] for  ( int row = 0; row < nRows; row++ )  { for  ( int col = 0; col < nCols; col++ )  { ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ; }^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 2; col  >  nCols; col++ )  {^1164^^^^^1157^1170^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 31  |   ( 11 *  ( row | 1 )   |  17 *  ( col | 1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^[REPLACE] ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 31  ==   ( 11 *  ( row == 1 )   ==  17 *  ( col == 1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^[REPLACE] ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0L; col < nCols; col++ )  {^1164^^^^^1157^1170^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 0; col  !=  nCols; col++ )  {^1164^^^^^1157^1170^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 31  <   ( 11 *  ( row < 1 )   <  17 *  ( col < 1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^[REPLACE] ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^ret = ret * 3  <=   ( 11 *  ( row <= 1 )   <=  17 *  ( col <= 1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^[REPLACE] ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int row = 0 % 0; row < nRows; row++ )  {^1163^^^^^1157^1170^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int col = 3; col < nCols; col++ )  {^1164^^^^^1157^1170^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return temp;^1169^^^^^1157^1170^[REPLACE] return ret;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return   dimension   ;^1183^^^^^1182^1184^[REPLACE] return MatrixUtils.createBigIdentityMatrix ( dimension ) ;^[METHOD] getIdentity [TYPE] BigMatrix [PARAMETER] int dimension [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^if  ( lu != null )  {^1214^^^^^1213^1218^[REPLACE] if  ( lu == null )  {^[METHOD] getLUMatrix [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = this.getData (  ) ;^1215^^^^^1213^1218^[REPLACE] luDecompose (  ) ;^[METHOD] getLUMatrix [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REMOVE]^( this.getRowDimension (  )  )  ) ;^1215^^^^^1213^1218^[REMOVE] ^[METHOD] getLUMatrix [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return  new BigMatrixImpl ( bp )  ;^1217^^^^^1213^1218^[REPLACE] return new BigMatrixImpl ( lu ) ;^[METHOD] getLUMatrix [TYPE] BigMatrix [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[] out = new BigDecimal[v.length];^1233^^^^^1232^1236^[REPLACE] int[] out = new int[permutation.length];^[METHOD] getPermutation [TYPE] int[] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^System.arraycopy ( permutation, 0 , out, 0 , permutation.length ) ;^1234^^^^^1232^1236^[REPLACE] System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[METHOD] getPermutation [TYPE] int[] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return selectedRows;^1235^^^^^1232^1236^[REPLACE] return out;^[METHOD] getPermutation [TYPE] int[] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getColumnDimension (  ) ;^1246^^^^^1245^1253^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^BigDecimal[][] out = new BigDecimal[nRows][this.getRowDimension (  ) ];^1247^^^^^1245^1253^[REPLACE] BigDecimal[][] out = new BigDecimal[nRows][this.getColumnDimension (  ) ];^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 0 * 1; i  >  rowDimension; i++ )  {^1249^^^^^1245^1253^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^System.arraycopy ( data[i], 0 , out[i], 0 , data[i].length ) ;^1250^^^^^1245^1253^[REPLACE] System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REMOVE]^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^1250^^^^^1245^1253^[REMOVE] ^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 / 0; i < nRows; i++ )  {^1249^^^^^1245^1253^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return subMatrixData;^1252^^^^^1245^1253^[REPLACE] return out;^[METHOD] copyOut [TYPE] BigDecimal[][] [PARAMETER] [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^setSubMatrix ( in,0L,0L ) ;^1266^^^^^1265^1267^[REPLACE] setSubMatrix ( in,0,0 ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] BigDecimal[][] in [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = d.length;^1275^^^^^1274^1284^[REPLACE] int nRows = in.length;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1275^1276^^^^1274^1284^[ADD] int nRows = in.length; int nCols = in[0].length;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCols = in[0 ].length;^1276^^^^^1274^1284^[REPLACE] int nCols = in[0].length;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^data = new BigDecimal[nRows][1]; ;^1277^^^^^1274^1284^[REPLACE] data = new BigDecimal[nRows][nCols];^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( rowDimensionnt i = 0; i  >=  startRow; i++ )  {^1278^^^^^1274^1284^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=3; j  ==  nCols; j++ )  {^1279^^^^^1274^1284^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bd[i] =  new BigDecimal ( b[i] )  ; ;^1280^^^^^1274^1284^[REPLACE] data[i][j] = new BigDecimal ( in[i][j] ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1280^^^^^1274^1284^[ADD] data[i][j] = new BigDecimal ( in[i][j] ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bd[i] = new BigDecimal ( v[i] ) ; ;^1280^^^^^1274^1284^[REPLACE] data[i][j] = new BigDecimal ( in[i][j] ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=4; j < nCols; j++ )  {^1279^^^^^1274^1284^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=0 >>> 0; j  ==  nCols; j++ )  {^1279^^^^^1274^1284^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 4; i < nRows; i++ )  {^1278^^^^^1274^1284^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1278^1279^1280^1281^^1274^1284^[ADD] for  ( int i = 0; i < nRows; i++ )  { for  ( int j=0; j < nCols; j++ )  { data[i][j] = new BigDecimal ( in[i][j] ) ; }^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1279^1280^1281^^^1274^1284^[ADD] for  ( int j=0; j < nCols; j++ )  { data[i][j] = new BigDecimal ( in[i][j] ) ; }^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = this;^1283^^^^^1274^1284^[REPLACE] lu = null;^[METHOD] copyIn [TYPE] void [PARAMETER] double[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = d.length;^1293^^^^^1292^1302^[REPLACE] int nRows = in.length;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCols = in[0 ].length;^1294^^^^^1292^1302^[REPLACE] int nCols = in[0].length;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^data = new BigDecimal[nRows][1]; ;^1295^^^^^1292^1302^[REPLACE] data = new BigDecimal[nRows][nCols];^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 * 2; i  >=  nRows; i++ )  {^1296^^^^^1292^1302^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=0; j  <=  nCols; j++ )  {^1297^^^^^1292^1302^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bd[i] = new BigDecimal ( v[i] ) ; ;^1298^^^^^1292^1302^[REPLACE] data[i][j] = new BigDecimal ( in[i][j] ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^bd[i] =  new BigDecimal ( b[i] )  ; ;^1298^^^^^1292^1302^[REPLACE] data[i][j] = new BigDecimal ( in[i][j] ) ;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=1; j < nCols; j++ )  {^1297^^^^^1292^1302^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=0; j  !=  nCols; j++ )  {^1297^^^^^1292^1302^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1297^1298^1299^^^1292^1302^[ADD] for  ( int j=0; j < nCols; j++ )  { data[i][j] = new BigDecimal ( in[i][j] ) ; }^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int i = 0 + 3; i < nRows; i++ )  {^1296^^^^^1292^1302^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^for  ( int j=0 << 1; j < nCols; j++ )  {^1297^^^^^1292^1302^[REPLACE] for  ( int j=0; j < nCols; j++ )  {^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^lu = true;^1301^^^^^1292^1302^[REPLACE] lu = null;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[ADD]^^1301^^^^^1292^1302^[ADD] lu = null;^[METHOD] copyIn [TYPE] void [PARAMETER] String[][] in [CLASS] BigMatrixImpl   [TYPE]  boolean false  true  [TYPE]  String[][] in  [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nRows = this.getColumnDimension (  ) ;^1312^^^^^1311^1316^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] isValidCoordinate [TYPE] boolean [PARAMETER] int row int col [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^int nCols = this.getRowDimension (  ) ;^1313^^^^^1311^1316^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] isValidCoordinate [TYPE] boolean [PARAMETER] int row int col [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
[REPLACE]^return   startRow ;^1315^^^^^1311^1316^[REPLACE] return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[METHOD] isValidCoordinate [TYPE] boolean [PARAMETER] int row int col [CLASS] BigMatrixImpl   [TYPE]  int[] out  permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  [TYPE]  BigDecimal ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  BigDecimal[][] bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData 
