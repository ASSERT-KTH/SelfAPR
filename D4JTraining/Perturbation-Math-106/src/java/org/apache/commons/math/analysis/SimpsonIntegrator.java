[REPLACE]^static final long serialVersionUID ;^35^^^^^^^[REPLACE] static final long serialVersionUID = 3405465123320678216L;^ [CLASS] SimpsonIntegrator  
[REPLACE]^int i = 3;^61^^^^^59^91^[REPLACE] int i = 1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^double olds  ;^62^^^^^59^91^[REPLACE] double s, olds, t, oldt;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^62^^^^^59^91^[ADD] double s, olds, t, oldt;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^( qtrap.stage ( min, max, 1 )  )  ;^64^^^^^59^91^[REPLACE] clearResult (  ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^verifyIterationCount (  ) ;TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ;^65^66^^68^^59^91^[ADD] verifyInterval ( min, max ) ; verifyIterationCount (  ) ; TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^66^67^68^69^70^59^91^[ADD] verifyIterationCount (  ) ;  TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ; if  ( minimalIterationCount == 1 )  { s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^int i = 1  ;^68^^^^^59^91^[REPLACE] TrapezoidIntegrator qtrap = new TrapezoidIntegrator ( this.f ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  (1  !=  1 )  {^69^^^^^59^91^[REPLACE] if  ( minimalIterationCount == 1 )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^s =  ( 4 - 1 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )   3.0;^70^^^^^59^91^[REPLACE] s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^return result;  ;^72^^^^^59^91^[REPLACE] return result;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )   3.0;^70^^^^^59^91^[REPLACE] s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^olds = 0 + 0;^75^^^^^59^91^[REPLACE] olds = 0;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^76^^^^^59^91^[ADD] oldt = qtrap.stage ( min, max, 0 ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( i  !=  minimalIterationCount )  {^80^^^^^59^91^[REPLACE] if  ( i >= minimalIterationCount )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( Math.abs ( s - olds )   <  Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^59^91^[REPLACE] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^return result;  ;^83^^^^^59^91^[REPLACE] return result;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^if  ( Math.abs ( s - olds )   !=  Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^59^91^[REPLACE] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^81^82^83^84^^59^91^[ADD] if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^oldt = qtrap.stage ( min, max, 0 )  ;^78^^^^^59^91^[REPLACE] t = qtrap.stage ( min, max, i ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^s =  ( 4 * t - oldt )   3.0;^79^^^^^59^91^[REPLACE] s =  ( 4 * t - oldt )  / 3.0;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^oldt = t  ;^86^^^^^59^91^[REPLACE] olds = s;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[REPLACE]^olds = s  ;^87^^^^^59^91^[REPLACE] oldt = t;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
[ADD]^^90^^^^^59^91^[ADD] throw new ConvergenceException  (" ")  ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] SimpsonIntegrator   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double max  min  olds  oldt  s  t  [TYPE]  int i  [TYPE]  TrapezoidIntegrator qtrap 
