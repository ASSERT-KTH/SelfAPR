[REPLACE]^private  final long serialVersionUID = 4237564493130426188L;^53^^^^^^^[REPLACE] private static final long serialVersionUID = 4237564493130426188L;^ [CLASS] RealMatrixImpl  
[REPLACE]^private double data[][]  = null ;^56^^^^^^^[REPLACE] private double data[][] = null;^ [CLASS] RealMatrixImpl  
[REPLACE]^private double lu[][]  = null ;^61^^^^^^^[REPLACE] private double lu[][] = null;^ [CLASS] RealMatrixImpl  
[REPLACE]^private int[] permutation  = null ;^64^^^^^^^[REPLACE] private int[] permutation = null;^ [CLASS] RealMatrixImpl  
[REPLACE]^private int parity  = null ;^67^^^^^^^[REPLACE] private int parity = 1;^ [CLASS] RealMatrixImpl  
[REPLACE]^if  ( this.getColumnDimension (  )   ==  m.getRowDimension (  )  )  {^226^^^^^225^244^[REPLACE] if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^throw new IllegalArgumentException ( "constant vector has wrong length" )  ;^227^^^^^225^244^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^return ;^227^^^^^225^244^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^229^^^^^225^244^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^230^^^^^225^244^[REPLACE] int nCols = m.getColumnDimension (  ) ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^231^^^^^225^244^[REPLACE] int nSum = this.getColumnDimension (  ) ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^double[][] outData = new double[rowCount][columnCount]  ;^232^^^^^225^244^[REPLACE] double[][] outData = new double[nRows][nCols];^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^double sum = 0 - 4;^233^^^^^225^244^[REPLACE] double sum = 0;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[ADD]^^236^^^^^225^244^[ADD] sum = 0;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^sum += data[row][i]  m.getEntry ( i, col ) ;^238^^^^^225^244^[REPLACE] sum += data[row][i] * m.getEntry ( i, col ) ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[ADD]^^240^^^^^225^244^[ADD] outData[row][col] = sum;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^int ret = 7  ;^234^^^^^225^244^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[ADD]^^235^236^237^238^239^225^244^[ADD] for  ( int col = 0; col < nCols; col++ )  { sum = 0; for  ( int i = 0; i < nSum; i++ )  { sum += data[row][i] * m.getEntry ( i, col ) ; }^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^for  ( int i = 1; i < nSum; i++ )  {^237^^^^^225^244^[REPLACE] for  ( int i = 0; i < nSum; i++ )  {^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^return  new RealMatrixImpl ( this.copyOut (  )  )  ;^243^^^^^225^244^[REPLACE] return new RealMatrixImpl ( outData ) ;^[METHOD] multiply [TYPE] RealMatrix [PARAMETER] RealMatrix m [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  sum  [TYPE]  double[][] d  data  lu  outData  [TYPE]  int[] permutation  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension 
[REPLACE]^if  ( startRow < 0 || startRow > endRow || endRow > data.length %  2 || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length %  2  )  {^309^310^311^^^308^324^[REPLACE] if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^309^310^311^312^313^308^324^[ADD] if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  { throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new InvalidMatrixException ( "matrix is not square" )  ;^312^313^^^^309^314^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return ;^312^313^^^^308^324^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^315^316^^^^308^324^[ADD] RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^317^^^^^308^324^[ADD] double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^subMatrixData[i  startRow][j  startColumn] = data[i][j];^320^^^^^308^324^[REPLACE] subMatrixData[i - startRow][j - startColumn] = data[i][j];^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int i = startColumn; i <= endRow; i++ )  {^318^^^^^308^324^[REPLACE] for  ( int i = startRow; i <= endRow; i++ )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int j = parity; j <= endColumn; j++ )  {^319^^^^^308^324^[REPLACE] for  ( int j = startColumn; j <= endColumn; j++ )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return subMatrix;  ;^323^^^^^308^324^[REPLACE] return subMatrix;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int startRow int endRow int startColumn int endColumn [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( selectedRows.length + 1 * selectedColumns.length + 1 == 0 )  {^339^^^^^338^357^[REPLACE] if  ( selectedRows.length * selectedColumns.length == 0 )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^339^340^341^342^^338^357^[ADD] if  ( selectedRows.length * selectedColumns.length == 0 )  { throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^340^341^^^^338^357^[ADD] throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new InvalidMatrixException ( "matrix is not square" )  ;^340^341^^^^338^357^[REPLACE] throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, permutation.length ) ;^343^344^^^^338^357^[REPLACE] RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^double[][] outData = out.getDataRef (  )  ;^345^^^^^338^357^[REPLACE] double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^346^347^348^349^350^338^357^[ADD] try  { for  ( int i = 0; i < selectedRows.length; i++ )  { for  ( int j = 0; j < selectedColumns.length; j++ )  { subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]]; }^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^subMatrixData[i][j] ;^349^^^^^338^357^[REPLACE] subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int i = 0 ; i < selectedRows.length; i++ )  {^347^^^^^338^357^[REPLACE] for  ( int i = 0; i < selectedRows.length; i++ )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int j = 0 ; j < selectedColumns.length; j++ )  {^348^^^^^338^357^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^subMatrixData[i][j]  =  subMatrixData[i][j] ;^349^^^^^338^357^[REPLACE] subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int row = 0  ;^348^^^^^338^357^[REPLACE] for  ( int j = 0; j < selectedColumns.length; j++ )  {^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^354^^^^^338^357^[ADD] throw new MatrixIndexException  (" ")  ;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return subMatrix;  ;^356^^^^^338^357^[REPLACE] return subMatrix;^[METHOD] getSubMatrix [TYPE] RealMatrix [PARAMETER] int[] selectedRows int[] selectedColumns [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  double[][] d  data  lu  outData  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl subMatrix  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  (  ( row < 0 )  &&  ( column < 0 )  ) {^388^^^^^387^422^[REPLACE] if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new InvalidMatrixException ( "matrix is not square" )  ;^389^390^^^^387^422^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int nRows = subMatrixData.length;^392^^^^^387^422^[REPLACE] int nRows = subMatrix.length;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  (   3 )  {^393^^^^^387^422^[REPLACE] if  ( nRows == 0 )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^393^394^395^396^^387^422^[ADD] if  ( nRows == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^394^395^^^^387^422^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new IllegalArgumentException ( "constant vector has wrong length" )  ;^394^395^^^^387^422^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int nCols = subMatrix[0 ].length;^397^^^^^387^422^[REPLACE] int nCols = subMatrix[0].length;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( startColumn  ||  0 )  {^398^^^^^387^422^[REPLACE] if  ( nCols == 0 )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REMOVE]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^398^^^^^387^422^[REMOVE] ^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return ;^399^400^^^^387^422^[REPLACE] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^399^400^^^^387^422^[ADD] throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( subMatrix[r].length + 1 != nCols )  {^403^^^^^387^422^[REPLACE] if  ( subMatrix[r].length != nCols )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return ;^404^405^^^^387^422^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int r = 3; r < nRows; r++ )  {^402^^^^^387^422^[REPLACE] for  ( int r = 1; r < nRows; r++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new IllegalArgumentException ( "constant vector has wrong length" )  ;^404^405^^^^387^422^[REPLACE] throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if   (  lu == null  )   {  ;^408^^^^^387^422^[REPLACE] if  ( data == null )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  (  ( row > 0 ) && ( true )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^387^422^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return ;^409^410^^^^387^422^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^411^412^^^^387^422^[ADD] data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new InvalidMatrixException ( "matrix is not square" )  ;^409^410^^^^387^422^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  (  ( row > 0 ) && ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^387^422^[REPLACE] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^409^410^411^412^413^387^422^[ADD] if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^data = new double[nRows][1]  ;^411^^^^^387^422^[REPLACE] data = new double[nRows][nCols];^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  (  (  ( nRows + startRow )  > this.getRowDimension (  )  )  && ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^387^422^[REPLACE] if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^414^415^416^417^^387^422^[ADD] if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^416^417^^^^387^422^[ADD] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return ;^416^417^^^^387^422^[REPLACE] throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int i = 0 >>> 4; i < nRows; i++ )  {^418^^^^^387^422^[REPLACE] for  ( int i = 0; i < nRows; i++ )  {^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^lu = true;^421^^^^^387^422^[REPLACE] lu = null;^[METHOD] setSubMatrix [TYPE] void [PARAMETER] double[][] subMatrix int row int column [CLASS] RealMatrixImpl   [TYPE]  double[][] d  data  lu  outData  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  maxColSum  sum  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( b.getRowDimension (  )   ==  this.getRowDimension (  )  )  {^708^^^^^707^753^[REPLACE] if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new IllegalArgumentException ( "constant vector has wrong length" )  ;^709^^^^^707^753^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( !this.getRow (  )  )  {^711^^^^^707^753^[REPLACE] if  ( !this.isSquare (  )  )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^712^^^^^707^753^[ADD] throw new InvalidMatrixException  (" ")  ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^if  ( this.isSquare (  )  )  {^714^^^^^707^753^[REPLACE] if  ( this.isSingular (  )  )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^throw new InvalidMatrixException ( "matrix is not square" )  ;^715^^^^^707^753^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int nCol = this.getRowDimension (  ) ;^718^^^^^707^753^[REPLACE] int nCol = this.getColumnDimension (  ) ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int nColB = b .getRowDimension (  )  ;^719^^^^^707^753^[REPLACE] int nColB = b.getColumnDimension (  ) ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^720^^^^^707^753^[ADD] int nRowB = b.getRowDimension (  ) ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^double[][] outData = new double[nRows][nCols]  ;^723^^^^^707^753^[REPLACE] double[][] bp = new double[nRowB][nColB];^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^bp[row][col]  =  bp[row][col] ;^726^^^^^707^753^[REPLACE] bp[row][col] = b.getEntry ( permutation[row], col ) ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int row = 4; row < nRowB; row++ )  {^724^^^^^707^753^[REPLACE] for  ( int row = 0; row < nRowB; row++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int col = 1; col < nColB; col++ )  {^725^^^^^707^753^[REPLACE] for  ( int col = 0; col < nColB; col++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^sum -=  ( lu[row][i] )  *  ( lu[i][col] )  ;^734^^^^^707^753^[REPLACE] bp[i][j] -= bp[col][j] * lu[i][col];^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int col = 1; col < nCol; col++ )  {^731^^^^^707^753^[REPLACE] for  ( int col = 0; col < nCol; col++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int i = col  1; i < nCol; i )  {^732^^^^^707^753^[REPLACE] for  ( int i = col + 1; i < nCol; i++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int j = 3; j < nColB; j++ )  {^733^^^^^707^753^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^742^^^^^707^753^[ADD] bp[col][j] /= lu[col][col];^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^bp[i][j] -= bp[col][j] trace;^746^^^^^707^753^[REPLACE] bp[i][j] -= bp[col][j] * lu[i][col];^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^740^741^742^743^^707^753^[ADD] for  ( int col = nCol - 1; col >= 0; col-- )  { for  ( int j = 0; j < nColB; j++ )  { bp[col][j] /= lu[col][col]; }^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int j = 1; j < nColB; j++ )  {^741^^^^^707^753^[REPLACE] for  ( int j = 0; j < nColB; j++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^for  ( int i = 0 % 2; i < col; i++ )  {^744^^^^^707^753^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[ADD]^^745^746^747^^^707^753^[ADD] for  ( int j = 0; j < nColB; j++ )  { bp[i][j] -= bp[col][j] * lu[i][col]; }^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows )  ;^751^^^^^707^753^[REPLACE] RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^return outMat;  ;^752^^^^^707^753^[REPLACE] return outMat;^[METHOD] solve [TYPE] RealMatrix [PARAMETER] RealMatrix b [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix b  [TYPE]  double TOO_SMALL  d  det  maxColSum  sum  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  RealMatrixImpl outMat  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^775^^^^^773^845^[REPLACE] int nRows = this.getRowDimension (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int nCols = this.getRowDimension (  ) ;^776^^^^^773^845^[REPLACE] int nCols = this.getColumnDimension (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  (startRow  ==  nCols )  {^777^^^^^773^845^[REPLACE] if  ( nRows != nCols )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^778^^^^^773^845^[ADD] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return ;^778^^^^^773^845^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^lu  = null ;^780^^^^^773^845^[REPLACE] lu = this.getData (  ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^permutation =  new int[row];^783^^^^^773^845^[REPLACE] permutation = new int[nRows];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^permutation[col] = temp  ;^785^^^^^773^845^[REPLACE] permutation[row] = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int row = 4; row < nRows; row++ )  {^784^^^^^773^845^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^parity = 2;^787^^^^^773^845^[REPLACE] parity = 1;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( Math.abs ( sum )   !=  largest )  {^814^^^^^773^845^[REPLACE] if  ( Math.abs ( sum )  > largest )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^largest =  Math.abs ( maxColSum ) ;^815^^^^^773^845^[REPLACE] largest = Math.abs ( sum ) ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^max =  rowCount;^816^^^^^773^845^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( Math.abs ( lu[max][col] )   >=  TOO_SMALL )  {^821^^^^^773^845^[REPLACE] if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REMOVE]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^821^^^^^773^845^[REMOVE] ^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^lu = this;^822^^^^^773^845^[REPLACE] lu = null;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return ;^823^^^^^773^845^[REPLACE] throw new InvalidMatrixException  (" ")  ;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( startRow  ==  startRow )  {^827^^^^^773^845^[REPLACE] if  ( max != col )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^tmp =  lu[startRow][i];^830^^^^^773^845^[REPLACE] tmp = lu[max][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^lu[max][i]  = null ;^831^^^^^773^845^[REPLACE] lu[max][i] = lu[col][i];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^lu[col][i] ;^832^^^^^773^845^[REPLACE] lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^permutation[max]  = null ;^835^^^^^773^845^[REPLACE] permutation[max] = permutation[col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^permutation[row] = row  ;^836^^^^^773^845^[REPLACE] permutation[col] = temp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^837^^^^^773^845^[ADD] parity = -parity;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^828^^^^^773^845^[ADD] double tmp = 0;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int i = 3; i < nCols; i++ )  {^829^^^^^773^845^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^834^^^^^773^845^[ADD] int temp = permutation[max];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^796^^^^^773^845^[ADD] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^sum -= lu[row][i]  lu[i][col];^798^^^^^773^845^[REPLACE] sum -= lu[row][i] * lu[i][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^outData[row][col] = sum  ;^800^^^^^773^845^[REPLACE] lu[row][col] = sum;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^807^^^^^773^845^[ADD] sum = lu[row][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^sum -= lu[row][i]  lu[i][col];^809^^^^^773^845^[REPLACE] sum -= lu[row][i] * lu[i][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^811^^^^^773^845^[ADD] lu[row][col] = sum;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^max = row;^815^816^^^^773^845^[ADD] largest = Math.abs ( sum ) ; max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^max =  parity;^816^^^^^773^845^[REPLACE] max = row;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^lu[col][i]  =  lu[col][i] ;^832^^^^^773^845^[REPLACE] lu[col][i] = tmp;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^permutation[max]  =  permutation[max] ;^835^^^^^773^845^[REPLACE] permutation[max] = permutation[col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^parity ;^837^^^^^773^845^[REPLACE] parity = -parity;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^842^^^^^773^845^[ADD] lu[row][col] /= lu[col][col];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int col = 4; col < nCols; col++ )  {^790^^^^^773^845^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^792^^^^^773^845^[ADD] double sum = 0;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int ret = 7  ;^795^^^^^773^845^[REPLACE] for  ( int row = 0; row < col; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int i = 0L; i < row; i++ )  {^797^^^^^773^845^[REPLACE] for  ( int i = 0; i < row; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int max = rowDimension;^804^^^^^773^845^[REPLACE] int max = col;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int row = col + 1  ;^805^^^^^773^845^[REPLACE] double largest = 0d;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^806^807^808^809^810^773^845^[ADD] for  ( int row = col; row < nRows; row++ )  { sum = lu[row][col]; for  ( int i = 0; i < col; i++ )  { sum -= lu[row][i] * lu[i][col]; }^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int i = 0 - 1; i < col; i++ )  {^808^^^^^773^845^[REPLACE] for  ( int i = 0; i < col; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^double tmp = 0 + 0;^828^^^^^773^845^[REPLACE] double tmp = 0;^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int i = 4; i < nCols; i++ )  {^829^^^^^773^845^[REPLACE] for  ( int i = 0; i < nCols; i++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int row = col + 1  ;^834^^^^^773^845^[REPLACE] int temp = permutation[max];^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int row = col  1; row < nRows; row )  {^841^^^^^773^845^[REPLACE] for  ( int row = col + 1; row < nRows; row++ )  {^[METHOD] luDecompose [TYPE] void [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int row = col + 1  ;^852^^^^^851^869^[REPLACE] StringBuffer res = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^isSingular (  )  ;^853^^^^^851^869^[REPLACE] res.append ( "RealMatrixImpl{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^853^^^^^851^869^[ADD] res.append ( "RealMatrixImpl{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  (subMatrix == null )  {^854^^^^^851^869^[REPLACE] if  ( data != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^854^855^856^857^858^851^869^[ADD] if  ( data != null )  { for  ( int i = 0; i < data.length; i++ )  { if  ( i > 0 ) res.append ( "," ) ; res.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^rowDimensionf  ( i  <  0 ) res.append ( "," ) ;^856^857^^^^851^869^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^res.append ( "," ) ;res.append ( "{" ) ;^856^857^858^859^860^851^869^[ADD] if  ( i > 0 ) res.append ( "," ) ; res.append ( "{" ) ; for  ( int j = 0; j < data[0].length; j++ )  { if  ( j > 0 )^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^res.append ( "{" )  ;^857^^^^^851^869^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^857^858^^^^851^869^[ADD] res.append ( "," ) ; res.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( j  <=  0 ) res.append ( "," ) ;^860^861^^^^851^869^[REPLACE] if  ( j > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^res.append ( "{" )  ;^861^^^^^851^869^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^for  ( int i = 0 ; i < data.length; i++ )  {^855^^^^^851^869^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int row = 0  ;^859^^^^^851^869^[REPLACE] for  ( int j = 0; j < data[0].length; j++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if   (  j > 0  )  res.append  (  ","  )  ;  ;^856^857^^^^851^869^[REPLACE] if  ( i > 0 ) res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REMOVE]^if  ( j > 0 )      res.append ( "," ) ;^856^^^^^851^869^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^res.append ( "," ) ;res.append ( data[i][j] ) ;^860^861^862^863^^851^869^[ADD] if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^res .append ( 1 )  ;^861^^^^^851^869^[REPLACE] res.append ( "," ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^res.append ( "{" )  ;^867^^^^^851^869^[REPLACE] res.append ( "}" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REMOVE]^res.append ( "{" )  ;^867^^^^^851^869^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return res.StringBuffer (  ) ;^868^^^^^851^869^[REPLACE] return res.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RealMatrixImpl   [TYPE]  StringBuffer res  [TYPE]  boolean false  true  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( object  &&  this  )  {^881^^^^^880^902^[REPLACE] if  ( object == this  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^881^882^883^^^880^902^[ADD] if  ( object == this  )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return trace;  ;^882^^^^^880^902^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return false;^882^^^^^880^902^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( ! object instanceof RealMatrixImpl == false )  {^884^^^^^880^902^[REPLACE] if  ( object instanceof RealMatrixImpl == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return true;^885^^^^^880^902^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^int nRows = getRowDimension (  ) ;^887^888^^^^880^902^[ADD] RealMatrix m =  ( RealMatrix )  object; int nRows = getRowDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^888^^^^^880^902^[REPLACE] int nRows = getRowDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int ncols = this.getColumnDimension (  )  ;^889^^^^^880^902^[REPLACE] int nCols = getColumnDimension (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( m.getColumnDimension (  )  != nCols ) {^890^^^^^880^902^[REPLACE] if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return true;^891^^^^^880^902^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^if  ( Double.doubleToLongBits ( data[row][col] )   ==  Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^[REPLACE] if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[ADD]^^895^896^897^898^^880^902^[ADD] if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return false;  ;^897^^^^^895^898^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return true;^897^^^^^880^902^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int ret = 7  ;^893^^^^^880^902^[REPLACE] for  ( int row = 0; row < nRows; row++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^int row = 0  ;^894^^^^^880^902^[REPLACE] for  ( int col = 0; col < nCols; col++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
[REPLACE]^return false;^901^^^^^880^902^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] RealMatrixImpl   [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  [TYPE]  double[][] bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  [TYPE]  int[] permutation  selectedColumns  selectedRows  [TYPE]  Object object  [TYPE]  long serialVersionUID  [TYPE]  int col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp 
