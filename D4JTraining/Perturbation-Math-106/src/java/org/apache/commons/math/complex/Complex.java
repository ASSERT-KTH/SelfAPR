[REPLACE]^private  final long serialVersionUID = -6530173849413811929;^42^^^^^^^[REPLACE] private static final long serialVersionUID = -6530173849413811929L;^ [CLASS] Complex  
[REPLACE]^public static final Complex I ;^45^^^^^^^[REPLACE] public static final Complex I = new Complex ( 0.0, 1.0 ) ;^ [CLASS] Complex  
[REPLACE]^public static final Complex NaN ;^48^^^^^^^[REPLACE] public static final Complex NaN = new Complex ( Double.NaN, Double.NaN ) ;^ [CLASS] Complex  
[REPLACE]^public  final Complex ONE = new Complex ( 1.0, 0.0 ) ;^51^^^^^^^[REPLACE] public static final Complex ONE = new Complex ( 1.0, 0.0 ) ;^ [CLASS] Complex  
[REPLACE]^public static final Complex ZERO ;^54^^^^^^^[REPLACE] public static final Complex ZERO = new Complex ( 0.0, 0.0 ) ;^ [CLASS] Complex  
[REPLACE]^private float real;^60^^^^^^^[REPLACE] protected double real;^ [CLASS] Complex  
[REPLACE]^if  ( isInfinite (  )  )  { return Double.POSITIVE_INFINITY;^69^^^^^68^72^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^69^^^^^68^72^[ADD] super (  ) ;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^this.real =  imaginary;^70^^^^^68^72^[REPLACE] this.real = real;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^70^^^^^68^72^[ADD] this.real = real;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^this.imaginary =  real;^71^^^^^68^72^[REPLACE] this.imaginary = imaginary;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^71^^^^^68^72^[ADD] this.imaginary = imaginary;^[METHOD] <init> [TYPE] Complex(double,double) [PARAMETER] double real double imaginary [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( isInfinite (  )  )  {^85^^^^^84^106^[REPLACE] if  ( isNaN (  )  )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^return Double.NaN;^85^86^87^^^84^106^[ADD] if  ( isNaN (  )  )  { return Double.NaN; }^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return ZERO;^86^^^^^84^106^[REPLACE] return Double.NaN;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( isNaN (  )  )  {^89^^^^^84^106^[REPLACE] if  ( isInfinite (  )  )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^89^90^91^^^84^106^[ADD] if  ( isInfinite (  )  )  { return Double.POSITIVE_INFINITY; }^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return ZERO;^90^^^^^84^106^[REPLACE] return Double.POSITIVE_INFINITY;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( Math.abs ( real )   >  Math.abs ( imaginary )  )  {^93^^^^^84^106^[REPLACE] if  ( Math.abs ( real )  < Math.abs ( imaginary )  )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( real  && imaginary )  {^100^^^^^84^106^[REPLACE] if  ( real == 0.0 )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REMOVE]^if  ( d == 0.0 )  {     return new Complex (  (  ( real )  / c ) ,  (  ( imaginary )  / c )  ) ; }^100^^^^^84^106^[REMOVE] ^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return   imaginary   ;^101^^^^^84^106^[REPLACE] return Math.abs ( imaginary ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return  ( Math.abs ( imaginary )  * Math.sqrt ( 1 + q*q )  ) ;^104^^^^^84^106^[REPLACE] return  ( Math.abs ( real )  * Math.sqrt ( 1 + q*q )  ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^double q = imaginary  ;^103^^^^^84^106^[REPLACE] double q = imaginary / real;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^103^^^^^84^106^[ADD] double q = imaginary / real;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( real  !=  0.0D )  {^94^^^^^84^106^[REPLACE] if  ( imaginary == 0.0 )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^return Math.abs ( real ) ;^94^95^96^^^84^106^[ADD] if  ( imaginary == 0.0 )  { return Math.abs ( real ) ; }^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return   real   ;^95^^^^^84^106^[REPLACE] return Math.abs ( real ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return  (   imaginary    * Math.sqrt ( 1 + q*q )  ) ;^98^^^^^84^106^[REPLACE] return  ( Math.abs ( imaginary )  * Math.sqrt ( 1 + q*q )  ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^double q = real  ;^97^^^^^84^106^[REPLACE] double q = real / imaginary;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^97^98^^^^84^106^[ADD] double q = real / imaginary; return  ( Math.abs ( imaginary )  * Math.sqrt ( 1 + q*q )  ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( imaginary  != real )  {^94^^^^^84^106^[REPLACE] if  ( imaginary == 0.0 )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^94^95^96^^^84^106^[ADD] if  ( imaginary == 0.0 )  { return Math.abs ( real ) ; }^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return Math.sqrt ( real ) ;^95^^^^^84^106^[REPLACE] return Math.abs ( real ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^if  ( real  ||  0.0 )  {^100^^^^^84^106^[REPLACE] if  ( real == 0.0 )  {^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return  (   1 + q ^ q    ) ;^98^^^^^84^106^[REPLACE] return  ( Math.abs ( imaginary )  * Math.sqrt ( 1 + q*q )  ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return Math.sqrt ( imaginary ) ;^101^^^^^84^106^[REPLACE] return Math.abs ( imaginary ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return  ( Math.sqrt ( real )   |  Math.sqrt ( 1 + q | q )  ) ;^104^^^^^84^106^[REPLACE] return  ( Math.abs ( real )  * Math.sqrt ( 1 + q*q )  ) ;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[ADD]^^97^^^^^84^106^[ADD] double q = real / imaginary;^[METHOD] abs [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO 
[REPLACE]^return new Complex (imaginary + rhs .getImaginary (  )  , imaginary + rhs.getImaginary (  )  ) ;^126^127^^^^125^128^[REPLACE] return new Complex ( real + rhs.getReal (  ) , imaginary + rhs.getImaginary (  )  ) ;^[METHOD] add [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( isInfinite (  )  )  {^145^^^^^144^149^[REPLACE] if  ( isNaN (  )  )  {^[METHOD] conjugate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^146^^^^^144^149^[REPLACE] return NaN;^[METHOD] conjugate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real/c, imaginary/c ) ;^148^^^^^144^149^[REPLACE] return new Complex ( real, -imaginary ) ;^[METHOD] conjugate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( isNaN (  )  && rhs.isNaN (  )  )  {^187^^^^^186^218^[REPLACE] if  ( isNaN (  )  || rhs.isNaN (  )  )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^return NaN;^187^188^189^^^186^218^[ADD] if  ( isNaN (  )  || rhs.isNaN (  )  )  { return NaN; }^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^188^^^^^186^218^[REPLACE] return NaN;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double c = rhs.isNaN (  ) ;^191^^^^^186^218^[REPLACE] double c = rhs.getReal (  ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double d = rhs.getReal (  ) ;^192^^^^^186^218^[REPLACE] double d = rhs.getImaginary (  ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( c == 0.0 || d == 0.0 )  {^193^^^^^186^218^[REPLACE] if  ( c == 0.0 && d == 0.0 )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^194^^^^^186^218^[REPLACE] return NaN;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  (  isInfinite (  )  )  {^197^^^^^186^218^[REPLACE] if  ( rhs.isInfinite (  )  && !isInfinite (  )  )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return real;^198^^^^^186^218^[REPLACE] return ZERO;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  (   c     !=  Math.^201^^^^^186^218^[REPLACE] if  ( Math.abs ( c )  < Math.abs ( d )  )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^^201^202^203^204^^186^218^[ADD] if  ( Math.abs ( c )  < Math.abs ( d )  )  { if  ( d == 0.0 )  { return new Complex ( real/c, imaginary/c ) ; }^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( c  &&  1.0d )  {^210^^^^^201^217^[REPLACE] if  ( c == 0.0 )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex (real/d, -real/c ) ;^211^^^^^201^217^[REPLACE] return new Complex ( imaginary/d, -real/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( imaginary & d, -real & c ) ;^211^^^^^201^217^[REPLACE] return new Complex ( imaginary/d, -real/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex (  ( imaginary * q + real )  / real, ( imaginary - real * q )  / real ) ;^215^216^^^^201^217^[REPLACE] return new Complex (  ( imaginary * q + real )  / denominator, ( imaginary - real * q )  / denominator ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double q = d  ;^213^^^^^201^217^[REPLACE] double q = d / c;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double denominator = d * q  ||  c;^214^^^^^201^217^[REPLACE] double denominator = d * q + c;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( d  || denominator )  {^202^^^^^186^218^[REPLACE] if  ( d == 0.0 )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real, -imaginary ) ;^203^^^^^186^218^[REPLACE] return new Complex ( real/c, imaginary/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real | c, imaginary | c ) ;^203^^^^^186^218^[REPLACE] return new Complex ( real/c, imaginary/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex (  ( real * q + imaginary )  /real, ( imaginary * q - real )  /real ) ;^207^208^^^^186^218^[REPLACE] return new Complex (  ( real * q + imaginary )  / denominator, ( imaginary * q - real )  / denominator ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double q = c  ;^205^^^^^186^218^[REPLACE] double q = c / d;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double denominatorenominator = c * q + d;^206^^^^^186^218^[REPLACE] double denominator = c * q + d;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( d  != denominator )  {^202^^^^^186^218^[REPLACE] if  ( d == 0.0 )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex (imaginary/c, imaginary/c ) ;^203^^^^^186^218^[REPLACE] return new Complex ( real/c, imaginary/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( c  ||  0.0 )  {^210^^^^^186^218^[REPLACE] if  ( c == 0.0 )  {^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^^210^211^212^^^186^218^[ADD] if  ( c == 0.0 )  { return new Complex ( imaginary/d, -real/c ) ; }^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return true ;^211^^^^^186^218^[REPLACE] return new Complex ( imaginary/d, -real/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real ;^203^^^^^186^218^[REPLACE] return new Complex ( real/c, imaginary/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return  new Complex (  (  (  (  ( imaginary )  * q )  +  ( real )  )  / denominator ) ,  (  (  ( imaginary )  -  (  ( real )  * q )  )  / denominator )  )   /real, ( imaginary * q - real )  /real ) ;^207^208^^^^186^218^[REPLACE] return new Complex (  ( real * q + imaginary )  / denominator, ( imaginary * q - real )  / denominator ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( imaginary || d, -real || c ) ;^211^^^^^186^218^[REPLACE] return new Complex ( imaginary/d, -real/c ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex (  ( imaginary * q + real )  /real, ( imaginary - real * q )  /real ) ;^215^216^^^^186^218^[REPLACE] return new Complex (  ( imaginary * q + real )  / denominator, ( imaginary - real * q )  / denominator ) ;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^^205^206^^^^186^218^[ADD] double q = c / d; double denominator = c * q + d;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double denominator = d * q + c;^206^^^^^186^218^[REPLACE] double denominator = c * q + d;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^^206^^^^^186^218^[ADD] double denominator = c * q + d;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double q = d  ;^213^^^^^186^218^[REPLACE] double q = d / c;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double denominator = c * q + d;^214^^^^^186^218^[REPLACE] double denominator = d * q + c;^[METHOD] divide [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^double d = rhs.getImaginary (  ) ;^239^^^^^238^263^[REPLACE] boolean ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^if  (rhs  ||  other )  {^241^^^^^238^263^[REPLACE] if  ( this == other )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^ret = true;ret = false;^241^242^243^244^^238^263^[ADD] if  ( this == other )  { ret = true; } else if  ( other == null )  { ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^}  else {^243^^^^^238^263^[REPLACE] } else if  ( other == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REMOVE]^if  (  ( this )  == other )  {     ret = true; }else     if  ( other == null )  {         ret = false;     }else {         try {             Complex rhs =  (  ( Complex )   ( other )  ) ;             if  ( rhs.isNaN (  )  )  {                 ret = this.isNaN (  ) ;             }else {                 ret =  (  ( doubleToRawLongBits ( real )  )  ==  ( doubleToRawLongBits ( rhs.getReal (  )  )  )  )  &&  (  ( doubleToRawLongBits ( imaginary )  )  ==  ( doubleToRawLongBits ( rhs.getImaginary (  )  )  )  ) ;             }         } catch  ( ClassCastException ex )  {             ret = false;         }     }^243^^^^^238^263^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( isNaN (  )  )  {^248^^^^^238^263^[REPLACE] if  ( rhs.isNaN (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^248^249^250^251^252^238^263^[ADD] if  ( rhs.isNaN (  )  )  { ret = this.isNaN (  ) ; } else { ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )   |  ( Double.doubleToRawLongBits ( imaginary )  == Double.doubleToRawLongBits ( rhs.getImaginary (  )  )  ) ;^251^252^253^254^^238^263^[REPLACE] ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  && ( Double.doubleToRawLongBits ( imaginary )  == Double.doubleToRawLongBits ( rhs.getImaginary (  )  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret  =  ret ;^249^^^^^238^263^[REPLACE] ret = this.isNaN (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^249^^^^^238^263^[ADD] ret = this.isNaN (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^Complex rhs =  ( Complex ) other;ret = this.isNaN (  ) ;^246^247^248^249^250^238^263^[ADD] try { Complex rhs =  ( Complex ) other; if  ( rhs.isNaN (  )  )  { ret = this.isNaN (  ) ; } else {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  ;^251^252^253^254^^238^263^[REPLACE] ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  && ( Double.doubleToRawLongBits ( imaginary )  == Double.doubleToRawLongBits ( rhs.getImaginary (  )  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret ;^249^^^^^238^263^[REPLACE] ret = this.isNaN (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^boolean ret;^247^^^^^238^263^[REPLACE] Complex rhs =  ( Complex ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^247^^^^^238^263^[ADD] Complex rhs =  ( Complex ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^251^252^253^^^238^263^[ADD] ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  && ( Double.doubleToRawLongBits ( imaginary )  ==^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^258^^^^^238^263^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^244^^^^^238^263^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret  = null ;^249^^^^^238^263^[REPLACE] ret = this.isNaN (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  || ( Double.doubleToRawLongBits ( imaginary )  == Double.doubleToRawLongBits ( rhs.getImaginary (  )  )  ) ;^251^252^253^254^^238^263^[REPLACE] ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  && ( Double.doubleToRawLongBits ( imaginary )  == Double.doubleToRawLongBits ( rhs.getImaginary (  )  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^256^257^258^^^238^263^[ADD] catch  ( ClassCastException ex )  {  ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^ret = false;^242^^^^^238^263^[REPLACE] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^242^^^^^238^263^[ADD] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^ret = this.isNaN (  ) ;^248^249^250^251^252^238^263^[ADD] if  ( rhs.isNaN (  )  )  { ret = this.isNaN (  ) ; } else { ret =  ( Double.doubleToRawLongBits ( real )  == Double.doubleToRawLongBits ( rhs.getReal (  )  )  )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[ADD]^^258^^^^^238^263^[ADD] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^return real;^262^^^^^238^263^[REPLACE] return ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Complex   [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( isInfinite (  )  )  {^273^^^^^272^278^[REPLACE] if  ( isNaN (  )  )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return 5;^274^^^^^272^278^[REPLACE] return 7;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return 4;^274^^^^^272^278^[REPLACE] return 7;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return 37 *  ( 17 *   imaginary    + MathUtils.^276^277^^^^272^278^[REPLACE] return 37 *  ( 17 * MathUtils.hash ( imaginary )  + MathUtils.hash ( real )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^286^^^^^285^287^[REPLACE] return imaginary;^[METHOD] getImaginary [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ret;^295^^^^^294^296^[REPLACE] return real;^[METHOD] getReal [TYPE] double [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return Double.isInfinite ( real )  || Double.isNaN ( imaginary ) ;^306^^^^^305^307^[REPLACE] return Double.isNaN ( real )  || Double.isNaN ( imaginary ) ;^[METHOD] isNaN [TYPE] boolean [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return !isNaN (  )  && ( Double.isNaN ( real )  || Double.isInfinite ( imaginary )  ) ;^319^320^^^^318^321^[REPLACE] return !isNaN (  )  && ( Double.isInfinite ( real )  || Double.isInfinite ( imaginary )  ) ;^[METHOD] isInfinite [TYPE] boolean [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( isNaN (  )  ) {^348^^^^^347^353^[REPLACE] if  ( isNaN (  )  || rhs.isNaN (  )  )  {^[METHOD] multiply [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^return NaN;^348^349^350^^^347^353^[ADD] if  ( isNaN (  )  || rhs.isNaN (  )  )  { return NaN; }^[METHOD] multiply [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^349^^^^^347^353^[REPLACE] return NaN;^[METHOD] multiply [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real * rhs.real -real, real * rhs.imaginary + imaginary * rhs.real ) ;^351^352^^^^347^353^[REPLACE] return new Complex ( real * rhs.real - imaginary * rhs.imaginary, real * rhs.imaginary + imaginary * rhs.real ) ;^[METHOD] multiply [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( isInfinite (  )  )  {^364^^^^^363^369^[REPLACE] if  ( isNaN (  )  )  {^[METHOD] negate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[ADD]^return NaN;^364^365^366^^^363^369^[ADD] if  ( isNaN (  )  )  { return NaN; }^[METHOD] negate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^365^^^^^363^369^[REPLACE] return NaN;^[METHOD] negate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return  new Complex (  (  ( imaginary )  / d ) ,  (  ( - ( real )  )  / c )  )  ;^368^^^^^363^369^[REPLACE] return new Complex ( -real, -imaginary ) ;^[METHOD] negate [TYPE] Complex [PARAMETER] [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^if  ( isNaN (  )  && rhs.isNaN (  )  )  {^390^^^^^389^396^[REPLACE] if  ( isNaN (  )  || rhs.isNaN (  )  )  {^[METHOD] subtract [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return ZERO;^391^^^^^389^396^[REPLACE] return NaN;^[METHOD] subtract [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
[REPLACE]^return new Complex ( real - rhs.equals (  ) , imaginary - rhs.getImaginary (  )  ) ;^394^395^^^^389^396^[REPLACE] return new Complex ( real - rhs.getReal (  ) , imaginary - rhs.getImaginary (  )  ) ;^[METHOD] subtract [TYPE] Complex [PARAMETER] Complex rhs [CLASS] Complex   [TYPE]  boolean false  true  [TYPE]  double c  d  denominator  imaginary  q  real  [TYPE]  long serialVersionUID  [TYPE]  Complex I  NaN  ONE  ZERO  rhs 
