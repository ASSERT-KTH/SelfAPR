[REPLACE]^if  ( z.add (  )  )  {^443^^^^^442^460^[REPLACE] if  ( z.isNaN (  )  )  {^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return Complex.NaN;  ;^444^^^^^442^460^[REPLACE] return Complex.NaN;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^double a = z.isNaN (  ) ;^447^^^^^442^460^[REPLACE] double a = z.getReal (  ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^double b = z.getReal (  ) ;^448^^^^^442^460^[REPLACE] double b = z.getImaginary (  ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^if  ( a == 0.0 || b == 0.0 )  {^449^^^^^442^460^[REPLACE] if  ( a == 0.0 && b == 0.0 )  {^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return new Complex ( 0.0D, 0.0D ) ;^450^^^^^442^460^[REPLACE] return new Complex ( 0.0, 0.0 ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return new Complex ( 0.0d, 0.0d ) ;^450^^^^^442^460^[REPLACE] return new Complex ( 0.0, 0.0 ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^double t = Math.sqrt (  ( Math.abs ( a )  + z.abs (  )  )   2.0 ) ;^453^^^^^442^460^[REPLACE] double t = Math.sqrt (  ( Math.abs ( a )  + z.abs (  )  )  / 2.0 ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^if  ( a  <=  0.0d )  {^454^^^^^442^460^[REPLACE] if  ( a >= 0.0 )  {^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return new Complex ( Math.abs ( b )    ( 2.0 * t ) , MathUtils.indicator ( b )  * t ) ;^457^458^^^^454^459^[REPLACE] return new Complex ( Math.abs ( b )  /  ( 2.0 * t ) , MathUtils.indicator ( b )  * t ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return new Complex ( t, b   ( 2.0 * t )  ) ;^455^^^^^442^460^[REPLACE] return new Complex ( t, b /  ( 2.0 * t )  ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return  new Complex ( 2.0, 0.0 )   ) ;^455^^^^^442^460^[REPLACE] return new Complex ( t, b /  ( 2.0 * t )  ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
[REPLACE]^return new Complex ( Math.abs ( b )    ( 3.0d * t ) , MathUtils.indicator ( b )  * t ) ;^457^458^^^^442^460^[REPLACE] return new Complex ( Math.abs ( b )  /  ( 2.0 * t ) , MathUtils.indicator ( b )  * t ) ;^[METHOD] sqrt [TYPE] Complex [PARAMETER] Complex z [CLASS] ComplexUtils   [TYPE]  boolean false  true  [TYPE]  double a  b  t  [TYPE]  Complex z 
