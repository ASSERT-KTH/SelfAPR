[REPLACE]^private RandomGenerator randomGenerator  = null ;^30^^^^^^^[REPLACE] private RandomGenerator randomGenerator = null;^ [CLASS] RandomAdaptor  
[REPLACE]^this.randomGenerator =  null;^43^^^^^42^44^[REPLACE] this.randomGenerator = randomGenerator;^[METHOD] <init> [TYPE] RandomGenerator) [PARAMETER] RandomGenerator randomGenerator [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[ADD]^^43^^^^^42^44^[ADD] this.randomGenerator = randomGenerator;^[METHOD] <init> [TYPE] RandomGenerator) [PARAMETER] RandomGenerator randomGenerator [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator.nextDouble (  ) ;^54^^^^^53^55^[REPLACE] return new RandomAdaptor ( randomGenerator ) ;^[METHOD] createAdaptor [TYPE] Random [PARAMETER] RandomGenerator randomGenerator [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator.nextDouble (  ) ;^67^^^^^66^68^[REPLACE] return randomGenerator.nextBoolean (  ) ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^randomGenerator.nextInt ( bytes ) ;^79^^^^^78^80^[REPLACE] randomGenerator.nextBytes ( bytes ) ;^[METHOD] nextBytes [TYPE] void [PARAMETER] byte[] bytes [CLASS] RandomAdaptor   [TYPE]  byte[] bytes  [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator .nextBoolean (  )  ;^92^^^^^91^93^[REPLACE] return randomGenerator.nextDouble (  ) ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator.nextLong (  ) ;^105^^^^^104^106^[REPLACE] return randomGenerator.nextFloat (  ) ;^[METHOD] nextFloat [TYPE] float [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator.nextBoolean (  ) ;^119^^^^^118^120^[REPLACE] return randomGenerator.nextGaussian (  ) ;^[METHOD] nextGaussian [TYPE] double [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator .nextInt (  )  ;^132^^^^^131^133^[REPLACE] return randomGenerator.nextInt (  ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator.nextDouble (  ) ;^147^^^^^146^148^[REPLACE] return randomGenerator.nextInt ( n ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] int n [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  int n  [TYPE]  boolean false  true 
[REPLACE]^return randomGenerator .nextFloat (  )  ;^160^^^^^159^161^[REPLACE] return randomGenerator.nextLong (  ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  boolean false  true 
[REPLACE]^if  ( randomGenerator == null )  {^171^^^^^170^174^[REPLACE] if  ( randomGenerator != null )  {^[METHOD] setSeed [TYPE] void [PARAMETER] long seed [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  long seed  [TYPE]  boolean false  true 
[REPLACE]^randomGenerator.nextInt ( seed ) ;^172^^^^^170^174^[REPLACE] randomGenerator.setSeed ( seed ) ;^[METHOD] setSeed [TYPE] void [PARAMETER] long seed [CLASS] RandomAdaptor   [TYPE]  RandomGenerator randomGenerator  [TYPE]  long seed  [TYPE]  boolean false  true 
