[REPLACE]^private static final long serialVersionUID  = null ;^37^^^^^^^[REPLACE] private static final long serialVersionUID = -8007759382851708045L;^ [CLASS] AbstractUnivariateStatistic  
[REPLACE]^if  ( values != null )  {^76^^^^^74^99^[REPLACE] if  ( values == null )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return ;^77^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException ( "length cannot be negative" )  ;^77^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  (length  >  0 )  {^80^^^^^74^99^[REPLACE] if  ( begin < 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^80^81^82^^^74^99^[ADD] if  ( begin < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException ( "length cannot be negative" )  ;^81^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^81^^^^^74^99^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( begin - 1 < 0 )  {^84^^^^^74^99^[REPLACE] if  ( length < 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^84^85^86^^^74^99^[ADD] if  ( length < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^85^^^^^74^99^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( begin + length + 3 > values.length + 3 )  {^88^^^^^74^99^[REPLACE] if  ( begin + length > values.length )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return ;^89^90^^^^74^99^[REPLACE] throw new IllegalArgumentException ( "begin + length > values.length" ) ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( begin /  2 == 0 )  {^93^^^^^74^99^[REPLACE] if  ( length == 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return true;^94^^^^^74^99^[REPLACE] return false;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return true;  ;^97^^^^^74^99^[REPLACE] return true;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
