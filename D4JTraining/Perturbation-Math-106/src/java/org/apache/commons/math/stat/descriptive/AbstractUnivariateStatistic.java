[REPLACE]^private static  long serialVersionUID = -8007759382851708045L;^37^^^^^^^[REPLACE] private static final long serialVersionUID = -8007759382851708045L;^ [CLASS] AbstractUnivariateStatistic  
[REPLACE]^test ( values, 0 >> 3, 0 >> 3 ) ;^43^^^^^42^45^[REPLACE] test ( values, 0, 0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] AbstractUnivariateStatistic   [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return evaluate ( values, 0 , values.length ) ;^44^^^^^42^45^[REPLACE] return evaluate ( values, 0, values.length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] AbstractUnivariateStatistic   [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( values != null )  {^76^^^^^74^99^[REPLACE] if  ( values == null )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REMOVE]^if  ( length < 0 )  {     throw new IllegalArgumentException ( "length cannot be negative" ) ; }^76^^^^^74^99^[REMOVE] ^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException ( "begin + length > values.length" ) ; ;^77^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^77^^^^^74^99^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( begin  != length )  {^80^^^^^74^99^[REPLACE] if  ( begin < 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException ( "begin + length > values.length" ) ; ;^81^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^81^^^^^74^99^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return ;^81^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( length + 4 < 0 )  {^84^^^^^74^99^[REPLACE] if  ( length < 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException ( "begin + length > values.length" ) ; ;^85^^^^^74^99^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^85^^^^^74^99^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( begin + length + 5 > values.length + 5 )  {^88^^^^^74^99^[REPLACE] if  ( begin + length > values.length )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[ADD]^^88^89^90^91^^74^99^[ADD] if  ( begin + length > values.length )  { throw new IllegalArgumentException ( "begin + length > values.length" ) ; }^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^89^90^^^^74^99^[REPLACE] throw new IllegalArgumentException ( "begin + length > values.length" ) ;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^if  ( length - 4 == 0 )  {^93^^^^^74^99^[REPLACE] if  ( length == 0 )  {^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return true;^94^^^^^74^99^[REPLACE] return false;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return false;^97^^^^^74^99^[REPLACE] return true;^[METHOD] test [TYPE] boolean [PARAMETER] final double[] values final int begin final int length [CLASS] AbstractUnivariateStatistic   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
