[REPLACE]^private  BlockingQueue<QueueEntry> queue;^35^^^^^^^[REPLACE] private final BlockingQueue<QueueEntry> queue;^ [CLASS] WebServiceClientAsync  
[REPLACE]^private  boolean threadPerTask;^36^^^^^^^[REPLACE] private final boolean threadPerTask;^ [CLASS] WebServiceClientAsync  
[REPLACE]^private  TaskExecutor executor;^37^^^^^^^[REPLACE] private final TaskExecutor executor;^ [CLASS] WebServiceClientAsync  
[REPLACE]^this ( serverConfig, true ) ;^40^^^^^39^41^[REPLACE] this ( serverConfig, null ) ;^[METHOD] <init> [TYPE] WebServiceConfig) [PARAMETER] WebServiceConfig serverConfig [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceConfig serverConfig 
[ADD]^^40^^^^^39^41^[ADD] this ( serverConfig, null ) ;^[METHOD] <init> [TYPE] WebServiceConfig) [PARAMETER] WebServiceConfig serverConfig [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceConfig serverConfig 
[REPLACE]^this ( serverConfig, null ) ;^43^^^^^42^44^[REPLACE] this ( new WebServiceClient ( serverConfig, logLevel )  ) ;^[METHOD] <init> [TYPE] Level) [PARAMETER] WebServiceConfig serverConfig Level logLevel [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  Level logLevel  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceConfig serverConfig 
[REPLACE]^queue  =  queue ;^47^^^^^46^52^[REPLACE] queue = new LinkedBlockingQueue<QueueEntry> (  ) ;^[METHOD] <init> [TYPE] WebServiceClient) [PARAMETER] WebServiceClient client [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceClient client  [TYPE]  QueueConsumer consumer 
[REPLACE]^this.threadPerTask = false;^48^^^^^46^52^[REPLACE] this.threadPerTask = true;^[METHOD] <init> [TYPE] WebServiceClient) [PARAMETER] WebServiceClient client [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceClient client  [TYPE]  QueueConsumer consumer 
[REPLACE]^executor  = null ;^50^^^^^46^52^[REPLACE] executor = getExecutor (  ) ;^[METHOD] <init> [TYPE] WebServiceClient) [PARAMETER] WebServiceClient client [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceClient client  [TYPE]  QueueConsumer consumer 
[REPLACE]^executor = getExecutor (  ) ;^51^^^^^46^52^[REPLACE] executor.execute ( consumer ) ;^[METHOD] <init> [TYPE] WebServiceClient) [PARAMETER] WebServiceClient client [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceClient client  [TYPE]  QueueConsumer consumer 
[REPLACE]^return threadPerTask ?  new SingleThreadExecutor (  )   : new SingleThreadExecutor (  ) ;^55^^^^^54^56^[REPLACE] return threadPerTask ? new ThreadPerTaskExecutor (  )  : new SingleThreadExecutor (  ) ;^[METHOD] getExecutor [TYPE] TaskExecutor [PARAMETER] [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true 
[ADD]^queue.put ( new QueueEntry ( callSpec, request, responseCallback )  ) ;^60^61^62^63^64^58^65^[ADD] try { queue.put ( new QueueEntry ( callSpec, request, responseCallback )  ) ; } catch  ( InterruptedException e )  { throw new WebServiceSystemException  (" ")  ; }^[METHOD] callAsync [TYPE] void [PARAMETER] WebServiceCallSpec callSpec WebServiceRequest request ResponseCallback responseCallback [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceRequest request  [TYPE]  WebServiceCallSpec callSpec  [TYPE]  ResponseCallback responseCallback  [TYPE]  InterruptedException e 
[REPLACE]^executor.execute ( consumer ) ;^61^^^^^58^65^[REPLACE] queue.put ( new QueueEntry ( callSpec, request, responseCallback )  ) ;^[METHOD] callAsync [TYPE] void [PARAMETER] WebServiceCallSpec callSpec WebServiceRequest request ResponseCallback responseCallback [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceRequest request  [TYPE]  WebServiceCallSpec callSpec  [TYPE]  ResponseCallback responseCallback  [TYPE]  InterruptedException e 
[REPLACE]^return ;^63^^^^^58^65^[REPLACE] throw new WebServiceSystemException  (" ")  ;^[METHOD] callAsync [TYPE] void [PARAMETER] WebServiceCallSpec callSpec WebServiceRequest request ResponseCallback responseCallback [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceRequest request  [TYPE]  WebServiceCallSpec callSpec  [TYPE]  ResponseCallback responseCallback  [TYPE]  InterruptedException e 
[ADD]^^63^^^^^58^65^[ADD] throw new WebServiceSystemException  (" ")  ;^[METHOD] callAsync [TYPE] void [PARAMETER] WebServiceCallSpec callSpec WebServiceRequest request ResponseCallback responseCallback [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true  [TYPE]  WebServiceRequest request  [TYPE]  WebServiceCallSpec callSpec  [TYPE]  ResponseCallback responseCallback  [TYPE]  InterruptedException e 
[REPLACE]^executor .shutdownNow (  )  ;^68^^^^^67^69^[REPLACE] executor.shutdownNow (  ) ;^[METHOD] shutdownNow [TYPE] void [PARAMETER] [CLASS] WebServiceClientAsync   [TYPE]  BlockingQueue queue  [TYPE]  TaskExecutor executor  [TYPE]  boolean false  threadPerTask  true 
