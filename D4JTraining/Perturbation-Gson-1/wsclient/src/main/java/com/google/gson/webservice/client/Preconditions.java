[REPLACE]^if  ( !true )  {^29^^^^^28^32^[REPLACE] if  ( !condition )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition [CLASS] Preconditions   [TYPE]  boolean condition  false  true 
[ADD]^^29^30^31^^^28^32^[ADD] if  ( !condition )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition [CLASS] Preconditions   [TYPE]  boolean condition  false  true 
[REPLACE]^return ;^30^^^^^28^32^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition [CLASS] Preconditions   [TYPE]  boolean condition  false  true 
[REPLACE]^if  ( condition )  {^35^^^^^34^62^[REPLACE] if  ( !condition )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^if  ( !condition )  {^46^^^^^34^62^[REPLACE] if  ( first )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^sb.append ( "\n" ) ;^49^^^^^46^50^[REPLACE] sb.append ( "," ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^49^^^^^46^50^[ADD] sb.append ( "," ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^first = true;^47^^^^^34^62^[REPLACE] first = false;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^47^^^^^34^62^[ADD] first = false;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^sb.append ( "HttpURLConnection Details\n" ) ;sb.append ( "ResponseCode:" + conn.getResponseCode (  )  ) ;sb.append ( ", ContentType: " + conn.getContentType (  )  + "\n" ) ;Map<String, List<String>> headerFields = conn.getHeaderFields (  ) ;^37^38^39^40^41^34^62^[ADD] try { sb.append ( "HttpURLConnection Details\n" ) ; sb.append ( "ResponseCode:" + conn.getResponseCode (  )  ) ; sb.append ( ", ContentType: " + conn.getContentType (  )  + "\n" ) ; Map<String, List<String>> headerFields = conn.getHeaderFields (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^first = false;sb.append ( "," ) ;^46^47^48^49^50^34^62^[ADD] if  ( first )  { first = false; } else { sb.append ( "," ) ; }^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^Map<String, List<String>> headerFields = conn .getContentType (  )  ;^41^^^^^34^62^[REPLACE] Map<String, List<String>> headerFields = conn.getHeaderFields (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^41^^^^^34^62^[ADD] Map<String, List<String>> headerFields = conn.getHeaderFields (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^for  ( Entry<String, List<String>> header : headerFields.entrySet (  )  )  { sb.append ( header.getKey (  )  ) .append ( ":" ) ;^42^^^^^34^62^[REPLACE] for  ( Entry<String, List<String>> header : headerFields.entrySet (  )  )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^boolean first = false;^44^^^^^34^62^[REPLACE] boolean first = true;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^for  ( String value : header.getValue (  )  )  { if  ( first )  {^45^^^^^34^62^[REPLACE] for  ( String value : header.getValue (  )  )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^byte[] data = readInByteArray ( conn.getContentType (  )  ) ;^55^^^^^34^62^[REPLACE] byte[] data = readInByteArray ( conn.getInputStream (  )  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^55^^^^^34^62^[ADD] byte[] data = readInByteArray ( conn.getInputStream (  )  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^ByteArrayOutputStream dst = new ByteArrayOutputStream (  ) ;^36^^^^^34^62^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^36^^^^^34^62^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^Map<String, List<String>> headerFields = conn.getContentType (  ) ;^41^^^^^34^62^[REPLACE] Map<String, List<String>> headerFields = conn.getHeaderFields (  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^44^^^^^34^62^[ADD] boolean first = true;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^return ;^60^^^^^34^62^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^if  ( true )  {^46^^^^^34^62^[REPLACE] if  ( first )  {^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^46^47^48^49^50^34^62^[ADD] if  ( first )  { first = false; } else { sb.append ( "," ) ; }^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^45^46^47^48^49^34^62^[ADD] for  ( String value : header.getValue (  )  )  { if  ( first )  { first = false; } else { sb.append ( "," ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^ByteArrayOutputStream dst = new ByteArrayOutputStream (  ) ;^55^^^^^34^62^[REPLACE] byte[] data = readInByteArray ( conn.getInputStream (  )  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^55^56^^^^34^62^[ADD] byte[] data = readInByteArray ( conn.getInputStream (  )  ) ; sb.append ( new String ( data )  ) ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^60^^^^^34^62^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[ADD]^^57^58^59^^^34^62^[ADD] catch  ( IOException e )  {  }^[METHOD] checkArgument [TYPE] void [PARAMETER] boolean condition HttpURLConnection conn [CLASS] Preconditions   [TYPE]  byte[] data  [TYPE]  Entry header  [TYPE]  boolean condition  false  first  true  [TYPE]  HttpURLConnection conn  [TYPE]  StringBuilder sb  [TYPE]  String value  [TYPE]  IOException e  [TYPE]  Map headerFields 
[REPLACE]^if  ( obj != false )  {^65^^^^^64^68^[REPLACE] if  ( obj == null )  {^[METHOD] checkNotNull [TYPE] void [PARAMETER] Object obj [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  Object obj 
[REPLACE]^return ;^66^^^^^64^68^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkNotNull [TYPE] void [PARAMETER] Object obj [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  Object obj 
[REPLACE]^byte[] data = readInByteArray ( conn.getInputStream (  )  ) ;^71^^^^^70^78^[REPLACE] ByteArrayOutputStream dst = new ByteArrayOutputStream (  ) ;^[METHOD] readInByteArray [TYPE] byte[] [PARAMETER] InputStream src [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  InputStream src  [TYPE]  ByteArrayOutputStream dst  [TYPE]  IOException e 
[ADD]^Streams.copy ( src, dst, true, true ) ;^72^73^74^^76^70^78^[ADD] try { Streams.copy ( src, dst, true, true ) ; } catch  ( IOException e )  { }^[METHOD] readInByteArray [TYPE] byte[] [PARAMETER] InputStream src [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  InputStream src  [TYPE]  ByteArrayOutputStream dst  [TYPE]  IOException e 
[REPLACE]^Streams.copy ( src, dst, false, false ) ;^73^^^^^70^78^[REPLACE] Streams.copy ( src, dst, true, true ) ;^[METHOD] readInByteArray [TYPE] byte[] [PARAMETER] InputStream src [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  InputStream src  [TYPE]  ByteArrayOutputStream dst  [TYPE]  IOException e 
[ADD]^^74^75^76^^^70^78^[ADD] catch  ( IOException e )  {  }^[METHOD] readInByteArray [TYPE] byte[] [PARAMETER] InputStream src [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  InputStream src  [TYPE]  ByteArrayOutputStream dst  [TYPE]  IOException e 
[REPLACE]^return dst.ByteArrayOutputStream (  ) ;^77^^^^^70^78^[REPLACE] return dst.toByteArray (  ) ;^[METHOD] readInByteArray [TYPE] byte[] [PARAMETER] InputStream src [CLASS] Preconditions   [TYPE]  boolean false  true  [TYPE]  InputStream src  [TYPE]  ByteArrayOutputStream dst  [TYPE]  IOException e 
