[REPLACE]^Class<? super T> rawType;^47^^^^^^^[REPLACE] final Class<? super T> rawType;^ [CLASS] TypeToken SimpleTypeToken  
[REPLACE]^this.type  = null ;^65^^^^^64^67^[REPLACE] this.type = getSuperclassTypeParameter ( getClass (  )  ) ;^[METHOD] <init> [TYPE] TypeToken() [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  boolean false  true 
[REPLACE]^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ; ;^66^^^^^64^67^[REPLACE] this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[METHOD] <init> [TYPE] TypeToken() [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  boolean false  true 
[REPLACE]^this.rawType =  ( Class<? super T> )  getRawType ( type ) ; ;^74^^^^^73^76^[REPLACE] this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  boolean false  true 
[REPLACE]^this.type =  null;^75^^^^^73^76^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  boolean false  true 
[REPLACE]^return type.equals ( t.type ) ;^372^^^^^371^373^[REPLACE] super ( type ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  boolean false  true 
[REPLACE]^if  ( o != null )  {^79^^^^^78^83^[REPLACE] if  ( o == null )  {^[METHOD] nonNull [TYPE] <T> [PARAMETER] T o String message [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  T o 
[REPLACE]^return ;^80^^^^^78^83^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] nonNull [TYPE] <T> [PARAMETER] T o String message [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  T o 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^80^^^^^78^83^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] nonNull [TYPE] <T> [PARAMETER] T o String message [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  T o 
[REPLACE]^return type.hashCode (  ) ;^82^^^^^78^83^[REPLACE] return o;^[METHOD] nonNull [TYPE] <T> [PARAMETER] T o String message [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type type  [TYPE]  Class rawType  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  T o 
[REPLACE]^Type superclass = null.getGenericInterfaces (  ) ;^89^^^^^88^94^[REPLACE] Type superclass = subclass.getGenericSuperclass (  ) ;^[METHOD] getSuperclassTypeParameter [TYPE] Type [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! superclass instanceof Class<?> )  {^90^^^^^88^94^[REPLACE] if  ( superclass instanceof Class<?> )  {^[METHOD] getSuperclassTypeParameter [TYPE] Type [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return ;^91^^^^^88^94^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getSuperclassTypeParameter [TYPE] Type [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[ADD]^^91^^^^^88^94^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] getSuperclassTypeParameter [TYPE] Type [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( ParameterizedType )  superclass )  .getRawType ( superclass )  [0];^93^^^^^88^94^[REPLACE] return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0];^[METHOD] getSuperclassTypeParameter [TYPE] Type [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return  new SimpleTypeToken<T> ( type )  ;^100^^^^^99^101^[REPLACE] return new SimpleTypeToken<Object> ( subclass ) ;^[METHOD] fromSuperclassTypeParameter [TYPE] TypeToken [PARAMETER] Class<?> subclass [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! type instanceof Class<?> )  {^104^^^^^103^131^[REPLACE] if  ( type instanceof Class<?> )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^}  else {^107^^^^^103^131^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( ! type instanceof GenericArrayType )  {^118^^^^^103^131^[REPLACE] } else if  ( type instanceof GenericArrayType )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^}   GenericArrayType genericArrayType =  ( GenericArrayType )  type;^118^119^^^^103^131^[ADD] else if  ( type instanceof GenericArrayType )  { GenericArrayType genericArrayType =  ( GenericArrayType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return ;^128^129^^^^118^130^[REPLACE] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^throw buildUnexpectedTypeError ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^[REPLACE] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return rawArrayType.Object (  ) ;^126^^^^^103^131^[REPLACE] return rawArrayType.getClass (  ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance (^119^^^^^103^131^[REPLACE] GenericArrayType genericArrayType =  ( GenericArrayType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 - 2 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^124^125^^^^103^131^[ADD] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return rawArrayType .equals ( rawArrayType )  ;^126^^^^^103^131^[REPLACE] return rawArrayType.getClass (  ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^119^^^^^103^131^[ADD] GenericArrayType genericArrayType =  ( GenericArrayType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 1 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^throw buildUnexpectedTypeError ( rawType, Class.class ) ; ;^128^129^^^^103^131^[REPLACE] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! rawType instanceof Class<?> )  {^114^^^^^103^131^[REPLACE] if  ( rawType instanceof Class<?> )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^114^115^116^^^103^131^[ADD] if  ( rawType instanceof Class<?> )  { return  ( Class<?> )  rawType; }^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return  ( Class<?> )  type;^115^^^^^103^131^[REPLACE] return  ( Class<?> )  rawType;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^ParameterizedType ptype = null;^108^^^^^103^131^[REPLACE] ParameterizedType parameterizedType =  ( ParameterizedType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Type rawType = parameterizedType.getActualTypeArguments (  ) ;^113^^^^^103^131^[REPLACE] Type rawType = parameterizedType.getRawType (  ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ; ;^117^^^^^103^131^[REPLACE] throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^}  else {^118^^^^^103^131^[REPLACE] } else if  ( type instanceof GenericArrayType )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^}^118^119^^^^103^131^[ADD] else if  ( type instanceof GenericArrayType )  { GenericArrayType genericArrayType =  ( GenericArrayType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^throw buildUnexpectedTypeError ( rawType, Class.class ) ; ;^128^129^^^^118^130^[REPLACE] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 3 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^108^^^^^103^131^[ADD] ParameterizedType parameterizedType =  ( ParameterizedType )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Type rawType = parameterizedType .getRawType ( superclass )  ;^113^^^^^103^131^[REPLACE] Type rawType = parameterizedType.getRawType (  ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0L ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^128^129^^^^103^131^[ADD] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return  ( Class<?> )  rawType;^106^^^^^103^131^[REPLACE] return  ( Class<?> )  type;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( ! type instanceof ParameterizedType )  {^107^^^^^103^131^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^128^129^^^^118^130^[ADD] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 4 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 * 4 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return ;^128^129^^^^103^131^[REPLACE] throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! type instanceof Class<?> )  {^114^^^^^103^131^[REPLACE] if  ( rawType instanceof Class<?> )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^117^^^^^103^131^[ADD] throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( ! type instanceof GenericArrayType )  {^118^^^^^103^131^[REPLACE] } else if  ( type instanceof GenericArrayType )  {^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object raw  getRawType ( genericArrayType.getGenericComponentType (  )  , 3 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[ADD]^^113^^^^^103^131^[ADD] Type rawType = parameterizedType.getRawType (  ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 / 3 ) ;^124^125^^^^103^131^[REPLACE] Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[METHOD] getRawType [TYPE] Class [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType parameterizedType  [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  Object rawArrayType  [TYPE]  GenericArrayType genericArrayType  [TYPE]  boolean false  true 
[REPLACE]^return new SimpleTypeToken<T> ( type ) ;^137^^^^^136^138^[REPLACE] return rawType;^[METHOD] getRawType [TYPE] Class [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return true;^144^^^^^143^145^[REPLACE] return type;^[METHOD] getType [TYPE] Type [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type rawType  superclass  type  [TYPE]  Class rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return new SimpleTypeToken<T> ( type ) ;^151^^^^^150^152^[REPLACE] return isAssignableFrom (  ( Type )  cls ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Class<?> cls [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( from != null )  {^158^^^^^157^178^[REPLACE] if  ( from == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[ADD]^^158^159^160^^^157^178^[ADD] if  ( from == null )  { return false; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return true;^159^^^^^157^178^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( type .getClass (  )   )  {^162^^^^^157^178^[REPLACE] if  ( type.equals ( from )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[ADD]^^162^163^164^^^157^178^[ADD] if  ( type.equals ( from )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return false;^163^^^^^157^178^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! type instanceof Class<?> )  {^166^^^^^157^178^[REPLACE] if  ( type instanceof Class<?> )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( ! superclass instanceof ParameterizedType )  {^168^^^^^157^178^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^}  else {^171^^^^^157^178^[REPLACE] } else if  ( type instanceof GenericArrayType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^throw buildUnexpectedTypeError ( rawType, Class.class ) ; ;^175^176^^^^157^178^[REPLACE] throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[ADD]^^175^176^^^^157^178^[ADD] throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return rawType .isAssignableFrom ( from , null , null )  && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^172^173^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return ;^175^176^^^^157^178^[REPLACE] throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return isAssignableFrom ( from,  ( ParameterizedType )  type,  new String, Type> ( typeVarMap )   ) ;^169^170^^^^157^178^[REPLACE] return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[ADD]^}   && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^171^172^173^174^175^157^178^[ADD] else if  ( type instanceof GenericArrayType )  { return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ; } else { throw buildUnexpectedTypeError (^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return rawType.isAssignableFrom ( getRawType ( superclass )  ) || isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return   isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return rawType.isAssignableFrom ( getRawType ( superclass )  ) ;^167^^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^}  else {^168^^^^^157^178^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return rawType .isAssignableFrom ( from , true , true )  && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^[REPLACE] return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return isAssignableFrom ( null.getType (  )  ) ;^184^^^^^183^185^[REPLACE] return isAssignableFrom ( token.getType (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] TypeToken<?> token [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  type  [TYPE]  Class cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  TypeToken token 
[REPLACE]^Type[] toArgs = to.getActualTypeArguments (  ) ;^192^^^^^191^210^[REPLACE] Type toGenericComponentType = to.getGenericComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( null.isArray (  )  )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^^199^200^^^^191^210^[ADD] while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^classType =  true.getComponentType (  ) ;^200^^^^^191^210^[REPLACE] classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^^200^^^^^191^210^[ADD] classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! toGenericComponentType instanceof ParameterizedType )  {^193^^^^^191^210^[REPLACE] if  ( toGenericComponentType instanceof ParameterizedType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^Type t = from;t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^193^194^195^196^^191^210^[ADD] if  ( toGenericComponentType instanceof ParameterizedType )  { Type t = from; if  ( from instanceof GenericArrayType )  { t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( null .isAssignableFrom ( toGenericComponentType )   )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^classType =  this.getComponentType (  ) ;^200^^^^^191^210^[REPLACE] classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! from instanceof GenericArrayType )  {^195^^^^^191^210^[REPLACE] if  ( from instanceof GenericArrayType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^classType =  null.getComponentType (  ) ;^200^^^^^191^210^[REPLACE] classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( ! toGenericComponentType instanceof Class<?> )  {^197^^^^^191^210^[REPLACE] } else if  ( from instanceof Class<?> )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( false.getName (  )  )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^t =  null;^202^^^^^191^210^[REPLACE] t = classType;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^^202^^^^^191^210^[ADD] t = classType;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^Class<?> clazz = getRawType ( from ) ;^198^^^^^191^210^[REPLACE] Class<?> classType =  ( Class<?> )  from;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^^198^^^^^191^210^[ADD] Class<?> classType =  ( Class<?> )  from;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^t =  false;^202^^^^^191^210^[REPLACE] t = classType;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^t =   (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^196^^^^^191^210^[REPLACE] t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^^196^^^^^191^210^[ADD] t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( ! from instanceof Class<?> )  {^197^^^^^191^210^[REPLACE] } else if  ( from instanceof Class<?> )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( null.getName (  )  )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^classType =  false.getComponentType (  ) ;^200^^^^^191^210^[REPLACE] classType = classType.getComponentType (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType,  new String, Type> ( typeVarMap )   ) ;^204^205^^^^191^210^[REPLACE] return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^Type t = toGenericComponentType;^194^^^^^191^210^[REPLACE] Type t = from;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( false.isArray (  )  )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^while  ( true.isArray (  )  )  {^199^^^^^191^210^[REPLACE] while  ( classType.isArray (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[ADD]^}   Class<?> classType =  ( Class<?> )  from;classType = classType.getComponentType (  ) ;^197^198^199^200^201^191^210^[ADD] else if  ( from instanceof Class<?> )  { Class<?> classType =  ( Class<?> )  from; while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^return false;^209^^^^^191^210^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from GenericArrayType to [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type from  rawType  superclass  t  toGenericComponentType  type  [TYPE]  Class classType  cls  rawType  subclass  [TYPE]  GenericArrayType to  [TYPE]  boolean false  true 
[REPLACE]^if  ( from != null )  {^219^^^^^217^267^[REPLACE] if  ( from == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return true;^220^^^^^217^267^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( to.equals ( toGenericComponentType )  )  {^223^^^^^217^267^[REPLACE] if  ( to.equals ( from )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return false;^224^^^^^217^267^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Class<?> clazz = getRawType ( toGenericComponentType ) ;^228^^^^^217^267^[REPLACE] Class<?> clazz = getRawType ( from ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^ParameterizedType ptype = this;^229^^^^^217^267^[REPLACE] ParameterizedType ptype = null;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( ! toGenericComponentType instanceof ParameterizedType )  {^230^^^^^217^267^[REPLACE] if  ( from instanceof ParameterizedType )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^ptype =   ( ParameterizedType )  from;^231^^^^^217^267^[REPLACE] ptype =  ( ParameterizedType )  from;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^while  ( ! arg instanceof TypeVariable<?> )  {^241^^^^^217^267^[REPLACE] while  ( arg instanceof TypeVariable<?> )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^arg =  this.get ( v.getName (  )  ) ;^243^^^^^217^267^[REPLACE] arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^243^^^^^217^267^[ADD] arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeToken<?> t =  ( TypeToken<?> )  o;^242^^^^^217^267^[REPLACE] TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^242^^^^^217^267^[ADD] TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( ptype == null )  {^235^^^^^217^267^[REPLACE] if  ( ptype != null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^241^242^^^^217^267^[ADD] while  ( arg instanceof TypeVariable<?> )  { TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^arg =  true.get ( v.getName (  )  ) ;^243^^^^^217^267^[REPLACE] arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( o == null )  {^249^^^^^217^267^[REPLACE] if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return false;^250^^^^^217^267^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < tArgs.length /  2; i++ )  {^238^^^^^217^267^[REPLACE] for  ( int i = 0; i < tArgs.length; i++ )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^arg =  null.get ( v.getName (  )  ) ;^243^^^^^217^267^[REPLACE] arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type[] toArgs = to.getActualTypeArguments (  ) ;^239^^^^^217^267^[REPLACE] Type arg = tArgs[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^239^240^^^^217^267^[ADD] Type arg = tArgs[i]; TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeVariable<?> var = true[i];^240^^^^^217^267^[REPLACE] TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type[] tArgs = to.getRawType (  ) ;^236^^^^^217^267^[REPLACE] Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^236^237^^^^217^267^[ADD] Type[] tArgs = ptype.getActualTypeArguments (  ) ; TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeVariable<?>[] tParams = true.getName (  ) ;^237^^^^^217^267^[REPLACE] TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < tArgs.length; i++ )  {^238^^^^^217^267^[REPLACE] for  ( int i = 0; i < tArgs.length; i++ )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type arg = tArgs[i];^240^^^^^217^267^[REPLACE] TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^arg = typeVarMap.get ( v.getName (  )  ) ;^242^243^^^^217^267^[ADD] TypeVariable<?> v =  ( TypeVariable<?> )  arg; arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( typeEquals ( ptype, ptype, typeVarMap )  )  {^249^^^^^217^267^[REPLACE] if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < tArgs.length (  ) ; i++ )  {^238^^^^^217^267^[REPLACE] for  ( int i = 0; i < tArgs.length; i++ )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^238^239^240^241^242^217^267^[ADD] for  ( int i = 0; i < tArgs.length; i++ )  { Type arg = tArgs[i]; TypeVariable<?> var = tParams[i]; while  ( arg instanceof TypeVariable<?> )  { TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^242^243^^^^217^267^[ADD] TypeVariable<?> v =  ( TypeVariable<?> )  arg; arg = typeVarMap.get ( v.getName (  )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeVariable<?> var = this[i];^240^^^^^217^267^[REPLACE] TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return type;^250^^^^^217^267^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeVariable<?>[] tParams = true.getTypeParameters (  ) ;^237^^^^^217^267^[REPLACE] TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^TypeVariable<?> var = tParams[i];^239^240^^^^217^267^[ADD] Type arg = tArgs[i]; TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^TypeVariable<?> var = null[i];^240^^^^^217^267^[REPLACE] TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^240^^^^^217^267^[ADD] TypeVariable<?> var = tParams[i];^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^217^267^[REPLACE] if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return false;^256^^^^^217^267^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type superclass = subclass.getGenericSuperclass (  ) ;^254^^^^^217^267^[REPLACE] for  ( Type itype : clazz.getGenericInterfaces (  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^254^255^256^257^^217^267^[ADD] for  ( Type itype : clazz.getGenericInterfaces (  )  )  { if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type sType = null.getGenericInterfaces (  ) ;^261^^^^^217^267^[REPLACE] Type sType = clazz.getGenericSuperclass (  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( type, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^217^267^[REPLACE] if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return false;^263^^^^^217^267^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return true;^266^^^^^217^267^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType ptype  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  TypeVariable v  var  [TYPE]  Type[] tArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  TypeVariable[] tParams  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( ptype != null )  {^275^^^^^273^286^[REPLACE] if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( !matches ( fromArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^[REPLACE] if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^279^280^281^^^273^286^[ADD] if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  { return false; }^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return true;^280^^^^^273^286^[REPLACE] return false;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < fromArgs.length - 5; i++ )  {^278^^^^^273^286^[REPLACE] for  ( int i = 0; i < fromArgs.length; i++ )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( !matches ( fromArgs[i], toArgs[i], false )  )  {^279^^^^^273^286^[REPLACE] if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return false;^283^^^^^273^286^[REPLACE] return true;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type[] toArgs = from.getRawType (  ) ;^276^^^^^273^286^[REPLACE] Type[] fromArgs = from.getActualTypeArguments (  ) ;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^276^277^^^^273^286^[ADD] Type[] fromArgs = from.getActualTypeArguments (  ) ; Type[] toArgs = to.getActualTypeArguments (  ) ;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type[] fromArgs = to.getRawType (  ) ;^277^^^^^273^286^[REPLACE] Type[] toArgs = to.getActualTypeArguments (  ) ;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[ADD]^^277^^^^^273^286^[ADD] Type[] toArgs = to.getActualTypeArguments (  ) ;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < fromArgs.length; i++ )  {^278^^^^^273^286^[REPLACE] for  ( int i = 0; i < fromArgs.length; i++ )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^279^^^^^273^286^[REPLACE] if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < fromArgs.length (  ) ; i++ )  {^278^^^^^273^286^[REPLACE] for  ( int i = 0; i < fromArgs.length; i++ )  {^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^Type[] toArgs = from.getActualTypeArguments (  ) ;^276^^^^^273^286^[REPLACE] Type[] fromArgs = from.getActualTypeArguments (  ) ;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^return true;^285^^^^^273^286^[REPLACE] return false;^[METHOD] typeEquals [TYPE] boolean [PARAMETER] ParameterizedType from ParameterizedType to Type> typeVarMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  ParameterizedType from  to  [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  [TYPE]  boolean false  true  [TYPE]  Type[] fromArgs  toArgs  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Map typeVarMap  [TYPE]  int i 
[REPLACE]^if  ( to.equals ( from )  )  return false;^294^^^^^292^301^[REPLACE] if  ( to.equals ( from )  )  return true;^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[ADD]^^294^295^296^297^298^292^301^[ADD] if  ( to.equals ( from )  )  return true;  if  ( from instanceof TypeVariable<?> )  { return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ; }^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[REPLACE]^if  ( ! from instanceof TypeVariable<?> )  {^296^^^^^292^301^[REPLACE] if  ( from instanceof TypeVariable<?> )  {^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[REPLACE]^return type.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^[REPLACE] return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[REPLACE]^return to.equals ( null.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^[REPLACE] return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[REPLACE]^return true;^300^^^^^292^301^[REPLACE] return false;^[METHOD] matches [TYPE] boolean [PARAMETER] Type from Type to Type> typeMap [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true  [TYPE]  Map typeMap 
[REPLACE]^return type .Object (  )  ;^308^^^^^307^309^[REPLACE] return type.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^if  ( o  !=  this )  {^317^^^^^316^325^[REPLACE] if  ( o == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^return false;^318^^^^^316^325^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^if  ( ! ! ( o instanceof TypeToken<?> )  )  {^320^^^^^316^325^[REPLACE] if  ( ! ( o instanceof TypeToken<?> )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[ADD]^return false;^320^321^322^^^316^325^[ADD] if  ( ! ( o instanceof TypeToken<?> )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^return true;^321^^^^^316^325^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^Type[] toArgs = to.getActualTypeArguments (  ) ;^323^^^^^316^325^[REPLACE] TypeToken<?> t =  ( TypeToken<?> )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^return type .getClass (  )  ;^324^^^^^316^325^[REPLACE] return type.equals ( t.type ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  TypeToken t 
[REPLACE]^return type instanceof Class;^332^333^334^^^331^335^[REPLACE] return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^for  ( Class<?> clazz : expected )  { exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^343^^^^^337^350^[REPLACE] for  ( Class<?> clazz : expected )  {^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[ADD]^^343^344^345^^^337^350^[ADD] for  ( Class<?> clazz : expected )  { exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ; }^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( type.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.Object (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .isAssignableFrom (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( to.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( toGenericComponentType.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.StringBuilder ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( type .equals ( this )  .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^exceptionMessage.append ( "but got: " ) .append ( token.Object (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^[REPLACE] exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^.append ( ", for type type: " ) .append ( token.Object (  )  ) .append ( '.' ) ;^347^^^^^337^350^[REPLACE] .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^return new AssertionError ( exceptionMessage .Object (  )   ) ;^349^^^^^337^350^[REPLACE] return new AssertionError ( exceptionMessage.toString (  )  ) ;^[METHOD] buildUnexpectedTypeError [TYPE] AssertionError [PARAMETER] Type token  expected [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  Class[] expected  [TYPE]  boolean false  true  [TYPE]  StringBuilder exceptionMessage 
[REPLACE]^return  new SimpleTypeToken<T> ( toGenericComponentType )  ;^356^^^^^355^357^[REPLACE] return new SimpleTypeToken<Object> ( type ) ;^[METHOD] get [TYPE] TypeToken [PARAMETER] Type type [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  [TYPE]  boolean false  true 
[REPLACE]^return  new Object> ( type )  ;^363^^^^^362^364^[REPLACE] return new SimpleTypeToken<T> ( type ) ;^[METHOD] get [TYPE] <T> [PARAMETER] Class<T> type [CLASS] TypeToken SimpleTypeToken   [TYPE]  Type arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  [TYPE]  Class classType  clazz  cls  rawType  subclass  type  [TYPE]  boolean false  true 
