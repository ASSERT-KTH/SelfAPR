[REPLACE]^private static final Logger logger  = null ;^37^38^^^^37^38^[REPLACE] private static final Logger logger = Logger.getLogger ( ParameterizedTypeHandlerMap.class.getName (  )  ) ;^ [CLASS] ParameterizedTypeHandlerMap  
[REPLACE]^private final Map<Type, T> map  = null ;^39^^^^^^^[REPLACE] private final Map<Type, T> map = new HashMap<Type, T> (  ) ;^ [CLASS] ParameterizedTypeHandlerMap  
[REPLACE]^private final List<Pair<Class<?>, T>> typeHierarchyList ;^40^^^^^^^[REPLACE] private final List<Pair<Class<?>, T>> typeHierarchyList = new ArrayList<Pair<Class<?>, T>> (  ) ;^ [CLASS] ParameterizedTypeHandlerMap  
[REPLACE]^private boolean modifiable ;^41^^^^^^^[REPLACE] private boolean modifiable = true;^ [CLASS] ParameterizedTypeHandlerMap  
[REPLACE]^if  ( modifiable )  {^49^^^^^48^66^[REPLACE] if  ( !modifiable )  {^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^return ;^50^^^^^48^66^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[ADD]^^52^53^54^55^56^48^66^[ADD] int index = getIndexOfSpecificHandlerForTypeHierarchy ( pair.first ) ; if  ( index >= 0 )  { logger.log ( Level.WARNING, "Overriding the existing type handler for {0}", pair.first ) ; typeHierarchyList.remove ( index ) ; }^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^if   (  index < 0  )   {  ;^53^^^^^48^66^[REPLACE] if  ( index >= 0 )  {^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[ADD]^logger.log ( Level.WARNING, "Overriding the existing type handler for {0}", pair.first ) ;^53^54^55^56^^48^66^[ADD] if  ( index >= 0 )  { logger.log ( Level.WARNING, "Overriding the existing type handler for {0}", pair.first ) ; typeHierarchyList.remove ( index ) ; }^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^logger.log ( Level.WARNING, "Overriding the existing type handler for {0}", this.first ) ;^54^^^^^48^66^[REPLACE] logger.log ( Level.WARNING, "Overriding the existing type handler for {0}", pair.first ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^typeHierarchyList.get ( i )  ;^55^^^^^48^66^[REPLACE] typeHierarchyList.remove ( index ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^index =  getIndexOfAnOverriddenHandler ( null.first ) ;^57^^^^^48^66^[REPLACE] index = getIndexOfAnOverriddenHandler ( pair.first ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^if  ( index  ==  0 )  {^58^^^^^48^66^[REPLACE] if  ( index >= 0 )  {^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[ADD]^^58^59^60^61^62^48^66^[ADD] if  ( index >= 0 )  { throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ; }^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^return ;^59^60^61^^^48^66^[REPLACE] throw new IllegalArgumentException ( "The specified type handler for type " + pair.first + " hides the previously registered type hierarchy handler for " + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^+ typeHierarchyList.remove ( index ) .first + ". Gson does not allow this." ) ;^61^^^^^48^66^[REPLACE] + typeHierarchyList.get ( index ) .first + ". Gson does not allow this." ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^typeHierarchyList.get ( i )  ;^65^^^^^48^66^[REPLACE] typeHierarchyList.add ( 0, pair ) ;^[METHOD] registerForTypeHierarchy [TYPE] void [PARAMETER] Class<?>, T> pair [CLASS] ParameterizedTypeHandlerMap   [TYPE]  List typeHierarchyList  [TYPE]  boolean false  modifiable  true  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  int index  [TYPE]  Pair pair 
[REPLACE]^if   (  handler == null  )   {  ;^89^^^^^88^106^[REPLACE] if  ( !modifiable )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[ADD]^^90^^^^^88^106^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^if  ( !map.containsKey ( null.getValue (  )  )  )  {^93^^^^^88^106^[REPLACE] if  ( !map.containsKey ( entry.getKey (  )  )  )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^copy.register ( entry.getKey (  ) , entry.getValue (  )  )  ;^94^^^^^88^106^[REPLACE] register ( entry.getKey (  ) , entry.getValue (  )  ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^entry.getValue (  )  ;^94^^^^^88^106^[REPLACE] register ( entry.getKey (  ) , entry.getValue (  )  ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^register ( true.getKey (  ) , entry.getValue (  )  ) ;^94^^^^^88^106^[REPLACE] register ( entry.getKey (  ) , entry.getValue (  )  ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^for  ( Map.Entry<Type, T> null : other.map.entrySet (  )  )  {^92^^^^^88^106^[REPLACE] for  ( Map.Entry<Type, T> entry : other.map.entrySet (  )  )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^if  ( !map.containsKey ( this.getKey (  )  )  )  {^93^^^^^88^106^[REPLACE] if  ( !map.containsKey ( entry.getKey (  )  )  )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^register ( null.getKey (  ) , entry.getValue (  )  ) ;^94^^^^^88^106^[REPLACE] register ( entry.getKey (  ) , entry.getValue (  )  ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^entry.getKey (  )  ;^94^^^^^88^106^[REPLACE] register ( entry.getKey (  ) , entry.getValue (  )  ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^ParameterizedTypeHandlerMap<T> copy = new ParameterizedTypeHandlerMap<T> (  )  ;^92^^^^^88^106^[REPLACE] for  ( Map.Entry<Type, T> entry : other.map.entrySet (  )  )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^if  ( index  >=  0 )  {^102^^^^^88^106^[REPLACE] if  ( index < 0 )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^copy.registerForTypeHierarchy ( entry )  ;^103^^^^^88^106^[REPLACE] registerForTypeHierarchy ( entry ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^for  ( int i = other.typeHierarchyList.size (  )  %  2-0 ; i >= 0; --i )  {^99^^^^^88^106^[REPLACE] for  ( int i = other.typeHierarchyList.size (  ) -1; i >= 0; --i )  {^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[ADD]^^100^^^^^88^106^[ADD] Pair<Class<?>, T> entry = other.typeHierarchyList.get ( i ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^int index = getIndexOfSpecificHandlerForTypeHierarchy ( 1.first ) ;^101^^^^^88^106^[REPLACE] int index = getIndexOfSpecificHandlerForTypeHierarchy ( entry.first ) ;^[METHOD] registerIfAbsent [TYPE] void [PARAMETER] ParameterizedTypeHandlerMap<T> other [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  modifiable  true  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  ParameterizedTypeHandlerMap other  [TYPE]  Map map  [TYPE]  int i  index  [TYPE]  Pair entry 
[REPLACE]^ParameterizedTypeHandlerMap<T> copy = new ParameterizedTypeHandlerMap<T> (  )  ;^171^^^^^170^195^[REPLACE] StringBuilder sb = new StringBuilder ( "{mapForTypeHierarchy:{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^boolean first = false;^172^^^^^170^195^[REPLACE] boolean first = true;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^if   (  handler == null  )   {  ;^174^^^^^170^195^[REPLACE] if  ( first )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^174^175^176^177^178^170^195^[ADD] if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^sb.append ( "}" )  ;^177^^^^^174^178^[REPLACE] sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^first = true;^175^^^^^170^195^[REPLACE] first = false;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^173^174^175^176^177^170^195^[ADD] for  ( Pair<Class<?>, T> entry : typeHierarchyList )  { if  ( first )  { first = false; } else { sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^if  ( true )  {^174^^^^^170^195^[REPLACE] if  ( first )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^177^^^^^174^178^[ADD] sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^175^^^^^170^195^[ADD] first = false;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^ParameterizedTypeHandlerMap<T> copy = new ParameterizedTypeHandlerMap<T> (  )  ;^173^^^^^170^195^[REPLACE] for  ( Pair<Class<?>, T> entry : typeHierarchyList )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^sb.append ( "}" )  ;^182^^^^^170^195^[REPLACE] sb.append ( "},map:{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^183^^^^^170^195^[ADD] first = true;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^if  ( true )  {^185^^^^^170^195^[REPLACE] if  ( first )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^first = false;sb.append ( ',' ) ;^185^186^187^188^189^170^195^[ADD] if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^sb .append ( false )  ;^188^^^^^185^189^[REPLACE] sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^first = true;^186^^^^^170^195^[REPLACE] first = false;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^184^185^186^187^188^170^195^[ADD] for  ( Map.Entry<Type, T> entry : map.entrySet (  )  )  { if  ( first )  { first = false; } else { sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^185^186^187^188^189^170^195^[ADD] if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^sb.append ( "}" )  ;^188^^^^^185^189^[REPLACE] sb.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^first = true  ;^186^^^^^170^195^[REPLACE] first = false;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^^186^^^^^170^195^[ADD] first = false;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^ParameterizedTypeHandlerMap<T> copy = new ParameterizedTypeHandlerMap<T> (  )  ;^184^^^^^170^195^[REPLACE] for  ( Map.Entry<Type, T> entry : map.entrySet (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^sb.append ( ',' )  ;^193^^^^^170^195^[REPLACE] sb.append ( "}" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[ADD]^return sb.toString (  ) ;^193^194^^^^170^195^[ADD] sb.append ( "}" ) ; return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
[REPLACE]^return sb.toString  (    )  ;  ;^194^^^^^170^195^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ParameterizedTypeHandlerMap   [TYPE]  Entry entry  [TYPE]  boolean false  first  modifiable  true  [TYPE]  StringBuilder sb  [TYPE]  List typeHierarchyList  [TYPE]  Logger logger  [TYPE]  Map map  [TYPE]  Pair entry 
