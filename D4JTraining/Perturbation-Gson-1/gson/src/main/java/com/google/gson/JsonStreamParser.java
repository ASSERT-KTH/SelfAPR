[REPLACE]^private  JsonReader parser;^53^^^^^^^[REPLACE] private final JsonReader parser;^ [CLASS] JsonStreamParser  
[REPLACE]^private  Object lock;^54^^^^^^^[REPLACE] private final Object lock;^ [CLASS] JsonStreamParser  
[REPLACE]^if  ( !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ;^61^^^^^60^62^[REPLACE] this ( new StringReader ( json )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String json [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  String json  [TYPE]  boolean false  true 
[REPLACE]^parser =  new JsonReader ( null ) ;^69^^^^^68^72^[REPLACE] parser = new JsonReader ( reader ) ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader reader [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Reader reader  [TYPE]  Object lock  [TYPE]  boolean false  true 
[REPLACE]^parser.setLenient ( false ) ;^70^^^^^68^72^[REPLACE] parser.setLenient ( true ) ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader reader [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Reader reader  [TYPE]  Object lock  [TYPE]  boolean false  true 
[REPLACE]^lock  = null ;^71^^^^^68^72^[REPLACE] lock = new Object (  ) ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader reader [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Reader reader  [TYPE]  Object lock  [TYPE]  boolean false  true 
[REPLACE]^if  ( hasNext (  )  )  {^82^^^^^81^95^[REPLACE] if  ( !hasNext (  )  )  {^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^83^^^^^81^95^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[ADD]^return Streams.parse ( parser ) ;^86^87^88^89^90^81^95^[ADD] try { return Streams.parse ( parser ) ; } catch  ( StackOverflowError e )  { throw new JsonParseException  (" ")  ; } catch  ( OutOfMemoryError e )  {^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^89^^^^^81^95^[REPLACE] throw new JsonParseException  (" ")  ;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[ADD]^^89^^^^^81^95^[ADD] throw new JsonParseException  (" ")  ;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^91^^^^^81^95^[REPLACE] throw new JsonParseException  (" ")  ;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[REPLACE]^return ;^93^^^^^81^95^[REPLACE] throw e.getCause  (" ")   : e;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[ADD]^^92^93^^^^81^95^[ADD] catch  ( JsonParseException e )  { throw e.getCause  (" ")   : e;^[METHOD] next [TYPE] JsonElement [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true  [TYPE]  JsonParseException e  [TYPE]  StackOverflowError e  [TYPE]  OutOfMemoryError e 
[ADD]^return parser.peek (  )  != JsonToken.END_DOCUMENT;^104^105^106^107^108^102^112^[ADD] try { return parser.peek (  )  != JsonToken.END_DOCUMENT; } catch  ( MalformedJsonException e )  { throw new JsonSyntaxException  (" ")  ; } catch  ( IOException e )  {^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[REPLACE]^return parser .JsonReader ( null )   != JsonToken.END_DOCUMENT;^105^^^^^102^112^[REPLACE] return parser.peek (  )  != JsonToken.END_DOCUMENT;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[REPLACE]^return parser.setLenient (  )  != JsonToken.END_DOCUMENT;^105^^^^^102^112^[REPLACE] return parser.peek (  )  != JsonToken.END_DOCUMENT;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^107^^^^^102^112^[REPLACE] throw new JsonSyntaxException  (" ")  ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^109^^^^^102^112^[REPLACE] throw new JsonIOException  (" ")  ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[ADD]^^106^107^108^109^110^102^112^[ADD] catch  ( MalformedJsonException e )  { throw new JsonSyntaxException  (" ")  ; } catch  ( IOException e )  { throw new JsonIOException  (" ")  ; }^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  MalformedJsonException e 
[REPLACE]^return ;^120^^^^^119^121^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] JsonStreamParser   [TYPE]  JsonReader parser  [TYPE]  Object lock  [TYPE]  boolean false  true 
