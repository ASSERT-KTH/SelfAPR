[REPLACE]^protected  Type actualType;^29^^^^^^^[REPLACE] protected final Type actualType;^ [CLASS] TypeInfo  
[REPLACE]^this.actualType =  null;^33^^^^^32^35^[REPLACE] this.actualType = actualType;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type actualType [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^rawClass =  TypeUtils.toRawClass ( null ) ;^34^^^^^32^35^[REPLACE] rawClass = TypeUtils.toRawClass ( actualType ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type actualType [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return rawClass;^38^^^^^37^39^[REPLACE] return actualType;^[METHOD] getActualType [TYPE] Type [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return   rawClass   ;^51^^^^^50^52^[REPLACE] return Primitives.wrap ( rawClass ) ;^[METHOD] getWrappedClass [TYPE] Class [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return TypeUtils.isArray ( rawClass ) ;^58^^^^^57^59^[REPLACE] return rawClass;^[METHOD] getRawClass [TYPE] Class [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return Collection.class .isEnum (  )   || isArray (  ) ;^62^^^^^61^63^[REPLACE] return Collection.class.isAssignableFrom ( rawClass )  || isArray (  ) ;^[METHOD] isCollectionOrArray [TYPE] boolean [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return TypeUtils.toRawClass ( rawClass ) ;^66^^^^^65^67^[REPLACE] return TypeUtils.isArray ( rawClass ) ;^[METHOD] isArray [TYPE] boolean [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return rawClass;^70^^^^^69^71^[REPLACE] return rawClass.isEnum (  ) ;^[METHOD] isEnum [TYPE] boolean [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
[REPLACE]^return   rawClass    ) ;^74^^^^^73^75^[REPLACE] return Primitives.isWrapperType ( Primitives.wrap ( rawClass )  ) ;^[METHOD] isPrimitive [TYPE] boolean [PARAMETER] [CLASS] TypeInfo   [TYPE]  Type actualType  [TYPE]  Class rawClass  [TYPE]  boolean false  true 
