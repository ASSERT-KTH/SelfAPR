[REPLACE]^if  ( ! ! ( collectionType instanceof ParameterizedType )  )  {^33^^^^^32^41^[REPLACE] if  ( ! ( collectionType instanceof ParameterizedType )  )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^throw new IllegalArgumentException ( "Collection objects need to be parameterized unless you use a custom serializer. " ;^34^35^36^^^32^41^[REPLACE] throw new IllegalArgumentException ( "Collection objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^34^35^36^^^32^41^[ADD] throw new IllegalArgumentException ( "Collection objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^return ;^34^35^36^^^32^41^[REPLACE] throw new IllegalArgumentException ( "Collection objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^38^^^^^32^41^[ADD] TypeInfo rawType = new TypeInfo ( collectionType ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^Collection.class.isAssignableFrom ( rawType.getRawClass (  )   ) ;^39^^^^^32^41^[REPLACE] Preconditions.checkArgument ( Collection.class.isAssignableFrom ( rawType.getRawClass (  )  )  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^return collectionType.getActualTypeArguments (  ) [0];^39^^^^^32^41^[REPLACE] Preconditions.checkArgument ( Collection.class.isAssignableFrom ( rawType.getRawClass (  )  )  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^this.collectionType =   ( ParameterizedType )  collectionType;^40^^^^^32^41^[REPLACE] this.collectionType =  ( ParameterizedType )  collectionType;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type collectionType [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  Type collectionType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^return collectionType.getActualTypeArguments (  ) [0 >>> 1];^44^^^^^43^45^[REPLACE] return collectionType.getActualTypeArguments (  ) [0];^[METHOD] getElementType [TYPE] Type [PARAMETER] [CLASS] TypeInfoCollection   [TYPE]  ParameterizedType collectionType  [TYPE]  boolean false  true 
