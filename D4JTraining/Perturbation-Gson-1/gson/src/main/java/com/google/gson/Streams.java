[REPLACE]^private  Appendable appendable;^141^^^^^^^[REPLACE] private final Appendable appendable;^ [CLASS] Streams AppendableWriter CurrentWrite  
[REPLACE]^private final CurrentWrite currentWrite  = null ;^142^^^^^^^[REPLACE] private final CurrentWrite currentWrite = new CurrentWrite (  ) ;^ [CLASS] Streams AppendableWriter CurrentWrite  
[ADD]^return new JsonPrimitive ( reader.nextString (  )  ) ;^37^38^39^40^41^36^81^[ADD] try { switch  ( reader.peek (  )  )  { case STRING: return new JsonPrimitive ( reader.nextString (  )  ) ; case NUMBER:^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader .nextNull (  )   ) ;^40^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextString (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( JsonPrimitive .isNumber (  )   ) ;^43^^^^^36^81^[REPLACE] return new JsonPrimitive ( JsonPrimitive.stringToNumber ( number )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextNull (  )  ) ;^45^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive  (  reader.nextBoolean  (    )    )  ;  ;^48^^^^^36^81^[REPLACE] return JsonNull.createJsonNull (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return array;  ;^56^^^^^36^81^[REPLACE] return array;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return object;  ;^64^^^^^36^81^[REPLACE] return object;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^42^^^^^36^81^[ADD] String number = reader.nextString (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^JsonObject object = new JsonObject (  )  ;^50^^^^^36^81^[REPLACE] JsonArray array = new JsonArray (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^JsonArray array = new JsonArray (  )  ;^58^^^^^36^81^[REPLACE] JsonObject object = new JsonObject (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new JsonIOException ( e )  ;^70^^^^^36^81^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextNull (  )  ) ;^40^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextString (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive  (  reader.nextBoolean  (    )    )  ;  ;^43^^^^^36^81^[REPLACE] return new JsonPrimitive ( JsonPrimitive.stringToNumber ( number )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader .nextNull (  )   ) ;^45^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive  (  reader.nextBoolean  (    )    )  ;  ;^73^^^^^36^81^[REPLACE] return JsonNull.createJsonNull (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return ;^75^^^^^36^81^[REPLACE] throw new JsonSyntaxException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new JsonSyntaxException ( e )  ;^77^^^^^36^81^[REPLACE] throw new JsonIOException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^79^^^^^36^81^[ADD] throw new JsonSyntaxException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^78^79^^^^36^81^[ADD] catch  ( NumberFormatException e )  { throw new JsonSyntaxException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^if  ( element != null || element.isJsonNull (  )  )  {^88^^^^^87^130^[REPLACE] if  ( element == null || element.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( element.isJsonPrimitive (  )  )  {^93^^^^^87^130^[REPLACE] } else if  ( element.isJsonPrimitive (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( element.isJsonArray (  )  )  {     writer.beginArray (  ) ;     for  ( JsonElement e : element.getAsJsonArray (  )  )  {         if  ( e.isJsonNull (  )  )  {             writer.nullValue (  ) ;             continue;         }         write ( e, serializeNulls, writer ) ;     }     writer.endArray (  ) ; }else     if  ( element.isJsonObject (  )  )  {         writer.beginObject (  ) ;         for  ( String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {             JsonElement value = e.getValue (  ) ;             if  (  ( !serializeNulls )  &&  ( value.isJsonNull (  )  )  )  {                 continue;             }             writer.name ( e.getKey (  )  ) ;             write ( value, serializeNulls, writer ) ;         }         writer.endObject (  ) ;     }else {         throw new IllegalArgumentException (  ( "Couldn't write " +  ( element.getClass (  )  )  )  ) ;     }^93^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^103^^^^^87^130^[REPLACE] } else if  ( element.isJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( element.isJsonObject (  )  )  {^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( element.isJsonArray (  )  )  {     writer.beginArray (  ) ;     for  ( JsonElement e : element.getAsJsonArray (  )  )  {         if  ( e.isJsonNull (  )  )  {             writer.nullValue (  ) ;             continue;         }         write ( e, serializeNulls, writer ) ;     }     writer.endArray (  ) ; }else     if  ( element.isJsonObject (  )  )  {         writer.beginObject (  ) ;         for  ( String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {             JsonElement value = e.getValue (  ) ;             if  (  ( !serializeNulls )  &&  ( value.isJsonNull (  )  )  )  {                 continue;             }             writer.name ( e.getKey (  )  ) ;             write ( value, serializeNulls, writer ) ;         }         writer.endObject (  ) ;     }else {         throw new IllegalArgumentException (  ( "Couldn't write " +  ( element.getClass (  )  )  )  ) ;     }^115^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.name ( e.getKey (  )  )  ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls ) {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^119^120^121^^^87^130^[ADD] if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = element.getAsJsonPrimitive (  )  ;^117^^^^^115^127^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = e.getKey (  ) ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( e.isJsonNull (  )  )  {     writer.nullValue (  ) ;     continue; }^119^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^118^^^^^115^127^[ADD] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException (  )  ;^128^^^^^115^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value (  ) ;^108^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^105^106^107^108^109^103^115^[ADD] for  ( JsonElement e : element.getAsJsonArray (  )  )  {  if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = element.getAsJsonPrimitive (  )  ;^105^^^^^103^115^[REPLACE] for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( value.isJsonNull (  )  )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^107^108^109^110^^87^130^[ADD] if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .value (  )  ;^108^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^writer.name ( e.getKey (  )  )  ;^108^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException (  )  ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls && value.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^continue;^119^120^121^^^87^130^[ADD] if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = 0.getValue (  ) ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( JsonElement value : element.getAsJsonArray (  )  )  {^105^^^^^103^115^[REPLACE] for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( Map.Entry<String, JsonElement> null : element.getAsJsonObject (  ) .entrySet (  )  )  {^117^^^^^103^115^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = element.getAsJsonPrimitive (  )  ;^117^^^^^103^115^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = e.getKey (  ) ;^118^^^^^103^115^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException (  )  ;^128^^^^^103^115^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^95^^^^^87^130^[REPLACE] if  ( primitive.isNumber (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( primitive.isBoolean (  )  )  {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.value ( primitive.getAsString (  )  ) ;^97^98^99^100^101^87^130^[ADD] else if  ( primitive.isBoolean (  )  )  { writer.value ( primitive.getAsBoolean (  )  ) ; } else { writer.value ( primitive.getAsString (  )  ) ; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsNumber (  )  ) ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^primitive.getAsBoolean (  )  ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsNumber (  )  )  ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^primitive.getAsString (  )  ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .isNumber (  )   ) ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( primitive.isNumber (  )  )  {     writer.value ( primitive.getAsNumber (  )  ) ; }else     if  ( primitive.isBoolean (  )  )  {         writer.value ( primitive.getAsBoolean (  )  ) ;     }else {         writer.value ( primitive.getAsString (  )  ) ;     }^97^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsNumber (  )  )  ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^100^^^^^97^101^[ADD] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^writer.beginObject (  )  ;^100^^^^^97^101^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^writer.name ( e.getKey (  )  )  ;^98^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .isBoolean (  )   ) ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^98^^^^^87^130^[ADD] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = value.getAsJsonPrimitive (  ) ;^94^^^^^87^130^[REPLACE] JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.isBoolean (  )  ) ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .nullValue (  )  ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^96^^^^^87^130^[ADD] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^writer.beginObject (  )  ;^96^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^writer.name ( e.getKey (  )  )  ;^100^^^^^97^101^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^103^^^^^87^130^[REPLACE] } else if  ( element.isJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^128^^^^^115^129^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( Map.Entry<String, JsonElement> this : element.getAsJsonObject (  ) .entrySet (  )  )  {^117^^^^^115^127^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( Map.Entry<String, JsonElement> e : element .isJsonObject (  )  .entrySet (  )  )  {^117^^^^^115^127^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = true.getValue (  ) ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return ;^128^^^^^115^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^writer.nullValue (  ) ;continue;^107^108^109^110^^87^130^[ADD] if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( e.isJsonArray (  )  )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  (  element.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^117^118^119^120^121^103^115^[ADD] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ; if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = value.getAsJsonPrimitive (  ) ;^94^^^^^103^115^[REPLACE] JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = true.getValue (  ) ;^118^^^^^103^115^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^128^^^^^103^115^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^89^^^^^87^130^[REPLACE] if  ( serializeNulls )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .value (  )  ;^90^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( true )  {^89^^^^^87^130^[REPLACE] if  ( serializeNulls )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value (  ) ;^90^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^90^^^^^87^130^[ADD] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonObject  (    )    )   {  ;^93^^^^^87^130^[REPLACE] } else if  ( element.isJsonPrimitive (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( Map.Entry<String, JsonElement> e : value.getAsJsonObject (  ) .entrySet (  )  )  {^117^^^^^115^127^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = null.getKey (  ) ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^117^118^119^120^121^115^127^[ADD] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ; if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = 1 .getKey (  )  ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( JsonElement e : value.getAsJsonArray (  )  )  {^105^^^^^103^115^[REPLACE] for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if   (  element.isJsonPrimitive  (    )    )   {  ;^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  (  value.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = true .getKey (  )  ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls && element.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( Map.Entry<String, JsonElement> 1 : element.getAsJsonObject (  ) .entrySet (  )  )  {^117^^^^^103^115^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( primitive.getAsNumber (  )  )  {^95^^^^^87^130^[REPLACE] if  ( primitive.isNumber (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^writer.value ( primitive.getAsNumber (  )  ) ;writer.value ( primitive.getAsBoolean (  )  ) ;^95^96^97^98^^87^130^[ADD] if  ( primitive.isNumber (  )  )  { writer.value ( primitive.getAsNumber (  )  ) ; } else if  ( primitive.isBoolean (  )  )  { writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( primitive.getAsBoolean (  )  )  {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .getAsNumber (  )   ) ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^primitive.getAsBoolean (  )  ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .nullValue (  )  ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsBoolean (  )  )  ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.isNumber (  )  ) ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.value ( primitive.getAsBoolean (  )  ) ;writer.value ( primitive.getAsString (  )  ) ;^97^98^99^100^101^87^130^[ADD] else if  ( primitive.isBoolean (  )  )  { writer.value ( primitive.getAsBoolean (  )  ) ; } else { writer.value ( primitive.getAsString (  )  ) ; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}^103^104^105^^^87^130^[ADD] else if  ( element.isJsonArray (  )  )  { writer.beginArray (  ) ; for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = null.getValue (  ) ;^118^^^^^115^127^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( e .isJsonArray (  )   )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.beginObject (  ) ;^115^116^117^118^^87^130^[ADD] else if  ( element.isJsonObject (  )  )  { writer.beginObject (  ) ; for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls && value .isJsonArray (  )   )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^94^^^^^103^115^[ADD] JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = this .getKey (  )  ;^118^^^^^103^115^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return ;^128^^^^^103^115^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^private  Appendable appendable;^141^^^^^^^[REPLACE] private final Appendable appendable;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^private final CurrentWrite currentWrite ;^142^^^^^^^[REPLACE] private final CurrentWrite currentWrite = new CurrentWrite (  ) ;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
