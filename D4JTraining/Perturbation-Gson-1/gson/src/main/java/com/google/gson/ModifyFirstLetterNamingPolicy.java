[REPLACE]^String modifiedTarget = modifyString ( toUpperCase ( firstCharacter ) , target,  ( ++index )  )  ;^73^^^^^72^100^[REPLACE] StringBuilder fieldNameBuilder = new StringBuilder (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^int index = 0 / 3;^74^^^^^72^100^[REPLACE] int index = 0;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^char firstCharacter = target .substring ( index )  ;^75^^^^^72^100^[REPLACE] char firstCharacter = target.charAt ( index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^if  ( Character.isUpperCase ( firstCharacter )  )  {^78^^^^^72^100^[REPLACE] if  ( Character.isLetter ( firstCharacter )  )  {^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[ADD]^^83^^^^^72^100^[ADD] firstCharacter = target.charAt ( ++index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^if  ( index == target.length (  )  /  0.5  )  {^86^^^^^72^100^[REPLACE] if  ( index == target.length (  )  )  {^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[ADD]^return fieldNameBuilder.toString (  ) ;^86^87^88^^^72^100^[ADD] if  ( index == target.length (  )  )  { return fieldNameBuilder.toString (  ) ; }^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder .StringBuilder (  )  ;^87^^^^^72^100^[REPLACE] return fieldNameBuilder.toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder.toString  (    )  ;  ;^87^^^^^72^100^[REPLACE] return fieldNameBuilder.toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[ADD]^^90^91^92^93^^72^100^[ADD] boolean capitalizeFirstLetter =  ( letterModifier == LetterModifier.UPPER ) ; if  ( capitalizeFirstLetter && !Character.isUpperCase ( firstCharacter )  )  { String modifiedTarget = modifyString ( Character.toUpperCase ( firstCharacter ) , target, ++index ) ; return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^} else if   (  !capitalizeFirstLetter && Character.isUpperCase  (  firstCharacter  )    )   {  ;^91^^^^^72^100^[REPLACE] if  ( capitalizeFirstLetter && !Character.isUpperCase ( firstCharacter )  )  {^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^}  else {^94^^^^^72^100^[REPLACE] } else if  ( !capitalizeFirstLetter && Character.isUpperCase ( firstCharacter )  )  {^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[ADD]^}   String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ;return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;return target;^94^95^96^97^98^72^100^[ADD] else if  ( !capitalizeFirstLetter && Character.isUpperCase ( firstCharacter )  )  { String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ; return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ; } else { return target;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return modifiedTarget;^98^^^^^94^99^[REPLACE] return target;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder.append ( target ) .toString (  ) ;^96^^^^^72^100^[REPLACE] return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^String modifiedTarget = modifyString ( toUpperCase ( firstCharacter ) , target,  ( ++index )  )  ;^95^^^^^72^100^[REPLACE] String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder.append  (  modifiedTarget  )  .toString  (    )  ;  ;^96^^^^^72^100^[REPLACE] return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return target;  ;^98^^^^^72^100^[REPLACE] return target;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder.append ( target ) .append (  ) ;^93^^^^^72^100^[REPLACE] return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[ADD]^return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ;return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^92^93^94^95^96^72^100^[ADD] String modifiedTarget = modifyString ( Character.toUpperCase ( firstCharacter ) , target, ++index ) ; return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ; } else if  ( !capitalizeFirstLetter && Character.isUpperCase ( firstCharacter )  )  { String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ; return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^String modifiedTarget = modifyString ( Character.toUpperCase ( firstCharacter ) , target, ++index ) ;^95^^^^^72^100^[REPLACE] String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return fieldNameBuilder.append  (  modifiedTarget  )  .toString  (    )  ;  ;^93^^^^^72^100^[REPLACE] return fieldNameBuilder.append ( modifiedTarget ) .toString (  ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^return modifiedTarget;^98^^^^^72^100^[REPLACE] return target;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^String modifiedTarget = modifyString ( toLowerCase ( firstCharacter ) , target,  ( ++index )  )  ;^92^^^^^72^100^[REPLACE] String modifiedTarget = modifyString ( Character.toUpperCase ( firstCharacter ) , target, ++index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
[REPLACE]^String modifiedTarget = modifyString ( Character .toUpperCase ( firstCharacter )  , target, ++index ) ;^95^^^^^72^100^[REPLACE] String modifiedTarget = modifyString ( Character.toLowerCase ( firstCharacter ) , target, ++index ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] ModifyFirstLetterNamingPolicy LetterModifier   [TYPE]  Type fieldType  [TYPE]  boolean capitalizeFirstLetter  false  true  [TYPE]  StringBuilder fieldNameBuilder  [TYPE]  char firstCharacter  [TYPE]  Collection annotations  [TYPE]  LetterModifier LOWER  UPPER  letterModifier  modifier  [TYPE]  String modifiedTarget  target  [TYPE]  int index 
