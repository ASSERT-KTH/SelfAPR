[REPLACE]^public static  Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;^33^^^^^^^[REPLACE] public static final Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;^ [CLASS] Primitives  
[REPLACE]^public  final Map<Class<?>, Class<?>> WRAPPER_TO_PRIMITIVE_TYPE;^36^^^^^^^[REPLACE] public static final Map<Class<?>, Class<?>> WRAPPER_TO_PRIMITIVE_TYPE;^ [CLASS] Primitives  
[REPLACE]^forward.put ( key, null ) ;^60^^^^^58^62^[REPLACE] forward.put ( key, value ) ;^[METHOD] add [TYPE] void [PARAMETER] Class<?>> forward Class<?>> backward Class<?> key Class<?> value [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class key  value  [TYPE]  boolean false  true 
[ADD]^^60^61^62^^^58^62^[ADD] forward.put ( key, value ) ; backward.put ( value, key ) ; }^[METHOD] add [TYPE] void [PARAMETER] Class<?>> forward Class<?>> backward Class<?> key Class<?> value [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class key  value  [TYPE]  boolean false  true 
[REPLACE]^backward.put ( value, null ) ;^61^^^^^58^62^[REPLACE] backward.put ( value, key ) ;^[METHOD] add [TYPE] void [PARAMETER] Class<?>> forward Class<?>> backward Class<?> key Class<?> value [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class key  value  [TYPE]  boolean false  true 
[REPLACE]^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( null )  ) ;^71^^^^^70^72^[REPLACE] return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( type )  ) ;^[METHOD] isWrapperType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkNotNull ( false ) ;^75^^^^^74^77^[REPLACE] Preconditions.checkNotNull ( type ) ;^[METHOD] checkNotNull [TYPE] Class [PARAMETER] Class<?> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return this;^76^^^^^74^77^[REPLACE] return type;^[METHOD] checkNotNull [TYPE] Class [PARAMETER] Class<?> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^checkNotNull ( null ) ;^89^^^^^88^95^[REPLACE] checkNotNull ( type ) ;^[METHOD] wrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  wrapped  [TYPE]  boolean false  true 
[REPLACE]^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE .put ( 1 , null )  ;^93^^^^^88^95^[REPLACE] Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;^[METHOD] wrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  wrapped  [TYPE]  boolean false  true 
[ADD]^return  ( wrapped == null )  ? type : wrapped;^93^94^^^^88^95^[ADD] Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ; return  ( wrapped == null )  ? type : wrapped;^[METHOD] wrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  wrapped  [TYPE]  boolean false  true 
[REPLACE]^return   type ;^94^^^^^88^95^[REPLACE] return  ( wrapped == null )  ? type : wrapped;^[METHOD] wrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  wrapped  [TYPE]  boolean false  true 
[REPLACE]^checkNotNull ( false ) ;^107^^^^^106^113^[REPLACE] checkNotNull ( type ) ;^[METHOD] unwrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  unwrapped  [TYPE]  boolean false  true 
[REPLACE]^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( null ) ;^111^^^^^106^113^[REPLACE] Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[METHOD] unwrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  unwrapped  [TYPE]  boolean false  true 
[REPLACE]^return null;^112^^^^^106^113^[REPLACE] return  ( unwrapped == null )  ? type : unwrapped;^[METHOD] unwrap [TYPE] <T> [PARAMETER] Class<T> type [CLASS] Primitives   [TYPE]  Map PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  [TYPE]  Class type  unwrapped  [TYPE]  boolean false  true 
