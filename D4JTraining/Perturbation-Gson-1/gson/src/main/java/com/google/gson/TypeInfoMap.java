[REPLACE]^private  Type valueType;^32^^^^^^^[REPLACE] private final Type valueType;^ [CLASS] TypeInfoMap  
[REPLACE]^if  ( ! mapType instanceof Class<?> && Properties.class.isAssignableFrom (  ( Class<?> )  mapType )  )  {^35^^^^^34^49^[REPLACE] if  ( mapType instanceof Class<?> && Properties.class.isAssignableFrom (  ( Class<?> )  mapType )  )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^}  if  ( ! valueType instanceof ParameterizedType )  {^38^^^^^34^49^[REPLACE] } else if  ( mapType instanceof ParameterizedType )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^return ;^45^46^47^^^34^49^[REPLACE] throw new IllegalArgumentException ( "Map objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^keyType = paramType.getActualTypeArguments (  ) [1];^42^^^^^34^49^[REPLACE] keyType = paramType.getActualTypeArguments (  ) [0];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = paramType.getActualTypeArguments (  ) [0];^43^^^^^34^49^[REPLACE] valueType = paramType.getActualTypeArguments (  ) [1];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^TypeInfo rawType = new TypeInfo ( valueType ) ;^39^^^^^34^49^[REPLACE] TypeInfo rawType = new TypeInfo ( mapType ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^39^40^^^^34^49^[ADD] TypeInfo rawType = new TypeInfo ( mapType ) ; Preconditions.checkArgument ( Map.class.isAssignableFrom ( rawType.getRawClass (  )  )  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^TypeInfo rawType = new TypeInfo ( mapType ) ;^41^^^^^34^49^[REPLACE] ParameterizedType paramType =  ( ParameterizedType )  mapType;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = paramType.getActualTypeArguments (  ) [1]; ;^42^^^^^34^49^[REPLACE] keyType = paramType.getActualTypeArguments (  ) [0];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^42^^^^^34^49^[ADD] keyType = paramType.getActualTypeArguments (  ) [0];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = paramType.getActualTypeArguments (  ) [1L];^43^^^^^34^49^[REPLACE] valueType = paramType.getActualTypeArguments (  ) [1];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^43^^^^^34^49^[ADD] valueType = paramType.getActualTypeArguments (  ) [1];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^throw new IllegalArgumentException ( "Map objects need to be parameterized unless you use a custom serializer. " ;^45^46^47^^^34^49^[REPLACE] throw new IllegalArgumentException ( "Map objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^45^46^47^^^34^49^[ADD] throw new IllegalArgumentException ( "Map objects need to be parameterized unless you use a custom serializer. " + "Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType." ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = String.class; ;^36^^^^^34^49^[REPLACE] keyType = String.class;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^keyType = String.class; ;^37^^^^^34^49^[REPLACE] valueType = String.class;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = paramType.getActualTypeArguments (  ) [2];^43^^^^^34^49^[REPLACE] valueType = paramType.getActualTypeArguments (  ) [1];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[ADD]^^36^^^^^34^49^[ADD] keyType = String.class;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^keyType = paramType.getActualTypeArguments (  ) [4];^42^^^^^34^49^[REPLACE] keyType = paramType.getActualTypeArguments (  ) [0];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^valueType = paramType.getActualTypeArguments (  ) [4];^43^^^^^34^49^[REPLACE] valueType = paramType.getActualTypeArguments (  ) [1];^[METHOD] <init> [TYPE] Type) [PARAMETER] Type mapType [CLASS] TypeInfoMap   [TYPE]  ParameterizedType paramType  [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true  [TYPE]  TypeInfo rawType 
[REPLACE]^return valueType;^52^^^^^51^53^[REPLACE] return keyType;^[METHOD] getKeyType [TYPE] Type [PARAMETER] [CLASS] TypeInfoMap   [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true 
[REPLACE]^return keyType;^56^^^^^55^57^[REPLACE] return valueType;^[METHOD] getValueType [TYPE] Type [PARAMETER] [CLASS] TypeInfoMap   [TYPE]  Type keyType  mapType  valueType  [TYPE]  boolean false  true 
