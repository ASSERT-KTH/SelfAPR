[REPLACE]^private  List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^128^^^^^^^[REPLACE] private final List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^ [CLASS] JsonWriter  
[REPLACE]^private  long  indent;^137^^^^^^^[REPLACE] private String indent;^ [CLASS] JsonWriter  
[REPLACE]^private  double  separator = ":";^142^^^^^^^[REPLACE] private String separator = ":";^ [CLASS] JsonWriter  
[REPLACE]^if  ( out != null )  {^154^^^^^153^158^[REPLACE] if  ( out == null )  {^[METHOD] <init> [TYPE] Writer) [PARAMETER] Writer out [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^155^^^^^153^158^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Writer) [PARAMETER] Writer out [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.out =  null;^157^^^^^153^158^[REPLACE] this.out = out;^[METHOD] <init> [TYPE] Writer) [PARAMETER] Writer out [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^if  ( indent.length (  )  /  2 == 0  )  {^169^^^^^168^176^[REPLACE] if  ( indent.length (  )  == 0 )  {^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.indent = null; ;^173^^^^^168^176^[REPLACE] this.indent = indent;^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.separator  =  this.separator ;^174^^^^^168^176^[REPLACE] this.separator = ": ";^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.indent = false;^170^^^^^168^176^[REPLACE] this.indent = null;^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[ADD]^^170^^^^^168^176^[ADD] this.indent = null;^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.separator ;^171^^^^^168^176^[REPLACE] this.separator = ":";^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.indent = this;^170^^^^^168^176^[REPLACE] this.indent = null;^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.separator  = null ;^171^^^^^168^176^[REPLACE] this.separator = ":";^[METHOD] setIndent [TYPE] void [PARAMETER] String indent [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.indent = indent; ;^191^^^^^190^192^[REPLACE] this.lenient = lenient;^[METHOD] setLenient [TYPE] void [PARAMETER] boolean lenient [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return nullValue (  ) ;^198^^^^^197^199^[REPLACE] return lenient;^[METHOD] isLenient [TYPE] boolean [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^this.htmlSafe =  true;^209^^^^^208^210^[REPLACE] this.htmlSafe = htmlSafe;^[METHOD] setHtmlSafe [TYPE] void [PARAMETER] boolean htmlSafe [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return nullValue (  ) ;^217^^^^^216^218^[REPLACE] return htmlSafe;^[METHOD] isHtmlSafe [TYPE] boolean [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;^227^^^^^226^228^[REPLACE] return open ( JsonScope.EMPTY_ARRAY, "[" ) ;^[METHOD] beginArray [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^236^^^^^235^237^[REPLACE] return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^[METHOD] endArray [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;^246^^^^^245^247^[REPLACE] return open ( JsonScope.EMPTY_OBJECT, "{" ) ;^[METHOD] beginObject [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^255^^^^^254^256^[REPLACE] return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^[METHOD] endObject [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  separator  [TYPE]  Writer out 
[REPLACE]^beforeValue ( false ) ;^263^^^^^262^267^[REPLACE] beforeValue ( true ) ;^[METHOD] open [TYPE] JsonWriter [PARAMETER] JsonScope empty String openBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  openBracket  separator  [TYPE]  JsonScope empty  [TYPE]  Writer out 
[REPLACE]^stack.set ( empty ) ;^264^^^^^262^267^[REPLACE] stack.add ( empty ) ;^[METHOD] open [TYPE] JsonWriter [PARAMETER] JsonScope empty String openBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  openBracket  separator  [TYPE]  JsonScope empty  [TYPE]  Writer out 
[REPLACE]^out.write ( separator ) ;^265^^^^^262^267^[REPLACE] out.write ( openBracket ) ;^[METHOD] open [TYPE] JsonWriter [PARAMETER] JsonScope empty String openBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  openBracket  separator  [TYPE]  JsonScope empty  [TYPE]  Writer out 
[ADD]^^265^^^^^262^267^[ADD] out.write ( openBracket ) ;^[METHOD] open [TYPE] JsonWriter [PARAMETER] JsonScope empty String openBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  openBracket  separator  [TYPE]  JsonScope empty  [TYPE]  Writer out 
[REPLACE]^return null;^266^^^^^262^267^[REPLACE] return this;^[METHOD] open [TYPE] JsonWriter [PARAMETER] JsonScope empty String openBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String indent  openBracket  separator  [TYPE]  JsonScope empty  [TYPE]  Writer out 
[REPLACE]^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  { char c = value.charAt ( i ) ;^275^^^^^273^286^[REPLACE] JsonScope context = peek (  ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^if  ( context != nonempty ) {^276^^^^^273^286^[REPLACE] if  ( context != nonempty && context != empty )  {^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^return ;^277^^^^^273^286^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[ADD]^^277^^^^^273^286^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^277^^^^^273^286^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^stack.remove ( stack.length (  )  - 0  ) ;^280^^^^^273^286^[REPLACE] stack.remove ( stack.size (  )  - 1 ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REMOVE]^string ( value ) ;^280^^^^^273^286^[REMOVE] ^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^stack.remove ( stack .set ( context )   - 1 ) ;^280^^^^^273^286^[REPLACE] stack.remove ( stack.size (  )  - 1 ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^if  ( empty  !=  nonempty )  {^281^^^^^273^286^[REPLACE] if  ( context == nonempty )  {^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^return nullValue (  ) ;^282^^^^^273^286^[REPLACE] newline (  ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[ADD]^^282^^^^^273^286^[ADD] newline (  ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^out .close ( empty , empty , openBracket )  ;^284^^^^^273^286^[REPLACE] out.write ( closeBracket ) ;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^return null;^285^^^^^273^286^[REPLACE] return this;^[METHOD] close [TYPE] JsonWriter [PARAMETER] JsonScope empty JsonScope nonempty String closeBracket [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope context  empty  nonempty  [TYPE]  Writer out 
[REPLACE]^return stack.add ( stack.size (  )  - 0  ) ;^292^^^^^291^293^[REPLACE] return stack.get ( stack.size (  )  - 1 ) ;^[METHOD] peek [TYPE] JsonScope [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^stack.set ( stack.add (  )  + 3 - 1, topOfStack ) ;^299^^^^^298^300^[REPLACE] stack.set ( stack.size (  )  - 1, topOfStack ) ;^[METHOD] replaceTop [TYPE] void [PARAMETER] JsonScope topOfStack [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope topOfStack  [TYPE]  Writer out 
[REPLACE]^stack.set ( stack.add (  )  - 1, topOfStack ) ;^299^^^^^298^300^[REPLACE] stack.set ( stack.size (  )  - 1, topOfStack ) ;^[METHOD] replaceTop [TYPE] void [PARAMETER] JsonScope topOfStack [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  openBracket  separator  [TYPE]  JsonScope topOfStack  [TYPE]  Writer out 
[REPLACE]^if  ( name != null )  {^309^^^^^308^315^[REPLACE] if  ( name == null )  {^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^310^^^^^308^315^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^return ;^310^^^^^308^315^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^return nullValue (  ) ;^312^^^^^308^315^[REPLACE] beforeName (  ) ;^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^string ( separator ) ;^313^^^^^308^315^[REPLACE] string ( name ) ;^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REMOVE]^return nullValue (  ) ;^313^^^^^308^315^[REMOVE] ^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^return null;^314^^^^^308^315^[REPLACE] return this;^[METHOD] name [TYPE] JsonWriter [PARAMETER] String name [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  [TYPE]  Writer out 
[REPLACE]^if  ( value !=separator )  {^324^^^^^323^330^[REPLACE] if  ( value == null )  {^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^return;^325^^^^^323^330^[REPLACE] return nullValue (  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^beforeValue ( true ) ;^327^^^^^323^330^[REPLACE] beforeValue ( false ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^string ( separator ) ;^328^^^^^323^330^[REPLACE] string ( value ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[ADD]^^328^329^^^^323^330^[ADD] string ( value ) ; return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^return null;^329^^^^^323^330^[REPLACE] return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^beforeValue ( true ) ;^338^^^^^337^341^[REPLACE] beforeValue ( false ) ;^[METHOD] nullValue [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[ADD]^^338^339^340^341^^337^341^[ADD] beforeValue ( false ) ; out.write ( "null" ) ; return this; }^[METHOD] nullValue [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^out.write ( "this" ) ;^339^^^^^337^341^[REPLACE] out.write ( "null" ) ;^[METHOD] nullValue [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^return null;^340^^^^^337^341^[REPLACE] return this;^[METHOD] nullValue [TYPE] JsonWriter [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^beforeValue ( true ) ;^349^^^^^348^352^[REPLACE] beforeValue ( false ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] boolean value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^out.write ( true ? "true" : "false" ) ;^350^^^^^348^352^[REPLACE] out.write ( value ? "true" : "false" ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] boolean value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^return null;^351^^^^^348^352^[REPLACE] return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] boolean value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out 
[REPLACE]^if  ( Double.isNaN ( value )  ) {^362^^^^^361^368^[REPLACE] if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^return ;^363^^^^^361^368^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^363^^^^^361^368^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^beforeValue ( true ) ;^365^^^^^361^368^[REPLACE] beforeValue ( false ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^out.append ( Double.isNaN ( value )  ) ;^366^^^^^361^368^[REPLACE] out.append ( Double.toString ( value )  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[ADD]^return this;^366^367^^^^361^368^[ADD] out.append ( Double.toString ( value )  ) ; return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^return null;^367^^^^^361^368^[REPLACE] return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] double value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  double value 
[REPLACE]^beforeValue ( true ) ;^376^^^^^375^379^[REPLACE] beforeValue ( false ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] long value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  long value 
[REPLACE]^out.write (   value    ) ;^377^^^^^375^379^[REPLACE] out.write ( Long.toString ( value )  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] long value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  long value 
[ADD]^return this;^377^378^^^^375^379^[ADD] out.write ( Long.toString ( value )  ) ; return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] long value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  long value 
[REPLACE]^out.write ( Long .isNaN ( this )   ) ;^377^^^^^375^379^[REPLACE] out.write ( Long.toString ( value )  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] long value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  long value 
[REPLACE]^return null;^378^^^^^375^379^[REPLACE] return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] long value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  value  [TYPE]  Writer out  [TYPE]  long value 
[REPLACE]^if  ( value != null )  {^389^^^^^388^401^[REPLACE] if  ( value == null )  {^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[ADD]^^389^390^391^^^388^401^[ADD] if  ( value == null )  { return nullValue (  ) ; }^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^return;^390^^^^^388^401^[REPLACE] return nullValue (  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^String string = value.Object (  ) ;^393^^^^^388^401^[REPLACE] String string = value.toString (  ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^if  (  string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^[REPLACE] if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^396^^^^^388^401^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^return ;^396^^^^^388^401^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[ADD]^^396^^^^^388^401^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^beforeValue ( true ) ;^398^^^^^388^401^[REPLACE] beforeValue ( false ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^out.write ( separator ) ;^399^^^^^388^401^[REPLACE] out.append ( string ) ;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[ADD]^^399^400^^^^388^401^[ADD] out.append ( string ) ; return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^return null;^400^^^^^388^401^[REPLACE] return this;^[METHOD] value [TYPE] JsonWriter [PARAMETER] Number value [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Number value  [TYPE]  Writer out 
[REPLACE]^out.close (  ) ;^408^^^^^407^409^[REPLACE] out.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[ADD]^^408^^^^^407^409^[ADD] out.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^out.flush (  ) ;^417^^^^^416^422^[REPLACE] out.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^if  ( peek (  )   ==  JsonScope.NONEMPTY_DOCUMENT )  {^419^^^^^416^422^[REPLACE] if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[ADD]^^419^420^421^^^416^422^[ADD] if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  { throw new IOException  (" ")  ; }^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^return ;^420^^^^^416^422^[REPLACE] throw new IOException  (" ")  ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^420^^^^^416^422^[REPLACE] throw new IOException  (" ")  ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^out.write ( "\\f" ) ;^425^^^^^424^484^[REPLACE] out.write ( "\"" ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^467^^^^^424^484^[REPLACE] if  ( htmlSafe )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( "\\f" ) ;^470^^^^^467^471^[REPLACE] out.write ( c ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out .close ( 0 , null , string )   ) ;^468^^^^^424^484^[REPLACE] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[ADD]^^468^469^470^471^^424^484^[ADD] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( "\\f" ) ;^468^^^^^424^484^[REPLACE] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REMOVE]^out.write ( "\\f" ) ;^468^^^^^424^484^[REMOVE] ^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^if  ( c  !=  0x1F )  {^475^^^^^424^484^[REPLACE] if  ( c <= 0x1F )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out .close ( null , null , closeBracket )  ;^478^^^^^475^479^[REPLACE] out.write ( c ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( "\\f" ) ;^476^^^^^424^484^[REPLACE] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( String .charAt ( i )   ) ;^476^^^^^424^484^[REPLACE] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REMOVE]^out.write ( "\\f" ) ;^476^^^^^424^484^[REMOVE] ^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 , length = value.size (  ) ; i < length; i++ )  {^426^^^^^424^484^[REPLACE] for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( String .charAt ( i )   ) ;^468^^^^^424^484^[REPLACE] out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^if  ( c  ==  0x1F )  {^475^^^^^424^484^[REPLACE] if  ( c <= 0x1F )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.write ( "\\f" ) ;^478^^^^^475^479^[REPLACE] out.write ( c ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^char c = separator.charAt ( i ) ;^427^^^^^424^484^[REPLACE] char c = value.charAt ( i ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[ADD]^^427^^^^^424^484^[ADD] char c = value.charAt ( i ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 , length = value.length (  ) ; i < length; i++ )  {^426^^^^^424^484^[REPLACE] for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0, length = separator.length (  ) ; i < length; i++ )  {^426^^^^^424^484^[REPLACE] for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[ADD]^^426^427^^^^424^484^[ADD] for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  { char c = value.charAt ( i ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^char c = value.equals ( i ) ;^427^^^^^424^484^[REPLACE] char c = value.charAt ( i ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^out.append ( "\"" ) ;^483^^^^^424^484^[REPLACE] out.write ( "\"" ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[ADD]^^483^^^^^424^484^[ADD] out.write ( "\"" ) ;^[METHOD] string [TYPE] void [PARAMETER] String value [CLASS] JsonWriter   [TYPE]  char c  [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i  length 
[REPLACE]^if  (string != null )  {^487^^^^^486^495^[REPLACE] if  ( indent == null )  {^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^return nullValue (  ) ;^488^^^^^486^495^[REPLACE] return;^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^out.append ( "\n" ) ;^491^^^^^486^495^[REPLACE] out.write ( "\n" ) ;^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^for  ( int i = 1; i < stack.size (  )  *  2; i++ )  {^492^^^^^486^495^[REPLACE] for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[ADD]^^492^493^494^^^486^495^[ADD] for  ( int i = 1; i < stack.size (  ) ; i++ )  { out.write ( indent ) ; }^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^out.append ( indent ) ;^493^^^^^486^495^[REPLACE] out.write ( indent ) ;^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[ADD]^^493^^^^^486^495^[ADD] out.write ( indent ) ;^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^[REPLACE] for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[METHOD] newline [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out  [TYPE]  int i 
[REPLACE]^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  { char c = value.charAt ( i ) ;^502^^^^^501^510^[REPLACE] JsonScope context = peek (  ) ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[ADD]^^502^^^^^501^510^[ADD] JsonScope context = peek (  ) ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^if  ( context  &&  JsonScope.NONEMPTY_OBJECT )  {^503^^^^^501^510^[REPLACE] if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^}  else {^505^^^^^501^510^[REPLACE] } else if  ( context != JsonScope.EMPTY_OBJECT )  {^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[ADD]^}^505^506^507^^^501^510^[ADD] else if  ( context != JsonScope.EMPTY_OBJECT )  { throw new IllegalStateException  (" ")  ; }^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^506^^^^^501^510^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[ADD]^^506^^^^^501^510^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^out.write ( '\\' ) ;^504^^^^^501^510^[REPLACE] out.write ( ',' ) ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^}  if  ( context  ==  JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^[REPLACE] } else if  ( context != JsonScope.EMPTY_OBJECT )  {^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^return nullValue (  ) ;^508^^^^^501^510^[REPLACE] newline (  ) ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^509^^^^^501^510^[REPLACE] replaceTop ( JsonScope.DANGLING_NAME ) ;^[METHOD] beforeName [TYPE] void [PARAMETER] [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  JsonScope context  [TYPE]  Writer out 
[REPLACE]^if  (  !root )  {^523^^^^^520^552^[REPLACE] if  ( !lenient && !root )  {^[METHOD] beforeValue [TYPE] void [PARAMETER] boolean root [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  root  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^return ;^524^525^^^^520^552^[REPLACE] throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[METHOD] beforeValue [TYPE] void [PARAMETER] boolean root [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  root  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^throw new IllegalStateException ( "JSON must start with an array or an object." ) ; ;^546^547^^^^520^552^[REPLACE] throw new IllegalStateException ( "JSON must have only one top-level value." ) ;^[METHOD] beforeValue [TYPE] void [PARAMETER] boolean root [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  root  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[REPLACE]^return ;^550^^^^^520^552^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] beforeValue [TYPE] void [PARAMETER] boolean root [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  root  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
[ADD]^^550^^^^^520^552^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] beforeValue [TYPE] void [PARAMETER] boolean root [CLASS] JsonWriter   [TYPE]  List stack  [TYPE]  boolean false  htmlSafe  lenient  root  true  value  [TYPE]  String closeBracket  indent  name  openBracket  separator  string  value  [TYPE]  Writer out 
