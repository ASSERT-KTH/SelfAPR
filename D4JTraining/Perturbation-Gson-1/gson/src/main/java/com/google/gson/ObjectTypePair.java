[REPLACE]^this.obj =  null;^31^^^^^30^34^[REPLACE] this.obj = obj;^[METHOD] <init> [TYPE] Type,boolean) [PARAMETER] Object obj Type type boolean preserveType [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^this.type =  null;^32^^^^^30^34^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] Type,boolean) [PARAMETER] Object obj Type type boolean preserveType [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^this.preserveType =  true;^33^^^^^30^34^[REPLACE] this.preserveType = preserveType;^[METHOD] <init> [TYPE] Type,boolean) [PARAMETER] Object obj Type type boolean preserveType [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return false;^37^^^^^36^38^[REPLACE] return obj;^[METHOD] getObject [TYPE] Object [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^this.obj =  null;^41^^^^^40^42^[REPLACE] this.obj = obj;^[METHOD] setObject [TYPE] void [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[ADD]^^41^^^^^40^42^[ADD] this.obj = obj;^[METHOD] setObject [TYPE] void [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return true;^45^^^^^44^46^[REPLACE] return type;^[METHOD] getType [TYPE] Type [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return preserveType == other.preserveType;^50^^^^^49^51^[REPLACE] return String.format ( "preserveType: %b, type: %s, obj: %s", preserveType, type, obj ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^HANDLER handler = true;^55^^^^^53^67^[REPLACE] HANDLER handler = null;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^if  (true && obj == null )  {^56^^^^^53^67^[REPLACE] if  ( !preserveType && obj != null )  {^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[ADD]^^56^57^58^59^^53^67^[ADD] if  ( !preserveType && obj != null )  {  ObjectTypePair moreSpecificType = toMoreSpecificType (  ) ; handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^if  ( handler == null )  {^60^^^^^53^67^[REPLACE] if  ( handler != null )  {^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^return  new Pair<HANDLER, ObjectTypePair> ( handler, this )  ;^61^^^^^53^67^[REPLACE] return new Pair<HANDLER, ObjectTypePair> ( handler, moreSpecificType ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^handler = handlers.getHandlerFor ( type ) ; ;^59^^^^^53^67^[REPLACE] handler = handlers.getHandlerFor ( moreSpecificType.type ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^58^^^^^53^67^[REPLACE] ObjectTypePair moreSpecificType = toMoreSpecificType (  ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^if  ( handler == false )  {^60^^^^^53^67^[REPLACE] if  ( handler != null )  {^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^handler = handlers.getHandlerFor ( moreSpecificType.type ) ; ;^65^^^^^53^67^[REPLACE] handler = handlers.getHandlerFor ( type ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^return new Pair;^66^^^^^53^67^[REPLACE] return handler == null ? null : new Pair<HANDLER, ObjectTypePair> ( handler, this ) ;^[METHOD] getMatchingHandler [TYPE] <HANDLER> [PARAMETER] ParameterizedTypeHandlerMap<HANDLER> handlers [CLASS] ObjectTypePair   [TYPE]  Type type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ParameterizedTypeHandlerMap handlers  [TYPE]  HANDLER handler  [TYPE]  ObjectTypePair moreSpecificType 
[REPLACE]^if  ( preserveType ) {^70^^^^^69^78^[REPLACE] if  ( preserveType || obj == null )  {^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return null;^71^^^^^69^78^[REPLACE] return this;^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^Type actualType = getActualTypeIfMoreSpecific ( type, obj .equals ( obj )   ) ;^73^^^^^69^78^[REPLACE] Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( actualType  &&  type )  {^74^^^^^69^78^[REPLACE] if  ( actualType == type )  {^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return null;^75^^^^^69^78^[REPLACE] return this;^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return new ObjectTypePair ( obj, type, preserveType ) ;^77^^^^^69^78^[REPLACE] return new ObjectTypePair ( obj, actualType, preserveType ) ;^[METHOD] toMoreSpecificType [TYPE] ObjectTypePair [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( ! type instanceof Class<?> )  {^85^^^^^84^95^[REPLACE] if  ( type instanceof Class<?> )  {^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[ADD]^Class<?> typeAsClass =  ( Class<?> )  type;type = actualClass;^85^86^87^88^89^84^95^[ADD] if  ( type instanceof Class<?> )  { Class<?> typeAsClass =  ( Class<?> )  type; if  ( typeAsClass.isAssignableFrom ( actualClass )  )  { type = actualClass; }^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( typeAsClass.isAssignableFrom ( this )  )  {^87^^^^^84^95^[REPLACE] if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  this;^88^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  (actualType  ||  Object.class )  {^90^^^^^84^95^[REPLACE] if  ( type == Object.class )  {^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  true;^91^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  this;^91^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^Type actualType = getActualTypeIfMoreSpecific ( type, obj.getClass (  )  ) ;^86^^^^^84^95^[REPLACE] Class<?> typeAsClass =  ( Class<?> )  type;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[ADD]^^86^^^^^84^95^[ADD] Class<?> typeAsClass =  ( Class<?> )  type;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( null.isAssignableFrom ( actualClass )  )  {^87^^^^^84^95^[REPLACE] if  ( typeAsClass.isAssignableFrom ( actualClass )  )  {^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  true;^88^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( type  &&  Object.class )  {^90^^^^^84^95^[REPLACE] if  ( type == Object.class )  {^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[ADD]^^90^91^92^^^84^95^[ADD] if  ( type == Object.class )  { type = actualClass; }^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  null;^91^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^type =  null;^88^^^^^84^95^[REPLACE] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[ADD]^^88^^^^^84^95^[ADD] type = actualClass;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return true;^94^^^^^84^95^[REPLACE] return type;^[METHOD] getActualTypeIfMoreSpecific [TYPE] Type [PARAMETER] Type type Class<?> actualClass [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  Class actualClass  typeAsClass  [TYPE]  boolean false  preserveType  true 
[REPLACE]^return  (  ( obj == null )  ? 31 : obj .Object (  )   ) ;^101^^^^^98^102^[REPLACE] return  (  ( obj == null )  ? 31 : obj.hashCode (  )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
[REPLACE]^if  ( this  || other )  {^106^^^^^105^131^[REPLACE] if  ( this == obj )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return false;^107^^^^^105^131^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( obj != this )  {^109^^^^^105^131^[REPLACE] if  ( obj == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^110^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( getClass (  )   ==  obj.getClass (  )  )  {^112^^^^^105^131^[REPLACE] if  ( getClass (  )  != obj.getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^113^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^ObjectTypePair moreSpecificType = toMoreSpecificType (  ) ;^115^^^^^105^131^[REPLACE] ObjectTypePair other =  ( ObjectTypePair )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( this.obj != this )  {^116^^^^^105^131^[REPLACE] if  ( this.obj == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^} else if  ( this.obj  ==  other.obj )  {^120^^^^^105^131^[REPLACE] } else if  ( this.obj != other.obj )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^121^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  (obj == null )  {^117^^^^^105^131^[REPLACE] if  ( other.obj != null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[ADD]^^117^118^119^^^105^131^[ADD] if  ( other.obj != null )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^118^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( other.obj == true )  {^117^^^^^105^131^[REPLACE] if  ( other.obj != null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[ADD]^}   return false;^120^121^122^^^105^131^[ADD] else if  ( this.obj != other.obj )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( type != this  )  {^123^^^^^105^131^[REPLACE] if  ( type == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^}  else {^127^^^^^105^131^[REPLACE] } else if  ( !type.equals ( other.type )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^128^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^if  ( other.type == null )  {^124^^^^^105^131^[REPLACE] if  ( other.type != null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return true;^125^^^^^105^131^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^}  if  ( !type.equals ( other.type )  )  {^127^^^^^105^131^[REPLACE] } else if  ( !type.equals ( other.type )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return preserveType  !=  other.preserveType;;^130^^^^^105^131^[REPLACE] return preserveType == other.preserveType;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true  [TYPE]  ObjectTypePair other 
[REPLACE]^return preserveType == other.preserveType;^134^^^^^133^135^[REPLACE] return preserveType;^[METHOD] isPreserveType [TYPE] boolean [PARAMETER] [CLASS] ObjectTypePair   [TYPE]  Type actualType  type  [TYPE]  Object obj  [TYPE]  boolean false  preserveType  true 
