[REPLACE]^private static final char[] NON_EXECUTE_PREFIX ;^189^^^^^^^[REPLACE] private static final char[] NON_EXECUTE_PREFIX = " ) ]}'\n".toCharArray (  ) ;^ [CLASS] JsonReader  
[REPLACE]^private  Reader in;^192^^^^^^^[REPLACE] private final Reader in;^ [CLASS] JsonReader  
[REPLACE]^private boolean lenient = true;^195^^^^^^^[REPLACE] private boolean lenient = false;^ [CLASS] JsonReader  
[REPLACE]^private final char[] buffer = new char[1];^201^^^^^^^[REPLACE] private final char[] buffer = new char[1024];^ [CLASS] JsonReader  
[REPLACE]^private int pos ;^202^^^^^^^[REPLACE] private int pos = 0;^ [CLASS] JsonReader  
[REPLACE]^private int limit ;^203^^^^^^^[REPLACE] private int limit = 0;^ [CLASS] JsonReader  
[REPLACE]^private final List<JsonScope> stack  = null ;^205^^^^^^^[REPLACE] private final List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^ [CLASS] JsonReader  
[REPLACE]^private  boolean  name;^227^^^^^^^[REPLACE] private String name;^ [CLASS] JsonReader  
[REPLACE]^private boolean skipping = true;^233^^^^^^^[REPLACE] private boolean skipping = false;^ [CLASS] JsonReader  
[REPLACE]^if  ( in != null )  {^239^^^^^238^243^[REPLACE] if  ( in == null )  {^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader in [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^240^^^^^238^243^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader in [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^240^^^^^238^243^[ADD] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader in [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^this.in =  null;^242^^^^^238^243^[REPLACE] this.in = in;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader in [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^242^^^^^238^243^[ADD] this.in = in;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader in [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^this.lenient =  true;^275^^^^^274^276^[REPLACE] this.lenient = lenient;^[METHOD] setLenient [TYPE] void [PARAMETER] boolean lenient [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^275^^^^^274^276^[ADD] this.lenient = lenient;^[METHOD] setLenient [TYPE] void [PARAMETER] boolean lenient [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^282^^^^^281^283^[REPLACE] return lenient;^[METHOD] isLenient [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^expect ( JsonToken.END_ARRAY ) ;^290^^^^^289^291^[REPLACE] expect ( JsonToken.BEGIN_ARRAY ) ;^[METHOD] beginArray [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^expect ( JsonToken.BEGIN_ARRAY ) ;^298^^^^^297^299^[REPLACE] expect ( JsonToken.END_ARRAY ) ;^[METHOD] endArray [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^expect ( JsonToken.END_OBJECT ) ;^306^^^^^305^307^[REPLACE] expect ( JsonToken.BEGIN_OBJECT ) ;^[METHOD] beginObject [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^expect ( JsonToken.BEGIN_OBJECT ) ;^314^^^^^313^315^[REPLACE] expect ( JsonToken.END_OBJECT ) ;^[METHOD] endObject [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^314^^^^^313^315^[ADD] expect ( JsonToken.END_OBJECT ) ;^[METHOD] endObject [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^321^^^^^320^326^[REPLACE] quickPeek (  ) ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( token  ==  expected )  {^322^^^^^320^326^[REPLACE] if  ( token != expected )  {^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^323^^^^^320^326^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^323^^^^^320^326^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^323^^^^^320^326^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^323^^^^^320^326^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^325^^^^^320^326^[REPLACE] advance (  ) ;^[METHOD] expect [TYPE] void [PARAMETER] JsonToken expected [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^332^^^^^331^334^[REPLACE] quickPeek (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token != JsonToken.END_OBJECT ;;^333^^^^^331^334^[REPLACE] return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^340^^^^^339^347^[REPLACE] quickPeek (  ) ;^[METHOD] peek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( token != null )  {^342^^^^^339^347^[REPLACE] if  ( token == null )  {^[METHOD] peek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^343^^^^^339^347^[REPLACE] decodeLiteral (  ) ;^[METHOD] peek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^346^^^^^339^347^[REPLACE] return token;^[METHOD] peek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.equalsIgnoreCase ( "true" )  )  {^355^^^^^354^396^[REPLACE] if  ( hasToken )  {^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^356^^^^^354^396^[REPLACE] return token;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !lenient )  {^361^^^^^354^396^[REPLACE] if  ( lenient )  {^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^362^^^^^354^396^[REPLACE] consumeNonExecutePrefix (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !lenient ) {^366^^^^^354^396^[REPLACE] if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Expected EOF" ) ;^367^^^^^354^396^[REPLACE] syntaxError ( "Expected JSON document to start with '[' or '{'" ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !lenient )  {^383^^^^^354^396^[REPLACE] if  ( lenient )  {^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return firstToken;^384^^^^^354^396^[REPLACE] return token;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^JsonToken token = nextValue (  ) ;return token;^381^382^383^384^385^354^396^[ADD] try { JsonToken token = nextValue (  ) ; if  ( lenient )  { return token; }^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^JsonToken firstToken = nextValue (  ) ;^382^^^^^354^396^[REPLACE] JsonToken token = nextValue (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^382^^^^^354^396^[ADD] JsonToken token = nextValue (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^386^^^^^354^396^[REPLACE] throw syntaxError ( "Expected EOF" ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false; ;^388^^^^^354^396^[REPLACE] hasToken = true;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.NULL; ;^389^^^^^354^396^[REPLACE] return token = JsonToken.END_DOCUMENT;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token;^369^^^^^354^396^[REPLACE] return firstToken;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return nextInArray ( false ) ;^371^^^^^354^396^[REPLACE] return nextInArray ( true ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return nextInArray ( true ) ;^373^^^^^354^396^[REPLACE] return nextInArray ( false ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return nextInObject ( false ) ;^375^^^^^354^396^[REPLACE] return nextInObject ( true ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return nextValue (  ) ;^377^^^^^354^396^[REPLACE] return objectValue (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return nextInObject ( true ) ;^379^^^^^354^396^[REPLACE] return nextInObject ( false ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_OBJECT;^389^^^^^354^396^[REPLACE] return token = JsonToken.END_DOCUMENT;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^JsonToken token = nextValue (  ) ;^365^^^^^354^396^[REPLACE] JsonToken firstToken = nextValue (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^386^^^^^354^396^[REPLACE] throw syntaxError ( "Expected EOF" ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^392^^^^^354^396^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^394^^^^^354^396^[REPLACE] throw new AssertionError (  ) ;^[METHOD] quickPeek [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  EOFException e  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^403^^^^^401^418^[REPLACE] nextNonWhitespace (  ) ;^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos + NON_EXECUTE_PREFIX.length /  0.5  > limit ) {^406^^^^^401^418^[REPLACE] if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^return;^406^407^408^^^401^418^[ADD] if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  { return; }^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^407^^^^^401^418^[REPLACE] return;^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( buffer[pos + i]  ==  NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^[REPLACE] if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^412^^^^^401^418^[REPLACE] return;^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( limitnt i = 0 ; i < NON_EXECUTE_PREFIX.length (  ) ; i++ )  {^410^^^^^401^418^[REPLACE] for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( int i = 0 ; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^[REPLACE] for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^pos + =  pos +;^417^^^^^401^418^[REPLACE] pos += NON_EXECUTE_PREFIX.length;^[METHOD] consumeNonExecutePrefix [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^424^^^^^423^432^[REPLACE] quickPeek (  ) ;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 0;^426^^^^^423^432^[REPLACE] JsonToken result = token;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^426^^^^^423^432^[ADD] JsonToken result = token;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = true;^427^^^^^423^432^[REPLACE] hasToken = false;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = true;^428^^^^^423^432^[REPLACE] token = null;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^value = true;^429^^^^^423^432^[REPLACE] value = null;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^429^^^^^423^432^[ADD] value = null;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = false;^430^^^^^423^432^[REPLACE] name = null;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return firstToken;^431^^^^^423^432^[REPLACE] return result;^[METHOD] advance [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^442^^^^^441^449^[REPLACE] quickPeek (  ) ;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( token  ==  JsonToken.NAME )  {^443^^^^^441^449^[REPLACE] if  ( token != JsonToken.NAME )  {^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^444^^^^^441^449^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^444^^^^^441^449^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^444^^^^^441^449^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String result = value;^446^^^^^441^449^[REPLACE] String result = name;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^447^^^^^441^449^[REPLACE] advance (  ) ;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return value;^448^^^^^441^449^[REPLACE] return result;^[METHOD] nextName [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^460^^^^^459^468^[REPLACE] peek (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^460^^^^^459^468^[ADD] peek (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value != null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^[REPLACE] if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^462^^^^^459^468^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^462^^^^^459^468^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^462^^^^^459^468^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REMOVE]^if  ( result >= 1L && value.startsWith ( "0" )  )  { throw new NumberFormatException  (" ")  ;^462^^^^^459^468^[REMOVE] ^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String result = name;^465^^^^^459^468^[REPLACE] String result = value;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^466^^^^^459^468^[REPLACE] advance (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^466^^^^^459^468^[ADD] advance (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return value;^467^^^^^459^468^[REPLACE] return result;^[METHOD] nextString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^478^^^^^477^494^[REPLACE] quickPeek (  ) ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^478^^^^^477^494^[ADD] quickPeek (  ) ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  token == JsonToken.STRING )  {^479^^^^^477^494^[REPLACE] if  ( value == null || token == JsonToken.STRING )  {^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^480^^^^^477^494^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^480^^^^^477^494^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^JsonToken result = token;^483^^^^^477^494^[REPLACE] boolean result;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.startsWith ( "true" )  )  {^484^^^^^477^494^[REPLACE] if  ( value.equalsIgnoreCase ( "true" )  )  {^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.equalsIgnoreCase ( "true" )  )  {^486^^^^^477^494^[REPLACE] } else if  ( value.equalsIgnoreCase ( "false" )  )  {^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^}^486^487^488^489^490^477^494^[ADD] else if  ( value.equalsIgnoreCase ( "false" )  )  { result = false; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^489^^^^^477^494^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result = true;^487^^^^^477^494^[REPLACE] result = false;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^487^^^^^477^494^[ADD] result = false;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^489^^^^^477^494^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result = false;^485^^^^^477^494^[REPLACE] result = true;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^486^^^^^477^494^[REPLACE] } else if  ( value.equalsIgnoreCase ( "false" )  )  {^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^492^^^^^477^494^[REPLACE] advance (  ) ;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return true;^493^^^^^477^494^[REPLACE] return result;^[METHOD] nextBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^504^^^^^503^514^[REPLACE] quickPeek (  ) ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value != null || token == JsonToken.STRING )  {^505^^^^^503^514^[REPLACE] if  ( value == null || token == JsonToken.STRING )  {^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^506^^^^^503^514^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^506^^^^^503^514^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.startsWith ( "null" )  )  {^509^^^^^503^514^[REPLACE] if  ( !value.equalsIgnoreCase ( "null" )  )  {^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^510^^^^^503^514^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^510^^^^^503^514^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^513^^^^^503^514^[REPLACE] advance (  ) ;^[METHOD] nextNull [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^526^^^^^525^543^[REPLACE] quickPeek (  ) ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value != null )  {^527^^^^^525^543^[REPLACE] if  ( value == null )  {^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^528^^^^^525^543^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^528^^^^^525^543^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^528^^^^^525^543^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^double result = Double.isNaN ( value ) ;^531^^^^^525^543^[REPLACE] double result = Double.parseDouble ( value ) ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  ( result >= 1.0d ) {^533^^^^^525^543^[REPLACE] if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^534^^^^^525^543^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^534^^^^^525^543^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( lenient &&  ( Double.isNaN ( result )  ) {^537^^^^^525^543^[REPLACE] if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^537^538^539^^^525^543^[ADD] if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  { throw new NumberFormatException  (" ")  ; }^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^538^^^^^525^543^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^541^^^^^525^543^[REPLACE] advance (  ) ;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^542^^^^^525^543^[REPLACE] return result;^[METHOD] nextDouble [TYPE] double [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double result  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^556^^^^^555^578^[REPLACE] quickPeek (  ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value != true )  {^557^^^^^555^578^[REPLACE] if  ( value == null )  {^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^558^^^^^555^578^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^558^^^^^555^578^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^558^^^^^555^578^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^JsonToken result = token;^561^^^^^555^578^[REPLACE] long result;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  ( double )  result  ==  asDouble )  {^567^^^^^555^578^[REPLACE] if  (  ( double )  result != asDouble )  {^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^567^568^569^^^555^578^[ADD] if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^568^^^^^555^578^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^result = Long.parseLong ( value ) ;double asDouble = Double.parseDouble ( value ) ;result =  ( long )  asDouble;^562^563^564^565^566^555^578^[ADD] try { result = Long.parseLong ( value ) ; } catch  ( NumberFormatException ignored )  { double asDouble = Double.parseDouble ( value ) ; result =  ( long )  asDouble;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result = Integer.parseInt ( value ) ; ;^563^^^^^555^578^[REPLACE] result = Long.parseLong ( value ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result =  ( int )  asDouble; ;^566^^^^^555^578^[REPLACE] result =  ( long )  asDouble;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^double asDouble = Double.isNaN ( value ) ;^565^^^^^555^578^[REPLACE] double asDouble = Double.parseDouble ( value ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^565^566^^^^555^578^[ADD] double asDouble = Double.parseDouble ( value ) ; result =  ( long )  asDouble;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^564^565^^^^555^578^[ADD] catch  ( NumberFormatException ignored )  { double asDouble = Double.parseDouble ( value ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (true || value.startsWith ( "0" )  )  {^572^^^^^555^578^[REPLACE] if  ( result >= 1L && value.startsWith ( "0" )  )  {^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^573^^^^^555^578^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^573^^^^^555^578^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^576^^^^^555^578^[REPLACE] advance (  ) ;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REMOVE]^name = nextLiteral (  ) ;^576^^^^^555^578^[REMOVE] ^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^577^^^^^555^578^[REPLACE] return result;^[METHOD] nextLong [TYPE] long [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  [TYPE]  long result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^591^^^^^590^613^[REPLACE] quickPeek (  ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value != null )  {^592^^^^^590^613^[REPLACE] if  ( value == null )  {^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^593^^^^^590^613^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ;^593^^^^^590^613^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^593^^^^^590^613^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 0;^596^^^^^590^613^[REPLACE] int result;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  ( double )  result  ==  asDouble )  {^602^^^^^590^613^[REPLACE] if  (  ( double )  result != asDouble )  {^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^602^603^604^^^590^613^[ADD] if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^603^^^^^590^613^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^603^^^^^590^613^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^result = Integer.parseInt ( value ) ;double asDouble = Double.parseDouble ( value ) ;result =  ( int )  asDouble;^597^598^599^600^601^590^613^[ADD] try { result = Integer.parseInt ( value ) ; } catch  ( NumberFormatException ignored )  { double asDouble = Double.parseDouble ( value ) ; result =  ( int )  asDouble;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result = Long.parseLong ( value ) ; ;^598^^^^^590^613^[REPLACE] result = Integer.parseInt ( value ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^result =  ( long )  asDouble; ;^601^^^^^590^613^[REPLACE] result =  ( int )  asDouble;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^double asDouble = Double.isNaN ( value ) ;^600^^^^^590^613^[REPLACE] double asDouble = Double.parseDouble ( value ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( result >= 1 || value.startsWith ( "0" )  )  {^607^^^^^590^613^[REPLACE] if  ( result >= 1L && value.startsWith ( "0" )  )  {^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^608^^^^^590^613^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^608^^^^^590^613^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^611^^^^^590^613^[REPLACE] advance (  ) ;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REMOVE]^name = nextLiteral (  ) ;^611^^^^^590^613^[REMOVE] ^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return pos;^612^^^^^590^613^[REPLACE] return result;^[METHOD] nextInt [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  double asDouble  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = true;^619^^^^^618^625^[REPLACE] hasToken = false;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^619^620^^^^618^625^[ADD] hasToken = false; value = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^value = "null"; ;^620^^^^^618^625^[REPLACE] value = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^620^^^^^618^625^[ADD] value = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = false;^621^^^^^618^625^[REPLACE] token = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^621^622^^^^618^625^[ADD] token = null; stack.clear (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^stack.get (  ) ;^622^^^^^618^625^[REPLACE] stack.clear (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^stack.add ( JsonScope.CLOSED ) ;^622^623^^^^618^625^[ADD] stack.clear (  ) ; stack.add ( JsonScope.CLOSED ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^623^^^^^618^625^[REPLACE] stack.add ( JsonScope.CLOSED ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^624^^^^^618^625^[REPLACE] in.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^skipping = false; ;^633^^^^^632^647^[REPLACE] skipping = true;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( firstToken == JsonToken.BEGIN_ARRAY ) {^638^^^^^632^647^[REPLACE] if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  (  token == JsonToken.END_OBJECT )  {^640^^^^^632^647^[REPLACE] } else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^}^640^641^642^^^632^647^[ADD] else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^640^^^^^632^647^[REPLACE] } else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^int count = 0;JsonToken token = advance (  ) ;^634^635^636^637^638^632^647^[ADD] try { int count = 0; do { JsonToken token = advance (  ) ; if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( token == JsonToken.BEGIN_ARRAY ) {^638^^^^^632^647^[REPLACE] if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REMOVE]^if  (  ( token ==  ( JsonToken.END_ARRAY )  )  ||  ( token ==  ( JsonToken.END_OBJECT )  )  )  {     count--; }^638^^^^^632^647^[REMOVE] ^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^}   count--;^640^641^642^^^632^647^[ADD] else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^} else if  ( token == JsonToken.END_ARRAY ) {^640^^^^^632^647^[REPLACE] } else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 2;^635^^^^^632^647^[REPLACE] int count = 0;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^JsonToken result = token;^637^^^^^632^647^[REPLACE] JsonToken token = advance (  ) ;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^skipping = true;^645^^^^^632^647^[REPLACE] skipping = false;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^645^^^^^632^647^[ADD] skipping = false;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 3;^635^^^^^632^647^[REPLACE] int count = 0;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^635^^^^^632^647^[ADD] int count = 0;^[METHOD] skipValue [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return stack.get ( stack.length (  )  - 1 ) ;^650^^^^^649^651^[REPLACE] return stack.get ( stack.size (  )  - 1 ) ;^[METHOD] peekStack [TYPE] JsonScope [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return stack.remove ( stack .set ( this )    ;^654^^^^^653^655^[REPLACE] return stack.remove ( stack.size (  )  - 1 ) ;^[METHOD] pop [TYPE] JsonScope [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^stack.set ( newTop ) ;^658^^^^^657^659^[REPLACE] stack.add ( newTop ) ;^[METHOD] push [TYPE] void [PARAMETER] JsonScope newTop [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  JsonScope newTop  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^658^^^^^657^659^[ADD] stack.add ( newTop ) ;^[METHOD] push [TYPE] void [PARAMETER] JsonScope newTop [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  JsonScope newTop  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^stack.set ( stack.length (  )  - 0 , newTop ) ;^665^^^^^664^666^[REPLACE] stack.set ( stack.size (  )  - 1, newTop ) ;^[METHOD] replaceTop [TYPE] void [PARAMETER] JsonScope newTop [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  JsonScope newTop  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^stack.set ( stack.add (  )  - 1, newTop ) ;^665^^^^^664^666^[REPLACE] stack.set ( stack.size (  )  - 1, newTop ) ;^[METHOD] replaceTop [TYPE] void [PARAMETER] JsonScope newTop [CLASS] JsonReader   [TYPE]  boolean false  hasToken  lenient  result  skipping  true  [TYPE]  JsonScope newTop  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( true )  {^669^^^^^668^707^[REPLACE] if  ( firstElement )  {^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^676^^^^^669^685^[REPLACE] hasToken = true;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^677^^^^^669^685^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.BEGIN_ARRAY;^677^^^^^669^685^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^683^^^^^669^685^[REPLACE] throw syntaxError ( "Unterminated array" ) ;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^670^^^^^668^707^[REPLACE] replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false; ;^676^^^^^668^707^[REPLACE] hasToken = true;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^677^^^^^668^707^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.BEGIN_ARRAY;^677^^^^^668^707^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^683^^^^^668^707^[REPLACE] throw syntaxError ( "Unterminated array" ) ;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( true )  {^689^^^^^668^707^[REPLACE] if  ( firstElement )  {^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^689^690^691^692^693^668^707^[ADD] if  ( firstElement )  { pop (  ) ; hasToken = true; return token = JsonToken.END_ARRAY; }^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^691^^^^^668^707^[REPLACE] hasToken = true;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^691^^^^^668^707^[ADD] hasToken = true;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^692^^^^^668^707^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^692^^^^^668^707^[ADD] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.BEGIN_ARRAY;^692^^^^^668^707^[REPLACE] return token = JsonToken.END_ARRAY;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^700^^^^^668^707^[REPLACE] hasToken = true;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^value = null; ;^701^^^^^668^707^[REPLACE] value = "null";^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^702^^^^^668^707^[REPLACE] return token = JsonToken.NULL;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^702^^^^^668^707^[ADD] return token = JsonToken.NULL;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.NAME;^702^^^^^668^707^[REPLACE] return token = JsonToken.NULL;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return objectValue (  ) ;^705^^^^^668^707^[REPLACE] return nextValue (  ) ;^[METHOD] nextInArray [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( true )  {^715^^^^^709^759^[REPLACE] if  ( firstElement )  {^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^715^716^717^718^719^709^759^[ADD] if  ( firstElement )  {  switch  ( nextNonWhitespace (  )  )  { case '}': pop (  ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^729^^^^^715^737^[REPLACE] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^729^^^^^715^737^[ADD] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^730^^^^^715^737^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT;^730^^^^^715^737^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^735^^^^^715^737^[REPLACE] throw syntaxError ( "Unterminated object" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^735^^^^^715^737^[ADD] throw syntaxError ( "Unterminated object" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^720^^^^^709^759^[REPLACE] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^720^^^^^709^759^[ADD] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^721^^^^^709^759^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT;^721^^^^^709^759^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^721^^^^^709^759^[ADD] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^729^^^^^709^759^[REPLACE] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^729^^^^^709^759^[ADD] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^730^^^^^709^759^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^730^^^^^709^759^[ADD] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT;^730^^^^^709^759^[REPLACE] return token = JsonToken.END_OBJECT;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^735^^^^^709^759^[REPLACE] throw syntaxError ( "Unterminated object" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int c = nextNonWhitespace (  ) ;^740^^^^^709^759^[REPLACE] int quote = nextNonWhitespace (  ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^740^^^^^709^759^[ADD] int quote = nextNonWhitespace (  ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( name.charAt (  )  - 4 == 0  )  {^751^^^^^709^759^[REPLACE] if  ( name.length (  )  == 0 )  {^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^752^^^^^709^759^[REPLACE] throw syntaxError ( "Expected name" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Expected EOF" ) ;^752^^^^^709^759^[REPLACE] throw syntaxError ( "Expected name" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^752^^^^^709^759^[ADD] throw syntaxError ( "Expected name" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^value = nextString (  ( char )  c ) ; ;^745^^^^^709^759^[REPLACE] name = nextString (  ( char )  quote ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name  =  name ;^750^^^^^709^759^[REPLACE] name = nextLiteral (  ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^750^^^^^709^759^[ADD] name = nextLiteral (  ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^752^^^^^709^759^[REPLACE] throw syntaxError ( "Expected name" ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^756^^^^^709^759^[REPLACE] replaceTop ( JsonScope.DANGLING_NAME ) ;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^757^^^^^709^759^[REPLACE] hasToken = true;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^757^758^^^^709^759^[ADD] hasToken = true; return token = JsonToken.NAME;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^758^^^^^709^759^[REPLACE] return token = JsonToken.NAME;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^758^^^^^709^759^[ADD] return token = JsonToken.NAME;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.NULL;^758^^^^^709^759^[REPLACE] return token = JsonToken.NAME;^[METHOD] nextInObject [TYPE] JsonToken [PARAMETER] boolean firstElement [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  fillBuffer ( 1L )  )  || buffer[pos] == '>' )  {^771^^^^^761^781^[REPLACE] if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^771^772^773^^^761^781^[ADD] if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  { pos++; }^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^776^^^^^761^781^[REPLACE] throw syntaxError ( "Expected ':'" ) ;^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^776^^^^^761^781^[ADD] throw syntaxError ( "Expected ':'" ) ;^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^779^^^^^761^781^[REPLACE] replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return objectValue (  ) ;^780^^^^^761^781^[REPLACE] return nextValue (  ) ;^[METHOD] objectValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int quote = nextNonWhitespace (  ) ;^784^^^^^783^807^[REPLACE] int c = nextNonWhitespace (  ) ;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false; ;^788^^^^^783^807^[REPLACE] hasToken = true;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^789^^^^^783^807^[REPLACE] return token = JsonToken.BEGIN_OBJECT;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^793^^^^^783^807^[REPLACE] hasToken = true;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.NULL; ;^794^^^^^783^807^[REPLACE] return token = JsonToken.BEGIN_ARRAY;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextString (  ( char )  quote ) ; ;^799^^^^^783^807^[REPLACE] value = nextString (  ( char )  c ) ;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^800^^^^^783^807^[REPLACE] hasToken = true;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^800^^^^^783^807^[ADD] hasToken = true;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.END_DOCUMENT; ;^801^^^^^783^807^[REPLACE] return token = JsonToken.STRING;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.BEGIN_ARRAY;^789^^^^^783^807^[REPLACE] return token = JsonToken.BEGIN_OBJECT;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.BEGIN_OBJECT;^794^^^^^783^807^[REPLACE] return token = JsonToken.BEGIN_ARRAY;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = JsonToken.NULL;^801^^^^^783^807^[REPLACE] return token = JsonToken.STRING;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^805^^^^^783^807^[REPLACE] return readLiteral (  ) ;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  pos  quote  result  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( limit  == result )  {^815^^^^^814^831^[REPLACE] if  ( limit != pos )  {^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^limit = 3;^819^^^^^814^831^[REPLACE] limit = 0;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^limit - =  limit -;^816^^^^^814^831^[REPLACE] limit -= pos;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^816^^^^^814^831^[ADD] limit -= pos;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^limit = 0 / 4;^819^^^^^814^831^[REPLACE] limit = 0;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^pos = 4;^822^^^^^814^831^[REPLACE] pos = 0;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 0;^823^^^^^814^831^[REPLACE] int total;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^823^^^^^814^831^[ADD] int total;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  (  ( result = in.read ( buffer, limit, buffer.length - 2 - limit )  )  != -1 )  {^824^^^^^814^831^[REPLACE] while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( limit  <=  minimum )  {^826^^^^^814^831^[REPLACE] if  ( limit >= minimum )  {^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return false;^827^^^^^814^831^[REPLACE] return true;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^limit +=  result;^825^^^^^814^831^[REPLACE] limit += total;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^825^^^^^814^831^[ADD] limit += total;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (result  >  minimum )  {^826^^^^^814^831^[REPLACE] if  ( limit >= minimum )  {^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  (  ( total = in.read ( buffer, limit, buffer.length %  2 - limit )  )  != -1 )  {^824^^^^^814^831^[REPLACE] while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^824^825^^^^814^831^[ADD] while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  { limit += total;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return true;^830^^^^^814^831^[REPLACE] return false;^[METHOD] fillBuffer [TYPE] boolean [PARAMETER] int minimum [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  ( pos < limit  &&  fillBuffer ( 1 )  )  {^834^^^^^833^885^[REPLACE] while  ( pos < limit || fillBuffer ( 1 )  )  {^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^834^835^^^^833^885^[ADD] while  ( pos < limit || fillBuffer ( 1 )  )  { int c = buffer[pos++];^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos == limit ) {^844^^^^^833^885^[REPLACE] if  ( pos == limit && !fillBuffer ( 1 )  )  {^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return count;^845^^^^^833^885^[REPLACE] return c;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( skipTo ( "*/" )  )  {^854^^^^^833^885^[REPLACE] if  ( !skipTo ( "*/" )  )  {^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^855^^^^^833^885^[REPLACE] throw syntaxError ( "Unterminated comment" ) ;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated object" ) ;^855^^^^^833^885^[REPLACE] throw syntaxError ( "Unterminated comment" ) ;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^855^^^^^833^885^[ADD] throw syntaxError ( "Unterminated comment" ) ;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^pos += 3;^857^^^^^833^885^[REPLACE] pos += 2;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return count;^867^^^^^833^885^[REPLACE] return c;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return count;^881^^^^^833^885^[REPLACE] return c;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^835^^^^^833^885^[REPLACE] int c = buffer[pos++];^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^char c = buffer[pos++];^849^^^^^833^885^[REPLACE] char peek = buffer[pos];^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^849^^^^^833^885^[ADD] char peek = buffer[pos];^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (skipping && fillBuffer ( 1 )  )  {^844^^^^^833^885^[REPLACE] if  ( pos == limit && !fillBuffer ( 1 )  )  {^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^pos += 0;^857^^^^^833^885^[REPLACE] pos += 2;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^857^^^^^833^885^[ADD] pos += 2;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^855^^^^^833^885^[REPLACE] throw syntaxError ( "Unterminated comment" ) ;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw new MalformedJsonException  (" ")  ; ;^884^^^^^833^885^[REPLACE] throw new EOFException  (" ")  ;^[METHOD] nextNonWhitespace [TYPE] int [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char peek  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( lenient )  {^888^^^^^887^891^[REPLACE] if  ( !lenient )  {^[METHOD] checkLenient [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^889^^^^^887^891^[REPLACE] throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ;^[METHOD] checkLenient [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated comment" ) ;^889^^^^^887^891^[REPLACE] throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ;^[METHOD] checkLenient [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  ( pos < limit ;^899^^^^^898^905^[REPLACE] while  ( pos < limit || fillBuffer ( 1 )  )  {^[METHOD] skipToEndOfLine [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char c  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (  c == '\n' )  {^901^^^^^898^905^[REPLACE] if  ( c == '\r' || c == '\n' )  {^[METHOD] skipToEndOfLine [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char c  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^char escaped = buffer[pos++];^900^^^^^898^905^[REPLACE] char c = buffer[pos++];^[METHOD] skipToEndOfLine [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char c  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^900^^^^^898^905^[ADD] char c = buffer[pos++];^[METHOD] skipToEndOfLine [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char c  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( buffer[pos + c]  ==  toFind.charAt ( c )  )  {^911^^^^^907^918^[REPLACE] if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( ; pos + toFind.size (  )  < limit || fillBuffer ( toFind.size (  )  ) ; pos++ )  {^909^^^^^907^918^[REPLACE] for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( buffer[pos + c]  ==  toFind .toCharArray (  )   )  {^911^^^^^907^918^[REPLACE] if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( int c = 0; c < toFind.length (  )  /  2; c++ )  {^910^^^^^907^918^[REPLACE] for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^910^911^912^913^^907^918^[ADD] for  ( int c = 0; c < toFind.length (  ) ; c++ )  { if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return false;^915^^^^^907^918^[REPLACE] return true;^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( int c = 0 ; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^[REPLACE] for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^for  ( int c = 0; c < toFind.length (  )  - 3; c++ )  {^910^^^^^907^918^[REPLACE] for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^911^912^913^^^907^918^[ADD] if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return true;^917^^^^^907^918^[REPLACE] return false;^[METHOD] skipTo [TYPE] boolean [PARAMETER] String toFind [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^StringBuilder builder = this;^931^^^^^930^965^[REPLACE] StringBuilder builder = null;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^931^^^^^930^965^[ADD] StringBuilder builder = null;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  ( pos  >  start )  {^935^^^^^930^965^[REPLACE] while  ( pos < limit )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  (count  &&  quote )  {^938^^^^^930^965^[REPLACE] if  ( c == quote )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( c  && count )  {^948^^^^^930^965^[REPLACE] } else if  ( c == '\\' )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( builder != null )  {^949^^^^^930^965^[REPLACE] if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^builder =  new String ( buffer, pos, 4 )  ;^950^^^^^930^965^[REPLACE] builder = new StringBuilder (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^950^^^^^930^965^[ADD] builder = new StringBuilder (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^start  =  start ;^954^^^^^930^965^[REPLACE] start = pos;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^954^^^^^930^965^[ADD] start = pos;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( builder != true )  {^949^^^^^930^965^[REPLACE] if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.equalsIgnoreCase ( "true" )  )  {^939^^^^^930^965^[REPLACE] if  ( skipping )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^941^^^^^930^965^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder .StringBuilder (  )  ;^945^^^^^941^946^[REPLACE] return builder.toString (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, total, pos - start -total ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder.StringBuilder (  ) ;^945^^^^^930^965^[REPLACE] return builder.toString (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^940^^^^^930^965^[REPLACE] return "skipped!";^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^}   return new String ( buffer, start, pos - start - 1 ) ;builder.append ( buffer, start, pos - start - 1 ) ;return builder.toString (  ) ;^941^942^943^944^945^930^965^[ADD] else if  ( builder == null )  { return new String ( buffer, start, pos - start - 1 ) ; } else { builder.append ( buffer, start, pos - start - 1 ) ; return builder.toString (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder.StringBuilder (  ) ;^945^^^^^941^946^[REPLACE] return builder.toString (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return  new String ( buffer, total,  (  ( pos )  - start )  )  ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start,start - 4 ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^939^940^941^942^^930^965^[ADD] if  ( skipping )  { return "skipped!"; } else if  ( builder == null )  { return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^} else if  ( builder != null )  {^941^^^^^930^965^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start, pos - start -total ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^} else if  ( c  &&  '\\' )  {^948^^^^^930^965^[REPLACE] } else if  ( c == '\\' )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^949^950^951^^^930^965^[ADD] if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^start  = null ;^954^^^^^930^965^[REPLACE] start = pos;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^builder = new StringBuilder (  ) ;^949^950^951^^^930^965^[ADD] if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start, pos - start -start ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^936^^^^^930^965^[REPLACE] int c = buffer[pos++];^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( c  !=  quote )  {^938^^^^^930^965^[REPLACE] if  ( c == quote )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^948^^^^^930^965^[REPLACE] } else if  ( c == '\\' )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^return "skipped!";return new String ( buffer, start, pos - start - 1 ) ;^939^940^941^942^^930^965^[ADD] if  ( skipping )  { return "skipped!"; } else if  ( builder == null )  { return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( builder != this )  {^941^^^^^930^965^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start,total - 1 ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder .StringBuilder (  )  ;^945^^^^^930^965^[REPLACE] return builder.toString (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start, pos  ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return  new String ( buffer, start,  (  ( pos )  - start )  )  ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( builder != true )  {^941^^^^^930^965^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start, total - 1 ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start,total - 4 ) ;^942^^^^^930^965^[REPLACE] return new String ( buffer, start, pos - start - 1 ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( c  ||  '\\' )  {^948^^^^^930^965^[REPLACE] } else if  ( c == '\\' )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( builder != null )  {^958^^^^^930^965^[REPLACE] if  ( builder == null )  {^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^builder = new StringBuilder (  ) ;^958^959^960^^^930^965^[ADD] if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^builder =  new String ( buffer, pos, 4 )  ;^959^^^^^930^965^[REPLACE] builder = new StringBuilder (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^959^^^^^930^965^[ADD] builder = new StringBuilder (  ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 0;^934^^^^^930^965^[REPLACE] int start = pos;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^936^^^^^930^965^[ADD] int c = buffer[pos++];^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^964^^^^^930^965^[REPLACE] throw syntaxError ( "Unterminated string" ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated comment" ) ;^964^^^^^930^965^[REPLACE] throw syntaxError ( "Unterminated string" ) ;^[METHOD] nextString [TYPE] String [PARAMETER] char quote [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  char quote  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^StringBuilder builder = false;^972^^^^^971^1016^[REPLACE] StringBuilder builder = null;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^972^^^^^971^1016^[ADD] StringBuilder builder = null;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^while  ( pos  ==  limit )  {^976^^^^^971^1016^[REPLACE] while  ( pos < limit )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.equalsIgnoreCase ( "true" )  )  {^998^^^^^971^1016^[REPLACE] if  ( skipping )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( builder != this )  {^1000^^^^^971^1016^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder .StringBuilder (  )  ;^1004^^^^^1000^1005^[REPLACE] return builder.toString (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer, start,total - start ) ;^1001^^^^^971^1016^[REPLACE] return new String ( buffer, start, pos - start ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return new String ( buffer,total, pos -total ) ;^1001^^^^^971^1016^[REPLACE] return new String ( buffer, start, pos - start ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder.StringBuilder (  ) ;^1004^^^^^971^1016^[REPLACE] return builder.toString (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^999^^^^^971^1016^[REPLACE] return "skipped!";^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^1000^^^^^971^1016^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder.StringBuilder (  ) ;^1004^^^^^1000^1005^[REPLACE] return builder.toString (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return  new String ( buffer, pos, 4 )  ;^1001^^^^^971^1016^[REPLACE] return new String ( buffer, start, pos - start ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^977^^^^^971^1016^[REPLACE] int c = buffer[pos++];^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^return "skipped!";return new String ( buffer, start, pos - start ) ;^998^999^1000^1001^^971^1016^[ADD] if  ( skipping )  { return "skipped!"; } else if  ( builder == null )  { return new String ( buffer, start, pos - start ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^} else if  ( builder != this )  {^1000^^^^^971^1016^[REPLACE] } else if  ( builder == null )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^}   builder.append ( buffer, start, pos - start ) ;return builder.toString (  ) ;^1000^1001^1002^1003^1004^971^1016^[ADD] else if  ( builder == null )  { return new String ( buffer, start, pos - start ) ; } else { builder.append ( buffer, start, pos - start ) ; return builder.toString (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( builder != null )  {^1009^^^^^971^1016^[REPLACE] if  ( builder == null )  {^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^builder =  new String ( buffer, pos, 4 )  ;^1010^^^^^971^1016^[REPLACE] builder = new StringBuilder (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int count = 0;^975^^^^^971^1016^[REPLACE] int start = pos;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return builder .StringBuilder (  )  ;^1015^^^^^971^1016^[REPLACE] return builder.toString (  ) ;^[METHOD] nextLiteral [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder builder  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return true ;^1019^^^^^1018^1020^[REPLACE] return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos == limit ) {^1032^^^^^1031^1067^[REPLACE] if  ( pos == limit && !fillBuffer ( 1 )  )  {^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^1033^^^^^1031^1067^[REPLACE] throw syntaxError ( "Unterminated escape sequence" ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1031^1067^[REPLACE] throw syntaxError ( "Unterminated escape sequence" ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^1036^^^^^1031^1067^[REPLACE] char escaped = buffer[pos++];^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos + 4 > limit && fillBuffer ( 4 )  )  {^1039^^^^^1031^1067^[REPLACE] if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Expected EOF" ) ; ;^1040^^^^^1031^1067^[REPLACE] throw syntaxError ( "Unterminated escape sequence" ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1031^1067^[REPLACE] throw syntaxError ( "Unterminated escape sequence" ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^pos += 0;^1043^^^^^1031^1067^[REPLACE] pos += 4;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return  ( char )  Integer.parseInt ( hex, 16 + 4 ) ;^1044^^^^^1031^1067^[REPLACE] return  ( char )  Integer.parseInt ( hex, 16 ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\r';^1047^^^^^1031^1067^[REPLACE] return '\t';^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1050^^^^^1031^1067^[REPLACE] return '\b';^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1053^^^^^1031^1067^[REPLACE] return '\n';^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1056^^^^^1031^1067^[REPLACE] return '\r';^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1059^^^^^1031^1067^[REPLACE] return '\f';^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1065^^^^^1031^1067^[REPLACE] return escaped;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 6 ) ;^1042^^^^^1031^1067^[REPLACE] String hex = new String ( buffer, pos, 4 ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^1040^^^^^1031^1067^[REPLACE] throw syntaxError ( "Unterminated escape sequence" ) ;^[METHOD] readEscapeCharacter [TYPE] char [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  char escaped  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^1073^^^^^1072^1080^[REPLACE] String literal = nextLiteral (  ) ;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( literal.length (  )  %  0 .5  == 0  )  {^1074^^^^^1072^1080^[REPLACE] if  ( literal.length (  )  == 0 )  {^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Unterminated escape sequence" ) ; ;^1075^^^^^1072^1080^[REPLACE] throw syntaxError ( "Expected literal value" ) ;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^name = nextLiteral (  ) ;^1075^^^^^1072^1080^[REPLACE] throw syntaxError ( "Expected literal value" ) ;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^1075^^^^^1072^1080^[REPLACE] throw syntaxError ( "Expected literal value" ) ;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1075^^^^^1072^1080^[ADD] throw syntaxError ( "Expected literal value" ) ;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^value =  result;^1077^^^^^1072^1080^[REPLACE] value = literal;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^hasToken = false;^1078^^^^^1072^1080^[REPLACE] hasToken = true;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = false;^1079^^^^^1072^1080^[REPLACE] return token = null;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1079^^^^^1072^1080^[ADD] return token = null;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return token = this;^1079^^^^^1072^1080^[REPLACE] return token = null;^[METHOD] readLiteral [TYPE] JsonToken [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^if  ( value.equalsIgnoreCase ( "this" )  )  {^1086^^^^^1085^1100^[REPLACE] if  ( value.equalsIgnoreCase ( "null" )  )  {^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  if  ( value.equalsIgnoreCase ( "true" )  && value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^[REPLACE] } else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^Double.parseDouble ( value ) ;token = JsonToken.NUMBER;^1091^1092^1093^1094^1095^1085^1100^[ADD] try { Double.parseDouble ( value ) ; token = JsonToken.NUMBER; } catch  ( NumberFormatException ignored )  {^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = JsonToken.BOOLEAN; ;^1093^^^^^1085^1100^[REPLACE] token = JsonToken.NUMBER;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = JsonToken.BOOLEAN; ;^1097^^^^^1085^1100^[REPLACE] token = JsonToken.STRING;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = JsonToken.NUMBER; ;^1089^^^^^1085^1100^[REPLACE] token = JsonToken.BOOLEAN;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1093^^^^^1085^1100^[ADD] token = JsonToken.NUMBER;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1097^^^^^1085^1100^[ADD] token = JsonToken.STRING;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^token = JsonToken.BOOLEAN; ;^1087^^^^^1085^1100^[REPLACE] token = JsonToken.NULL;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^}  else {^1088^^^^^1085^1100^[REPLACE] } else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1094^1095^1096^^^1085^1100^[ADD] catch  ( NumberFormatException ignored )  {  checkLenient (  ) ;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1089^^^^^1085^1100^[ADD] token = JsonToken.BOOLEAN;^[METHOD] decodeLiteral [TYPE] void [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  NumberFormatException ignored  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return ;^1107^^^^^1106^1108^[REPLACE] throw new MalformedJsonException  (" ")  ;^[METHOD] syntaxError [TYPE] IOException [PARAMETER] String message [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^throw syntaxError ( "Expected EOF" ) ;^1107^^^^^1106^1108^[REPLACE] throw new MalformedJsonException  (" ")  ;^[METHOD] syntaxError [TYPE] IOException [PARAMETER] String message [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^String hex = new String ( buffer, pos, 4 ) ;^1111^^^^^1110^1117^[REPLACE] StringBuilder snippet = new StringBuilder (  ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int beforePos = Math.min ( pos, 20L ) ;^1112^^^^^1110^1117^[REPLACE] int beforePos = Math.min ( pos, 20 ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1112^1113^1114^1115^1116^1110^1117^[ADD] int beforePos = Math.min ( pos, 20 ) ; snippet.append ( buffer, pos - beforePos, beforePos ) ; int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ; return snippet;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^snippet.append ( buffer,total - beforePos, beforePos ) ;^1113^^^^^1110^1117^[REPLACE] snippet.append ( buffer, pos - beforePos, beforePos ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^^1113^1114^1115^1116^1117^1110^1117^[ADD] snippet.append ( buffer, pos - beforePos, beforePos ) ; int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ; return snippet; }^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^int afterPos =   limit -start  ;^1114^^^^^1110^1117^[REPLACE] int afterPos = Math.min ( limit - pos, 20 ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[ADD]^snippet.append ( buffer, pos, afterPos ) ;^1114^1115^^^^1110^1117^[ADD] int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^snippet.append ( buffer, pos, total ) ;^1115^^^^^1110^1117^[REPLACE] snippet.append ( buffer, pos, afterPos ) ;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
[REPLACE]^return '\t';^1116^^^^^1110^1117^[REPLACE] return snippet;^[METHOD] getSnippet [TYPE] CharSequence [PARAMETER] [CLASS] JsonReader   [TYPE]  boolean false  firstElement  hasToken  lenient  result  skipping  true  [TYPE]  StringBuilder snippet  [TYPE]  Reader in  [TYPE]  List stack  [TYPE]  JsonToken expected  firstToken  result  token  [TYPE]  String hex  literal  message  name  result  toFind  value  [TYPE]  int afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  [TYPE]  char[] NON_EXECUTE_PREFIX  buffer 
