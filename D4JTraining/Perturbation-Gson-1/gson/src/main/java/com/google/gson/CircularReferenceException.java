[REPLACE]^private static final long serialVersionUID  = null ;^27^^^^^^^[REPLACE] private static final long serialVersionUID = 7444343294106513081L;^ [CLASS] CircularReferenceException  
[REPLACE]^return new IllegalStateException ( msg.toString (  ) , this ) ;^31^^^^^30^33^[REPLACE] super ( "circular reference error" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] Object offendingNode [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.offendingNode =  null;^32^^^^^30^33^[REPLACE] this.offendingNode = offendingNode;^[METHOD] <init> [TYPE] Object) [PARAMETER] Object offendingNode [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( offendingField == null )  {^37^^^^^35^44^[REPLACE] if  ( offendingField != null )  {^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )   !=  "\n" ) ;^38^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^38^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg .StringBuilder ( null )^38^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[ADD]^^38^^^^^35^44^[ADD] msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^if  ( offendingNode == null )  {^40^^^^^35^44^[REPLACE] if  ( offendingNode != null )  {^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg .StringBuilder ( this )^41^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg .StringBuilder ( 1 )^41^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^msg.append ( "\n  " ) .append ( "Offending field: " ) .append ( offendingField.getName (  )  + "\n" ) ;^41^^^^^35^44^[REPLACE] msg.append ( "\n  " ) .append ( "Offending object: " ) .append ( offendingNode ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
[REPLACE]^return new IllegalStateException ( msg.toString (  ) , null ) ;^43^^^^^35^44^[REPLACE] return new IllegalStateException ( msg.toString (  ) , this ) ;^[METHOD] createDetailedException [TYPE] IllegalStateException [PARAMETER] FieldAttributes offendingField [CLASS] CircularReferenceException   [TYPE]  Object offendingNode  [TYPE]  boolean false  true  [TYPE]  StringBuilder msg  [TYPE]  long serialVersionUID  [TYPE]  FieldAttributes offendingField 
