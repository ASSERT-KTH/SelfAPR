[REPLACE]^Preconditions.checkArgument ( TypeUtils.toRawClass ( type )  ) ;^39^^^^^38^41^[REPLACE] Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[METHOD] getTypeInfoForArray [TYPE] TypeInfoArray [PARAMETER] Type type [CLASS] TypeInfoFactory   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkArgument ( TypeUtils .wrapWithArray (  )   ) ;^39^^^^^38^41^[REPLACE] Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[METHOD] getTypeInfoForArray [TYPE] TypeInfoArray [PARAMETER] Type type [CLASS] TypeInfoFactory   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return  new TypeInfo ( actualType )  ;^40^^^^^38^41^[REPLACE] return new TypeInfoArray ( type ) ;^[METHOD] getTypeInfoForArray [TYPE] TypeInfoArray [PARAMETER] Type type [CLASS] TypeInfoFactory   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^Class<?> classDefiningF = TypeUtils.toRawClass ( type ) ;^52^^^^^51^56^[REPLACE] Class<?> classDefiningF = TypeUtils.toRawClass ( typeDefiningF ) ;^[METHOD] getTypeInfoForField [TYPE] TypeInfo [PARAMETER] Field f Type typeDefiningF [CLASS] TypeInfoFactory   [TYPE]  Field f  [TYPE]  Type actualType  type  typeDefiningF  [TYPE]  boolean false  true  [TYPE]  Class classDefiningF 
[REPLACE]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^53^^^^^51^56^[REPLACE] Type type = f.getGenericType (  ) ;^[METHOD] getTypeInfoForField [TYPE] TypeInfo [PARAMETER] Field f Type typeDefiningF [CLASS] TypeInfoFactory   [TYPE]  Field f  [TYPE]  Type actualType  type  typeDefiningF  [TYPE]  boolean false  true  [TYPE]  Class classDefiningF 
[REPLACE]^Type actualType = getActualType ( typeDefiningF, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^[REPLACE] Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[METHOD] getTypeInfoForField [TYPE] TypeInfo [PARAMETER] Field f Type typeDefiningF [CLASS] TypeInfoFactory   [TYPE]  Field f  [TYPE]  Type actualType  type  typeDefiningF  [TYPE]  boolean false  true  [TYPE]  Class classDefiningF 
[ADD]^^54^55^^^^51^56^[ADD] Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ; return new TypeInfo ( actualType ) ;^[METHOD] getTypeInfoForField [TYPE] TypeInfo [PARAMETER] Field f Type typeDefiningF [CLASS] TypeInfoFactory   [TYPE]  Field f  [TYPE]  Type actualType  type  typeDefiningF  [TYPE]  boolean false  true  [TYPE]  Class classDefiningF 
[REPLACE]^return  new TypeInfoArray ( type )  ;^55^^^^^51^56^[REPLACE] return new TypeInfo ( actualType ) ;^[METHOD] getTypeInfoForField [TYPE] TypeInfo [PARAMETER] Field f Type typeDefiningF [CLASS] TypeInfoFactory   [TYPE]  Field f  [TYPE]  Type actualType  type  typeDefiningF  [TYPE]  boolean false  true  [TYPE]  Class classDefiningF 
[REPLACE]^if  ( ! typeToEvaluate instanceof Class<?> )  {^60^^^^^59^115^[REPLACE] if  ( typeToEvaluate instanceof Class<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! typeToEvaluate instanceof ParameterizedType )  {^62^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof ParameterizedType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;Type owner = castedType.getOwnerType (  ) ;extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^62^63^64^65^66^59^115^[ADD] else if  ( typeToEvaluate instanceof ParameterizedType )  { ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate; Type owner = castedType.getOwnerType (  ) ; Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! typeToEvaluate instanceof GenericArrayType )  {^69^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof GenericArrayType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^79^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REMOVE]^if  ( typeToEvaluate instanceof GenericArrayType )  {     GenericArrayType castedType =  (  ( GenericArrayType )   ( typeToEvaluate )  ) ;     Type componentType = castedType.getGenericComponentType (  ) ;     Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;     if  ( componentType.equals ( actualType )  )  {         return castedType;     }     return actualType instanceof Class<?> ? wrapWithArray ( toRawClass ( actualType )  )  : new GenericArrayTypeImpl ( actualType ) ; }else     if  ( typeToEvaluate instanceof TypeVariable<?> )  {         if  ( parentType instanceof ParameterizedType )  {             TypeVariable<?> fieldTypeVariable =  (  ( TypeVariable<?> )   ( typeToEvaluate )  ) ;             TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;             ParameterizedType objParameterizedType =  (  ( ParameterizedType )   ( parentType )  ) ;             int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;             Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;             return actualTypeArguments[indexOfActualTypeArgument];         }else             if  ( typeToEvaluate instanceof TypeVariable<?> )  {                 Type theSearchedType = null;                 do {                     theSearchedType = extractTypeForHierarchy ( parentType,  (  ( TypeVariable<?> )   ( typeToEvaluate )  )  ) ;                 } while  (  ( theSearchedType != null )  &&  ( theSearchedType instanceof TypeVariable<?> )   ) ;                 if  ( theSearchedType != null )  {                     return theSearchedType;                 }             }                  throw new UnsupportedOperationException (  (  (  ( "Expecting parameterized type, got " + parentType )  + ".\n Are you missing the use of TypeToken idiom?\n See " )  + com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener" )  ) ;     }else         if  ( typeToEvaluate instanceof WildcardType )  {             WildcardType castedType =  (  ( WildcardType )   ( typeToEvaluate )  ) ;             return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;         }else {             throw new IllegalArgumentException (  (  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " )  + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  ) ;         }^79^^^^^59^115^[REMOVE] ^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! typeToEvaluate instanceof WildcardType )  {^108^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof WildcardType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " ;^112^113^^^^108^114^[REPLACE] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^112^113^^^^108^114^[ADD] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 * 2], typeToEvaluate, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^109^^^^^59^115^[REPLACE] WildcardType castedType =  ( WildcardType )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^109^110^^^^59^115^[ADD] WildcardType castedType =  ( WildcardType )  typeToEvaluate; return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0L], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^109^110^^^^59^115^[ADD] WildcardType castedType =  ( WildcardType )  typeToEvaluate; return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " ;^112^113^^^^59^115^[REPLACE] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! parentType instanceof ParameterizedType )  {^80^^^^^59^115^[REPLACE] if  ( parentType instanceof ParameterizedType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! typeToEvaluate instanceof TypeVariable<?> )  {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate == null )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^return theSearchedType;^100^101^102^^^59^115^[ADD] if  ( theSearchedType != null )  { return theSearchedType; }^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return searchedType;^101^^^^^59^115^[REPLACE] return theSearchedType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^theSearchedType =  extractTypeForHierarchy ( typeToEvaluate,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^59^115^[REPLACE] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return typeToEvaluate;^101^^^^^59^115^[REPLACE] return theSearchedType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type theSearchedType = false;^94^^^^^59^115^[REPLACE] Type theSearchedType = null;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (typeToEvaluate == null )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return actualTypeParameters[indexOfActualTypeArgument];^92^^^^^59^115^[REPLACE] return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^87^^^^^59^115^[REPLACE] TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = false.getTypeParameters (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^89^^^^^59^115^[REPLACE] ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( 0, fieldTypeVariable ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = castedType .getRawType (  )  ;^91^^^^^59^115^[REPLACE] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   Type theSearchedType = null;theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^93^94^^96^97^59^115^[ADD] else if  ( typeToEvaluate instanceof TypeVariable<?> )  { Type theSearchedType = null; do { theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (rawType == null )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type theSearchedType = this;^94^^^^^59^115^[REPLACE] Type theSearchedType = null;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^94^^^^^59^115^[ADD] Type theSearchedType = null;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (parentType == null )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^100^101^102^^^59^115^[ADD] if  ( theSearchedType != null )  { return theSearchedType; }^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return rawType;^101^^^^^59^115^[REPLACE] return theSearchedType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new TypeInfoArray ( type ) ;^92^^^^^59^115^[REPLACE] return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, true ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^90^91^^^^59^115^[ADD] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ; Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = castedType.getActualTypeArguments (  ) ;^91^^^^^59^115^[REPLACE] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^91^92^^^^59^115^[ADD] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ; return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " ;^105^106^107^108^^59^115^[REPLACE] throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( ! typeToEvaluate instanceof TypeVariable<?> )  {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^93^94^^96^97^59^115^[ADD] else if  ( typeToEvaluate instanceof TypeVariable<?> )  { Type theSearchedType = null; do { theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType == this  )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType == null )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REMOVE]^if  ( type.equals ( types[i] )  )  {     return i; }^100^^^^^59^115^[REMOVE] ^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^theSearchedType =  extractTypeForHierarchy ( rawType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^59^115^[REPLACE] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^87^88^^^^59^115^[ADD] TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate; TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = rawParentClass .getGenericSuperclass (  )  ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^89^90^^^^59^115^[ADD] ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType; int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^90^91^^^^59^115^[ADD] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ; Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^theSearchedType =  extractTypeForHierarchy ( null,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^59^115^[REPLACE] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^108^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof WildcardType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   WildcardType castedType =  ( WildcardType )  typeToEvaluate;return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^108^109^110^111^112^59^115^[ADD] else if  ( typeToEvaluate instanceof WildcardType )  { WildcardType castedType =  ( WildcardType )  typeToEvaluate; return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ; } else { throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, "^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return ;^112^113^^^^108^114^[REPLACE] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [2], typeToEvaluate, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = null.getTypeParameters (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( true, fieldTypeVariable ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = castedType.getRawType (  ) ;^91^^^^^59^115^[REPLACE] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type theSearchedType = true;^94^^^^^59^115^[REPLACE] Type theSearchedType = null;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return ;^105^106^107^108^^59^115^[REPLACE] throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^105^106^107^^^59^115^[ADD] throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http:^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return ;^112^113^^^^59^115^[REPLACE] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate.equals ( actualType )  )  {^73^^^^^59^115^[REPLACE] if  ( componentType.equals ( actualType )  )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REMOVE]^if  ( type.equals ( types[i] )  )  {     return i; }^73^^^^^59^115^[REMOVE] ^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return i;^74^^^^^59^115^[REPLACE] return castedType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return true ;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^70^^^^^59^115^[REPLACE] GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] retTypes = new Type[actualTypeArguments.length];^71^^^^^59^115^[REPLACE] Type componentType = castedType.getGenericComponentType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type actualType = getActualType ( componentType, typeToEvaluate, rawParentClass ) ;^72^^^^^59^115^[REPLACE] Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^72^^^^^59^115^[ADD] Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( componentType.equals ( typeToEvaluate )  )  {^73^^^^^59^115^[REPLACE] if  ( componentType.equals ( actualType )  )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}^79^80^^^^59^115^[ADD] else if  ( typeToEvaluate instanceof TypeVariable<?> )  { if  ( parentType instanceof ParameterizedType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [4], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [1], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate == false )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = this.getTypeParameters (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, null ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (typeToEvaluate == false )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^} while  (  ( theSearchedType != null )  &&  ( theSearchedType instanceof TypeVariable<?> )  ) ;^97^98^^^^59^115^[ADD] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ; } while  (  ( theSearchedType != null )  &&  ( theSearchedType instanceof TypeVariable<?> )  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return parentType;^101^^^^^59^115^[REPLACE] return theSearchedType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType == true )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = 0.getGenericSuperclass (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^91^^^^^59^115^[ADD] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! typeToEvaluate instanceof ParameterizedType )  {^80^^^^^59^115^[REPLACE] if  ( parentType instanceof ParameterizedType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^80^81^^^^59^115^[ADD] if  ( parentType instanceof ParameterizedType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^97^^^^^59^115^[ADD] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^90^^^^^59^115^[ADD] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [2], parentType, true ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return typeToEvaluate instanceof Class<?> ? TypeUtils.toRawClass ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 + 2], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type actualType = getActualType ( typeToEvaluate, parentType, rawParentClass ) ;^72^^^^^59^115^[REPLACE] Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^87^^^^^59^115^[ADD] TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( null, fieldTypeVariable ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^112^113^^^^59^115^[ADD] throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new ParameterizedTypeImpl ( typeToEvaluate, actualTypeParameters, owner ) ;^68^^^^^59^115^[REPLACE] return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^63^^^^^59^115^[REPLACE] ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type owner = objParameterizedType.getOwnerType (  ) ;^64^^^^^59^115^[REPLACE] Type owner = castedType.getOwnerType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeParameters = extractRealTypes ( objParameterizedType.getRawType (  ) , parentType, rawParentClass ) ;^65^66^^^^59^115^[REPLACE] Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type rawType = objParameterizedType.getOwnerType (  ) ;^67^^^^^59^115^[REPLACE] Type rawType = castedType.getRawType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^67^^^^^59^115^[ADD] Type rawType = castedType.getRawType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;Type componentType = castedType.getGenericComponentType (  ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^69^70^71^72^^59^115^[ADD] else if  ( typeToEvaluate instanceof GenericArrayType )  { GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate; Type componentType = castedType.getGenericComponentType (  ) ; Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( ! typeToEvaluate instanceof TypeVariable<?> )  {^79^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 + 3], parentType, true ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType ==typeToEvaluate )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (typeToEvaluate == this )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType ==parentType )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType == false )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = 0 .getGenericSuperclass (  )  ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^88^^^^^59^115^[ADD] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 - 3], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = 1.getTypeParameters (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = objParameterizedType.getRawType (  ) ;^91^^^^^59^115^[REPLACE] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( parentType instanceof ParameterizedType )  {^73^^^^^59^115^[REPLACE] if  ( componentType.equals ( actualType )  )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [3], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  (rawType == this )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^88^89^^^^59^115^[ADD] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ; ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^89^90^^^^59^115^[ADD] ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType; int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, this ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate == true )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^97^98^^^^59^115^[ADD] theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ; } while  (  ( theSearchedType != null )  &&  ( theSearchedType instanceof TypeVariable<?> )  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( theSearchedType == this )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^108^109^110^111^112^59^115^[ADD] else if  ( typeToEvaluate instanceof WildcardType )  { WildcardType castedType =  ( WildcardType )  typeToEvaluate; return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ; } else { throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, "^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new ParameterizedTypeImpl ( rawType, actualTypeArguments, owner ) ;^68^^^^^59^115^[REPLACE] return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return actualType instanceof Class;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 / 3], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeParameters = extractRealTypes ( castedType.getRawType (  ) , parentType, null ) ;^65^66^^^^59^115^[REPLACE] Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type rawType = objParameterizedType.getRawType (  ) ;^67^^^^^59^115^[REPLACE] Type rawType = castedType.getRawType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^71^72^^^^59^115^[ADD] Type componentType = castedType.getGenericComponentType (  ) ; Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return theSearchedType;^61^^^^^59^115^[REPLACE] return typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( ! typeToEvaluate instanceof GenericArrayType )  {^69^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof GenericArrayType )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! theSearchedType instanceof TypeVariable<?> )  {^79^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( ! rawType instanceof TypeVariable<?> )  {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! rawType instanceof TypeVariable<?> )  {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = rawParentClass.getGenericSuperclass (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^89^^^^^59^115^[ADD] ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate ==typeToEvaluate )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [2], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( 1, fieldTypeVariable ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return false ;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^70^71^^^^59^115^[ADD] GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate; Type componentType = castedType.getGenericComponentType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type actualType = getActualType ( componentType, theSearchedType, rawParentClass ) ;^72^^^^^59^115^[REPLACE] Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [1], parentType, true ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^return actualTypeArguments[indexOfActualTypeArgument];^91^92^^^^59^115^[ADD] Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ; return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate == this )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return actualType instanceof Class<?> ? TypeUtils .isArray ( owner )  :  new TypeInfo ( actualType )  ;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( this, fieldTypeVariable ) ;^90^^^^^59^115^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, typeToEvaluate ) ;^68^^^^^59^115^[REPLACE] return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeParameters = extractRealTypes ( castedType .getRawType (  )  , parentType, false ) ;^65^66^^^^59^115^[REPLACE] Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^67^68^^^^59^115^[ADD] Type rawType = castedType.getRawType (  ) ; return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 >>> 2], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^109^^^^^59^115^[ADD] WildcardType castedType =  ( WildcardType )  typeToEvaluate;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = true.getTypeParameters (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^return castedType;^73^74^75^^^59^115^[ADD] if  ( componentType.equals ( actualType )  )  { return castedType; }^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return actualType instanceof Class<?> ?   actualType    ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^59^115^[REPLACE] return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type actualType = getActualType ( componentType, parentType, null ) ;^72^^^^^59^115^[REPLACE] Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [0 - 0], parentType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  if  ( ! theSearchedType instanceof TypeVariable<?> )  {^93^^^^^59^115^[REPLACE] } else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( typeToEvaluate ==rawType )  {^100^^^^^59^115^[REPLACE] if  ( theSearchedType != null )  {^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = null.getGenericSuperclass (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^88^89^^^^59^115^[ADD] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ; ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return getActualType ( castedType.getUpperBounds (  ) [2], theSearchedType, rawParentClass ) ;^110^^^^^59^115^[REPLACE] return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^63^64^^^^59^115^[ADD] ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate; Type owner = castedType.getOwnerType (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = this.getGenericSuperclass (  ) ;^88^^^^^59^115^[REPLACE] TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[METHOD] getActualType [TYPE] Type [PARAMETER] Type typeToEvaluate Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType castedType  objParameterizedType  [TYPE]  Type actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  [TYPE]  WildcardType castedType  [TYPE]  boolean false  true  [TYPE]  TypeVariable fieldTypeVariable  [TYPE]  Type[] actualTypeArguments  actualTypeParameters  [TYPE]  Class rawParentClass  [TYPE]  GenericArrayType castedType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Class<?> rawParentType = true;^118^^^^^117^153^[REPLACE] Class<?> rawParentType = null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! parentType instanceof Class<?> )  {^119^^^^^117^153^[REPLACE] if  ( parentType instanceof Class<?> )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^121^^^^^117^153^[REPLACE] } else if  ( parentType instanceof ParameterizedType )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return false;^125^^^^^121^126^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^rawParentType =   ( Class<?> )  null.getRawType (  ) ;^123^^^^^117^153^[REPLACE] rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^122^^^^^117^153^[REPLACE] ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return false;^125^^^^^117^153^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^122^123^^^^117^153^[ADD] ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType; rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^rawParentType =   ( Class<?> )  parentType;^120^^^^^117^153^[REPLACE] rawParentType =  ( Class<?> )  parentType;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^123^^^^^117^153^[ADD] rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type superClass = this.getGenericSuperclass (  ) ;^128^^^^^117^153^[REPLACE] Type superClass = rawParentType.getGenericSuperclass (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^128^^^^^117^153^[ADD] Type superClass = rawParentType.getGenericSuperclass (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^117^153^[REPLACE] if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^129^130^^132^133^117^153^[ADD] if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  { TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! parentType instanceof Class<?> )  {^137^^^^^129^146^[REPLACE] if  ( parentType instanceof Class<?> )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REMOVE]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^137^^^^^129^146^[REMOVE] ^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^139^^^^^129^146^[REPLACE] } else if  ( parentType instanceof ParameterizedType )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;return null;^139^140^141^142^143^129^146^[ADD] else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return false;^142^^^^^129^146^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ; ;^140^^^^^129^146^[REPLACE] actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; ;^138^^^^^129^146^[REPLACE] actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^} else if  ( ! parentType instanceof ParameterizedType )  {^139^^^^^129^146^[REPLACE] } else if  ( parentType instanceof ParameterizedType )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return true;^142^^^^^129^146^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new TypeInfoArray ( type ) ;^145^^^^^129^146^[REPLACE] return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getGenericSuperclass (  ) ;^132^133^^^^129^146^[REPLACE] TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, this ) ;^134^^^^^129^146^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = false;^136^^^^^129^146^[REPLACE] Type[] actualTypeArguments = null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( ! parentType instanceof Class<?> )  {^137^^^^^117^153^[REPLACE] if  ( parentType instanceof Class<?> )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^137^138^139^140^^117^153^[ADD] if  ( parentType instanceof Class<?> )  { actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ; } else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^}  else {^139^^^^^117^153^[REPLACE] } else if  ( parentType instanceof ParameterizedType )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return true;^142^^^^^139^143^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ; ;^140^^^^^117^153^[REPLACE] actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return true;^142^^^^^117^153^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; ;^138^^^^^117^153^[REPLACE] actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^138^^^^^117^153^[ADD] actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^}   return null;^139^140^141^142^143^117^153^[ADD] else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return false;^142^^^^^117^153^[REPLACE] return null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return new TypeInfoArray ( type ) ;^145^^^^^117^153^[REPLACE] return actualTypeArguments[indexOfActualTypeArgument];^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getGenericSuperclass (  ) ;^132^133^^^^117^153^[REPLACE] TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^134^^^^^117^153^[REPLACE] int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type[] actualTypeArguments = false;^136^^^^^117^153^[REPLACE] Type[] actualTypeArguments = null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^Type searchedType = false;^148^^^^^117^153^[REPLACE] Type searchedType = null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[ADD]^^148^^^^^117^153^[ADD] Type searchedType = null;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^if  ( searchedType == true )  {^149^^^^^117^153^[REPLACE] if  ( superClass != null )  {^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^searchedType =  extractTypeForHierarchy ( parentType, typeToEvaluate ) ;^150^^^^^117^153^[REPLACE] searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^return superClass;^152^^^^^117^153^[REPLACE] return searchedType;^[METHOD] extractTypeForHierarchy [TYPE] Type [PARAMETER] Type parentType TypeVariable<?> typeToEvaluate [CLASS] TypeInfoFactory   [TYPE]  ParameterizedType parentTypeAsPT  [TYPE]  Type parentType  searchedType  superClass  [TYPE]  boolean false  true  [TYPE]  TypeVariable typeToEvaluate  [TYPE]  Type[] actualTypeArguments  [TYPE]  Class rawParentType  [TYPE]  TypeVariable[] classTypeVariables  [TYPE]  int indexOfActualTypeArgument 
[REPLACE]^retTypes   ;^157^^^^^155^164^[REPLACE] Preconditions.checkNotNull ( actualTypeArguments ) ;^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^159^^^^^155^164^[REPLACE] Type[] retTypes = new Type[actualTypeArguments.length];^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < actualTypeArguments.length (  ) ; ++i )  {^160^^^^^155^164^[REPLACE] for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^retTypes[i]  = null ;^161^^^^^155^164^[REPLACE] retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^retTypes[i]  =  retTypes[i] ;^161^^^^^155^164^[REPLACE] retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[ADD]^^161^^^^^155^164^[ADD] retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < actualTypeArguments.length; ++i )  {^160^^^^^155^164^[REPLACE] for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[ADD]^^160^161^162^^^155^164^[ADD] for  ( int i = 0; i < actualTypeArguments.length; ++i )  { retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ; }^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^return actualTypeArguments;^163^^^^^155^164^[REPLACE] return retTypes;^[METHOD] extractRealTypes [TYPE] Type[] [PARAMETER] Type[] actualTypeArguments Type parentType Class<?> rawParentClass [CLASS] TypeInfoFactory   [TYPE]  Type parentType  [TYPE]  boolean false  true  [TYPE]  Type[] actualTypeArguments  retTypes  [TYPE]  Class rawParentClass  [TYPE]  int i 
[REPLACE]^if  ( type.equals ( this[i] )  )  {^168^^^^^166^174^[REPLACE] if  ( type.equals ( types[i] )  )  {^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[REPLACE]^return searchedType;^169^^^^^166^174^[REPLACE] return i;^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < types.length + 4; ++i )  {^167^^^^^166^174^[REPLACE] for  ( int i = 0; i < types.length; ++i )  {^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[REPLACE]^if  ( null.equals ( types[i] )  )  {^168^^^^^166^174^[REPLACE] if  ( type.equals ( types[i] )  )  {^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[ADD]^^168^169^170^^^166^174^[ADD] if  ( type.equals ( types[i] )  )  { return i; }^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < types.length; ++i )  {^167^^^^^166^174^[REPLACE] for  ( int i = 0; i < types.length; ++i )  {^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
[REPLACE]^return ;^172^173^^^^166^174^[REPLACE] throw new IllegalStateException ( "How can the type variable not be present in the class declaration!" ) ;^[METHOD] getIndex [TYPE] int [PARAMETER] TypeVariable<?>[] types TypeVariable<?> type [CLASS] TypeInfoFactory   [TYPE]  boolean false  true  [TYPE]  TypeVariable type  [TYPE]  TypeVariable[] types  [TYPE]  int i 
