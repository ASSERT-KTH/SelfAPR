[REPLACE]^private static final long NULL_VALUE ;^30^^^^^^^[REPLACE] private static final long NULL_VALUE = -1;^ [CLASS] Id  
[REPLACE]^private  long value;^31^^^^^^^[REPLACE] private final long value;^ [CLASS] Id  
[REPLACE]^private  Type typeOfId;^32^^^^^^^[REPLACE] private final Type typeOfId;^ [CLASS] Id  
[REPLACE]^Preconditions.checkArgument ( value  ==  NULL_VALUE ) ;^35^^^^^34^38^[REPLACE] Preconditions.checkArgument ( value != NULL_VALUE ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] long value Type typeOfId [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^this.value =  NULL_VALUE;^36^^^^^34^38^[REPLACE] this.value = value;^[METHOD] <init> [TYPE] Type) [PARAMETER] long value Type typeOfId [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[ADD]^^36^37^^^^34^38^[ADD] this.value = value; this.typeOfId = typeOfId;^[METHOD] <init> [TYPE] Type) [PARAMETER] long value Type typeOfId [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^this.typeOfId =  null;^37^^^^^34^38^[REPLACE] this.typeOfId = typeOfId;^[METHOD] <init> [TYPE] Type) [PARAMETER] long value Type typeOfId [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return false;^41^^^^^40^42^[REPLACE] return value;^[METHOD] getValue [TYPE] long [PARAMETER] [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return id.getValue (  ) ;^45^^^^^44^46^[REPLACE] return id == null ? NULL_VALUE : id.getValue (  ) ;^[METHOD] getValue [TYPE] long [PARAMETER] Id<?> id [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return type.toString (  ) ;^48^^^^^47^49^[REPLACE] return typeOfId;^[METHOD] getTypeOfId [TYPE] Type [PARAMETER] [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return type.toString (  ) ;^53^^^^^52^54^[REPLACE] return  ( int )  value;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return true ;^57^^^^^56^58^[REPLACE] return id != null && id.value != NULL_VALUE;^[METHOD] isValid [TYPE] boolean [PARAMETER] Id<?> id [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  (  ( id1 != false && id2 != false )  ) {^67^^^^^66^74^[REPLACE] if  (  ( id1 == null && id2 != null )  ||  ( id1 != null && id2 == null )  )  {^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[ADD]^return false;^67^68^69^^^66^74^[ADD] if  (  ( id1 == null && id2 != null )  ||  ( id1 != null && id2 == null )  )  { return false; }^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return true;^68^^^^^66^74^[REPLACE] return false;^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  (  id2 == null )  {^70^^^^^66^74^[REPLACE] if  ( id1 == null && id2 == null )  {^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return false;^71^^^^^66^74^[REPLACE] return true;^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return value  !=  value;;^73^^^^^66^74^[REPLACE] return id1.value == id2.value;^[METHOD] equals [TYPE] <T> [PARAMETER] Id<T> id1 Id<T> id2 [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Id id1  id2  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( this  ||  obj )  return true;^78^^^^^77^88^[REPLACE] if  ( this == obj )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[ADD]^^78^79^80^81^82^77^88^[ADD] if  ( this == obj )  return true; if  ( obj == null )  return false; if  ( getClass (  )  != obj.getClass (  )  )  return false; @SuppressWarnings ( "unchecked" ) Id<R> other =  ( Id<R> ) obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( this == obj )  return false;^78^^^^^77^88^[REPLACE] if  ( this == obj )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( obj != null )  return false;^79^^^^^77^88^[REPLACE] if  ( obj == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( obj == null )  return true;^79^^^^^77^88^[REPLACE] if  ( obj == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( getClass (  )   ==  obj.getClass (  )  )  return false;^80^^^^^77^88^[REPLACE] if  ( getClass (  )  != obj.getClass (  )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( getClass (  )  != obj.getClass (  )  )  return true;^80^^^^^77^88^[REPLACE] if  ( getClass (  )  != obj.getClass (  )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^for  ( Type argumentType : pType.getActualTypeArguments (  )  )  {^82^^^^^77^88^[REPLACE] Id<R> other =  ( Id<R> ) obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( typeOfId != null )  {^83^^^^^77^88^[REPLACE] if  ( typeOfId == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^}  if  ( !equivalentTypes ( typeOfId, other.typeOfId )  )  return true;^85^^^^^77^88^[REPLACE] } else if  ( !equivalentTypes ( typeOfId, other.typeOfId )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[ADD]^}   if  ( value != other.value )  return false;return true;^85^86^87^88^^77^88^[ADD] else if  ( !equivalentTypes ( typeOfId, other.typeOfId )  )  return false; if  ( value != other.value )  return false; return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^} else if  ( !equivalentTypes ( typeOfId, other.typeOfId )  )  return true;^85^^^^^77^88^[REPLACE] } else if  ( !equivalentTypes ( typeOfId, other.typeOfId )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( other.typeOfId == null )  return false;^84^^^^^77^88^[REPLACE] if  ( other.typeOfId != null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( other.typeOfId != null )  return true;^84^^^^^77^88^[REPLACE] if  ( other.typeOfId != null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( this.typeOfId == null )  return false;^84^^^^^77^88^[REPLACE] if  ( other.typeOfId != null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( value  ==  other.value )  return false;^86^^^^^77^88^[REPLACE] if  ( value != other.value )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( value != other.value )  return true;^86^^^^^77^88^[REPLACE] if  ( value != other.value )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return false;^87^^^^^77^88^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Id   [TYPE]  Type typeOfId  [TYPE]  Object obj  [TYPE]  Id other  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( ! type1 instanceof ParameterizedType && type2 instanceof Class )  {^96^^^^^95^102^[REPLACE] if  ( type1 instanceof ParameterizedType && type2 instanceof Class )  {^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[ADD]^return areEquivalentTypes (  ( ParameterizedType ) type1,  ( Class ) type2 ) ;return areEquivalentTypes (  ( ParameterizedType ) type2,  ( Class ) type1 ) ;^96^97^98^99^100^95^102^[ADD] if  ( type1 instanceof ParameterizedType && type2 instanceof Class )  { return areEquivalentTypes (  ( ParameterizedType ) type1,  ( Class ) type2 ) ; } else if  ( type2 instanceof ParameterizedType && type1 instanceof Class )  { return areEquivalentTypes (  ( ParameterizedType ) type2,  ( Class ) type1 ) ; }^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( ! type2 instanceof ParameterizedType ) {^98^^^^^95^102^[REPLACE] } else if  ( type2 instanceof ParameterizedType && type1 instanceof Class )  {^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return areEquivalentTypes (  ( ParameterizedType ) type1,  ( Class ) type2 ) ;^99^^^^^95^102^[REPLACE] return areEquivalentTypes (  ( ParameterizedType ) type2,  ( Class ) type1 ) ;^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return areEquivalentTypes (  ( ParameterizedType ) type2,  ( Class ) type1 ) ;^97^^^^^95^102^[REPLACE] return areEquivalentTypes (  ( ParameterizedType ) type1,  ( Class ) type2 ) ;^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^}  else {^98^^^^^95^102^[REPLACE] } else if  ( type2 instanceof ParameterizedType && type1 instanceof Class )  {^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[ADD]^}^98^99^100^^^95^102^[ADD] else if  ( type2 instanceof ParameterizedType && type1 instanceof Class )  { return areEquivalentTypes (  ( ParameterizedType ) type2,  ( Class ) type1 ) ; }^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^return typeOfId.equals ( type2 ) ;^101^^^^^95^102^[REPLACE] return type1.equals ( type2 ) ;^[METHOD] equivalentTypes [TYPE] boolean [PARAMETER] Type type1 Type type2 [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^Class rawClass =  ( Class )  type .getActualTypeArguments (  )  ;^109^^^^^108^121^[REPLACE] Class rawClass =  ( Class )  type.getRawType (  ) ;^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( clazz.equals ( rawClass )  )  {^110^^^^^108^121^[REPLACE] if  ( !clazz.equals ( rawClass )  )  {^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return value;^111^^^^^108^121^[REPLACE] return false;^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return true;^111^^^^^108^121^[REPLACE] return false;^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( ! typeOfId instanceof WildcardType )  {^114^^^^^108^121^[REPLACE] if  ( typeVariable instanceof WildcardType )  {^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return value;^118^^^^^108^121^[REPLACE] return false;^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^for  ( Type argumentType : pType.getActualTypeArguments (  )  )  {^113^^^^^108^121^[REPLACE] for  ( Type typeVariable : type.getActualTypeArguments (  )  )  {^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return false;^120^^^^^108^121^[REPLACE] return true;^[METHOD] areEquivalentTypes [TYPE] boolean [PARAMETER] ParameterizedType type Class clazz [CLASS] Id   [TYPE]  ParameterizedType type  [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  Class clazz  rawClass  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return new Id<RS> ( value, typeVariable ) ;^124^^^^^123^125^[REPLACE] return new Id<RS> ( value, typeOfId ) ;^[METHOD] get [TYPE] <RS> [PARAMETER] long value Type typeOfId [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  long NULL_VALUE  value  [TYPE]  boolean false  true 
[REPLACE]^StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^129^^^^^128^131^[REPLACE] String typeAsString = getSimpleTypeName ( typeOfId ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  String typeAsString  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return areEquivalentTypes (  ( ParameterizedType ) type1,  ( Class ) type2 ) ;^130^^^^^128^131^[REPLACE] return String.format ( "{value:%s,type:%s}", value, typeAsString ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Id   [TYPE]  Type type1  type2  typeOfId  typeVariable  [TYPE]  String typeAsString  [TYPE]  boolean false  true  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( type != null )  {^135^^^^^134^159^[REPLACE] if  ( type == null )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return "this";^136^^^^^134^159^[REPLACE] return "null";^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( ! type instanceof Class )  {^138^^^^^134^159^[REPLACE] if  ( type instanceof Class )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^^138^139^140^141^142^134^159^[ADD] if  ( type instanceof Class )  { return  (  ( Class ) type ) .getSimpleName (  ) ; } else if  ( type instanceof ParameterizedType )  { ParameterizedType pType =  ( ParameterizedType )  type; StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^}  if  ( ! type instanceof ParameterizedType )  {^140^^^^^134^159^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^}   StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;sb.append ( '<' ) ;boolean first = true;^140^141^142^143^144^134^159^[ADD] else if  ( type instanceof ParameterizedType )  { ParameterizedType pType =  ( ParameterizedType )  type; StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ; sb.append ( '<' ) ; boolean first = true;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^}  else {^155^^^^^134^159^[REPLACE] } else if  ( type instanceof WildcardType )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return  ( int )  value;^156^^^^^134^159^[REPLACE] return "?";^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( true )  {^146^^^^^134^159^[REPLACE] if  ( first )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^^146^147^148^149^150^134^159^[ADD] if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^sb.append ( '<' ) ;^149^^^^^134^159^[REPLACE] sb.append ( ',' ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^first = true;^147^^^^^134^159^[REPLACE] first = false;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return type.toString (  ) ;^154^^^^^134^159^[REPLACE] return sb.toString (  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^for  ( Type argumentType : pType.getActualTypeArguments (  )  )  {^141^^^^^134^159^[REPLACE] ParameterizedType pType =  ( ParameterizedType )  type;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^^141^142^^^^134^159^[ADD] ParameterizedType pType =  ( ParameterizedType )  type; StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getActualTypeArguments (  )  )  ) ;^142^^^^^134^159^[REPLACE] StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^boolean first = false;^144^^^^^134^159^[REPLACE] boolean first = true;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^for  ( Type typeVariable : type.getActualTypeArguments (  )  )  { if  ( typeVariable instanceof WildcardType )  {^145^^^^^134^159^[REPLACE] for  ( Type argumentType : pType.getActualTypeArguments (  )  )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return sb .StringBuilder ( this )  ;^154^^^^^134^159^[REPLACE] return sb.toString (  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^^142^^^^^134^159^[ADD] StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return type.toString (  ) ;^139^^^^^134^159^[REPLACE] return  (  ( Class ) type ) .getSimpleName (  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^}  else {^140^^^^^134^159^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^}  if  ( ! type instanceof WildcardType )  {^155^^^^^134^159^[REPLACE] } else if  ( type instanceof WildcardType )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^if  ( !clazz.equals ( rawClass )  )  {^146^^^^^134^159^[REPLACE] if  ( first )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^Class rawClass =  ( Class )  type.getRawType (  ) ;^142^^^^^134^159^[REPLACE] StringBuilder sb = new StringBuilder ( getSimpleTypeName ( pType.getRawType (  )  )  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[ADD]^first = false;sb.append ( ',' ) ;^146^147^148^149^150^134^159^[ADD] if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^} else if  ( ! typeOfId instanceof WildcardType )  {^155^^^^^134^159^[REPLACE] } else if  ( type instanceof WildcardType )  {^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
[REPLACE]^return type .StringBuilder ( this )  ;^158^^^^^134^159^[REPLACE] return type.toString (  ) ;^[METHOD] getSimpleTypeName [TYPE] String [PARAMETER] Type type [CLASS] Id   [TYPE]  ParameterizedType pType  [TYPE]  Type argumentType  type  type1  type2  typeOfId  typeVariable  [TYPE]  boolean false  first  true  [TYPE]  StringBuilder sb  [TYPE]  long NULL_VALUE  value 
