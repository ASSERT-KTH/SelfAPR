[REPLACE]^private static  char[] EMPTY_CHAR_ARRAY = new char[0];^41^^^^^^^[REPLACE] private static final char[] EMPTY_CHAR_ARRAY = new char[0];^ [CLASS] BinaryCodec  
[REPLACE]^private static final byte[] EMPTY_BYTE_ARRAY  = null ;^44^^^^^^^[REPLACE] private static final byte[] EMPTY_BYTE_ARRAY = new byte[0];^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_0  = null ;^47^^^^^^^[REPLACE] private static final int BIT_0 = 1;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_1 = 0x02 - 0;^50^^^^^^^[REPLACE] private static final int BIT_1 = 0x02;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_2 ;^53^^^^^^^[REPLACE] private static final int BIT_2 = 0x04;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_3  = null ;^56^^^^^^^[REPLACE] private static final int BIT_3 = 0x08;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_4  = null ;^59^^^^^^^[REPLACE] private static final int BIT_4 = 0x10;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_5 ;^62^^^^^^^[REPLACE] private static final int BIT_5 = 0x20;^ [CLASS] BinaryCodec  
[REPLACE]^private static final  short  BIT_6 = 0x40;^65^^^^^^^[REPLACE] private static final int BIT_6 = 0x40;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_7  = null ;^68^^^^^^^[REPLACE] private static final int BIT_7 = 0x80;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int[] BITS  = null ;^70^^^^^^^[REPLACE] private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^ [CLASS] BinaryCodec  
[REPLACE]^if  (  ascii.length *  2 == 0 )  {^167^^^^^166^184^[REPLACE] if  ( ascii == null || ascii.length == 0 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REMOVE]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^167^^^^^166^184^[REMOVE] ^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return fromAscii  (    (  byte[]  )   ascii  )  ;  ;^168^^^^^166^184^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^byte[] l_ascii = new byte[ ( raw.length )  << 3]  ;^171^^^^^166^184^[REPLACE] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  &&  '1' )  {^178^^^^^166^184^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] |;^179^^^^^166^184^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] | =  l_raw[ii] |;^179^^^^^166^184^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length /  0.5  - 0 ; ii < l_raw.length /  0.5 ; ii++, jj -= 8 )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^177^^^^^166^184^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return l_raw;  ;^183^^^^^166^184^[REPLACE] return l_raw;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii == null || ascii.length + 5 == 0 )  {^194^^^^^193^211^[REPLACE] if  ( ascii == null || ascii.length == 0 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return fromAscii  (    (  byte[]  )   ascii  )  ;  ;^195^^^^^193^211^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^198^^^^^193^211^[ADD] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  !=  '1' )  {^205^^^^^193^211^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^l_raw[ii] |= BITS[bits];^205^206^207^^^193^211^[ADD] if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] |;^206^^^^^193^211^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^206^^^^^193^211^[ADD] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^203^204^205^206^207^193^211^[ADD] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  { for  ( int bits = 0; bits < BITS.length; ++bits )  { if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^int ii = 0  ;^204^^^^^193^211^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return raw;^210^^^^^193^211^[REPLACE] return l_raw;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  (  raw.length /  0.5  == 0 )  {^223^^^^^222^242^[REPLACE] if  ( raw == null || raw.length == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^return EMPTY_BYTE_ARRAY;^223^224^225^^^222^242^[ADD] if  ( raw == null || raw.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return fromAscii  (    (  byte[]  )   ascii  )  ;  ;^224^^^^^222^242^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^byte[] l_ascii = new byte[raw.length (  )  << 3];^227^^^^^222^242^[REPLACE] byte[] l_ascii = new byte[raw.length << 3];^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   !=  0L )  {^234^^^^^222^242^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  bits] = '1';^237^^^^^234^238^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^235^^^^^222^242^[ADD] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  ii] = '0';^235^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^int jj =  ( ascii.length )  - 1  ;^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^233^^^^^222^242^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return raw;^241^^^^^222^242^[REPLACE] return l_ascii;^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( l_raw == null ) {^253^^^^^252^272^[REPLACE] if  ( raw == null || raw.length == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^return fromAscii  (    (  byte[]  )   ascii  )  ;  ;^254^^^^^252^272^[REPLACE] return EMPTY_CHAR_ARRAY;^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^char[] l_ascii = new char[raw.length (  )  << 0 ];^257^^^^^252^272^[REPLACE] char[] l_ascii = new char[raw.length << 3];^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   != ii )  {^264^^^^^252^272^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^l_ascii[jj - bits] = '0';l_ascii[jj - bits] = '1';^264^265^266^267^268^252^272^[ADD] if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[ ( jj - bits ) ] = '0'  ;^267^^^^^264^268^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^265^^^^^252^272^[ADD] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[ ( jj - bits ) ] = '1'  ;^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^267^^^^^252^272^[ADD] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^int bits = 0  ;^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^int jj =  ( ascii.length )  - 1  ;^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^int ii = 0  ;^263^^^^^252^272^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^return ascii;^271^^^^^252^272^[REPLACE] return l_ascii;^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
