[REPLACE]^static final int CHUNK_SIZE ;^52^^^^^^^[REPLACE] static final int CHUNK_SIZE = 76;^ [CLASS] Base64  
[REPLACE]^static final byte[] CHUNK_SEPARATOR  = null ;^59^^^^^^^[REPLACE] static final byte[] CHUNK_SEPARATOR = "\r\n".getBytes (  ) ;^ [CLASS] Base64  
[REPLACE]^private static  int BASELENGTH = 255;^64^^^^^^^[REPLACE] private static final int BASELENGTH = 255;^ [CLASS] Base64  
[REPLACE]^private static final int LOOKUPLENGTH  = null ;^69^^^^^^^[REPLACE] private static final int LOOKUPLENGTH = 64;^ [CLASS] Base64  
[REPLACE]^private static final int EIGHTBIT ;^74^^^^^^^[REPLACE] private static final int EIGHTBIT = 8;^ [CLASS] Base64  
[REPLACE]^private static final int SIXTEENBIT  = null ;^79^^^^^^^[REPLACE] private static final int SIXTEENBIT = 16;^ [CLASS] Base64  
[REPLACE]^private static final int TWENTYFOURBITGROUP  = null ;^84^^^^^^^[REPLACE] private static final int TWENTYFOURBITGROUP = 24;^ [CLASS] Base64  
[REPLACE]^private static  int FOURBYTE = 4;^89^^^^^^^[REPLACE] private static final int FOURBYTE = 4;^ [CLASS] Base64  
[REPLACE]^private static   long  SIGN = -128;^94^^^^^^^[REPLACE] private static final int SIGN = -128;^ [CLASS] Base64  
[REPLACE]^private static final byte PAD ;^99^^^^^^^[REPLACE] private static final byte PAD =  ( byte )  '=';^ [CLASS] Base64  
[REPLACE]^private static  byte[] base64Alphabet = new byte[BASELENGTH];^111^^^^^^^[REPLACE] private static final byte[] base64Alphabet = new byte[BASELENGTH];^ [CLASS] Base64  
[REPLACE]^private static final byte[] lookUpBase64Alphabet ;^126^^^^^^^[REPLACE] private static final byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];^ [CLASS] Base64  
[ADD]^^189^^^^^187^203^[ADD] arrayOctect = discardWhitespace ( arrayOctect ) ;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^int length = lookUpBase64Alphabet.length;^191^^^^^187^203^[REPLACE] int length = arrayOctect.length;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^if  ( length *  0 .5  == 0  )  {^192^^^^^187^203^[REPLACE] if  ( length == 0 )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REMOVE]^if  (  (  ( bigInt.bitLength (  )  )  % 8 )  == 0 )  {     startSrc = 1;     len--; }^192^^^^^187^203^[REMOVE] ^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return false;^195^^^^^187^203^[REPLACE] return true;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^if  ( isBase64 ( arrayOctect[i] )  )  {^198^^^^^187^203^[REPLACE] if  ( !isBase64 ( arrayOctect[i] )  )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return true;^199^^^^^187^203^[REPLACE] return false;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[ADD]^^197^198^199^200^^187^203^[ADD] for  ( int i = 0; i < length; i++ )  { if  ( !isBase64 ( arrayOctect[i] )  )  { return false; }^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return false;^202^^^^^187^203^[REPLACE] return true;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^long pArrayLength = binaryData.length;^267^^^^^266^383^[REPLACE] long binaryDataLength = binaryData.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long length *  0.5 DataBits = binaryDataLength * EIGHTBIT;^268^^^^^266^383^[REPLACE] long lengthDataBits = binaryDataLength * EIGHTBIT;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long fewerThan24bits = length + 1DataBits % TWENTYFOURBITGROUP;^269^^^^^266^383^[REPLACE] long fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long tripletCount = length %  2DataBits / TWENTYFOURBITGROUP;^270^^^^^266^383^[REPLACE] long tripletCount = lengthDataBits / TWENTYFOURBITGROUP;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long encodedDataLengthLong = 0 + 2;^271^^^^^266^383^[REPLACE] long encodedDataLengthLong = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int chunksSoFar = 0  ;^272^^^^^266^383^[REPLACE] int chunckCount = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if   (  fewerThan24bits == EIGHTBIT  )   {  ;^274^^^^^266^383^[REPLACE] if  ( fewerThan24bits != 0 )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^274^275^276^277^^266^383^[ADD] if  ( fewerThan24bits != 0 )  {  encodedDataLengthLong =  ( tripletCount + 1 )  * 4; } else {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^279^^^^^274^280^[ADD] encodedDataLengthLong = tripletCount * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong = tripletCount * 4  ;^276^^^^^266^383^[REPLACE] encodedDataLengthLong =  ( tripletCount + 1 )  * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong =  ( tripletCount + 4 )   4;^276^^^^^266^383^[REPLACE] encodedDataLengthLong =  ( tripletCount + 1 )  * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong = tripletCount  4;^279^^^^^266^383^[REPLACE] encodedDataLengthLong = tripletCount * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (  bigInt == null  )    {  ;^285^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^chunckCount =  ( CHUNK_SEPARATOR.length (  )  == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^287^288^^^^266^383^[REPLACE] chunckCount =  ( CHUNK_SEPARATOR.length == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length - 1;^289^^^^^266^383^[REPLACE] encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^287^288^^^^266^383^[ADD] chunckCount =  ( CHUNK_SEPARATOR.length == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex += length  ;^289^^^^^266^383^[REPLACE] encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( encodedDataLengthLong  >=  Integer.MAX_VALUE )  {^292^^^^^266^383^[REPLACE] if  ( encodedDataLengthLong > Integer.MAX_VALUE )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^293^294^^^^266^383^[ADD] throw new IllegalArgumentException ( "Input array too big, output array would be bigger than Integer.MAX_VALUE=" + Integer.MAX_VALUE ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int bytesCopied = 0  ;^296^^^^^266^383^[REPLACE] int encodedDataLength =  ( int )  encodedDataLengthLong;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^297^^^^^266^383^[ADD] byte encodedData[] = new byte[encodedDataLength];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 3, l = 3, b1 = 3, b2 = 3, b3 = 3;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^299^^^^^266^383^[ADD] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 2, l = 2, b1 = 2, b2 = 2, b3 = 2;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 4, l = 4, b1 = 4, b2 = 4, b3 = 4;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int encodedIndex = 0L;^301^^^^^266^383^[REPLACE] int encodedIndex = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^302^303^^^^266^383^[ADD] int dataIndex = 0; int i = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^303^^^^^266^383^[ADD] int i = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int bytesCopied = 0  ;^304^^^^^266^383^[REPLACE] int nextSeparatorIndex = CHUNK_SIZE;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int chunckCount = 0  ;^305^^^^^266^383^[REPLACE] int chunksSoFar = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (  bigInt == null  )    {  ;^334^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^334^335^336^337^338^266^383^[ADD] if  ( isChunked )  {  if  ( encodedIndex == nextSeparatorIndex )  { System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedIndex, CHUNK_SEPARATOR.length ) ; chunksSoFar++;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (   i )  {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REMOVE]^if  ( isChunked )  {     chunckCount =  (  ( length )  == 0 )  ? 0 :  (  ( int )   ( ceil (  (  (  ( float )   ( encodedDataLengthLong )  )  /  ( CHUNK_SIZE )  )  )  )  ) ;     encodedDataLengthLong += chunckCount *  ( length ) ; }^336^^^^^266^383^[REMOVE] ^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length (  )  ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong += chunckCount *  ( length )  ;^340^^^^^266^383^[REPLACE] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length /  0.5  ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^340^^^^^266^383^[ADD] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( encodedIndex  ) {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^336^337^338^339^340^266^383^[ADD] if  ( encodedIndex == nextSeparatorIndex )  { System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedIndex, CHUNK_SEPARATOR.length ) ; chunksSoFar++; nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ; encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length *  0.5  ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^for  ( i = 0 >> 3; i < tripletCount; i++ )  {^308^^^^^266^383^[REPLACE] for  ( i = 0; i < tripletCount; i++ )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^dataIndex = i  3;^309^^^^^266^383^[REPLACE] dataIndex = i * 3;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[ ( dataIndex + 1 ) ]  ;^310^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b3 = binaryData[ ( dataIndex + 2 ) ]  ;^311^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b3 = binaryData[dataIndex  2];^312^^^^^266^383^[REPLACE] b3 = binaryData[dataIndex + 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^l =  ( byte )   ( b2 | 0x0f ) ;^316^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^317^^^^^266^383^[ADD] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^323^^^^^266^383^[ADD] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^327^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^328^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[ ( l << 2 )  | val3];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  2] = lookUpBase64Alphabet[b2 & 0x2f];^329^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^331^^^^^266^383^[ADD] encodedIndex += 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^319^320^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ; byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val3 =  (  ( b3 &  ( SIGN )  )  == 0 )  ?  (  ( byte )   ( b3 >> 6 )  )  :  (  ( byte )   (  ( b3 >> 6 )  ^ 252 )  )  ;^320^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2 =  (  ( b2 &  ( SIGN )  )  == 0 )  ?  (  ( byte )   ( b2 >> 4 )  )  :  (  ( byte )   (  ( b2 >> 4 )  ^ 240 )  )  ;^321^^^^^266^383^[REPLACE] byte val3 =  (  ( b3 & SIGN )  == 0 )  ?  ( byte )   ( b3 >> 6 )  :  ( byte )   (  ( b3 )  >> 6 ^ 0xfc ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^dataIndex = i  3;^346^^^^^266^383^[REPLACE] dataIndex = i * 3;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (tripletCount  !=  EIGHTBIT )  {^348^^^^^266^383^[REPLACE] if  ( fewerThan24bits == EIGHTBIT )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^}  else {^358^^^^^266^383^[REPLACE] } else if  ( fewerThan24bits == SIXTEENBIT )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[ ( dataIndex + 1 ) ]  ;^360^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^361^362^^^^266^383^[ADD] b2 = binaryData[dataIndex + 1]; l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^l =  ( byte )   ( b2 | 0x0f ) ;^362^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 | 0x03 ) ;^363^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^368^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^369^^^^^266^383^[ADD] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^370^^^^^266^383^[ADD] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  3] = PAD;^371^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   (  ( val2 )  >> 4 ^lengthxf0  ) ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex  1];^361^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 2 ) ] = lookUpBase64Alphabet[ (  ( l << 2 )  | val3 ) ]  ;^368^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 2 ) ] = lookUpBase64Alphabet[ (  ( l << 2 )  | val3 ) ]  ;^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^370^371^^^^266^383^[ADD] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex nextSeparatorIndex] = PAD;^371^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^365^^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   ( val2 >> 4 )  ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[ ( dataIndex + 1 ) ]  ;^349^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 | 0x03 ) ;^350^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^354^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  1] = lookUpBase64Alphabet[k << 4];^355^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^356^^^^^266^383^[ADD] encodedData[encodedIndex + 2] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^357^^^^^266^383^[ADD] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1 =  (  ( b1 & SIGN )   !=  0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^353^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^} else if  (tripletCount  !=  SIXTEENBIT )  {^358^^^^^266^383^[REPLACE] } else if  ( fewerThan24bits == SIXTEENBIT )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^360^361^^^^266^383^[ADD] b1 = binaryData[dataIndex]; b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  (  ( byte )   ( b1 & 3 )  )  ;^362^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^363^^^^^266^383^[ADD] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^369^370^^^^266^383^[ADD] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ]; encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^370^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( b1 )  >> 2 ^nextSeparatorIndexxc0 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val3 =  (  ( b3 &  ( SIGN )  )  == 0 )  ?  (  ( byte )   ( b3 >> 6 )  )  :  (  ( byte )   (  ( b3 >> 6 )  ^ 252 )  )  ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^350^^^^^266^383^[ADD] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^354^^^^^266^383^[ADD] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^355^^^^^266^383^[ADD] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^356^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^361^^^^^266^383^[ADD] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[ ( encodedIndex + 3 ) ] = PAD  ;^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^353^354^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ; encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1 =  (  ( val1 & SIGN )   &&  2 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 2xc2 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (  bigInt == null  )    {  ;^374^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( chunksSoFar  >=  chunckCount )  {^376^^^^^266^383^[REPLACE] if  ( chunksSoFar < chunckCount )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^System.arraycopy ( CHUNK_SEPARATOR, 0 , pArray, encodedDataLength - CHUNK_SEPARATOR.length /  2, CHUNK_SEPARATOR.length /  2 ) ;^377^378^^^^266^383^[REPLACE] System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length, CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (nextSeparatorIndex  <=  chunckCount )  {^376^^^^^266^383^[REPLACE] if  ( chunksSoFar < chunckCount )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length /  0.5 , CHUNK_SEPARATOR.length /  0.5  ) ;^377^378^^^^266^383^[REPLACE] System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length, CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^return pArray;^382^^^^^266^383^[REPLACE] return encodedData;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^base64Data =  discardNonBase64 ( pArray ) ;^394^^^^^392^450^[REPLACE] base64Data = discardNonBase64 ( base64Data ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( base64Data.length /  2 == 0  )  {^397^^^^^392^450^[REPLACE] if  ( base64Data.length == 0 )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[0L];^398^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int numberQuadruple = base64Data.length /  2 / FOURBYTE;^401^^^^^392^450^[REPLACE] int numberQuadruple = base64Data.length / FOURBYTE;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte decodedData[] = false;^402^^^^^392^450^[REPLACE] byte decodedData[] = null;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 1, b2 = 1, b3 = 1, b4 = 1, marker1 = 1, marker1 = 1;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 0 - 2, b2 = 0 - 2, b3 = 0 - 2, b4 = 0 - 2, marker0 - 2 = 0 - 2, marker1 = 0 - 2;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b4 = 0  ;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 2, b2 = 2, b3 = 2, b4 = 2, marker2 = 2, marker1 = 2;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 0 / 3, b2 = 0 / 3, b3 = 0 / 3, b4 = 0 / 3, marker0 / 3 = 0 / 3, marker1 = 0 / 3;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 0 * 3, b2 = 0 * 3, b3 = 0 * 3, b4 = 0 * 3, marker0 * 3 = 0 * 3, marker1 = 0 * 3;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int encodedIndex = 0L;^407^^^^^392^450^[REPLACE] int encodedIndex = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int dataIndex = 0L;^408^^^^^392^450^[REPLACE] int dataIndex = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( --lastData  || length )  {^414^^^^^392^450^[REPLACE] if  ( --lastData == 0 )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^return new byte[0];^414^415^416^^^392^450^[ADD] if  ( --lastData == 0 )  { return new byte[0]; }^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[0 + 4];^415^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData = new byte[lastData  dataIndex];^418^^^^^392^450^[REPLACE] decodedData = new byte[lastData - numberQuadruple];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[4];^415^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int lastData = decodedData.length;^411^^^^^392^450^[REPLACE] int lastData = base64Data.length;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( marker0 !=false || marker1 !=false )  {^429^^^^^392^450^[REPLACE] if  ( marker0 != PAD && marker1 != PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  (val3  !=  PAD )  {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  ( marker1  && val3 )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b1 = base64Alphabet[base64Data[dataIndex]]  ;^442^^^^^392^450^[REPLACE] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^444^^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^445^^^^^392^450^[ADD] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^444^445^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ; decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 & b2 >> 4 ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^} else if  ( marker1  ) {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^439^^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   (numberQuadruple & b2 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  )  ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^431^^^^^392^450^[ADD] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b3 = base64Alphabet[marker0]  ;^432^^^^^392^450^[REPLACE] b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( numberQuadruple & numberQuadruple ) ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  2] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex numberQuadruple] =  ( byte )   ( b3 << 6 | b4 ) ;^436^^^^^392^450^[REPLACE] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  ( marker0  !=  PAD )  {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REMOVE]^if  ( marker1 ==  ( PAD )  )  {     b3 = base64Alphabet[marker0];     decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  ) ;     decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  ) ; }^437^^^^^392^450^[REMOVE] ^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  (val3  ||  PAD )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REMOVE]^if  ( marker0 ==  ( PAD )  )  {     decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  ) ; }else     if  ( marker1 ==  ( PAD )  )  {         b3 = base64Alphabet[marker0];         decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  ) ;         decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  ) ;     }^440^^^^^392^450^[REMOVE] ^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^442^^^^^392^450^[ADD] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 / 1 & b2 / 1 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex numberQuadruple] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  )  ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[ ( encodedIndex + 2 ) ] =  (  ( byte )   (  ( b3 << 6 )  | b4 )  )  ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  )  ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  else {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 0 & b0 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex i] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^dataIndex = i * 3  ;^422^^^^^392^450^[REPLACE] dataIndex = i * 4;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker0 = base64Data[dataIndex  2];^423^^^^^392^450^[REPLACE] marker0 = base64Data[dataIndex + 2];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker1 = base64Data[dataIndex  3];^424^^^^^392^450^[REPLACE] marker1 = base64Data[dataIndex + 3];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b3 = base64Alphabet[marker0]  ;^426^^^^^392^450^[REPLACE] b1 = base64Alphabet[base64Data[dataIndex]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b3 = base64Alphabet[marker0]  ;^427^^^^^392^450^[REPLACE] b2 = base64Alphabet[base64Data[dataIndex + 1]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b1 = base64Alphabet[base64Data[dataIndex]]  ;^431^^^^^392^450^[REPLACE] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^432^^^^^392^450^[ADD] b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  )  ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[ ( encodedIndex + 2 ) ] =  (  ( byte )   (  ( b3 << 6 )  | b4 )  )  ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  0] =  ( byte )   ( b3 << 6 | b4 ) ;^436^^^^^392^450^[REPLACE] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^encodedIndex += 4;^447^^^^^392^450^[REPLACE] encodedIndex += 3;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 3; i < numberQuadruple; i++ )  {^421^^^^^392^450^[REPLACE] for  ( int i = 0; i < numberQuadruple; i++ )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodedData;^449^^^^^392^450^[REPLACE] return decodedData;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^460^^^^^459^480^[ADD] byte groomedData[] = new byte[data.length];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int bytesCopied = 3;^461^^^^^459^480^[REPLACE] int bytesCopied = 0;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^471^^^^^459^480^[ADD] groomedData[bytesCopied++] = data[i];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0 ; i < data.length; i++ )  {^463^^^^^459^480^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int bytesCopied = 0  ;^475^^^^^459^480^[REPLACE] byte packedData[] = new byte[bytesCopied];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^System.arraycopy ( groomedData, 4, packedData, 4, bytesCopied ) ;^477^^^^^459^480^[REPLACE] System.arraycopy ( groomedData, 0, packedData, 0, bytesCopied ) ;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return decodedData;  ;^479^^^^^459^480^[REPLACE] return packedData;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^573^^^^^572^599^[ADD] int bitlen = bigInt.bitLength (  ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^bitlen =  (  ( bitlen + 0 )  >> 3 )   ==  3;^575^^^^^572^599^[REPLACE] bitlen =  (  ( bitlen + 7 )  >> 3 )  << 3;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^byte[] bigBytes = bigInt.bitLength (  ) ;^576^^^^^572^599^[REPLACE] byte[] bigBytes = bigInt.toByteArray (  ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^if (  (  ( bigInt.bitLength (  )  % 8 )  != 0 )  || (  (  ( bigInt.bitLength (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  {^578^579^^^^572^599^[REPLACE] if (  (  ( bigInt.bitLength (  )  % 8 )  != 0 )  && (  (  ( bigInt.bitLength (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  {^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^578^579^580^581^^572^599^[ADD] if (  (  ( bigInt.bitLength (  )  % 8 )  != 0 )  && (  (  ( bigInt.bitLength (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  { return bigBytes; }^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return resizedBytes;^580^^^^^578^581^[REPLACE] return bigBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return resizedBytes;^580^^^^^572^599^[REPLACE] return bigBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int startSrc = 0 % 2;^584^^^^^572^599^[REPLACE] int startSrc = 0;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int len = resizedBytes.length;^585^^^^^572^599^[REPLACE] int len = bigBytes.length;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^if (  ( bigInt.bitLength (  )  % 8 / 2 )   &&  0 )  {^588^^^^^572^599^[REPLACE] if (  ( bigInt.bitLength (  )  % 8 )  == 0 )  {^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^589^590^^^^572^599^[ADD] startSrc = 1; len--;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^startSrc = 1 + 1;^589^^^^^572^599^[REPLACE] startSrc = 1;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int startDst = bitlen / 8 - 0  len;^593^^^^^572^599^[REPLACE] int startDst = bitlen / 8 - len;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^byte[] resizedBytes = new byte[bitlen  8];^594^^^^^572^599^[REPLACE] byte[] resizedBytes = new byte[bitlen / 8];^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^System.arraycopy ( bigBytes, nextSeparatorIndex, resizedBytes, startDst, len ) ;^596^^^^^572^599^[REPLACE] System.arraycopy ( bigBytes, startSrc, resizedBytes, startDst, len ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^596^^^^^572^599^[ADD] System.arraycopy ( bigBytes, startSrc, resizedBytes, startDst, len ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return packedData;^598^^^^^572^599^[REPLACE] return resizedBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
