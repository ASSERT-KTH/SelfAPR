[REPLACE]^static final int CHUNK_SIZE ;^52^^^^^^^[REPLACE] static final int CHUNK_SIZE = 76;^ [CLASS] Base64  
[REPLACE]^static final byte[] CHUNK_SEPARATOR ;^59^^^^^^^[REPLACE] static final byte[] CHUNK_SEPARATOR = "\r\n".getBytes (  ) ;^ [CLASS] Base64  
[REPLACE]^private static final int BASELENGTH  = null ;^64^^^^^^^[REPLACE] private static final int BASELENGTH = 255;^ [CLASS] Base64  
[REPLACE]^private static final int LOOKUPLENGTH  = null ;^69^^^^^^^[REPLACE] private static final int LOOKUPLENGTH = 64;^ [CLASS] Base64  
[REPLACE]^private  final int EIGHTBIT = 8;^74^^^^^^^[REPLACE] private static final int EIGHTBIT = 8;^ [CLASS] Base64  
[REPLACE]^private static final int SIXTEENBIT ;^79^^^^^^^[REPLACE] private static final int SIXTEENBIT = 16;^ [CLASS] Base64  
[REPLACE]^private  final int TWENTYFOURBITGROUP = 24;^84^^^^^^^[REPLACE] private static final int TWENTYFOURBITGROUP = 24;^ [CLASS] Base64  
[REPLACE]^private static final int FOURBYTE = 5;^89^^^^^^^[REPLACE] private static final int FOURBYTE = 4;^ [CLASS] Base64  
[REPLACE]^private static final int SIGN ;^94^^^^^^^[REPLACE] private static final int SIGN = -128;^ [CLASS] Base64  
[REPLACE]^private static final byte PAD  = null ;^99^^^^^^^[REPLACE] private static final byte PAD =  ( byte )  '=';^ [CLASS] Base64  
[REPLACE]^private  final byte[] base64Alphabet = new byte[BASELENGTH];^111^^^^^^^[REPLACE] private static final byte[] base64Alphabet = new byte[BASELENGTH];^ [CLASS] Base64  
[REPLACE]^private static final byte[] lookUpBase64Alphabet  = null ;^126^^^^^^^[REPLACE] private static final byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];^ [CLASS] Base64  
[REPLACE]^if  ( octect  !=  PAD )  {^170^^^^^169^177^[REPLACE] if  ( octect == PAD )  {^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^}  if  ( octect < 0 && base64Alphabet[octect] == -1 )  {^172^^^^^169^177^[REPLACE] } else if  ( octect < 0 || base64Alphabet[octect] == -1 )  {^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^return false;^175^^^^^169^177^[REPLACE] return true;^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^return true;^173^^^^^169^177^[REPLACE] return false;^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^return false;^171^^^^^169^177^[REPLACE] return true;^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^}  else {^172^^^^^169^177^[REPLACE] } else if  ( octect < 0 || base64Alphabet[octect] == -1 )  {^[METHOD] isBase64 [TYPE] boolean [PARAMETER] byte octect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP 
[REPLACE]^arrayOctect =  discardWhitespace ( lookUpBase64Alphabet ) ;^189^^^^^187^203^[REPLACE] arrayOctect = discardWhitespace ( arrayOctect ) ;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[ADD]^^189^^^^^187^203^[ADD] arrayOctect = discardWhitespace ( arrayOctect ) ;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^int length = lookUpBase64Alphabet.length;^191^^^^^187^203^[REPLACE] int length = arrayOctect.length;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^if  ( length - 4 == 0 )  {^192^^^^^187^203^[REPLACE] if  ( length == 0 )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[ADD]^^192^193^^195^196^187^203^[ADD] if  ( length == 0 )  {  return true; }^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return false;^195^^^^^187^203^[REPLACE] return true;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^if  ( isBase64 ( arrayOctect[i] )  )  {^198^^^^^187^203^[REPLACE] if  ( !isBase64 ( arrayOctect[i] )  )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return true;^199^^^^^187^203^[REPLACE] return false;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^for  ( int i = 0 ; i < length /  2; i++ )  {^197^^^^^187^203^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^197^^^^^187^203^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return false;^202^^^^^187^203^[REPLACE] return true;^[METHOD] isArrayByteBase64 [TYPE] boolean [PARAMETER] byte[] arrayOctect [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return encodeBase64 ( binaryData, true ) ;^213^^^^^212^214^[REPLACE] return encodeBase64 ( binaryData, false ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return encodeBase64 ( binaryData, false ) ;^224^^^^^223^225^[REPLACE] return encodeBase64 ( binaryData, true ) ;^[METHOD] encodeBase64Chunked [TYPE] byte[] [PARAMETER] byte[] binaryData [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^if  ( ! ! ( pObject instanceof byte[] )  )  {^238^^^^^237^242^[REPLACE] if  ( ! ( pObject instanceof byte[] )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[ADD]^^238^239^240^^^237^242^[ADD] if  ( ! ( pObject instanceof byte[] )  )  { throw new DecoderException  (" ")  ; }^[METHOD] decode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return ;^239^^^^^237^242^[REPLACE] throw new DecoderException  (" ")  ;^[METHOD] decode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[ADD]^^239^^^^^237^242^[ADD] throw new DecoderException  (" ")  ;^[METHOD] decode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return encode (  ( byte[] )  pObject ) ;^241^^^^^237^242^[REPLACE] return decode (  ( byte[] )  pObject ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^return decodeBase64 ( lookUpBase64Alphabet ) ;^252^^^^^251^253^[REPLACE] return decodeBase64 ( pArray ) ;^[METHOD] decode [TYPE] byte[] [PARAMETER] byte[] pArray [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  octect  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  i  length 
[REPLACE]^long pArrayLength = binaryData.length;^267^^^^^266^383^[REPLACE] long binaryDataLength = binaryData.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^267^^^^^266^383^[ADD] long binaryDataLength = binaryData.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long length - 3DataBits = binaryDataLength * EIGHTBIT;^268^^^^^266^383^[REPLACE] long lengthDataBits = binaryDataLength * EIGHTBIT;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long fewerThan24bits = length + 4DataBits % TWENTYFOURBITGROUP;^269^^^^^266^383^[REPLACE] long fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^269^270^^^^266^383^[ADD] long fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP; long tripletCount = lengthDataBits / TWENTYFOURBITGROUP;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long tripletCount = length *  0.5 DataBits / TWENTYFOURBITGROUP;^270^^^^^266^383^[REPLACE] long tripletCount = lengthDataBits / TWENTYFOURBITGROUP;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^long encodedDataLengthLong = 1;^271^^^^^266^383^[REPLACE] long encodedDataLengthLong = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int chunckCount = 3;^272^^^^^266^383^[REPLACE] int chunckCount = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^272^^^^^266^383^[ADD] int chunckCount = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( fewerThan24bits  ==  0 )  {^274^^^^^266^383^[REPLACE] if  ( fewerThan24bits != 0 )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^274^275^276^277^^266^383^[ADD] if  ( fewerThan24bits != 0 )  {  encodedDataLengthLong =  ( tripletCount + 1 )  * 4; } else {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong = lengthDataBits  ;^279^^^^^274^280^[REPLACE] encodedDataLengthLong = tripletCount * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong =  ( tripletCount + 1 )   ;^276^^^^^266^383^[REPLACE] encodedDataLengthLong =  ( tripletCount + 1 )  * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong =lengthDataBits  ;^279^^^^^266^383^[REPLACE] encodedDataLengthLong = tripletCount * 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( true )  {^285^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^chunckCount =  ( CHUNK_SEPARATOR.length + 3 == 0  ? 0  :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^287^288^^^^266^383^[REPLACE] chunckCount =  ( CHUNK_SEPARATOR.length == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length + 2;^289^^^^^266^383^[REPLACE] encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^chunckCount =  ( CHUNK_SEPARATOR.length %  2 == 0  ? 0  :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^287^288^^^^266^383^[REPLACE] chunckCount =  ( CHUNK_SEPARATOR.length == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^287^288^^^^266^383^[ADD] chunckCount =  ( CHUNK_SEPARATOR.length == 0 ? 0 :  ( int )  Math .ceil (  ( float )  encodedDataLengthLong / CHUNK_SIZE )  ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length - 4;^289^^^^^266^383^[REPLACE] encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  (tripletCount  !=  Integer.MAX_VALUE )  {^292^^^^^266^383^[REPLACE] if  ( encodedDataLengthLong > Integer.MAX_VALUE )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^return ;^293^294^^^^266^383^[REPLACE] throw new IllegalArgumentException ( "Input array too big, output array would be bigger than Integer.MAX_VALUE=" + Integer.MAX_VALUE ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^293^294^^^^266^383^[ADD] throw new IllegalArgumentException ( "Input array too big, output array would be bigger than Integer.MAX_VALUE=" + Integer.MAX_VALUE ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int length = arrayOctect.length;^296^^^^^266^383^[REPLACE] int encodedDataLength =  ( int )  encodedDataLengthLong;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^296^^^^^266^383^[ADD] int encodedDataLength =  ( int )  encodedDataLengthLong;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int length = arrayOctect.length;^297^^^^^266^383^[REPLACE] byte encodedData[] = new byte[encodedDataLength];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 1, l = 1, b1 = 1, b2 = 1, b3 = 1;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 0 / 1, l = 0 / 1, b1 = 0 / 1, b2 = 0 / 1, b3 = 0 / 1;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^299^^^^^266^383^[ADD] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte k = 3, l = 3, b1 = 3, b2 = 3, b3 = 3;^299^^^^^266^383^[REPLACE] byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int encodedIndex = 0L;^301^^^^^266^383^[REPLACE] int encodedIndex = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int dataIndex = 3;^302^^^^^266^383^[REPLACE] int dataIndex = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^302^^^^^266^383^[ADD] int dataIndex = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int i = 4;^303^^^^^266^383^[REPLACE] int i = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int encodedIndex = 0;^304^^^^^266^383^[REPLACE] int nextSeparatorIndex = CHUNK_SIZE;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^int chunksSoFar = 0 << 1;^305^^^^^266^383^[REPLACE] int chunksSoFar = 0;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if ( bigInt == null )   {^334^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( encodedIndex  ||  nextSeparatorIndex )  {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length /  2 ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex +;^340^^^^^266^383^[REPLACE] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex + = null ;^340^^^^^266^383^[REPLACE] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( encodedIndex  !=  nextSeparatorIndex )  {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length + 3 ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex + =  encodedIndex +;^340^^^^^266^383^[REPLACE] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^for  ( i = 0; i  >=  lengthDataBits; i++ )  {^308^^^^^266^383^[REPLACE] for  ( i = 0; i < tripletCount; i++ )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( encodedIndex  &&  nextSeparatorIndex )  {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^336^337^338^339^340^266^383^[ADD] if  ( encodedIndex == nextSeparatorIndex )  { System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedIndex, CHUNK_SEPARATOR.length ) ; chunksSoFar++; nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ; encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length (  )  ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^340^^^^^266^383^[ADD] encodedIndex += CHUNK_SEPARATOR.length;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length *  0.5  ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^339^^^^^266^383^[ADD] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( chunckCount  ||  nextSeparatorIndex )  {^336^^^^^266^383^[REPLACE] if  ( encodedIndex == nextSeparatorIndex )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 0  )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length + 5 ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^dataIndex =nextSeparatorIndex  ;^309^^^^^266^383^[REPLACE] dataIndex = i * 3;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex + 1]; ;^310^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex  |  1];^311^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b3 = binaryData[dataIndex +nextSeparatorIndex];^312^^^^^266^383^[REPLACE] b3 = binaryData[dataIndex + 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 & 0x03 ) ; ;^316^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^316^^^^^266^383^[ADD] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^l =  ( byte )   ( b2 & 0x0f ) ; ;^317^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; ;^323^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +dataIndex] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^327^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +nextSeparatorIndex] = lookUpBase64Alphabet[ ( l <<nextSeparatorIndex )  | val3];^328^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[ ( l << 2 )  | val3];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  !=  3] = lookUpBase64Alphabet[b3 & 0x3f];^329^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^329^^^^^266^383^[ADD] encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex += 0;^331^^^^^266^383^[REPLACE] encodedIndex += 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length *  2 ) ;^339^^^^^266^383^[REPLACE] nextSeparatorIndex =  ( CHUNK_SIZE *  ( chunksSoFar + 1 )  )  +  ( chunksSoFar * CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^319^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   (  ( val2 )  >> 4 ^ 0xf0 ) ;^320^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^320^321^^^^266^383^[ADD] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ; byte val3 =  (  ( b3 & SIGN )  == 0 )  ?  ( byte )   ( b3 >> 6 )  :  ( byte )   (  ( b3 )  >> 6 ^ 0xfc ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val3  =   ( byte )   ( b3 >> 6 )  ;^321^^^^^266^383^[REPLACE] byte val3 =  (  ( b3 & SIGN )  == 0 )  ?  ( byte )   ( b3 >> 6 )  :  ( byte )   (  ( b3 )  >> 6 ^ 0xfc ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^for  ( i = 0 * 0; i < tripletCount; i++ )  {^308^^^^^266^383^[REPLACE] for  ( i = 0; i < tripletCount; i++ )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^dataIndex = i  ;^309^^^^^266^383^[REPLACE] dataIndex = i * 3;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex  >  1];^311^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b3 = binaryData[dataIndex  ==  2];^312^^^^^266^383^[REPLACE] b3 = binaryData[dataIndex + 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; ;^327^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  <=  3] = lookUpBase64Alphabet[ ( l << 3 )  | val3];^328^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[ ( l << 2 )  | val3];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  ^  1] = lookUpBase64Alphabet[b1 & 0x1f];^329^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedIndex += 4 - 0;^331^^^^^266^383^[REPLACE] encodedIndex += 4;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( val1 )  >> 2 ^ 0 >>> 4xc0 >>> 4 ) ;^319^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^319^^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   ( b2 >> 4 )  ;^320^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val3  =   ( byte )   (  ( b3 )  >> 6 ^ 0xfc ) ;^321^^^^^266^383^[REPLACE] byte val3 =  (  ( b3 & SIGN )  == 0 )  ?  ( byte )   ( b3 >> 6 )  :  ( byte )   (  ( b3 )  >> 6 ^ 0xfc ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^dataIndex = i  ;^346^^^^^266^383^[REPLACE] dataIndex = i * 3;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( fewerThan24bits  ||  EIGHTBIT )  {^348^^^^^266^383^[REPLACE] if  ( fewerThan24bits == EIGHTBIT )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^}  else {^358^^^^^266^383^[REPLACE] } else if  ( fewerThan24bits == SIXTEENBIT )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex + 1]; ;^360^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^360^^^^^266^383^[ADD] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex  &  1];^361^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^361^^^^^266^383^[ADD] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^l =  ( byte )   ( b2 | 0x0f ) ;^362^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^362^363^^^^266^383^[ADD] l =  ( byte )   ( b2 & 0x0f ) ; k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 | 0x00 ) ;^363^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; ;^368^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  ==  1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +chunckCount] = lookUpBase64Alphabet[l <<chunckCount];^370^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^370^^^^^266^383^[ADD] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  |  3] = PAD;^371^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^365^366^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ; byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   (  ( b2 )  >> 4 ^ 0Lxf0L ) ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex  |  1];^361^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^361^362^^^^266^383^[ADD] b2 = binaryData[dataIndex + 1]; l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^362^^^^^266^383^[ADD] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^l =  ( byte )   ( b2 & 0x0f ) ; ;^363^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +nextSeparatorIndex] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^369^370^^^^266^383^[ADD] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ]; encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f]; ;^370^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^encodedData[encodedIndex + 3] = PAD;^370^371^^^^266^383^[ADD] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +nextSeparatorIndex] = PAD;^371^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   (  ( b1 )  >> 2 ^encodedDataLengthxc0 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b2 = binaryData[dataIndex + 1]; ;^349^^^^^266^383^[REPLACE] b1 = binaryData[dataIndex];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 | 0x04 ) ;^350^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; ;^354^^^^^266^383^[REPLACE] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^354^^^^^266^383^[ADD] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  ==  2] = lookUpBase64Alphabet[k << 4];^355^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  !=  2] = PAD;^356^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +nextSeparatorIndex] = PAD;^357^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   ( b1 >> 2 )  ;^353^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^b3 = binaryData[dataIndex + 2]; ;^361^^^^^266^383^[REPLACE] b2 = binaryData[dataIndex + 1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 | 0x03 + 4 ) ;^363^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex +i] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^369^^^^^266^383^[ADD] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  >=  2] = lookUpBase64Alphabet[l << 2];^370^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^370^371^^^^266^383^[ADD] encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1  =   ( byte )   ( b1 >> 2 )  ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^365^^^^^266^383^[ADD] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( val1 | 0x03 ) ;^350^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  <=  1 + 1] = lookUpBase64Alphabet[k << 4];^355^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  !=  4] = PAD;^356^^^^^266^383^[REPLACE] encodedData[encodedIndex + 2] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^356^^^^^266^383^[ADD] encodedData[encodedIndex + 2] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  <=  3] = PAD;^357^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( b1 & 0x03 ) ; ;^362^^^^^266^383^[REPLACE] l =  ( byte )   ( b2 & 0x0f ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^k =  ( byte )   ( val1 | 0x03 ) ;^363^^^^^266^383^[REPLACE] k =  ( byte )   ( b1 & 0x03 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^368^^^^^266^383^[ADD] encodedData[encodedIndex] = lookUpBase64Alphabet[val1];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; ;^369^^^^^266^383^[REPLACE] encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 |  ( k << 4 ) ];^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^encodedData[encodedIndex  &  3] = PAD;^371^^^^^266^383^[REPLACE] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^371^^^^^266^383^[ADD] encodedData[encodedIndex + 3] = PAD;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val1 =  (  ( b1 & SIGN )   ||  0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^365^^^^^266^383^[REPLACE] byte val1 =  (  ( b1 & SIGN )  == 0 )  ?  ( byte )   ( b1 >> 2 )  :  ( byte )   (  ( b1 )  >> 2 ^ 0xc0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^byte val2  =   ( byte )   ( b2 >> 4 )  ;^366^^^^^266^383^[REPLACE] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[ADD]^^366^^^^^266^383^[ADD] byte val2 =  (  ( b2 & SIGN )  == 0 )  ?  ( byte )   ( b2 >> 4 )  :  ( byte )   (  ( b2 )  >> 4 ^ 0xf0 ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if ( bigInt == null )   {^374^^^^^266^383^[REPLACE] if  ( isChunked )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^if  ( chunksSoFar  <=  chunckCount )  {^376^^^^^266^383^[REPLACE] if  ( chunksSoFar < chunckCount )  {^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length + 4, CHUNK_SEPARATOR.length + 4 ) ;^377^378^^^^266^383^[REPLACE] System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length, CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length /  0.5 , CHUNK_SEPARATOR.length /  0.5  ) ;^377^378^^^^266^383^[REPLACE] System.arraycopy ( CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length, CHUNK_SEPARATOR.length ) ;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^return pArray;^382^^^^^266^383^[REPLACE] return encodedData;^[METHOD] encodeBase64 [TYPE] byte[] [PARAMETER] byte[] binaryData boolean isChunked [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  binaryData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  isChunked  true  [TYPE]  byte PAD  b1  b2  b3  k  l  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  length  nextSeparatorIndex  [TYPE]  long binaryDataLength  encodedDataLengthLong  fewerThan24bits  lengthDataBits  tripletCount 
[REPLACE]^base64Data =  discardNonBase64 ( null ) ;^394^^^^^392^450^[REPLACE] base64Data = discardNonBase64 ( base64Data ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^394^^^^^392^450^[ADD] base64Data = discardNonBase64 ( base64Data ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( lookUpBase64Alphabet.length - 3 == 0 )  {^397^^^^^392^450^[REPLACE] if  ( base64Data.length == 0 )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^397^398^399^^^392^450^[ADD] if  ( base64Data.length == 0 )  { return new byte[0]; }^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[1];^398^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[3];^398^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int numberQuadruple = base64Data.length + 1 / FOURBYTE;^401^^^^^392^450^[REPLACE] int numberQuadruple = base64Data.length / FOURBYTE;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte decodedData[] = this;^402^^^^^392^450^[REPLACE] byte decodedData[] = null;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 0 << 4, b2 = 0 << 4, b3 = 0 << 4, b4 = 0 << 4, marker0 << 4 = 0 << 4, marker1 = 0 << 4;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 4, b2 = 4, b3 = 4, b4 = 4, marker4 = 4, marker1 = 4;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 2, b2 = 2, b3 = 2, b4 = 2, marker2 = 2, marker1 = 2;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^403^^^^^392^450^[ADD] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 3, b2 = 3, b3 = 3, b4 = 3, marker3 = 3, marker1 = 3;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte b1 = 0 - 0, b2 = 0 - 0, b3 = 0 - 0, b4 = 0 - 0, marker0 - 0 = 0 - 0, marker1 = 0 - 0;^403^^^^^392^450^[REPLACE] byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int encodedIndex = 1;^407^^^^^392^450^[REPLACE] int encodedIndex = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int dataIndex = 0 * 1;^408^^^^^392^450^[REPLACE] int dataIndex = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^408^^^^^392^450^[ADD] int dataIndex = 0;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^while  ( base64Data[lastData - 1]  ||  PAD )  {^413^^^^^392^450^[REPLACE] while  ( base64Data[lastData - 1] == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( --lastData  !=  0 )  {^414^^^^^392^450^[REPLACE] if  ( --lastData == 0 )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^return new byte[0];^414^415^416^^^392^450^[ADD] if  ( --lastData == 0 )  { return new byte[0]; }^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[4];^415^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[2];^415^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( --lastData  || nextSeparatorIndex )  {^414^^^^^392^450^[REPLACE] if  ( --lastData == 0 )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REMOVE]^if  (  (  ( bigInt.bitLength (  )  )  % 8 )  == 0 )  {     startSrc = 1;     len--; }^414^^^^^392^450^[REMOVE] ^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new byte[0L];^415^^^^^392^450^[REPLACE] return new byte[0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData = new byte[lastData  &  numberQuadruple];^418^^^^^392^450^[REPLACE] decodedData = new byte[lastData - numberQuadruple];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int lastData = encodedData.length;^411^^^^^392^450^[REPLACE] int lastData = base64Data.length;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  (  marker1 != PAD )  {^429^^^^^392^450^[REPLACE] if  ( marker0 != PAD && marker1 != PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^429^430^431^432^^392^450^[ADD] if  ( marker0 != PAD && marker1 != PAD )  {  b3 = base64Alphabet[marker0]; b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  (val3  !=  PAD )  {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  ( marker1  !=  PAD )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b4 = base64Alphabet[marker1]; ;^442^^^^^392^450^[REPLACE] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^442^^^^^392^450^[ADD] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 & b2 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^444^^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ||  4] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  >=  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( numberQuadruple & b2 >> 4 ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  else {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^}   b3 = base64Alphabet[marker0];decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^440^441^442^^444^392^450^[ADD] else if  ( marker1 == PAD )  {  b3 = base64Alphabet[marker0]; decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^444^445^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ; decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  <  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 & numberQuadruple ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ^  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b4 = base64Alphabet[marker1]; ;^431^^^^^392^450^[REPLACE] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^431^^^^^392^450^[ADD] b3 = base64Alphabet[marker0];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b3 = base64Alphabet[marker0]; ;^432^^^^^392^450^[REPLACE] b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ; ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^434^^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  >  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex +i] =  ( byte )   ( b3 << 6 | b4 ) ;^436^^^^^392^450^[REPLACE] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^} else if  ( marker0  !=  PAD )  {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  &&  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^445^^^^^392^450^[ADD] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2L & b2L >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  &  4] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 & b2 >> 4 ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   (numberQuadruple & b2 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  |  2] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0 * 0; i  ==  numberQuadruple; i++ )  {^421^^^^^392^450^[REPLACE] for  ( int i = 0; i < numberQuadruple; i++ )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^421^422^423^424^^392^450^[ADD] for  ( int i = 0; i < numberQuadruple; i++ )  { dataIndex = i * 4; marker0 = base64Data[dataIndex + 2]; marker1 = base64Data[dataIndex + 3];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( marker0 !=false || marker1 != PAD )  {^429^^^^^392^450^[REPLACE] if  ( marker0 != PAD && marker1 != PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^} else if  ( marker0  ||  PAD )  {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^}   decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^437^438^439^440^^392^450^[ADD] else if  ( marker0 == PAD )  {  decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ; } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^} else if  ( marker1  !=  PAD )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REMOVE]^if  ( marker0 ==  ( PAD )  )  {     decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  ) ; }else     if  ( marker1 ==  ( PAD )  )  {         b3 = base64Alphabet[marker0];         decodedData[encodedIndex] =  (  ( byte )   (  ( b1 << 2 )  |  ( b2 >> 4 )  )  ) ;         decodedData[ ( encodedIndex + 1 ) ] =  (  ( byte )   (  (  ( b2 & 15 )  << 4 )  |  (  ( b3 >> 2 )  & 15 )  )  ) ;     }^440^^^^^392^450^[REMOVE] ^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 4 & b4 >> 4 ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex +i] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  if  ( val3  ||  val3 )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex +numberQuadruple] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ; ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ||  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 & b2 >> 4 ) ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ^  1L] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ==  2L] =  ( byte )   ( b3 << 6 | b4 ) ;^436^^^^^392^450^[REPLACE] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^}  else {^437^^^^^392^450^[REPLACE] } else if  ( marker0 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^} else if  (val3  !=  PAD )  {^440^^^^^392^450^[REPLACE] } else if  ( marker1 == PAD )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ; ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex +nextSeparatorIndex] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^439^^^^^392^450^[ADD] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  >  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^dataIndex = i  ;^422^^^^^392^450^[REPLACE] dataIndex = i * 4;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker0 = base64Data[dataIndex  ==  2 + 2];^423^^^^^392^450^[REPLACE] marker0 = base64Data[dataIndex + 2];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker1 = base64Data[dataIndex  ||  1];^424^^^^^392^450^[REPLACE] marker1 = base64Data[dataIndex + 3];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b2 = base64Alphabet[base64Data[dataIndex + 1]]; ;^426^^^^^392^450^[REPLACE] b1 = base64Alphabet[base64Data[dataIndex]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b2 = base64Alphabet[base64Data[dataIndex  &  4]];^427^^^^^392^450^[REPLACE] b2 = base64Alphabet[base64Data[dataIndex + 1]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^427^^^^^392^450^[ADD] b2 = base64Alphabet[base64Data[dataIndex + 1]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^431^432^^^^392^450^[ADD] b3 = base64Alphabet[marker0]; b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 5 & b5 >> 4 ) ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ||  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ; ;^436^^^^^392^450^[REPLACE] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^436^^^^^392^450^[ADD] decodedData[encodedIndex + 2] =  ( byte )   ( b3 << 6 | b4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 &numberQuadruple ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ==  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^encodedIndex += 4;^447^^^^^392^450^[REPLACE] encodedIndex += 3;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^dataIndex =nextSeparatorIndex  ;^422^^^^^392^450^[REPLACE] dataIndex = i * 4;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker0 = base64Data[dataIndex  ==  2];^423^^^^^392^450^[REPLACE] marker0 = base64Data[dataIndex + 2];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^marker1 = base64Data[dataIndex  ||  3];^424^^^^^392^450^[REPLACE] marker1 = base64Data[dataIndex + 3];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^426^427^^^^392^450^[ADD] b1 = base64Alphabet[base64Data[dataIndex]]; b2 = base64Alphabet[base64Data[dataIndex + 1]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^b1 = base64Alphabet[base64Data[dataIndex]]; ;^427^^^^^392^450^[REPLACE] b2 = base64Alphabet[base64Data[dataIndex + 1]];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^432^^^^^392^450^[ADD] b4 = base64Alphabet[marker1];^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 2 &numberQuadruple ) ;^434^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ==  1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^435^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   (numberQuadruple & b2 >> 4 ) ;^439^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex] =  ( byte )   ( b1 << 1 &numberQuadruple ) ;^444^^^^^392^450^[REPLACE] decodedData[encodedIndex] =  ( byte )   ( b1 << 2 | b2 >> 4 ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^decodedData[encodedIndex  ^  3] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^445^^^^^392^450^[REPLACE] decodedData[encodedIndex + 1] =  ( byte )   (  (  ( b2 & 0xf )  << 4 )  |  (  ( b3 >> 2 )  & 0xf )  ) ;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^encodedIndex += 1;^447^^^^^392^450^[REPLACE] encodedIndex += 3;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 1; i < numberQuadruple; i++ )  {^421^^^^^392^450^[REPLACE] for  ( int i = 0; i < numberQuadruple; i++ )  {^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodedData;^449^^^^^392^450^[REPLACE] return decodedData;^[METHOD] decodeBase64 [TYPE] byte[] [PARAMETER] byte[] base64Data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  decodedData  encodedData  lookUpBase64Alphabet  pArray  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int len = bigBytes.length;^460^^^^^459^480^[REPLACE] byte groomedData[] = new byte[data.length];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^460^^^^^459^480^[ADD] byte groomedData[] = new byte[data.length];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int bytesCopied = 1;^461^^^^^459^480^[REPLACE] int bytesCopied = 0;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^461^^^^^459^480^[ADD] int bytesCopied = 0;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0; i < data.length - 4; i++ )  {^463^^^^^459^480^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^463^464^465^466^467^459^480^[ADD] for  ( int i = 0; i < data.length; i++ )  { switch  ( data[i] )  { case  ( byte )  ' ' : case  ( byte )  '\n' : case  ( byte )  '\r' :^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^groomedData[bytesCopied++] =  data[i];^471^^^^^459^480^[REPLACE] groomedData[bytesCopied++] = data[i];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^471^^^^^459^480^[ADD] groomedData[bytesCopied++] = data[i];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0 ; i < data.length; i++ )  {^463^^^^^459^480^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte encodedData[] = new byte[encodedDataLength];^475^^^^^459^480^[REPLACE] byte packedData[] = new byte[bytesCopied];^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^System.arraycopy ( groomedData, 0 + 1, packedData, 0 + 1, bytesCopied ) ;^477^^^^^459^480^[REPLACE] System.arraycopy ( groomedData, 0, packedData, 0, bytesCopied ) ;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodedData;^479^^^^^459^480^[REPLACE] return packedData;^[METHOD] discardWhitespace [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int len = bigBytes.length;^491^^^^^490^505^[REPLACE] byte groomedData[] = new byte[data.length];^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int bytesCopied = 1;^492^^^^^490^505^[REPLACE] int bytesCopied = 0;^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^492^^^^^490^505^[ADD] int bytesCopied = 0;^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( nextSeparatorIndexsBase64 ( data[i] )  )  {^495^^^^^490^505^[REPLACE] if  ( isBase64 ( data[i] )  )  {^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^groomedData[bytesCopied++] = data[i];^495^496^497^^^490^505^[ADD] if  ( isBase64 ( data[i] )  )  { groomedData[bytesCopied++] = data[i]; }^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^groomedData[bytesCopied++] =  data[i];^496^^^^^490^505^[REPLACE] groomedData[bytesCopied++] = data[i];^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^496^^^^^490^505^[ADD] groomedData[bytesCopied++] = data[i];^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0; i < packedData.length /  0.5 ; i++ )  {^494^^^^^490^505^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^494^495^496^497^^490^505^[ADD] for  ( int i = 0; i < data.length; i++ )  { if  ( isBase64 ( data[i] )  )  { groomedData[bytesCopied++] = data[i]; }^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^for  ( int i = 0 ; i < data.length; i++ )  {^494^^^^^490^505^[REPLACE] for  ( int i = 0; i < data.length; i++ )  {^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^byte encodedData[] = new byte[encodedDataLength];^500^^^^^490^505^[REPLACE] byte packedData[] = new byte[bytesCopied];^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^System.arraycopy ( groomedData, 4, packedData, 4, bytesCopied ) ;^502^^^^^490^505^[REPLACE] System.arraycopy ( groomedData, 0, packedData, 0, bytesCopied ) ;^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^502^^^^^490^505^[ADD] System.arraycopy ( groomedData, 0, packedData, 0, bytesCopied ) ;^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodedData;^504^^^^^490^505^[REPLACE] return packedData;^[METHOD] discardNonBase64 [TYPE] byte[] [PARAMETER] byte[] data [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if  ( ! ! ( pObject instanceof byte[] )  )  {^520^^^^^519^524^[REPLACE] if  ( ! ( pObject instanceof byte[] )  )  {^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return ;^521^^^^^519^524^[REPLACE] throw new EncoderException  (" ")  ;^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return decode (  ( byte[] )  pObject ) ;^523^^^^^519^524^[REPLACE] return encode (  ( byte[] )  pObject ) ;^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  Object pObject  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodeBase64 ( binaryData, false ) ;^534^^^^^533^535^[REPLACE] return encodeBase64 ( pArray, false ) ;^[METHOD] encode [TYPE] byte[] [PARAMETER] byte[] pArray [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return new BigInteger ( 1L, decodeBase64 ( pArray )  ) ;^546^^^^^545^547^[REPLACE] return new BigInteger ( 1, decodeBase64 ( pArray )  ) ;^[METHOD] decodeInteger [TYPE] BigInteger [PARAMETER] byte[] pArray [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^if ( bigInt != null )   {^558^^^^^557^563^[REPLACE] if ( bigInt == null )   {^[METHOD] encodeInteger [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[ADD]^^558^559^560^^^557^563^[ADD] if ( bigInt == null )   { throw new NullPointerException  (" ")  ; }^[METHOD] encodeInteger [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^throw new DecoderException  (" ")  ; ;^559^^^^^557^563^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] encodeInteger [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^return encodeBase64 ( toIntegerBytes ( bigInt ) , true ) ;^562^^^^^557^563^[REPLACE] return encodeBase64 ( toIntegerBytes ( bigInt ) , false ) ;^[METHOD] encodeInteger [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  length  nextSeparatorIndex  numberQuadruple 
[REPLACE]^int bitlen = bigInt .BigInteger ( len , bigBytes )  ;^573^^^^^572^599^[REPLACE] int bitlen = bigInt.bitLength (  ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^bitlen =  (  ( bitlen + 7 )  >> 3 )   ==  3;^575^^^^^572^599^[REPLACE] bitlen =  (  ( bitlen + 7 )  >> 3 )  << 3;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^byte[] bigBytes = bigInt.bitLength (  ) ;^576^^^^^572^599^[REPLACE] byte[] bigBytes = bigInt.toByteArray (  ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^576^^^^^572^599^[ADD] byte[] bigBytes = bigInt.toByteArray (  ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^if (  (  ( bigInt.bitLength (  )  % 8 )  != 0 )  || (  (  ( bigInt.bitLength (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  {^578^579^^^^572^599^[REPLACE] if (  (  ( bigInt.bitLength (  )  % 8 )  != 0 )  && (  (  ( bigInt.bitLength (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  {^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return resizedBytes;^580^^^^^578^581^[REPLACE] return bigBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return resizedBytes;^580^^^^^572^599^[REPLACE] return bigBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int startSrc = 4;^584^^^^^572^599^[REPLACE] int startSrc = 0;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int len = resizedBytes.length;^585^^^^^572^599^[REPLACE] int len = bigBytes.length;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^if (  ( bigInt.bitLength (  )  % 8 )   ||  0 )  {^588^^^^^572^599^[REPLACE] if (  ( bigInt.bitLength (  )  % 8 )  == 0 )  {^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^startSrc = 1 * 0;^589^^^^^572^599^[REPLACE] startSrc = 1;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^startSrc = 3;^589^^^^^572^599^[REPLACE] startSrc = 1;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^589^590^^^^572^599^[ADD] startSrc = 1; len--;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^int startDst = bitlen / 8  ==  encodedIndex;^593^^^^^572^599^[REPLACE] int startDst = bitlen / 8 - len;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^593^^^^^572^599^[ADD] int startDst = bitlen / 8 - len;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^byte[] resizedBytes = new byte[bitlen  ;^594^^^^^572^599^[REPLACE] byte[] resizedBytes = new byte[bitlen / 8];^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[ADD]^^594^^^^^572^599^[ADD] byte[] resizedBytes = new byte[bitlen / 8];^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^System.arraycopy ( bigBytes, startSrc, resizedBytes, startSrc, len ) ;^596^^^^^572^599^[REPLACE] System.arraycopy ( bigBytes, startSrc, resizedBytes, startDst, len ) ;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
[REPLACE]^return packedData;^598^^^^^572^599^[REPLACE] return resizedBytes;^[METHOD] toIntegerBytes [TYPE] byte[] [PARAMETER] BigInteger bigInt [CLASS] Base64   [TYPE]  byte[] CHUNK_SEPARATOR  arrayOctect  base64Alphabet  base64Data  bigBytes  binaryData  data  decodedData  encodedData  groomedData  lookUpBase64Alphabet  pArray  packedData  resizedBytes  [TYPE]  BigInteger bigInt  [TYPE]  boolean false  true  [TYPE]  byte PAD  b1  b2  b3  b4  k  l  marker0  marker1  octect  val1  val2  val3  [TYPE]  int BASELENGTH  CHUNK_SIZE  EIGHTBIT  FOURBYTE  LOOKUPLENGTH  SIGN  SIXTEENBIT  TWENTYFOURBITGROUP  bitlen  bytesCopied  chunckCount  chunksSoFar  dataIndex  encodedDataLength  encodedIndex  i  lastData  len  length  nextSeparatorIndex  numberQuadruple  startDst  startSrc 
