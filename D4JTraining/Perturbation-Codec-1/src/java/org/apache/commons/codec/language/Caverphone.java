[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ;^41^^^^^40^42^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Caverphone() [PARAMETER] [CLASS] Caverphone   [TYPE]  boolean false  true 
[ADD]^^41^^^^^40^42^[ADD] super (  ) ;^[METHOD] <init> [TYPE] Caverphone() [PARAMETER] [CLASS] Caverphone   [TYPE]  boolean false  true 
[REPLACE]^if (  txt == null || txt.length (  )  %  0.5  == 0  )  {^54^^^^^50^140^[REPLACE] if (  txt == null || txt.length (  )  == 0  )  {^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^return "1111111111";^54^55^56^^^50^140^[ADD] if (  txt == null || txt.length (  )  == 0  )  { return "1111111111"; }^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^return txt.substring ( 0, 10 ) ;^55^^^^^50^140^[REPLACE] return "1111111111";^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt =  null.toLowerCase ( java.util.Locale.ENGLISH ) ;^59^^^^^50^140^[REPLACE] txt = txt.toLowerCase ( java.util.Locale.ENGLISH ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^62^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "[^a-z]", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^65^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "e$", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^65^^^^^50^140^[ADD] txt = txt.replaceAll ( "e$", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^68^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^cough", "cou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "w3", "W3" ) ; ;^69^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^rough", "rou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^69^70^^^^50^140^[ADD] txt = txt.replaceAll ( "^rough", "rou2f" ) ; txt = txt.replaceAll ( "^tough", "tou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^70^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^tough", "tou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^txt = txt.replaceAll ( "^enough", "enou2f" ) ;^70^71^^^^50^140^[ADD] txt = txt.replaceAll ( "^tough", "tou2f" ) ; txt = txt.replaceAll ( "^enough", "enou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^71^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^enough", "enou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^71^^^^^50^140^[ADD] txt = txt.replaceAll ( "^enough", "enou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^72^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^trough", "trou2f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^73^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^gn", "2n" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^74^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^mb", "m2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^77^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "cq", "2q" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^77^^^^^50^140^[ADD] txt = txt.replaceAll ( "cq", "2q" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^78^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "ci", "si" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^79^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "ce", "se" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^80^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "cy", "sy" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^81^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "tch", "2ch" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^81^^^^^50^140^[ADD] txt = txt.replaceAll ( "tch", "2ch" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^82^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "c", "k" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^83^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "q", "k" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^84^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "x", "k" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^85^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "v", "f" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^86^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "dg", "2g" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^87^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "tio", "sio" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^88^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "tia", "sia" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^88^^^^^50^140^[ADD] txt = txt.replaceAll ( "tia", "sia" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^89^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "d", "t" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^89^90^^^^50^140^[ADD] txt = txt.replaceAll ( "d", "t" ) ; txt = txt.replaceAll ( "ph", "fh" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^90^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "ph", "fh" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^91^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "b", "p" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^92^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "sh", "s2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^93^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "z", "s" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^93^^^^^50^140^[ADD] txt = txt.replaceAll ( "z", "s" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^94^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^[aeiou]", "A" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^95^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "[aeiou]", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^96^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "j", "y" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^97^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^y3", "Y3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^98^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^y", "A" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^99^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "y", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^99^^^^^50^140^[ADD] txt = txt.replaceAll ( "y", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^100^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "3gh3", "3kh3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^101^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "gh", "22" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^102^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "g", "k" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^103^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "s+", "S" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^104^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "t+", "T" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^105^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "p+", "P" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^txt = txt.replaceAll ( "k+", "K" ) ;^105^106^^^^50^140^[ADD] txt = txt.replaceAll ( "p+", "P" ) ; txt = txt.replaceAll ( "k+", "K" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^106^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "k+", "K" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^107^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "f+", "F" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^108^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "m+", "M" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^109^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "n+", "N" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^110^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "w3", "W3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^112^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "wh3", "Wh3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^113^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "w$", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^115^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "w", "2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^115^^^^^50^140^[ADD] txt = txt.replaceAll ( "w", "2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^116^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "^h", "A" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^117^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "h", "2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^118^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "r3", "R3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^119^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "r$", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^119^^^^^50^140^[ADD] txt = txt.replaceAll ( "r$", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^121^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "r", "2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^122^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "l3", "L3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^123^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "l$", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^123^^^^^50^140^[ADD] txt = txt.replaceAll ( "l$", "3" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^125^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "l", "2" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^131^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "2", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^131^132^^^^50^140^[ADD] txt = txt.replaceAll ( "2", "" ) ; txt = txt.replaceAll ( "3$", "A" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^132^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "3$", "A" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[ADD]^^132^133^^^^50^140^[ADD] txt = txt.replaceAll ( "3$", "A" ) ; txt = txt.replaceAll ( "3", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^133^^^^^50^140^[REPLACE] txt = txt.replaceAll ( "3", "" ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^txt = txt.replaceAll ( "^rough", "rou2f" ) ; ;^136^^^^^50^140^[REPLACE] txt = txt + "111111" + "1111";^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^return txt.replaceAll ( 0, 10 ) ;^139^^^^^50^140^[REPLACE] return txt.substring ( 0, 10 ) ;^[METHOD] caverphone [TYPE] String [PARAMETER] String txt [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String txt 
[REPLACE]^if  ( ! ! ( pObject instanceof java.lang.String )  )  {^155^^^^^154^159^[REPLACE] if  ( ! ( pObject instanceof java.lang.String )  )  {^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  Object pObject 
[REPLACE]^return ;^156^^^^^154^159^[REPLACE] throw new EncoderException  (" ")  ;^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  Object pObject 
[ADD]^^156^^^^^154^159^[ADD] throw new EncoderException  (" ")  ;^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  Object pObject 
[REPLACE]^return txt.substring ( 0, 10 ) ;^158^^^^^154^159^[REPLACE] return caverphone (  ( String )  pObject ) ;^[METHOD] encode [TYPE] Object [PARAMETER] Object pObject [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  Object pObject 
[REPLACE]^return txt.substring ( 0, 10 ) ;^168^^^^^167^169^[REPLACE] return caverphone ( pString ) ;^[METHOD] encode [TYPE] String [PARAMETER] String pString [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String pString 
[REPLACE]^return txt.substring ( 0, 10 ) ;^180^^^^^179^181^[REPLACE] return caverphone ( str1 ) .equals ( caverphone ( str2 )  ) ;^[METHOD] isCaverphoneEqual [TYPE] boolean [PARAMETER] String str1 String str2 [CLASS] Caverphone   [TYPE]  boolean false  true  [TYPE]  String str1  str2 
