[REPLACE]^long  length;^48^^^^^^^[REPLACE] int length;^ [CLASS] ByteVector  
[REPLACE]^data = new byte[27];^55^^^^^54^56^[REPLACE] data = new byte[64];^[METHOD] <init> [TYPE] ByteVector() [PARAMETER] [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int length  [TYPE]  boolean false  true 
[ADD]^^55^^^^^54^56^[ADD] data = new byte[64];^[METHOD] <init> [TYPE] ByteVector() [PARAMETER] [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int length  [TYPE]  boolean false  true 
[REPLACE]^data =  new byte[length];^65^^^^^64^66^[REPLACE] data = new byte[initialSize];^[METHOD] <init> [TYPE] ByteVector(int) [PARAMETER] final int initialSize [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^76^^^^^75^83^[REPLACE] int length = this.length;^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^if  ( length - 2 + 0  > data.length - 2 )  {^77^^^^^75^83^[REPLACE] if  ( length + 1 > data.length )  {^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[ADD]^enlarge ( 1 ) ;^77^78^79^^^75^83^[ADD] if  ( length + 1 > data.length )  { enlarge ( 1 ) ; }^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 0 ) ;^78^^^^^75^83^[REPLACE] enlarge ( 1 ) ;^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^80^^^^^75^83^[REPLACE] data[length++] =  ( byte )  b;^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^this.length =  initialSize;^81^^^^^75^83^[REPLACE] this.length = length;^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^return null;^82^^^^^75^83^[REPLACE] return this;^[METHOD] putByte [TYPE] ByteVector [PARAMETER] final int b [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^94^^^^^93^103^[REPLACE] int length = this.length;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^if  ( initialSize (  )  + 2 > data.length (  )  )  {^95^^^^^93^103^[REPLACE] if  ( length + 2 > data.length )  {^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[ADD]^enlarge ( 2 ) ;^95^96^97^^^93^103^[ADD] if  ( length + 2 > data.length )  { enlarge ( 2 ) ; }^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 4 ) ;^96^^^^^93^103^[REPLACE] enlarge ( 2 ) ;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[ADD]^^96^^^^^93^103^[ADD] enlarge ( 2 ) ;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^int length = this.length;^98^^^^^93^103^[REPLACE] byte[] data = this.data;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[ADD]^^98^^^^^93^103^[ADD] byte[] data = this.data;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^99^^^^^93^103^[REPLACE] data[length++] =  ( byte )  b1;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^100^^^^^93^103^[REPLACE] data[length++] =  ( byte )  b2;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^this.length =  initialSize;^101^^^^^93^103^[REPLACE] this.length = length;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^return null;^102^^^^^93^103^[REPLACE] return this;^[METHOD] put11 [TYPE] ByteVector [PARAMETER] final int b1 final int b2 [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^113^^^^^112^122^[REPLACE] int length = this.length;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^^113^^^^^112^122^[ADD] int length = this.length;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^if  ( length - 2 + 2 > data.length - 2 )  {^114^^^^^112^122^[REPLACE] if  ( length + 2 > data.length )  {^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^enlarge ( 2 ) ;^114^115^116^^^112^122^[ADD] if  ( length + 2 > data.length )  { enlarge ( 2 ) ; }^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 1 ) ;^115^^^^^112^122^[REPLACE] enlarge ( 2 ) ;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length = this.length;^117^^^^^112^122^[REPLACE] byte[] data = this.data;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length - 4++] =  ( byte )   ( s >>> 0  ) ;^118^^^^^112^122^[REPLACE] data[length++] =  ( byte )   ( s >>> 8 ) ;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^119^^^^^112^122^[REPLACE] data[length++] =  ( byte )  s;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^this.length =  null;^120^^^^^112^122^[REPLACE] this.length = length;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^return null;^121^^^^^112^122^[REPLACE] return this;^[METHOD] putShort [TYPE] ByteVector [PARAMETER] final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^133^^^^^132^143^[REPLACE] int length = this.length;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^if  ( length - 2 + 0  > data.length - 2 )  {^134^^^^^132^143^[REPLACE] if  ( length + 3 > data.length )  {^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 3L ) ;^135^^^^^132^143^[REPLACE] enlarge ( 3 ) ;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length = this.length;^137^^^^^132^143^[REPLACE] byte[] data = this.data;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^138^^^^^132^143^[REPLACE] data[length++] =  ( byte )  b;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^^138^^^^^132^143^[ADD] data[length++] =  ( byte )  b;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[len++] =  ( byte )   ( charLength >>> 8 ) ; ;^139^^^^^132^143^[REPLACE] data[length++] =  ( byte )   ( s >>> 8 ) ;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  i; ;^140^^^^^132^143^[REPLACE] data[length++] =  ( byte )  s;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^this.length =  initialSize;^141^^^^^132^143^[REPLACE] this.length = length;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^return null;^142^^^^^132^143^[REPLACE] return this;^[METHOD] put12 [TYPE] ByteVector [PARAMETER] final int b final int s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^153^^^^^152^164^[REPLACE] int length = this.length;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^^153^^^^^152^164^[ADD] int length = this.length;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^if  ( length - 5 + 0  > data.length - 5 )  {^154^^^^^152^164^[REPLACE] if  ( length + 4 > data.length )  {^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( length + 2 )  >  ( data.length )  )  {     enlarge ( 2 ) ; }^154^^^^^152^164^[REMOVE] ^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 2 ) ;^155^^^^^152^164^[REPLACE] enlarge ( 4 ) ;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length = this.length;^157^^^^^152^164^[REPLACE] byte[] data = this.data;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )   ( i >>> 16 ) ; ;^158^^^^^152^164^[REPLACE] data[length++] =  ( byte )   ( i >>> 24 ) ;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length] =  ( byte )   ( byteLength >>> 8 ) ; ;^159^^^^^152^164^[REPLACE] data[length++] =  ( byte )   ( i >>> 16 ) ;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^^159^^^^^152^164^[ADD] data[length++] =  ( byte )   ( i >>> 16 ) ;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length /  0.5 ++] =  ( byte )   ( i >>> 8 ) ;^160^^^^^152^164^[REPLACE] data[length++] =  ( byte )   ( i >>> 8 ) ;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^data[length++] =  ( byte )  b2; ;^161^^^^^152^164^[REPLACE] data[length++] =  ( byte )  i;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^this.length =  initialSize;^162^^^^^152^164^[REPLACE] this.length = length;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[ADD]^^162^163^^^^152^164^[ADD] this.length = length; return this;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^return null;^163^^^^^152^164^[REPLACE] return this;^[METHOD] putInt [TYPE] ByteVector [PARAMETER] final int i [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  boolean false  true 
[REPLACE]^int length1 = 2 * data.length;^174^^^^^173^191^[REPLACE] int length = this.length;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^if  ( length *  0.5  + 8 > data.length *  0.5  )  {^175^^^^^173^191^[REPLACE] if  ( length + 8 > data.length )  {^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REMOVE]^if  (  ( length + 2 )  >  ( data.length )  )  {     enlarge ( 2 ) ; }^175^^^^^173^191^[REMOVE] ^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^enlarge ( 5 ) ;^176^^^^^173^191^[REPLACE] enlarge ( 8 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^int length = this.length;^178^^^^^173^191^[REPLACE] byte[] data = this.data;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^int i =  ( int )   ( l  !=  b2 ) ;^179^^^^^173^191^[REPLACE] int i =  ( int )   ( l >>> 32 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length (  ) ++] =  ( byte )   ( i >>> 24 ) ;^180^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 24 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length *  0.5 ++] =  ( byte )   ( i >>> 16 ) ;^181^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 16 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length %  2++] =  ( byte )   ( i >>> 8 ) ;^182^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 8 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length++] =  ( byte )  b2; ;^183^^^^^173^191^[REPLACE] data[length++] =  ( byte )  i;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^i =   ( int )  l;^184^^^^^173^191^[REPLACE] i =  ( int )  l;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length + 3++] =  ( byte )   ( i >>> 0  ) ;^185^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 24 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length] =  ( byte )   ( byteLength >>> 8 ) ; ;^186^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 16 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[len++] =  ( byte )   ( charLength >>> 8 ) ; ;^187^^^^^173^191^[REPLACE] data[length++] =  ( byte )   ( i >>> 8 ) ;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^data[length++] =  ( byte )  b2; ;^188^^^^^173^191^[REPLACE] data[length++] =  ( byte )  i;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[ADD]^^188^^^^^173^191^[ADD] data[length++] =  ( byte )  i;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^this.length =  initialSize;^189^^^^^173^191^[REPLACE] this.length = length;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^return null;^190^^^^^173^191^[REPLACE] return this;^[METHOD] putLong [TYPE] ByteVector [PARAMETER] final long l [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  i  initialSize  length  s  [TYPE]  long l 
[REPLACE]^int length1 = 2 * data.length;^201^^^^^200^256^[REPLACE] int charLength = s.length (  ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length + 4 + 0  + charLength > data.length + 4 )  {^202^^^^^200^256^[REPLACE] if  ( length + 2 + charLength > data.length )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^enlarge ( 2  |  charLength ) ;^203^^^^^200^256^[REPLACE] enlarge ( 2 + charLength ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^int length1 = 2 * data.length;^205^^^^^200^256^[REPLACE] int len = length;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^int length = this.length;^206^^^^^200^256^[REPLACE] byte[] data = this.data;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( charLength  <  7 ) ;^213^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( charLength >>> 8 ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( charLength >>> 8 ) ; ;^214^^^^^200^256^[REPLACE] data[len++] =  ( byte )  charLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' ) {^217^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' || c <= '\177' )  {^223^^^^^217^252^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  !=  '\u07FF' )  {^225^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 / 0;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 6;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2; ;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3; ;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  else {^225^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 0;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length (  )  + 2 + byteLength > data.length (  )  )  {^233^^^^^217^252^[REPLACE] if  ( length + 2 + byteLength > data.length )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^length += len; ;^234^^^^^217^252^[REPLACE] length = len;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data = newData; ;^236^^^^^217^252^[REPLACE] data = this.data;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' ) {^240^^^^^217^252^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  ==  '\u07FF' )  {^242^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^242^243^244^245^^217^252^[ADD] else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0xC0 & c >> 6 & 0x1F ) ;^247^^^^^242^249^[REPLACE] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c & 0x3F ) ;^248^^^^^242^249^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^248^^^^^242^249^[ADD] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0xE0 & c >> 12 & 0xF ) ;^243^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c >> 6 & 0x3F ) ;^244^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c & 0x3F ) ;^245^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0xC0 & c >> 6 & 0x1F ) ;^247^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c & 0x3F ) ;^248^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length++] =  ( byte )  i; ;^241^^^^^217^252^[REPLACE] data[len++] =  ( byte )  c;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  else {^242^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^243^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^243^244^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^244^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^245^^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  >  charLength; ++j )  {^221^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^221^222^223^224^^217^252^[ADD] for  ( int j = i; j < charLength; ++j )  { c = s.charAt ( j ) ; if  ( c >= '\001' && c <= '\177' )  { byteLength++;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' ) {^223^^^^^217^252^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REMOVE]^if  ( c > '\u07ff' )  {     byteLength += 3; }else {     byteLength += 2; }^223^^^^^217^252^[REMOVE] ^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  !=  '\u07FF' )  {^225^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3; ;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3L;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 * 4;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^226^^^^^217^252^[ADD] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 + 3;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^228^^^^^217^252^[ADD] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  >=  '\u07FF' )  {^225^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   byteLength += 3;byteLength += 2;^225^226^227^228^229^217^252^[ADD] else if  ( c > '\u07FF' )  { byteLength += 3; } else { byteLength += 2; }^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 << 4;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^c =  null.charAt ( j ) ;^222^^^^^217^252^[REPLACE] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 0;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 * 3;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  ==  length; ++j )  {^238^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' || c <= '\177' )  {^240^^^^^217^252^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  >=  '\u07FF' )  {^242^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; ;^248^^^^^242^249^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; ;^245^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^243^^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^247^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^247^^^^^242^249^[REPLACE] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^c =  null.charAt ( j ) ;^239^^^^^217^252^[REPLACE] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; ;^248^^^^^217^252^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^248^^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 - 0;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 / 2;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length - 2] =  ( byte )   ( byteLength >>> 8 ) ;^231^^^^^217^252^[REPLACE] data[length] =  ( byte )   ( byteLength >>> 8 ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length /  0.5  + 0 ] =  ( byte )  byteLength;^232^^^^^217^252^[REPLACE] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^232^^^^^217^252^[ADD] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^244^245^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^int byteLength = initialSize;^220^^^^^217^252^[REPLACE] int byteLength = i;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( initialSizent j = i; j < charLength; ++j )  {^221^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( initialSizent j = i; j < charLength; ++j )  {^238^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length++] =  ( byte )  i; ;^218^^^^^200^256^[REPLACE] data[len++] =  ( byte )  c;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' || c <= '\177' )  {^223^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  ==  '\u07FF' )  {^225^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^228^^^^^225^229^[ADD] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 - 4;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^226^^^^^200^256^[ADD] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 6;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 - 3;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  else {^225^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2; ;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length (  )  + 0  + byteLength > data.length (  )  )  {^233^^^^^200^256^[REPLACE] if  ( length + 2 + byteLength > data.length )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^length += len; ;^234^^^^^200^256^[REPLACE] length = len;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data = newData; ;^236^^^^^200^256^[REPLACE] data = this.data;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^236^^^^^200^256^[ADD] data = this.data;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( c >= '\001' || c <= '\177' )  {^240^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  >=  '\u07FF' )  {^242^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^242^243^244^245^^200^256^[ADD] else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0xE0 & c >> 12 & 0xF ) ;^243^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^243^244^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c >> 6 & 0x3F ) ;^244^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c & 0x3F ) ;^245^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^245^^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^243^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0xC0 & c >> 6 & 0x1F ) ;^247^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 & c & 0x3F ) ;^248^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length++] =  ( byte )  i; ;^241^^^^^200^256^[REPLACE] data[len++] =  ( byte )  c;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  ==  '\u07FF' )  {^242^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^242^243^244^245^^200^256^[ADD] else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( initialSizent i = 0 ; i  !=  length; ++i )  {^215^^^^^200^256^[REPLACE] for  ( int i = 0; i < charLength; ++i )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  (  c <= '\177' )  {^217^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^223^224^225^226^^217^252^[ADD] if  ( c >= '\001' && c <= '\177' )  { byteLength++; } else if  ( c > '\u07FF' )  { byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 4;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 - 0;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 << 1;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length /  0  + 0  + byteLength > data.length /  0  )  {^233^^^^^217^252^[REPLACE] if  ( length + 2 + byteLength > data.length )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^240^241^242^243^244^217^252^[ADD] if  ( c >= '\001' && c <= '\177' )  { data[len++] =  ( byte )  c; } else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  <  '\u07FF' )  {^242^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^242^243^244^245^^217^252^[ADD] else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^244^245^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^244^^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  !=  length; ++j )  {^221^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2L;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 / 4;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 / 1;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2L;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 - 3;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 1;^226^^^^^217^252^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 0;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  >=  charLength; ++j )  {^238^^^^^217^252^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  <  '\u07FF' )  {^242^^^^^217^252^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^247^^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^241^^^^^217^252^[ADD] data[len++] =  ( byte )  c;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^247^248^^^^217^252^[ADD] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3;^228^^^^^217^252^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length (  ) ] =  ( byte )   ( byteLength >>> 8 ) ;^231^^^^^217^252^[REPLACE] data[length] =  ( byte )   ( byteLength >>> 8 ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^231^232^^^^217^252^[ADD] data[length] =  ( byte )   ( byteLength >>> 8 ) ; data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length (  )  + 1] =  ( byte )  byteLength;^232^^^^^217^252^[REPLACE] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^239^^^^^217^252^[ADD] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^byteLength++;byteLength += 3;^223^224^225^226^^200^256^[ADD] if  ( c >= '\001' && c <= '\177' )  { byteLength++; } else if  ( c > '\u07FF' )  { byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^} else if  ( c  !=  '\u07FF' )  {^225^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^}   byteLength += 3;byteLength += 2;^225^226^227^228^229^200^256^[ADD] else if  ( c > '\u07FF' )  { byteLength += 3; } else { byteLength += 2; }^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 >> 1;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 4;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 * 4;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length (  )  + 2 + byteLength > data.length (  )  )  {^233^^^^^200^256^[REPLACE] if  ( length + 2 + byteLength > data.length )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^length = len;enlarge ( 2 + byteLength ) ;data = this.data;^233^234^235^236^237^200^256^[ADD] if  ( length + 2 + byteLength > data.length )  { length = len; enlarge ( 2 + byteLength ) ; data = this.data; }^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  ==  '\u07FF' )  {^242^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REMOVE]^if  (  ( c >= '' )  &&  ( c <= '' )  )  {     data[ ( len++ ) ] =  (  ( byte )   ( c )  ) ; }else     if  ( c > '\u07ff' )  {         data[ ( len++ ) ] =  (  ( byte )   ( 224 |  (  ( c >> 12 )  & 15 )  )  ) ;         data[ ( len++ ) ] =  (  ( byte )   ( 128 |  (  ( c >> 6 )  & 63 )  )  ) ;         data[ ( len++ ) ] =  (  ( byte )   ( 128 |  ( c & 63 )  )  ) ;     }else {         data[ ( len++ ) ] =  (  ( byte )   ( 192 |  (  ( c >> 6 )  & 31 )  )  ) ;         data[ ( len++ ) ] =  (  ( byte )   ( 128 |  ( c & 63 )  )  ) ;     }^242^^^^^200^256^[REMOVE] ^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^244^^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  else {^242^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  ==  charLength; ++j )  {^221^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^221^222^223^224^^200^256^[ADD] for  ( int j = i; j < charLength; ++j )  { c = s.charAt ( j ) ; if  ( c >= '\001' && c <= '\177' )  { byteLength++;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  (  c <= '\177' )  {^223^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  !=  '\u07FF' )  {^225^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3L;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 2 * 1;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 - 1;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^c =  null.charAt ( j ) ;^222^^^^^200^256^[REPLACE] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 4;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^228^^^^^200^256^[ADD] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  <=  charLength; ++j )  {^238^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  (  c <= '\177' )  {^240^^^^^200^256^[REPLACE] if  ( c >= '\001' && c <= '\177' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^240^241^242^243^244^200^256^[ADD] if  ( c >= '\001' && c <= '\177' )  { data[len++] =  ( byte )  c; } else if  ( c > '\u07FF' )  { data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ; ;^244^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^243^^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^}  if  ( c  <=  '\u07FF' )  {^242^^^^^200^256^[REPLACE] } else if  ( c > '\u07FF' )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^243^244^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0xE0 | c >> 12 & 0xF ) ; data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^244^245^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^c =  null.charAt ( j ) ;^239^^^^^200^256^[REPLACE] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^239^^^^^200^256^[ADD] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^244^245^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( 0x80 | c >> 6 & 0x3F ) ; ;^248^^^^^200^256^[REPLACE] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3 + 1;^226^^^^^200^256^[REPLACE] byteLength += 3;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 1;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[len++] =  ( byte )   ( charLength >>> 8 ) ; ;^231^^^^^200^256^[REPLACE] data[length] =  ( byte )   ( byteLength >>> 8 ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length++] =  ( byte )  b2; ;^232^^^^^200^256^[REPLACE] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^232^^^^^200^256^[ADD] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^234^^^^^200^256^[ADD] length = len;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^248^^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j < charLength; ++j )  { c = s.charAt ( j ) ;^216^^^^^200^256^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^int byteLength = initialSize;^220^^^^^200^256^[REPLACE] int byteLength = i;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^220^^^^^200^256^[ADD] int byteLength = i;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( initialSizent j = i; j < charLength; ++j )  {^221^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( initialSizent j = i; j < charLength; ++j )  {^238^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  !=  length; ++j )  {^221^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 1;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 3; ;^228^^^^^200^256^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^byteLength += 4;^228^^^^^225^229^[REPLACE] byteLength += 2;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^222^^^^^200^256^[ADD] c = s.charAt ( j ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int j = i; j  >=  charLength; ++j )  {^238^^^^^200^256^[REPLACE] for  ( int j = i; j < charLength; ++j )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^247^^^^^242^249^[ADD] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length *  2] =  ( byte )   ( byteLength >>> 8 ) ;^231^^^^^200^256^[REPLACE] data[length] =  ( byte )   ( byteLength >>> 8 ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^data[length - 0  + 0 ] =  ( byte )  byteLength;^232^^^^^200^256^[REPLACE] data[length + 1] =  ( byte )  byteLength;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^^241^^^^^200^256^[ADD] data[len++] =  ( byte )  c;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[ADD]^data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^247^248^^^^200^256^[ADD] data[len++] =  ( byte )   ( 0xC0 | c >> 6 & 0x1F ) ; data[len++] =  ( byte )   ( 0x80 | c & 0x3F ) ;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^for  ( int i = 2; i < charLength; ++i )  {^215^^^^^200^256^[REPLACE] for  ( int i = 0; i < charLength; ++i )  {^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^length += len; ;^254^^^^^200^256^[REPLACE] length = len;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^return null;^255^^^^^200^256^[REPLACE] return this;^[METHOD] putUTF8 [TYPE] ByteVector [PARAMETER] String s [CLASS] ByteVector   [TYPE]  byte[] data  [TYPE]  char c  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  s 
[REPLACE]^if  ( length - 4 + len > data.length - 4 )  {^270^^^^^268^278^[REPLACE] if  ( length + len > data.length )  {^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( length ) ;^271^^^^^268^278^[REPLACE] enlarge ( len ) ;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[ADD]^^271^^^^^268^278^[ADD] enlarge ( len ) ;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^if  ( b == null )  {^273^^^^^268^278^[REPLACE] if  ( b != null )  {^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[ADD]^^273^274^275^^^268^278^[ADD] if  ( b != null )  { System.arraycopy ( b, off, data, length, len ) ; }^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^enlarge ( 2 + charLength ) ;^274^^^^^268^278^[REPLACE] System.arraycopy ( b, off, data, length, len ) ;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[ADD]^^274^^^^^268^278^[ADD] System.arraycopy ( b, off, data, length, len ) ;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^length = len; ;^276^^^^^268^278^[REPLACE] length += len;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^return null;^277^^^^^268^278^[REPLACE] return this;^[METHOD] putByteArray [TYPE] ByteVector [PARAMETER] final byte[] b final int off final int len [CLASS] ByteVector   [TYPE]  byte[] b  data  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  off  s  [TYPE]  boolean false  true 
[REPLACE]^int length %  0.5 1 = 0  * data.length %  0.5 ;^287^^^^^286^292^[REPLACE] int length1 = 2 * data.length;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[REPLACE]^int length - 12 = length - 1 + size;^288^^^^^286^292^[REPLACE] int length2 = length + size;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[ADD]^^288^^^^^286^292^[ADD] int length2 = length + size;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[REPLACE]^byte[] newData = new byte[length + 11 > length + 12 ? length + 11 : length + 12];^289^^^^^286^292^[REPLACE] byte[] newData = new byte[length1 > length2 ? length1 : length2];^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[ADD]^^289^^^^^286^292^[ADD] byte[] newData = new byte[length1 > length2 ? length1 : length2];^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[REPLACE]^System.arraycopy ( data, 0 , data, 0 , length ) ;^290^^^^^286^292^[REPLACE] System.arraycopy ( data, 0, newData, 0, length ) ;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[ADD]^^290^^^^^286^292^[ADD] System.arraycopy ( data, 0, newData, 0, length ) ;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
[REPLACE]^data = this.data; ;^291^^^^^286^292^[REPLACE] data = newData;^[METHOD] enlarge [TYPE] void [PARAMETER] final int size [CLASS] ByteVector   [TYPE]  byte[] b  data  newData  [TYPE]  int b  b1  b2  byteLength  charLength  i  initialSize  j  len  length  length1  length2  off  s  size  [TYPE]  boolean false  true 
