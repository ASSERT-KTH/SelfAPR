[REPLACE]^cv.visitEnd (  ) ;^254^^^^^253^255^[REPLACE] super ( cv ) ;^[METHOD] <init> [TYPE] ClassVisitor) [PARAMETER] ClassVisitor cv [CLASS] CheckClassAdapter   [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  ClassVisitor cv 
[REPLACE]^if  ( args.length (  )  != 1 )  {^151^^^^^150^165^[REPLACE] if  ( args.length != 1 )  {^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^157^^^^^150^165^[REPLACE] ClassReader cr;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^if  ( args[3].endsWith ( ".class" )  )  {^158^^^^^150^165^[REPLACE] if  ( args[0].endsWith ( ".class" )  )  {^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^cr = new ClassReader ( args[0 - 2] ) ;^161^^^^^150^165^[REPLACE] cr = new ClassReader ( args[0] ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[ADD]^^161^^^^^150^165^[ADD] cr = new ClassReader ( args[0] ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^cr = new ClassReader ( new FileInputStream ( args[0 % 0] )  ) ;^159^^^^^150^165^[REPLACE] cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^cr = new ClassReader ( new FileInputStream ( args[4] )  ) ;^159^^^^^150^165^[REPLACE] cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^cr = new ClassReader ( args[0 - 1] ) ;^161^^^^^150^165^[REPLACE] cr = new ClassReader ( args[0] ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^verify ( cr, true, new PrintWriter ( System.err )  ) ;^164^^^^^150^165^[REPLACE] verify ( cr, false, new PrintWriter ( System.err )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] CheckClassAdapter   [TYPE]  ClassReader cr  [TYPE]  boolean end  false  outer  source  start  true  [TYPE]  String[] args 
[REPLACE]^TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^181^^^^^180^237^[REPLACE] ClassNode cn = new ClassNode (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^181^182^^^^180^237^[ADD] ClassNode cn = new ClassNode (  ) ; cr.accept ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^cr.ClassReader ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^182^^^^^180^237^[REPLACE] cr.accept ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Type syperType  =  null ;^184^185^186^^^180^237^[REPLACE] Type syperType = cn.superName == null ? null : Type.getObjectType ( cn.superName ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^187^^^^^180^237^[REPLACE] List methods = cn.methods;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^187^^^^^180^237^[ADD] List methods = cn.methods;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^while  ( s.length (  )  + 1 < method.maxStack + method.maxLocals + 1 )  {^224^^^^^180^237^[REPLACE] while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( '?' ) ;^225^^^^^180^237^[REPLACE] s.append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^225^^^^^180^237^[ADD] s.append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( !source )  {^195^^^^^180^237^[REPLACE] if  ( !dump )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( f != null )  {^211^^^^^180^237^[REPLACE] if  ( f == null )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  >  f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^215^216^^^^211^223^[ADD] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k ) .accept (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k )  .append ( null )   )  ) .append ( ' ' ) ;^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  ==  f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k ) .accept (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^220^221^^^^211^223^[ADD] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k )  .append ( this )   )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f .getStackSize (  )  .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 1; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^214^215^216^217^^211^223^[ADD] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 - 4; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( ' ' ) ;^212^^^^^180^237^[REPLACE] s.append ( '?' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int i = 0; i < methods.size (  )  *  2; ++i )  {^188^^^^^180^237^[REPLACE] for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^188^189^190^191^192^180^237^[ADD] for  ( int i = 0; i < methods.size (  ) ; ++i )  { MethodNode method =  ( MethodNode )  methods.get ( i ) ; Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^while  ( s.length (  )  + 5 < method.maxStack + method.maxLocals + 1 )  {^224^^^^^180^237^[REPLACE] while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^s.append ( '?' ) ;^211^212^213^214^215^180^237^[ADD] if  ( f == null )  { s.append ( '?' ) ; } else { for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  )^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.accept ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  <=  f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 3; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 3; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )  ;^212^^^^^180^237^[REPLACE] s.append ( '?' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0 ; j < method.instructions.size (  )  - 4; ++j )  {^206^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^206^207^^209^210^180^237^[ADD] for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  { method.instructions.get ( j ) .accept ( mv ) ; StringBuffer s = new StringBuffer (  ) ; Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^while  ( s.length (  )  *  0.5  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^180^237^[REPLACE] while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^224^225^^^^180^237^[ADD] while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  { s.append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )  ;^225^^^^^180^237^[REPLACE] s.append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  !=  f .getLocals (  )   {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f .getLocals (  )  .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )   )  )^215^216^^^^211^223^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  !=  f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k )  .append ( 0 )   )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 >> 3; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 / 3; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0L; k  ==  f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )   )  )^215^216^^^^180^237^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^180^237^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k ) .accept (  )  )  ) .append ( ' ' ) ;^215^216^^^^180^237^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^215^216^^^^180^237^[ADD] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  ==  f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k ) .accept (  )  )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k )  .append ( null )   )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^209^^^^^180^237^[REPLACE] StringBuffer s = new StringBuffer (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^209^210^^^^180^237^[ADD] StringBuffer s = new StringBuffer (  ) ; Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Frame[] frames = a.getFrames (  ) ;^210^^^^^180^237^[REPLACE] Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^210^^^^^180^237^[ADD] Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 2; k < f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 + 2; k < f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 * 2; k  >=  f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^214^215^216^217^^180^237^[ADD] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 4; k  ==  f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.accept ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f .getStackSize (  )  .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^220^221^^^^180^237^[ADD] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0; j < method.tryCatchBlocks.size (  )  *  0.5 ; ++j )  {^230^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^230^231^232^233^^180^237^[ADD] for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  { (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ; pw.print ( " " + mv.buf ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  { (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^231^^^^^180^237^[REPLACE] (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REMOVE]^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  { (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^231^^^^^180^237^[REMOVE] ^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^(  ( TryCatchBlockNode )  method.tryCatchBlocks.size ( j )  ) .accept ( mv ) ;^231^^^^^180^237^[REPLACE] (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^pw.print ( null + mv.buf ) ;^232^^^^^180^237^[REPLACE] pw.print ( " " + mv.buf ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^a.analyze ( cn.name, method ) ;continue;^193^194^195^196^197^180^237^[ADD] try { a.analyze ( cn.name, method ) ; if  ( !dump )  { continue; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^MethodNode method =  ( MethodNode )  methods.size ( i ) ;^189^^^^^180^237^[REPLACE] MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^189^^^^^180^237^[ADD] MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, true )  ) ;^190^191^192^^^180^237^[REPLACE] Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^201^^^^^180^237^[REPLACE] Frame[] frames = a.getFrames (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^StringBuffer s = new StringBuffer (  ) ;^203^^^^^180^237^[REPLACE] TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0 ; j < method.instructions.size (  ) ; ++j )  {^206^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0L; k < f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 3; k < f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^219^220^221^222^^180^237^[ADD] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  { s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0 ; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0 ; j < method.instructions.size (  )  + 1; ++j )  {^206^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^while  ( s.append (  )  %  0.5  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^180^237^[REPLACE] while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( f != false )  {^211^^^^^180^237^[REPLACE] if  ( f == null )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  ==  f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^219^220^221^222^^211^223^[ADD] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  { s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k )  .append ( null )   )  ) .append ( ' ' ) ;^220^221^^^^211^223^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 >> 2; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^212^^^^^180^237^[ADD] s.append ( '?' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 4; k  !=  f .getLocal ( k )  ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f .getLocals (  )  .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^180^237^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getLocal ( k )  .append ( null )   )  ) .append ( ' ' ) ;^215^216^^^^180^237^[REPLACE] s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  <=  f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )   )  )^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^209^^^^^180^237^[ADD] StringBuffer s = new StringBuffer (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 3; k < f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 2; k < f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  >=  f .getLocal ( k )  ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0; k  >=  f.getStack (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s.append ( getShortName ( f.getStack ( k )  .append ( this )   )  ) .append ( ' ' ) ;^220^221^^^^180^237^[REPLACE] s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int j = 0; j < method.tryCatchBlocks.length (  ) ; ++j )  {^230^^^^^180^237^[REPLACE] for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^(  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  )  .accept ( 0 )  ;^231^^^^^180^237^[REPLACE] (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^231^232^^^^180^237^[ADD] (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ; pw.print ( " " + mv.buf ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^pw.println ( this + mv.buf ) ;^232^^^^^180^237^[REPLACE] pw.print ( " " + mv.buf ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int i = 0 ; i < methods.size (  ) ; ++i )  {^188^^^^^180^237^[REPLACE] for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^203^^^^^180^237^[ADD] TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 1; k < f.getLocals (  ) ; ++k )  {^214^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 0 / 2; k < f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^pw.println (  ) ;^236^^^^^180^237^[REPLACE] pw.flush (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int n = name.substring ( '/' ) ;^240^^^^^239^246^[REPLACE] int n = name.lastIndexOf ( '/' ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] String name [CLASS] CheckClassAdapter   [TYPE]  int k  n  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name 
[REPLACE]^int k = name .StringBuffer (  )  ;^241^^^^^239^246^[REPLACE] int k = name.length (  ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] String name [CLASS] CheckClassAdapter   [TYPE]  int k  n  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name 
[ADD]^^241^^^^^239^246^[ADD] int k = name.length (  ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] String name [CLASS] CheckClassAdapter   [TYPE]  int k  n  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name 
[REPLACE]^if  ( name.charAt ( k - 1 )   !=  ';' )  {^242^^^^^239^246^[REPLACE] if  ( name.charAt ( k - 1 )  == ';' )  {^[METHOD] getShortName [TYPE] String [PARAMETER] String name [CLASS] CheckClassAdapter   [TYPE]  int k  n  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name 
[REPLACE]^return n == -1 % 4 ? name : name .substring ( k )  ;^245^^^^^239^246^[REPLACE] return n == -1 ? name : name.substring ( n + 1, k ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] String name [CLASS] CheckClassAdapter   [TYPE]  int k  n  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name 
[REPLACE]^if  ( source )  {^269^^^^^268^304^[REPLACE] if  ( start )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^270^^^^^268^304^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^270^^^^^268^304^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^270^^^^^268^304^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^start = false;^272^^^^^268^304^[REPLACE] start = true;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^e.printStackTrace ( pw ) ;^273^^^^^268^304^[REPLACE] checkState (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  ||  Opcodes.ACC_FINAL  ||  Opcodes.ACC_SUPER  ||  Opcodes.ACC_INTERFACE  ||  Opcodes.ACC_ABSTRACT  ||  Opcodes.ACC_SYNTHETIC  ||  Opcodes.ACC_ANNOTATION  ||  Opcodes.ACC_ENUM^274^275^276^277^^268^304^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^274^275^276^^^268^304^[ADD] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  (  !name.endsWith ( "package-info" )  )  {^279^^^^^268^304^[REPLACE] if  ( name == null || !name.endsWith ( "package-info" )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkInternalName ( superName, "class name" ) ;^280^^^^^268^304^[REPLACE] CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( !"java/lang/Object".equals ( superName )  )  {^282^^^^^268^304^[REPLACE] if  ( "java/lang/Object".equals ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkInternalName ( signature, "super class name" ) ;^287^^^^^282^288^[REPLACE] CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^287^^^^^282^288^[ADD] CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( signature == null )  {^283^^^^^268^304^[REPLACE] if  ( superName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^284^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( signature == this )  {^283^^^^^268^304^[REPLACE] if  ( superName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^283^284^285^^^268^304^[ADD] if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^284^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^284^^^^^268^304^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( superName == this  )  {^289^^^^^268^304^[REPLACE] if  ( signature != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^289^290^291^^^268^304^[ADD] if  ( signature != null )  { CheckMethodAdapter.checkClassSignature ( signature ) ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkClassSignature ( superName ) ;^290^^^^^268^304^[REPLACE] CheckMethodAdapter.checkClassSignature ( signature ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  (  ( access & Opcodes.ACC_INTERFACE )   ==  0 )  {^292^^^^^268^304^[REPLACE] if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^292^293^294^295^^268^304^[ADD] if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( !"java/lang/Object".equals ( signature )  )  {^293^^^^^268^304^[REPLACE] if  ( !"java/lang/Object".equals ( superName )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^293^294^295^^^268^304^[ADD] if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^294^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^294^^^^^268^304^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^294^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( interfaces == true )  {^297^^^^^268^304^[REPLACE] if  ( interfaces != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^for  ( int i = 0; i < interfaces.length %  0.5 ; ++i )  {^298^^^^^268^304^[REPLACE] for  ( int i = 0; i < interfaces.length; ++i )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkInternalName ( versionnterfaces[i],superName + i ) ;^299^300^^^^268^304^[REPLACE] CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^for  ( int i = 0 ; i < interfaces.length; ++i )  {^298^^^^^268^304^[REPLACE] for  ( int i = 0; i < interfaces.length; ++i )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^for  ( versionnt i = 0; i < interfaces.length + 1; ++i )  {^298^^^^^268^304^[REPLACE] for  ( int i = 0; i < interfaces.length; ++i )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkInternalName ( interfaces[i],signature + i ) ;^299^300^^^^268^304^[REPLACE] CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^cv.visit ( i, access, name, signature, superName, interfaces ) ;^303^^^^^268^304^[REPLACE] cv.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^e.printStackTrace ( pw ) ;^307^^^^^306^313^[REPLACE] checkState (  ) ;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^if  ( outer )  {^308^^^^^306^313^[REPLACE] if  ( source )  {^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[ADD]^^308^309^310^^^306^313^[ADD] if  ( source )  { throw new IllegalStateException  (" ")  ; }^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^return ;^309^^^^^306^313^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^309^^^^^306^313^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^source = false;^311^^^^^306^313^[REPLACE] source = true;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^cv.visitAnnotation ( file, debug ) ;^312^^^^^306^313^[REPLACE] cv.visitSource ( file, debug ) ;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String debug  file 
[REPLACE]^e.printStackTrace ( pw ) ;^320^^^^^315^332^[REPLACE] checkState (  ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^^320^^^^^315^332^[ADD] checkState (  ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if  ( source )  {^321^^^^^315^332^[REPLACE] if  ( outer )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^return ;^322^^^^^315^332^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^outer = false;^324^^^^^315^332^[REPLACE] outer = true;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if  ( name != null )  {^325^^^^^315^332^[REPLACE] if  ( owner == null )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^^325^326^327^^^315^332^[ADD] if  ( owner == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^return ;^326^^^^^315^332^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^326^^^^^315^332^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if  ( desc == this  )  {^328^^^^^315^332^[REPLACE] if  ( desc != null )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^CheckMethodAdapter.checkMethodDesc ( desc ) ;^328^329^330^^^315^332^[ADD] if  ( desc != null )  { CheckMethodAdapter.checkMethodDesc ( desc ) ; }^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^CheckMethodAdapter .checkMethodIdentifier ( owner , desc )  ;^329^^^^^315^332^[REPLACE] CheckMethodAdapter.checkMethodDesc ( desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^cv.visitEnd (  ) ;^331^^^^^315^332^[REPLACE] cv.visitOuterClass ( owner, name, desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^e.printStackTrace ( pw ) ;^340^^^^^334^354^[REPLACE] checkState (  ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^CheckMethodAdapter .checkIdentifier ( innerName , innerName )  ;^341^^^^^334^354^[REPLACE] CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^if  ( outerName == null )  {^342^^^^^334^354^[REPLACE] if  ( outerName != null )  {^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[ADD]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^342^343^344^^^334^354^[ADD] if  ( outerName != null )  { CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ; }^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( name, "outer class name" ) ;^343^^^^^334^354^[REPLACE] CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[ADD]^^343^^^^^334^354^[ADD] CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^if  ( outerName == null )  {^345^^^^^334^354^[REPLACE] if  ( innerName != null )  {^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( outerName, "inner class name" ) ;^346^^^^^334^354^[REPLACE] CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[ADD]^^346^347^^^^334^354^[ADD] CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ; }^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  ==  Opcodes.ACC_PRIVATE  ==  Opcodes.ACC_PROTECTED  ==  Opcodes.ACC_STATIC  ==  Opcodes.ACC_FINAL  ==  Opcodes.ACC_INTERFACE  ==  Opcodes.ACC_ABSTRACT  ==  Opcodes.ACC_SYNTHETIC^348^349^350^351^^334^354^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^cv .visitOuterClass ( outerName , outerName , outerName )  ;^353^^^^^334^354^[REPLACE] cv.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^e.printStackTrace ( pw ) ;^363^^^^^356^379^[REPLACE] checkState (  ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  |  Opcodes.ACC_PRIVATE  |  Opcodes.ACC_PROTECTED  |  Opcodes.ACC_STATIC  |  Opcodes.ACC_FINAL  |  Opcodes.ACC_VOLATILE  |  Opcodes.ACC_TRANSIENT  |  Opcodes.ACC_SYNTHETIC^364^365^366^367^^356^379^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( signature, "field name" ) ;^369^^^^^356^379^[REPLACE] CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkDesc ( desc, true ) ;^370^^^^^356^379^[REPLACE] CheckMethodAdapter.checkDesc ( desc, false ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^if  ( signature == null )  {^371^^^^^356^379^[REPLACE] if  ( signature != null )  {^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter .checkMethodSignature ( name )  ;^372^^^^^356^379^[REPLACE] CheckMethodAdapter.checkFieldSignature ( signature ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^if  ( value == null )  {^374^^^^^356^379^[REPLACE] if  ( value != null )  {^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^value   ;^375^^^^^356^379^[REPLACE] CheckMethodAdapter.checkConstant ( value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^FieldVisitor av = cv.visitMethod ( access, name, desc, signature, value ) ;^377^^^^^356^379^[REPLACE] FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^return n == -1 ? name : name.substring ( n + 1, k ) ;^378^^^^^356^379^[REPLACE] return new CheckFieldAdapter ( av ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^e.printStackTrace ( pw ) ;^388^^^^^387^411^[REPLACE] checkState (  ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^388^^^^^387^411^[ADD] checkState (  ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  <  Opcodes.ACC_PRIVATE  <  Opcodes.ACC_PROTECTED  <  Opcodes.ACC_STATIC  <  Opcodes.ACC_FINAL  <  Opcodes.ACC_SYNCHRONIZED  <  Opcodes.ACC_BRIDGE  <  Opcodes.ACC_VARARGS  <  Opcodes.ACC_NATIVE^389^390^391^392^^387^411^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter .checkIdentifier ( desc , name )  ;^395^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter .checkMethodIdentifier ( name , signature )  ;^396^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodDesc ( desc ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^if  ( name == true )  {^397^^^^^387^411^[REPLACE] if  ( signature != null )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter .checkFieldSignature ( signature )  ;^398^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodSignature ( signature ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^398^^^^^387^411^[ADD] CheckMethodAdapter.checkMethodSignature ( signature ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^if  ( exceptions == null )  {^400^^^^^387^411^[REPLACE] if  ( exceptions != null )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^400^401^402^403^404^387^411^[ADD] if  ( exceptions != null )  { for  ( int i = 0; i < exceptions.length; ++i )  { CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ; }^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^for  ( int i = 0; i < exceptions.length (  ) ; ++i )  {^401^^^^^387^411^[REPLACE] for  ( int i = 0; i < exceptions.length; ++i )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^401^402^403^404^^387^411^[ADD] for  ( int i = 0; i < exceptions.length; ++i )  { CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ; }^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter.checkInternalName ( exceptions[i],signature + i ) ;^402^403^^^^387^411^[REPLACE] CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^for  ( int i = 0 ; i < exceptions.length; ++i )  {^401^^^^^387^411^[REPLACE] for  ( int i = 0; i < exceptions.length; ++i )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^for  ( int i = 0; i < exceptions.length /  2; ++i )  {^401^^^^^387^411^[REPLACE] for  ( int i = 0; i < exceptions.length; ++i )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( exceptions[i], "exception name atsignaturendex " +signature ) ;^402^403^^^^387^411^[REPLACE] CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^402^403^^^^387^411^[ADD] CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^return new CheckMethodAdapter ( cv.visitField ( access, name, desc, signature,^406^407^408^409^^387^411^[REPLACE] return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^e.printStackTrace ( pw ) ;^417^^^^^413^420^[REPLACE] checkState (  ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String desc final boolean visible [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible  [TYPE]  String desc 
[REPLACE]^CheckMethodAdapter.checkDesc ( desc, true ) ;^418^^^^^413^420^[REPLACE] CheckMethodAdapter.checkDesc ( desc, false ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String desc final boolean visible [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible  [TYPE]  String desc 
[REPLACE]^return new CheckAnnotationAdapter ( cv.visitSource ( desc, visible )  ) ;^419^^^^^413^420^[REPLACE] return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String desc final boolean visible [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible  [TYPE]  String desc 
[REPLACE]^e.printStackTrace ( pw ) ;^423^^^^^422^428^[REPLACE] checkState (  ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( attr != null )  {^424^^^^^422^428^[REPLACE] if  ( attr == null )  {^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^424^425^426^^^422^428^[ADD] if  ( attr == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^425^^^^^422^428^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^425^^^^^422^428^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^cv .visitSource ( null , null )  ;^427^^^^^422^428^[REPLACE] cv.visitAttribute ( attr ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] CheckClassAdapter   [TYPE]  Attribute attr  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^e.printStackTrace ( pw ) ;^431^^^^^430^434^[REPLACE] checkState (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^end = false;^432^^^^^430^434^[REPLACE] end = true;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^e.printStackTrace ( pw ) ;^433^^^^^430^434^[REPLACE] cv.visitEnd (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( outer )  {^445^^^^^444^451^[REPLACE] if  ( !start )  {^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^446^^^^^444^451^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^446^^^^^444^451^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( outer )  {^448^^^^^444^451^[REPLACE] if  ( end )  {^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^448^449^450^^^444^451^[ADD] if  ( end )  { throw new IllegalStateException  (" ")  ; }^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^449^^^^^444^451^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^449^^^^^444^451^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] checkState [TYPE] void [PARAMETER] [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  (  ( access & ~possibleAccess )   ==  2 )  {^462^^^^^461^479^[REPLACE] if  (  ( access & ~possibleAccess )  != 0 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^462^463^464^465^^461^479^[ADD] if  (  ( access & ~possibleAccess )  != 0 )  { throw new IllegalArgumentException ( "Invalid access flags: " + access ) ; }^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; ;^463^464^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^463^464^^^^461^479^[ADD] throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^463^464^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pub  =  0 ;^466^^^^^461^479^[REPLACE] int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pri  =  0L ;^467^^^^^461^479^[REPLACE] int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pro  =  3 ;^468^^^^^461^479^[REPLACE] int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( pub + pri + pro  !=  1 )  {^469^^^^^461^479^[REPLACE] if  ( pub + pri + pro > 1 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; ;^470^471^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^470^471^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int fin  =  0 + 3 ;^473^^^^^461^479^[REPLACE] int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^473^^^^^461^479^[ADD] int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int abs  =  1 ;^474^^^^^461^479^[REPLACE] int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( fin + abs  !=  1 )  {^475^^^^^461^479^[REPLACE] if  ( fin + abs > 1 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^475^476^477^478^^461^479^[ADD] if  ( fin + abs > 1 )  { throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; }^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^476^477^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^476^477^^^^461^479^[ADD] throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ; ;^476^477^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
