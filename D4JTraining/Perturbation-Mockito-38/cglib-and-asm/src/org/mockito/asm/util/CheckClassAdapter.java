[REPLACE]^int k = name.length (  )  ;^181^^^^^180^237^[REPLACE] ClassNode cn = new ClassNode (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^cr .ClassReader ( null )  ;^182^^^^^180^237^[REPLACE] cr.accept ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Type syperType = cn.superName != null ? null : Type.getObjectType ( cn.superName ) ;^184^185^186^^^180^237^[REPLACE] Type syperType = cn.superName == null ? null : Type.getObjectType ( cn.superName ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int k = name.length (  )  ;^187^^^^^180^237^[REPLACE] List methods = cn.methods;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( !source )  {^195^^^^^180^237^[REPLACE] if  ( !dump )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^195^196^197^^^180^237^[ADD] if  ( !dump )  { continue; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( f != null )  {^211^^^^^180^237^[REPLACE] if  ( f == null )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int j = 0  ;^214^^^^^211^223^[REPLACE] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^219^220^221^222^^211^223^[ADD] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  { s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^s .StringBuffer (  )  ;^212^^^^^180^237^[REPLACE] s.append ( '?' ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^a.analyze ( cn.name, method ) ;continue;^193^194^195^196^197^180^237^[ADD] try { a.analyze ( cn.name, method ) ; if  ( !dump )  { continue; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int j = 0  ;^188^^^^^180^237^[REPLACE] for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^189^^^^^180^237^[ADD] MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, true )  ) ;^190^191^192^^^180^237^[REPLACE] Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^Frame f = frames[j]  ;^201^^^^^180^237^[REPLACE] Frame[] frames = a.getFrames (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int k = name.length (  )  ;^203^^^^^180^237^[REPLACE] TraceMethodVisitor mv = new TraceMethodVisitor (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^206^207^^209^210^180^237^[ADD] for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  { method.instructions.get ( j ) .accept ( mv ) ; StringBuffer s = new StringBuffer (  ) ; Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^int k = name.length (  )  ;^209^^^^^180^237^[REPLACE] StringBuffer s = new StringBuffer (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^210^^^^^180^237^[ADD] Frame f = frames[j];^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^214^215^216^217^^180^237^[ADD] for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^for  ( int k = 4; k < f.getStackSize (  ) ; ++k )  {^219^^^^^180^237^[REPLACE] for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^230^231^232^233^^180^237^[ADD] for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  { (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ; pw.print ( " " + mv.buf ) ; }^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[ADD]^^198^199^^^^180^237^[ADD] catch  ( Exception e )  { e.printStackTrace ( pw ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^pw.println (  ) ;^236^^^^^180^237^[REPLACE] pw.flush (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] ClassReader cr final boolean dump PrintWriter pw [CLASS] CheckClassAdapter   [TYPE]  ClassNode cn  [TYPE]  Frame f  [TYPE]  Frame[] frames  [TYPE]  Analyzer a  [TYPE]  TraceMethodVisitor mv  [TYPE]  int i  j  k  [TYPE]  Exception e  [TYPE]  Type syperType  [TYPE]  StringBuffer s  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  MethodNode method  [TYPE]  ClassReader cr  [TYPE]  List methods  [TYPE]  PrintWriter pw 
[REPLACE]^if   (  source  )   {  ;^269^^^^^268^304^[REPLACE] if  ( start )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^270^^^^^268^304^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^checkState (  ) ;^272^273^^^^268^304^[ADD] start = true; checkState (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^273^^^^^268^304^[REPLACE] checkState (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  Opcodes.ACC_FINAL  Opcodes.ACC_SUPER  Opcodes.ACC_INTERFACE  Opcodes.ACC_ABSTRACT  Opcodes.ACC_SYNTHETIC  Opcodes.ACC_ANNOTATION  Opcodes.ACC_ENUM^274^275^276^277^^268^304^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( name != null || !name.equals ( "package-info" )  )  {^279^^^^^268^304^[REPLACE] if  ( name == null || !name.endsWith ( "package-info" )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( superName, "class name" ) ;^280^^^^^268^304^[REPLACE] CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REMOVE]^getObjectType ( cn.name )  ;^280^^^^^268^304^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if   (  !"java/lang/Object".equals  (  superName  )    )   {  ;^282^^^^^268^304^[REPLACE] if  ( "java/lang/Object".equals ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^282^283^284^285^^268^304^[ADD] if  ( "java/lang/Object".equals ( name )  )  { if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( signature, "super class name" ) ;^287^^^^^282^288^[REPLACE] CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( signature == null )  {^283^^^^^268^304^[REPLACE] if  ( superName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^283^284^285^^^268^304^[ADD] if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^284^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^284^^^^^268^304^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  (signature == null )  {^283^^^^^268^304^[REPLACE] if  ( superName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( signature == null )  {^289^^^^^268^304^[REPLACE] if  ( signature != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^289^290^291^^^268^304^[ADD] if  ( signature != null )  { CheckMethodAdapter.checkClassSignature ( signature ) ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^checkIdentifier ( name, "field name" )  ;^290^^^^^268^304^[REPLACE] CheckMethodAdapter.checkClassSignature ( signature ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  (  ( access & Opcodes.ACC_INTERFACE )   ==  0 )  {^292^^^^^268^304^[REPLACE] if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if  ( !"java/lang/Object".equals ( signature )  )  {^293^^^^^268^304^[REPLACE] if  ( !"java/lang/Object".equals ( superName )  )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^293^294^295^^^268^304^[ADD] if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^return ;^294^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " )  ;^294^^^^^268^304^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^294^^^^^268^304^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^if   (  outerName != null  )   {  ;^297^^^^^268^304^[REPLACE] if  ( interfaces != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^int j = 0  ;^298^^^^^268^304^[REPLACE] for  ( int i = 0; i < interfaces.length; ++i )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[ADD]^^298^299^300^301^^268^304^[ADD] for  ( int i = 0; i < interfaces.length; ++i )  { CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ; }^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^303^^^^^268^304^[REPLACE] cv.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  int access  i  version 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^320^^^^^319^332^[REPLACE] checkState (  ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if   (  source  )   {  ;^321^^^^^319^332^[REPLACE] if  ( outer )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " )  ;^322^^^^^319^332^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^outer = false;^324^^^^^319^332^[REPLACE] outer = true;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if  (name != this )  {^325^^^^^319^332^[REPLACE] if  ( owner == null )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^^325^326^327^^^319^332^[ADD] if  ( owner == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^^326^^^^^319^332^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^if  ( desc == null )  {^328^^^^^319^332^[REPLACE] if  ( desc != null )  {^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[ADD]^CheckMethodAdapter.checkMethodDesc ( desc ) ;^328^329^330^^^319^332^[ADD] if  ( desc != null )  { CheckMethodAdapter.checkMethodDesc ( desc ) ; }^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^331^^^^^319^332^[REPLACE] cv.visitOuterClass ( owner, name, desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  owner 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^340^^^^^339^354^[REPLACE] checkState (  ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( outerName, "class name" ) ;^341^^^^^339^354^[REPLACE] CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^if  (name == true )  {^342^^^^^339^354^[REPLACE] if  ( outerName != null )  {^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[ADD]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^342^343^344^^^339^354^[ADD] if  ( outerName != null )  { CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ; }^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^if  ( innerName == true )  {^345^^^^^339^354^[REPLACE] if  ( innerName != null )  {^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  Opcodes.ACC_PRIVATE  Opcodes.ACC_PROTECTED  Opcodes.ACC_STATIC  Opcodes.ACC_FINAL  Opcodes.ACC_INTERFACE  Opcodes.ACC_ABSTRACT  Opcodes.ACC_SYNTHETIC^348^349^350^351^^339^354^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^cv.visitInnerClass ( name, outerName, name, access ) ;^353^^^^^339^354^[REPLACE] cv.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] CheckClassAdapter   [TYPE]  int access  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String innerName  name  outerName 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^363^^^^^362^379^[REPLACE] checkState (  ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  Opcodes.ACC_PRIVATE  Opcodes.ACC_PROTECTED  Opcodes.ACC_STATIC  Opcodes.ACC_FINAL  Opcodes.ACC_VOLATILE  Opcodes.ACC_TRANSIENT  Opcodes.ACC_SYNTHETIC^364^365^366^367^^362^379^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( signature, "field name" ) ;^369^^^^^362^379^[REPLACE] CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkDesc ( desc, true ) ;^370^^^^^362^379^[REPLACE] CheckMethodAdapter.checkDesc ( desc, false ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^if  ( signature == null )  {^371^^^^^362^379^[REPLACE] if  ( signature != null )  {^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkFieldSignature ( name ) ;^372^^^^^362^379^[REPLACE] CheckMethodAdapter.checkFieldSignature ( signature ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^if  ( value == this )  {^374^^^^^362^379^[REPLACE] if  ( value != null )  {^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[ADD]^CheckMethodAdapter.checkConstant ( value ) ;^374^375^376^^^362^379^[ADD] if  ( value != null )  { CheckMethodAdapter.checkConstant ( value ) ; }^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^CheckMethodAdapter.checkClassSignature ( value ) ;^375^^^^^362^379^[REPLACE] CheckMethodAdapter.checkConstant ( value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^FieldVisitor av = cv.visitMethod ( access, signature, desc, signature, value ) ;^377^^^^^362^379^[REPLACE] FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^return n == -1 ? name : name.substring  (  n + 1, k  )  ;  ;^378^^^^^362^379^[REPLACE] return new CheckFieldAdapter ( av ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] CheckClassAdapter   [TYPE]  Object value  [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  FieldVisitor av  [TYPE]  int access 
[REPLACE]^( name.endsWith ( "package-info" )  )  ;^388^^^^^387^411^[REPLACE] checkState (  ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^checkAccess ( access, Opcodes.ACC_PUBLIC  Opcodes.ACC_PRIVATE  Opcodes.ACC_PROTECTED  Opcodes.ACC_STATIC  Opcodes.ACC_FINAL  Opcodes.ACC_SYNCHRONIZED  Opcodes.ACC_BRIDGE  Opcodes.ACC_VARARGS  Opcodes.ACC_NATIVE^389^390^391^392^^387^411^[REPLACE] checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter.checkMethodIdentifier ( signature, "method name" ) ;^395^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter.checkMethodSignature ( desc ) ;^396^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodDesc ( desc ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^if  ( signature == null )  {^397^^^^^387^411^[REPLACE] if  ( signature != null )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^CheckMethodAdapter.checkMethodSignature ( signature ) ;^397^398^399^^^387^411^[ADD] if  ( signature != null )  { CheckMethodAdapter.checkMethodSignature ( signature ) ; }^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^CheckMethodAdapter.checkMethodSignature ( name ) ;^398^^^^^387^411^[REPLACE] CheckMethodAdapter.checkMethodSignature ( signature ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^if  ( exceptions == null )  {^400^^^^^387^411^[REPLACE] if  ( exceptions != null )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^for  ( int i = 0 ; i < exceptions.length; ++i )  {^401^^^^^387^411^[REPLACE] for  ( int i = 0; i < exceptions.length; ++i )  {^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[ADD]^^401^402^403^404^^387^411^[ADD] for  ( int i = 0; i < exceptions.length; ++i )  { CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ; }^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^return new CheckMethodAdapter ( cv.visitField ( access, name, desc, signature,^406^407^408^409^^387^411^[REPLACE] return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] CheckClassAdapter   [TYPE]  boolean dump  end  false  outer  source  start  true  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  int access  i 
[REPLACE]^if  (  (pub )   ==  4 )  {^462^^^^^461^479^[REPLACE] if  (  ( access & ~possibleAccess )  != 0 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^462^463^464^465^^461^479^[ADD] if  (  ( access & ~possibleAccess )  != 0 )  { throw new IllegalArgumentException ( "Invalid access flags: " + access ) ; }^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^463^464^^^^461^479^[ADD] throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " )  ;^463^464^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pro =  (  ( access &  ( ACC_PROTECTED )  )  == 0 )  ? 0 : 1  ;^466^^^^^461^479^[REPLACE] int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pri =  ( access & Opcodes.ACC_PRIVATE )   &&  2 ? 2 : 1;^467^^^^^461^479^[REPLACE] int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pro  =  0 ;^468^^^^^461^479^[REPLACE] int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( pub + pri + pro  != pro )  {^469^^^^^461^479^[REPLACE] if  ( pub + pri + pro > 1 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^470^471^^^^461^479^[ADD] throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^470^471^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int fin  =  0 ;^473^^^^^461^479^[REPLACE] int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^int pro =  (  ( access &  ( ACC_PROTECTED )  )  == 0 )  ? 0 : 1  ;^474^^^^^461^479^[REPLACE] int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^if  ( fin + abs  <  1 )  {^475^^^^^461^479^[REPLACE] if  ( fin + abs > 1 )  {^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[ADD]^^476^477^^^^461^479^[ADD] throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
[REPLACE]^return ;^476^477^^^^461^479^[REPLACE] throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[METHOD] checkAccess [TYPE] void [PARAMETER] final int access final int possibleAccess [CLASS] CheckClassAdapter   [TYPE]  int abs  access  fin  possibleAccess  pri  pro  pub  [TYPE]  boolean dump  end  false  outer  source  start  true  visible 
