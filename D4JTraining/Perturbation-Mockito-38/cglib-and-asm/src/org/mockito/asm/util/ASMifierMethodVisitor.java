[REPLACE]^buf.setLength ( 2 ) ;^73^^^^^72^85^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.appendConstant ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^74^75^76^77^^72^85^[REPLACE] buf.append ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf .setLength ( parameter )^74^75^76^77^^72^85^[REPLACE] buf.append ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^appendConstant ( type )  ;^78^^^^^72^85^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.append ( ", " ) .append ( dims ) .append ( " ) ;\n" )  ;^79^^^^^72^85^[REPLACE] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.append ( ", " ) .append ( true ) .append ( " ) ;\n" ) ;^79^^^^^72^85^[REPLACE] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.append ( "Label " )  ;^79^^^^^72^85^[REPLACE] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[ADD]^^79^80^^^^72^85^[ADD] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ; text.add ( buf.toString (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^text.add ( buf.append (  )  ) ;^80^^^^^72^85^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[ADD]^^81^82^83^84^85^72^85^[ADD] ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( 0 ) ; text.add ( av.getText (  )  ) ; text.add ( "}\n" ) ; return av; }^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^82^^^^^72^85^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^text.add ( av .ASMifierAnnotationVisitor ( parameter )   ) ;^82^^^^^72^85^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^83^^^^^72^85^[REPLACE] text.add ( "}\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^return av;  ;^84^^^^^72^85^[REPLACE] return av;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.setLength ( 0 + 1 ) ;^98^^^^^97^140^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^if  ( nStack  &&  Opcodes.F_NEW )  {^104^^^^^97^140^[REPLACE] if  ( type == Opcodes.F_NEW )  {^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[ADD]^buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ;buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ;^104^105^106^107^108^97^140^[ADD] if  ( type == Opcodes.F_NEW )  { buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ; } else { buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ; }^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf .setLength ( nStack )  ;^107^^^^^104^108^[REPLACE] buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REMOVE]^buf.append ( "Label " )  ;^107^^^^^104^108^[REMOVE] ^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.append ( "mv.visitFrame ( Opcodes.F_SAME, 0, null, 0, null" )  ;^105^^^^^97^140^[REPLACE] buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.append ( "Label " )  ;^138^^^^^97^140^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^text.add ( buf.append (  )  ) ;^139^^^^^97^140^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[ADD]^^139^^^^^97^140^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.setLength ( 4 ) ;^254^^^^^253^273^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^255^^^^^253^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^declareLabel ( start )  ;^258^^^^^253^273^[REPLACE] declareLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^258^^^^^253^273^[ADD] declareLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.appendConstant ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^260^261^262^263^^253^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^260^261^262^^^253^273^[ADD] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( i ) .append ( ", " ) .append ( max )^260^261^262^263^^253^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.appendConstant ( "mv.visitTableSwitchInsn ( " ) .append ( max ) .append ( ", " ) .append ( max )^260^261^262^263^^253^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( max ) .append ( ", " ) .append ( max )^260^261^262^263^^253^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^appendLabel ( end )  ;^265^^^^^253^273^[REPLACE] appendLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf .append ( null )  ;^266^^^^^253^273^[REPLACE] buf.append ( ", new Label[] {" ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^267^^^^^253^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( "Label " )  ;^271^^^^^253^273^[REPLACE] buf.append ( " } ) ;\n" ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^text.add ( buf.append (  )  ) ;^272^^^^^253^273^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REMOVE]^buf.append ( "mv.visitInsn ( " )  ;^272^^^^^253^273^[REMOVE] ^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^272^^^^^253^273^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.setLength ( 1 ) ;^280^^^^^279^299^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^281^^^^^279^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^declareLabel ( start )  ;^284^^^^^279^299^[REPLACE] declareLabel ( dflt ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[ADD]^^284^^^^^279^299^[ADD] declareLabel ( dflt ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( "mv.visitInsn ( " )  ;^286^^^^^279^299^[REPLACE] buf.append ( "mv.visitLookupSwitchInsn ( " ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^appendLabel ( end )  ;^287^^^^^279^299^[REPLACE] appendLabel ( dflt ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( ", new Label[] {" )  ;^288^^^^^279^299^[REPLACE] buf.append ( ", new int[] {" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[ADD]^^288^^^^^279^299^[ADD] buf.append ( ", new int[] {" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < keys.length; ++i )  {^289^^^^^279^299^[REPLACE] for  ( int i = 0; i < keys.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( ", new int[] {" )  ;^292^^^^^279^299^[REPLACE] buf.append ( " }, new Label[] {" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REMOVE]^buf.append ( "Label " )  ;^292^^^^^279^299^[REMOVE] ^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^293^^^^^279^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( "Label " )  ;^297^^^^^279^299^[REPLACE] buf.append ( " } ) ;\n" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[ADD]^^297^^^^^279^299^[ADD] buf.append ( " } ) ;\n" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^text.add ( buf.append (  )  ) ;^298^^^^^279^299^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.setLength ( 4 ) ;^315^^^^^314^329^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REMOVE]^buf.append ( '}' )  ;^315^^^^^314^329^[REMOVE] ^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^declareLabel ( dflt )  ;^316^^^^^314^329^[REPLACE] declareLabel ( start ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^316^317^^^^314^329^[ADD] declareLabel ( start ) ; declareLabel ( end ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^declareLabel ( handler ) ;^317^^^^^314^329^[REPLACE] declareLabel ( end ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^declareLabel ( end ) ;^318^^^^^314^329^[REPLACE] declareLabel ( handler ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.append ( "mv.visitLineNumber ( " )  ;^319^^^^^314^329^[REPLACE] buf.append ( "mv.visitTryCatchBlock ( " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendLabel ( dflt )  ;^320^^^^^314^329^[REPLACE] appendLabel ( start ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf .append ( type )  ;^321^^^^^314^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendLabel ( dflt )  ;^322^^^^^314^329^[REPLACE] appendLabel ( end ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.append ( "Label " )  ;^323^^^^^314^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendLabel ( dflt )  ;^324^^^^^314^329^[REPLACE] appendLabel ( handler ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.append ( "Label " )  ;^325^^^^^314^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^325^326^^^^314^329^[ADD] buf.append ( ", " ) ; appendConstant ( type ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendConstant ( signature )  ;^326^^^^^314^329^[REPLACE] appendConstant ( type ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf .setLength ( null )  ;\n" ) ;^327^^^^^314^329^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^328^^^^^314^329^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^328^^^^^314^329^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^text.add ( buf.append (  )  ) ;^328^^^^^314^329^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.setLength ( 4 ) ;^339^^^^^338^352^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REMOVE]^buf.append ( '}' )  ;^339^^^^^338^352^[REMOVE] ^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "mv.visitInsn ( " )  ;^340^^^^^338^352^[REPLACE] buf.append ( "mv.visitLocalVariable ( " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^340^341^^^^338^352^[ADD] buf.append ( "mv.visitLocalVariable ( " ) ; appendConstant ( name ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( signature ) ;^341^^^^^338^352^[REPLACE] appendConstant ( name ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^341^342^^^^338^352^[ADD] appendConstant ( name ) ; buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "Label " )  ;^342^^^^^338^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( type )  ;^343^^^^^338^352^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf .append ( name )  ;^344^^^^^338^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( name ) ;^345^^^^^338^352^[REPLACE] appendConstant ( signature ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^345^^^^^338^352^[ADD] appendConstant ( signature ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "Label " )  ;^346^^^^^338^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendLabel ( dflt )  ;^347^^^^^338^352^[REPLACE] appendLabel ( start ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "Label " )  ;^348^^^^^338^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendLabel ( dflt )  ;^349^^^^^338^352^[REPLACE] appendLabel ( end ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( ", " ) .append ( index )  ;^350^^^^^338^352^[REPLACE] buf.append ( ", " ) .append ( index ) .append ( " ) ;\n" ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REMOVE]^buf.append ( "Label " )  ;^350^^^^^338^352^[REMOVE] ^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( ", " ) .append ( dims )  ;^350^^^^^338^352^[REPLACE] buf.append ( ", " ) .append ( index ) .append ( " ) ;\n" ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "Label " )  ;^350^^^^^338^352^[REPLACE] buf.append ( ", " ) .append ( index ) .append ( " ) ;\n" ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^351^^^^^338^352^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^text.add ( buf .toString (  )   ) ;^351^^^^^338^352^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^351^^^^^338^352^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^if  ( i  ==  2 )  {^382^^^^^380^415^[REPLACE] if  ( i > 0 )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Label " )  ;^383^^^^^380^415^[REPLACE] buf.append ( ", " ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^383^^^^^380^415^[ADD] buf.append ( ", " ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^if  ( ! o[i] instanceof String )  {^385^^^^^380^415^[REPLACE] if  ( o[i] instanceof String )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^}  else {^387^^^^^380^415^[REPLACE] } else if  ( o[i] instanceof Integer )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^declareLabel (  (  ( Label )   ( o[i] )  )  )  ;^412^^^^^387^413^[REPLACE] appendLabel (  ( Label )  o[i] ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^412^^^^^387^413^[ADD] appendLabel (  ( Label )  o[i] ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^388^^^^^380^415^[REPLACE] switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( i )  ;^390^^^^^380^415^[REPLACE] buf.append ( "Opcodes.TOP" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" )  ;^393^^^^^380^415^[REPLACE] buf.append ( "Opcodes.INTEGER" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" )  ;^396^^^^^380^415^[REPLACE] buf.append ( "Opcodes.FLOAT" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( i )  ;^399^^^^^380^415^[REPLACE] buf.append ( "Opcodes.DOUBLE" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^399^^^^^380^415^[ADD] buf.append ( "Opcodes.DOUBLE" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.DOUBLE" )  ;^402^^^^^380^415^[REPLACE] buf.append ( "Opcodes.LONG" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^402^403^^^^380^415^[ADD] buf.append ( "Opcodes.LONG" ) ; break;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" )  ;^405^^^^^380^415^[REPLACE] buf.append ( "Opcodes.NULL" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( i )  ;^408^^^^^380^415^[REPLACE] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REMOVE]^buf.append ( "Label " )  ;^408^^^^^380^415^[REMOVE] ^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^appendConstant ( type )  ;^386^^^^^380^415^[REPLACE] appendConstant ( o[i] ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^}  if  ( ! o[i] instanceof Integer )  {^387^^^^^380^415^[REPLACE] } else if  ( o[i] instanceof Integer )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^388^389^390^^^380^415^[ADD] switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  { case 0: buf.append ( "Opcodes.TOP" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" )  ;^390^^^^^380^415^[REPLACE] buf.append ( "Opcodes.TOP" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^393^^^^^380^415^[ADD] buf.append ( "Opcodes.INTEGER" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" )  ;^399^^^^^380^415^[REPLACE] buf.append ( "Opcodes.DOUBLE" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( i )  ;^405^^^^^380^415^[REPLACE] buf.append ( "Opcodes.NULL" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^(  ( String )   ( labelNames.get ( l )  )  )  ;^408^^^^^380^415^[REPLACE] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^for  ( int i = 4; i < n; ++i )  {^381^^^^^380^415^[REPLACE] for  ( int i = 0; i < n; ++i )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
