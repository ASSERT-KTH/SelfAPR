[REPLACE]^buf.append ( '}' ) ;^54^^^^^53^56^[REPLACE] super ( "mv" ) ;^[METHOD] <init> [TYPE] ASMifierMethodVisitor() [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true 
[REPLACE]^this.labelNames  =  this.labelNames ;^55^^^^^53^56^[REPLACE] this.labelNames = new HashMap (  ) ;^[METHOD] <init> [TYPE] ASMifierMethodVisitor() [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true 
[ADD]^^55^^^^^53^56^[ADD] this.labelNames = new HashMap (  ) ;^[METHOD] <init> [TYPE] ASMifierMethodVisitor() [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true 
[REPLACE]^buf.setLength ( 0 - 4 ) ;^59^^^^^58^66^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^60^^^^^58^66^[REPLACE] buf.append ( "{\n" ) .append ( "av0 = mv.visitAnnotationDefault (  ) ;\n" ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[ADD]^^60^^^^^58^66^[ADD] buf.append ( "{\n" ) .append ( "av0 = mv.visitAnnotationDefault (  ) ;\n" ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[ADD]^^60^61^^^^58^66^[ADD] buf.append ( "{\n" ) .append ( "av0 = mv.visitAnnotationDefault (  ) ;\n" ) ; text.add ( buf.toString (  )  ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^text.add ( buf .toString (  )   ) ;^61^^^^^58^66^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REMOVE]^appendConstant ( cst ) ;^61^^^^^58^66^[REMOVE] ^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( 3 ) ;^62^^^^^58^66^[REPLACE] ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( 0 ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^av.getText (  )  ;^63^^^^^58^66^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^text.add ( "mv.visitCode (  ) ;\n" ) ;^63^^^^^58^66^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[ADD]^^63^^^^^58^66^[ADD] text.add ( av.getText (  )  ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^"}\n"   ;^64^^^^^58^66^[REPLACE] text.add ( "}\n" ) ;^[METHOD] visitAnnotationDefault [TYPE] AnnotationVisitor [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true 
[REPLACE]^buf.setLength ( 0 >>> 1 ) ;^73^^^^^68^85^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[ADD]^^73^^^^^68^85^[ADD] buf.setLength ( 0 ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf .setLength ( parameter )^74^75^76^77^^68^85^[REPLACE] buf.append ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.appendConstant ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^74^75^76^77^^68^85^[REPLACE] buf.append ( "{\n" ) .append ( "av0 = mv.visitParameterAnnotation ( " ) .append ( parameter ) .append ( ", " ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^appendConstant ( cst ) ;^78^^^^^68^85^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[ADD]^^78^^^^^68^85^[ADD] appendConstant ( desc ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf .append ( desc )^79^^^^^68^85^[REPLACE] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.append ( ", " ) .append ( dims ) .append ( " ) ;\n" ) ;^79^^^^^68^85^[REPLACE] buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^79^^^^^68^85^[REMOVE] ^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^buf.append ( '}' ) ;^80^^^^^68^85^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^text.add ( buf.append (  )  ) ;^80^^^^^68^85^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( 0L ) ;^81^^^^^68^85^[REPLACE] ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( 0 ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^text.add ( av .ASMifierAnnotationVisitor ( parameter )   ) ;^82^^^^^68^85^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^text.add ( "mv.visitCode (  ) ;\n" ) ;^82^^^^^68^85^[REPLACE] text.add ( av.getText (  )  ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^"}\n"   ;^83^^^^^68^85^[REPLACE] text.add ( "}\n" ) ;^[METHOD] visitParameterAnnotation [TYPE] AnnotationVisitor [PARAMETER] final int parameter String desc final boolean visible [CLASS] ASMifierMethodVisitor   [TYPE]  ASMifierAnnotationVisitor av  [TYPE]  boolean false  true  visible  [TYPE]  String desc  [TYPE]  int parameter 
[REPLACE]^"mv.visitCode (  )  ;^88^^^^^87^89^[REPLACE] text.add ( "mv.visitCode (  ) ;\n" ) ;^[METHOD] visitCode [TYPE] void [PARAMETER] [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true 
[REPLACE]^buf.setLength ( 0L ) ;^98^^^^^97^140^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^if  ( type  &&  Opcodes.F_NEW )  {^104^^^^^97^140^[REPLACE] if  ( type == Opcodes.F_NEW )  {^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[ADD]^buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ;buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ;^104^105^106^107^108^97^140^[ADD] if  ( type == Opcodes.F_NEW )  { buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ; } else { buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ; }^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf .setLength ( type )  ;^107^^^^^104^108^[REPLACE] buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.append ( "mv.visitFrame ( Opcodes.F_FULL, " ) ;^105^^^^^97^140^[REPLACE] buf.append ( "mv.visitFrame ( Opcodes.F_NEW, " ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^138^^^^^97^140^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^text.add ( buf.append (  )  ) ;^139^^^^^97^140^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REMOVE]^appendConstant ( cst ) ;^139^^^^^97^140^[REMOVE] ^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^text.add ( buf .toString (  )   ) ;^139^^^^^97^140^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitFrame [TYPE] void [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^buf.append ( 0 - 2 ) ;^143^^^^^142^146^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[REPLACE]^buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^144^^^^^142^146^[REPLACE] buf.append ( "mv.visitInsn ( " ) .append ( OPCODES[opcode] ) .append ( " ) ;\n" ) ;^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[REPLACE]^text.add ( buf.append (  )  ) ;^145^^^^^142^146^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[ADD]^^145^^^^^142^146^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[REPLACE]^text.add ( buf .toString (  )   ) ;^145^^^^^142^146^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[REMOVE]^appendConstant ( cst ) ;^145^^^^^142^146^[REMOVE] ^[METHOD] visitInsn [TYPE] void [PARAMETER] final int opcode [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode 
[REPLACE]^buf.setLength ( 1 ) ;^149^^^^^148^158^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode  ||  Opcodes.NEWARRAY^150^151^152^153^^148^158^[REPLACE] buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode == Opcodes.NEWARRAY^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf.appendConstant ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode  !=  Opcodes.NEWARRAY^150^151^152^153^^148^158^[REPLACE] buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode == Opcodes.NEWARRAY^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf .setLength ( operand )^150^151^152^153^^148^158^[REPLACE] buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode == Opcodes.NEWARRAY^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf .setLength ( opcode )^150^151^152^153^^148^158^[REPLACE] buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode == Opcodes.NEWARRAY^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^: Integer.toString ( opcode )  ) .append ( " ) ;\n" ) ;^155^156^^^^148^158^[REPLACE] : Integer.toString ( operand )  ) .append ( " ) ;\n" ) ;^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf.toString (  )  ;^157^^^^^148^158^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[ADD]^^157^^^^^148^158^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^text.add ( buf.append (  )  ) ;^157^^^^^148^158^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitIntInsn [TYPE] void [PARAMETER] final int opcode final int operand [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  operand 
[REPLACE]^buf.setLength ( 2 ) ;^161^^^^^160^168^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[REPLACE]^buf.appendConstant ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( var )^162^163^164^165^^160^168^[REPLACE] buf.append ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( var )^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[REPLACE]^buf .setLength ( var )^162^163^164^165^^160^168^[REPLACE] buf.append ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( var )^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[ADD]^^162^163^164^^^160^168^[ADD] buf.append ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " )^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[REPLACE]^buf .setLength ( opcode )^162^163^164^165^^160^168^[REPLACE] buf.append ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( var )^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[REPLACE]^text.add ( buf.append (  )  ) ;^167^^^^^160^168^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int opcode  var 
[REPLACE]^buf .append ( type )  ;^171^^^^^170^176^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^172^^^^^170^176^[REPLACE] buf.append ( "mv.visitTypeInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^appendConstant ( name ) ;^173^^^^^170^176^[REPLACE] appendConstant ( type ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^174^^^^^170^176^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^text.add ( buf.append (  )  ) ;^175^^^^^170^176^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[ADD]^^175^^^^^170^176^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^text.add ( buf .toString (  )   ) ;^175^^^^^170^176^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTypeInsn [TYPE] void [PARAMETER] final int opcode String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String type  [TYPE]  int opcode 
[REPLACE]^buf.setLength ( 0 - 0 ) ;^184^^^^^178^193^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf .setLength ( opcode )^185^^^^^178^193^[REPLACE] buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.append ( "mv.visitTypeInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^185^^^^^178^193^[REPLACE] buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^185^^^^^178^193^[REMOVE] ^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( name ) ;^186^^^^^178^193^[REPLACE] appendConstant ( owner ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf .append ( owner )  ;^187^^^^^178^193^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( owner ) ;^188^^^^^178^193^[REPLACE] appendConstant ( name ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[ADD]^buf.append ( ", " ) ;^188^189^^^^178^193^[ADD] appendConstant ( name ) ; buf.append ( ", " ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf .append ( owner )  ;^189^^^^^178^193^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( cst ) ;^190^^^^^178^193^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf .setLength ( opcode )  ;\n" ) ;^191^^^^^178^193^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^text.add ( buf .toString (  )   ) ;^192^^^^^178^193^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^text.add ( buf.append (  )  ) ;^192^^^^^178^193^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitFieldInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.setLength ( 1 ) ;^201^^^^^195^210^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^202^^^^^195^210^[REPLACE] buf.append ( "mv.visitMethodInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[ADD]^^202^203^^^^195^210^[ADD] buf.append ( "mv.visitMethodInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ; appendConstant ( owner ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf .setLength ( opcode )^202^^^^^195^210^[REPLACE] buf.append ( "mv.visitMethodInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( name ) ;^203^^^^^195^210^[REPLACE] appendConstant ( owner ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^204^^^^^195^210^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( owner ) ;^205^^^^^195^210^[REPLACE] appendConstant ( name ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^206^^^^^195^210^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^appendConstant ( cst ) ;^207^^^^^195^210^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[ADD]^buf.append ( " ) ;\n" ) ;^207^208^^^^195^210^[ADD] appendConstant ( desc ) ; buf.append ( " ) ;\n" ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^208^^^^^195^210^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[ADD]^^208^^^^^195^210^[ADD] buf.append ( " ) ;\n" ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.append ( '}' ) ;^209^^^^^195^210^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^text.add ( buf.append (  )  ) ;^209^^^^^195^210^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitMethodInsn [TYPE] void [PARAMETER] final int opcode String owner String name String desc [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  name  owner  [TYPE]  int opcode 
[REPLACE]^buf.setLength ( 0 + 2 ) ;^213^^^^^212^219^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^declareLabel ( labels[i] ) ;^214^^^^^212^219^[REPLACE] declareLabel ( label ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[ADD]^^214^^^^^212^219^[ADD] declareLabel ( label ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^buf.appendConstant ( "mv.visitJumpInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^215^^^^^212^219^[REPLACE] buf.append ( "mv.visitJumpInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^buf.append ( "mv.visitFieldInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^215^^^^^212^219^[REPLACE] buf.append ( "mv.visitJumpInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[ADD]^^215^^^^^212^219^[ADD] buf.append ( "mv.visitJumpInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^appendLabel ( labels[i] ) ;^216^^^^^212^219^[REPLACE] appendLabel ( label ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[ADD]^^216^^^^^212^219^[ADD] appendLabel ( label ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^217^^^^^212^219^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^buf.append ( '}' ) ;^218^^^^^212^219^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^text.add ( buf .toString (  )   ) ;^218^^^^^212^219^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitJumpInsn [TYPE] void [PARAMETER] final int opcode Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label  [TYPE]  int opcode 
[REPLACE]^buf.setLength ( 0 >>> 2 ) ;^222^^^^^221^228^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[ADD]^declareLabel ( label ) ;^222^223^^^^221^228^[ADD] buf.setLength ( 0 ) ; declareLabel ( label ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^declareLabel ( labels[i] ) ;^223^^^^^221^228^[REPLACE] declareLabel ( label ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^buf .setLength ( false )  ;^224^^^^^221^228^[REPLACE] buf.append ( "mv.visitLabel ( " ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^appendLabel ( labels[i] ) ;^225^^^^^221^228^[REPLACE] appendLabel ( label ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^226^^^^^221^228^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^buf.toString (  )  ;^227^^^^^221^228^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^text.add ( buf.append (  )  ) ;^227^^^^^221^228^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLabel [TYPE] void [PARAMETER] Label label [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label label 
[REPLACE]^buf.setLength ( 0 * 1 ) ;^231^^^^^230^236^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLdcInsn [TYPE] void [PARAMETER] Object cst [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Object cst 
[REPLACE]^buf .setLength ( null )  ;^232^^^^^230^236^[REPLACE] buf.append ( "mv.visitLdcInsn ( " ) ;^[METHOD] visitLdcInsn [TYPE] void [PARAMETER] Object cst [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Object cst 
[REPLACE]^appendConstant ( desc ) ;^233^^^^^230^236^[REPLACE] appendConstant ( cst ) ;^[METHOD] visitLdcInsn [TYPE] void [PARAMETER] Object cst [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Object cst 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^234^^^^^230^236^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitLdcInsn [TYPE] void [PARAMETER] Object cst [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Object cst 
[REPLACE]^text.add ( buf.append (  )  ) ;^235^^^^^230^236^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLdcInsn [TYPE] void [PARAMETER] Object cst [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Object cst 
[REPLACE]^buf.setLength ( 4 ) ;^239^^^^^238^246^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[ADD]^^239^^^^^238^246^[ADD] buf.setLength ( 0 ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^buf .setLength ( increment )^240^241^242^243^^238^246^[REPLACE] buf.append ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " ) .append ( increment )^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^buf.appendConstant ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " ) .append ( increment )^240^241^242^243^^238^246^[REPLACE] buf.append ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " ) .append ( increment )^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[ADD]^^240^241^242^^^238^246^[ADD] buf.append ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " )^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^buf.append ( "mv.visitIincInsn ( " ) .append ( increment ) .append ( ", " ) .append ( increment )^240^241^242^243^^238^246^[REPLACE] buf.append ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " ) .append ( increment )^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^buf.toString (  )  ;^245^^^^^238^246^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^text.add ( buf.append (  )  ) ;^245^^^^^238^246^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int increment  var 
[REPLACE]^buf.append ( 0L ) ;^254^^^^^248^273^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0; i < labels.length *  2; ++i )  {^255^^^^^248^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^declareLabel ( label ) ;^256^^^^^248^273^[REPLACE] declareLabel ( labels[i] ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^255^^^^^248^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^258^^^^^248^273^[REPLACE] declareLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^258^^^^^248^273^[ADD] declareLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.appendConstant ( "mv.visitTableSwitchInsn ( " ) .append ( i ) .append ( ", " ) .append ( max )^260^261^262^263^^248^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf .setLength ( i )^260^261^262^263^^248^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( max ) .append ( ", " ) .append ( max )^260^261^262^263^^248^273^[REPLACE] buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^265^^^^^248^273^[REPLACE] appendLabel ( dflt ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( " }, new Label[] {" ) ;^266^^^^^248^273^[REPLACE] buf.append ( ", new Label[] {" ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^266^^^^^248^273^[ADD] buf.append ( ", new Label[] {" ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0; i < labels.length (  ) ; ++i )  {^267^^^^^248^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^267^268^269^270^^248^273^[ADD] for  ( int i = 0; i < labels.length; ++i )  { buf.append ( i == 0 ? " " : ", " ) ; appendLabel ( labels[i] ) ; }^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ", " ) ;^268^^^^^248^273^[REPLACE] buf.append ( i == 0 ? " " : ", " ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^appendLabel ( label ) ;^269^^^^^248^273^[REPLACE] appendLabel ( labels[i] ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^267^^^^^248^273^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf.append ( " ) ;\n" ) ;^271^^^^^248^273^[REPLACE] buf.append ( " } ) ;\n" ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^text.add ( buf.append (  )  ) ;^272^^^^^248^273^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[ADD]^^272^^^^^248^273^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^text.add ( buf .toString (  )   ) ;^272^^^^^248^273^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTableSwitchInsn [TYPE] void [PARAMETER] final int min final int max Label dflt Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int i  max  min 
[REPLACE]^buf .append ( false )  ;^280^^^^^275^299^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < labels.length %  2; ++i )  {^281^^^^^275^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^declareLabel ( label ) ;^282^^^^^275^299^[REPLACE] declareLabel ( labels[i] ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^281^^^^^275^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^284^^^^^275^299^[REPLACE] declareLabel ( dflt ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( nLocal ) .append ( ", new Object[] {" ) ;^286^^^^^275^299^[REPLACE] buf.append ( "mv.visitLookupSwitchInsn ( " ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^287^^^^^275^299^[REPLACE] appendLabel ( dflt ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( ", new Label[] {" ) ;^288^^^^^275^299^[REPLACE] buf.append ( ", new int[] {" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^288^^^^^275^299^[REMOVE] ^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < keys.length %  2; ++i )  {^289^^^^^275^299^[REPLACE] for  ( int i = 0; i < keys.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append   " " ;^290^^^^^275^299^[REPLACE] buf.append ( i == 0 ? " " : ", " ) .append ( keys[i] ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.toString ( i  ||  0 / 4 ? " " : ", " ) .append ( keys[i] ) ;^290^^^^^275^299^[REPLACE] buf.append ( i == 0 ? " " : ", " ) .append ( keys[i] ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < keys.length; ++i )  {^289^^^^^275^299^[REPLACE] for  ( int i = 0; i < keys.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf .append ( null )  ;^292^^^^^275^299^[REPLACE] buf.append ( " }, new Label[] {" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < labels.length (  ) ; ++i )  {^293^^^^^275^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append   " " ;^294^^^^^275^299^[REPLACE] buf.append ( i == 0 ? " " : ", " ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^appendLabel ( label ) ;^295^^^^^275^299^[REPLACE] appendLabel ( labels[i] ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^293^^^^^275^299^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf.append ( " ) ;\n" ) ;^297^^^^^275^299^[REPLACE] buf.append ( " } ) ;\n" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[ADD]^^297^^^^^275^299^[ADD] buf.append ( " } ) ;\n" ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^text.add ( buf .toString (  )   ) ;^298^^^^^275^299^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^text.add ( buf.append (  )  ) ;^298^^^^^275^299^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLookupSwitchInsn [TYPE] void [PARAMETER] Label dflt final int[] keys Label[] labels [CLASS] ASMifierMethodVisitor   [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  Label dflt  [TYPE]  int[] keys  [TYPE]  int i 
[REPLACE]^buf .append ( desc )  ;^302^^^^^301^307^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^303^^^^^301^307^[REPLACE] buf.append ( "mv.visitMultiANewArrayInsn ( " ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^appendConstant ( cst ) ;^304^^^^^301^307^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^buf.append ( ", " ) .append ( visible ) .append ( " ) ;\n" ) ;^305^^^^^301^307^[REPLACE] buf.append ( ", " ) .append ( dims ) .append ( " ) ;\n" ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^buf.append ( '}' ) ;^306^^^^^301^307^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REMOVE]^appendConstant ( cst ) ;^306^^^^^301^307^[REMOVE] ^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^text.add ( buf.append (  )  ) ;^306^^^^^301^307^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[ADD]^^306^^^^^301^307^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitMultiANewArrayInsn [TYPE] void [PARAMETER] String desc final int dims [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  String desc  [TYPE]  int dims 
[REPLACE]^buf.setLength ( 3 ) ;^315^^^^^309^329^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^316^^^^^309^329^[REPLACE] declareLabel ( start ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^declareLabel ( handler ) ;^317^^^^^309^329^[REPLACE] declareLabel ( end ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^declareLabel ( end ) ;^318^^^^^309^329^[REPLACE] declareLabel ( handler ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^"mv.visitTryCatchBlock ( " )  ;^319^^^^^309^329^[REPLACE] buf.append ( "mv.visitTryCatchBlock ( " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^320^^^^^309^329^[REPLACE] appendLabel ( start ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REMOVE]^appendFrameTypes ( 1, stack ) ;^320^^^^^309^329^[REMOVE] ^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf .append ( type )  ;^321^^^^^309^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^321^^^^^309^329^[ADD] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendLabel ( handler ) ;^322^^^^^309^329^[REPLACE] appendLabel ( end ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^323^^^^^309^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendLabel ( end ) ;^324^^^^^309^329^[REPLACE] appendLabel ( handler ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf .append ( type )  ;^325^^^^^309^329^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^325^326^^^^309^329^[ADD] buf.append ( ", " ) ; appendConstant ( type ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^appendConstant ( name ) ;^326^^^^^309^329^[REPLACE] appendConstant ( type ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^327^^^^^309^329^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^text.add ( buf.append (  )  ) ;^328^^^^^309^329^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[ADD]^^328^^^^^309^329^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitTryCatchBlock [TYPE] void [PARAMETER] Label start Label end Label handler String type [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  handler  start  [TYPE]  String type 
[REPLACE]^buf.setLength ( 0 % 0 ) ;^339^^^^^331^352^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^339^340^^^^331^352^[ADD] buf.setLength ( 0 ) ; buf.append ( "mv.visitLocalVariable ( " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^340^^^^^331^352^[REPLACE] buf.append ( "mv.visitLocalVariable ( " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^appendConstant ( name ) ;^340^341^^^^331^352^[ADD] buf.append ( "mv.visitLocalVariable ( " ) ; appendConstant ( name ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( signature ) ;^341^^^^^331^352^[REPLACE] appendConstant ( name ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf .append ( desc )  ;^342^^^^^331^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^342^^^^^331^352^[ADD] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( cst ) ;^343^^^^^331^352^[REPLACE] appendConstant ( desc ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf .append ( name )  ;^344^^^^^331^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REMOVE]^appendFrameTypes ( 1, stack ) ;^344^^^^^331^352^[REMOVE] ^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendConstant ( name ) ;^345^^^^^331^352^[REPLACE] appendConstant ( signature ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf .append ( name )  ;^346^^^^^331^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^346^^^^^331^352^[ADD] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^347^^^^^331^352^[REPLACE] appendLabel ( start ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf .append ( signature )  ;^348^^^^^331^352^[REPLACE] buf.append ( ", " ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[ADD]^^348^349^^^^331^352^[ADD] buf.append ( ", " ) ; appendLabel ( end ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^349^^^^^331^352^[REPLACE] appendLabel ( end ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REMOVE]^appendFrameTypes ( 1, stack ) ;^349^^^^^331^352^[REMOVE] ^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.append ( ", " ) .append ( dims ) .append ( " ) ;\n" ) ;^350^^^^^331^352^[REPLACE] buf.append ( ", " ) .append ( index ) .append ( " ) ;\n" ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^text.add ( buf .toString (  )   ) ;^351^^^^^331^352^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^text.add ( buf.append (  )  ) ;^351^^^^^331^352^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label end  start  [TYPE]  String desc  name  signature  [TYPE]  int index 
[REPLACE]^buf.setLength ( 3 ) ;^355^^^^^354^360^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[ADD]^buf.append ( "mv.visitLineNumber ( " ) .append ( line ) .append ( ", " ) ;^355^356^^^^354^360^[ADD] buf.setLength ( 0 ) ; buf.append ( "mv.visitLineNumber ( " ) .append ( line ) .append ( ", " ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^buf .setLength ( line )^356^^^^^354^360^[REPLACE] buf.append ( "mv.visitLineNumber ( " ) .append ( line ) .append ( ", " ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^356^^^^^354^360^[REPLACE] buf.append ( "mv.visitLineNumber ( " ) .append ( line ) .append ( ", " ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^357^^^^^354^360^[REPLACE] appendLabel ( start ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^buf.append ( " } ) ;\n" ) ;^358^^^^^354^360^[REPLACE] buf.append ( " ) ;\n" ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^text.add ( buf.append (  )  ) ;^359^^^^^354^360^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitLineNumber [TYPE] void [PARAMETER] final int line Label start [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label start  [TYPE]  int line 
[REPLACE]^buf.setLength ( 1 ) ;^363^^^^^362^370^[REPLACE] buf.setLength ( 0 ) ;^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[ADD]^^363^^^^^362^370^[ADD] buf.setLength ( 0 ) ;^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^buf .setLength ( maxStack )^364^365^366^367^^362^370^[REPLACE] buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[ADD]^^364^365^366^^^362^370^[ADD] buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " )^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^buf.appendConstant ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^364^365^366^367^^362^370^[REPLACE] buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^buf.append ( "mv.visitMaxs ( " ) .append ( maxLocals ) .append ( ", " ) .append ( maxLocals )^364^365^366^367^^362^370^[REPLACE] buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^buf .setLength ( maxLocals )^364^365^366^367^^362^370^[REPLACE] buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^text.add ( buf.append (  )  ) ;^369^^^^^362^370^[REPLACE] text.add ( buf.toString (  )  ) ;^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[ADD]^^369^^^^^362^370^[ADD] text.add ( buf.toString (  )  ) ;^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REMOVE]^appendConstant ( cst ) ;^369^^^^^362^370^[REMOVE] ^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int maxLocals  maxStack 
[REPLACE]^if  ( ! o[i] instanceof Label )  {^374^^^^^372^378^[REPLACE] if  ( o[i] instanceof Label )  {^[METHOD] declareFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^declareLabel (  ( Label )  o[i] ) ;^374^375^376^^^372^378^[ADD] if  ( o[i] instanceof Label )  { declareLabel (  ( Label )  o[i] ) ; }^[METHOD] declareFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^declareFrameTypes ( nStack, stack ) ;^375^^^^^372^378^[REPLACE] declareLabel (  ( Label )  o[i] ) ;^[METHOD] declareFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^for  ( int i = 0; i  !=  n; ++i )  {^373^^^^^372^378^[REPLACE] for  ( int i = 0; i < n; ++i )  {^[METHOD] declareFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^for  ( int i = 2; i < n; ++i )  {^373^^^^^372^378^[REPLACE] for  ( int i = 0; i < n; ++i )  {^[METHOD] declareFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^if  ( i  !=  0 )  {^382^^^^^380^415^[REPLACE] if  ( i > 0 )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^buf.append ( ", " ) ;^382^383^384^^^380^415^[ADD] if  ( i > 0 )  { buf.append ( ", " ) ; }^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .append ( 0 )  ;^383^^^^^380^415^[REPLACE] buf.append ( ", " ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^383^^^^^380^415^[ADD] buf.append ( ", " ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^if  ( ! o[i] instanceof String )  {^385^^^^^380^415^[REPLACE] if  ( o[i] instanceof String )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^}  if  ( ! o[i] instanceof Integer )  {^387^^^^^380^415^[REPLACE] } else if  ( o[i] instanceof Integer )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REMOVE]^if  (  ( o[i] )  instanceof String )  {     appendConstant ( o[i] ) ; }else     if  (  ( o[i] )  instanceof Integer )  {         switch  (  (  ( Integer )   ( o[i] )  ) .intValue (  )  )  {             case 0 :                 buf.append ( "Opcodes.TOP" ) ;                 break;             case 1 :                 buf.append ( "Opcodes.INTEGER" ) ;                 break;             case 2 :                 buf.append ( "Opcodes.FLOAT" ) ;                 break;             case 3 :                 buf.append ( "Opcodes.DOUBLE" ) ;                 break;             case 4 :                 buf.append ( "Opcodes.LONG" ) ;                 break;             case 5 :                 buf.append ( "Opcodes.NULL" ) ;                 break;             case 6 :                 buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;                 break;         }     }else {         appendLabel (  (  ( Label )   ( o[i] )  )  ) ;     }^387^^^^^380^415^[REMOVE] ^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^412^^^^^387^413^[REPLACE] appendLabel (  ( Label )  o[i] ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  { case 0:^388^^^^^380^415^[REPLACE] switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.LONG" ) ;^390^^^^^380^415^[REPLACE] buf.append ( "Opcodes.TOP" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( n )  ;^393^^^^^380^415^[REPLACE] buf.append ( "Opcodes.INTEGER" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( n )  ;^396^^^^^380^415^[REPLACE] buf.append ( "Opcodes.FLOAT" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.NULL" ) ;^399^^^^^380^415^[REPLACE] buf.append ( "Opcodes.DOUBLE" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.TOP" ) ;^402^^^^^380^415^[REPLACE] buf.append ( "Opcodes.LONG" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.TOP" ) ;^405^^^^^380^415^[REPLACE] buf.append ( "Opcodes.NULL" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^405^^^^^380^415^[ADD] buf.append ( "Opcodes.NULL" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^408^^^^^380^415^[REPLACE] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^break;^408^409^^^^380^415^[ADD] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ; break;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^386^^^^^380^415^[REPLACE] appendConstant ( o[i] ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^}   buf.append ( "Opcodes.TOP" ) ;break;^387^388^389^390^391^380^415^[ADD] else if  ( o[i] instanceof Integer )  { switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  { case 0: buf.append ( "Opcodes.TOP" ) ; break;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^412^^^^^387^413^[REMOVE] ^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^390^391^^^^380^415^[ADD] buf.append ( "Opcodes.TOP" ) ; break;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^393^^^^^380^415^[REPLACE] buf.append ( "Opcodes.INTEGER" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^393^^^^^380^415^[ADD] buf.append ( "Opcodes.INTEGER" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf.append ( "Opcodes.TOP" ) ;^396^^^^^380^415^[REPLACE] buf.append ( "Opcodes.FLOAT" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^396^397^^^^380^415^[ADD] buf.append ( "Opcodes.FLOAT" ) ; break;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^for  ( int i = 0; i  !=  n; ++i )  {^381^^^^^380^415^[REPLACE] for  ( int i = 0; i < n; ++i )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^if  ( i  >=  0 )  {^382^^^^^380^415^[REPLACE] if  ( i > 0 )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^appendFrameTypes ( 1, stack ) ;^383^^^^^380^415^[REPLACE] buf.append ( ", " ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^appendConstant ( o[i] ) ;^385^386^387^388^389^380^415^[ADD] if  ( o[i] instanceof String )  { appendConstant ( o[i] ) ; } else if  ( o[i] instanceof Integer )  { switch  (  (  ( Integer )  o[i] ) .intValue (  )  )  { case 0:^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^399^^^^^380^415^[REMOVE] ^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( n )  ;^402^^^^^380^415^[REPLACE] buf.append ( "Opcodes.LONG" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( i )  ;^408^^^^^380^415^[REPLACE] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[ADD]^^408^^^^^380^415^[ADD] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REMOVE]^buf.append ( "}, " ) .append ( nStack ) .append ( ", new Object[] {" ) ;^402^^^^^380^415^[REMOVE] ^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^buf .setLength ( n )  ;^408^^^^^380^415^[REPLACE] buf.append ( "Opcodes.UNINITIALIZED_THIS" ) ;^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^for  ( int i = 3; i < n; ++i )  {^381^^^^^380^415^[REPLACE] for  ( int i = 0; i < n; ++i )  {^[METHOD] appendFrameTypes [TYPE] void [PARAMETER] final int n Object[] o [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  int i  n  [TYPE]  Object[] o 
[REPLACE]^String name =  ( String )  labelNames.size ( l ) ;^425^^^^^424^431^[REPLACE] String name =  ( String )  labelNames.get ( l ) ;^[METHOD] declareLabel [TYPE] void [PARAMETER] Label l [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label l  [TYPE]  String name 
[REPLACE]^if  ( name != null )  {^426^^^^^424^431^[REPLACE] if  ( name == null )  {^[METHOD] declareLabel [TYPE] void [PARAMETER] Label l [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label l  [TYPE]  String name 
[REPLACE]^name = "l" + labelNames.size (  )  + 4;^427^^^^^424^431^[REPLACE] name = "l" + labelNames.size (  ) ;^[METHOD] declareLabel [TYPE] void [PARAMETER] Label l [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label l  [TYPE]  String name 
[REPLACE]^name = "l" + labelNames.size (  )  /  2;^427^^^^^424^431^[REPLACE] name = "l" + labelNames.size (  ) ;^[METHOD] declareLabel [TYPE] void [PARAMETER] Label l [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label l  [TYPE]  String name 
[REPLACE]^buf.append (  ( String )  labelNames .put ( l , null )   ) ;^441^^^^^440^442^[REPLACE] buf.append (  ( String )  labelNames.get ( l )  ) ;^[METHOD] appendLabel [TYPE] void [PARAMETER] Label l [CLASS] ASMifierMethodVisitor   [TYPE]  boolean false  true  [TYPE]  Label l 
