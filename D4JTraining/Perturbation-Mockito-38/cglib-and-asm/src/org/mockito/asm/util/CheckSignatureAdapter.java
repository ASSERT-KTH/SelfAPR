[REPLACE]^public static final int CLASS_SIGNATURE  = null ;^45^^^^^^^[REPLACE] public static final int CLASS_SIGNATURE = 0;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^public static final int METHOD_SIGNATURE  = null ;^51^^^^^^^[REPLACE] public static final int METHOD_SIGNATURE = 1;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^public static final int TYPE_SIGNATURE = 3;^57^^^^^^^[REPLACE] public static final int TYPE_SIGNATURE = 2;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int EMPTY ;^59^^^^^^^[REPLACE] private static final int EMPTY = 1;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int FORMAL ;^61^^^^^^^[REPLACE] private static final int FORMAL = 2;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int BOUND ;^63^^^^^^^[REPLACE] private static final int BOUND = 4;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int SUPER = 2;^65^^^^^^^[REPLACE] private static final int SUPER = 8;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final  long  PARAM = 16 * 0;^67^^^^^^^[REPLACE] private static final int PARAM = 16;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static  int RETURN = 32;^69^^^^^^^[REPLACE] private static final int RETURN = 32;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static   short  SIMPLE_TYPE = 47;^71^^^^^^^[REPLACE] private static final int SIMPLE_TYPE = 64;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int CLASS_TYPE = 128 << 4;^73^^^^^^^[REPLACE] private static final int CLASS_TYPE = 128;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int END = 256 - 0;^75^^^^^^^[REPLACE] private static final int END = 256;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private final  long  type;^80^^^^^^^[REPLACE] private final int type;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private  short  state;^85^^^^^^^[REPLACE] private int state;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private  SignatureVisitor sv;^96^^^^^^^[REPLACE] private final SignatureVisitor sv;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^if  ( type != TYPE_SIGNATURE ) {^202^^^^^201^218^[REPLACE] if  ( type != TYPE_SIGNATURE || state != EMPTY )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REMOVE]^if  (  ( state )  !=  ( SUPER )  )  {     throw new IllegalStateException (  ) ; }^202^^^^^201^218^[REMOVE] ^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^203^^^^^201^218^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^203^^^^^201^218^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( descriptor  ) {^205^^^^^201^218^[REPLACE] if  ( descriptor == 'V' )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( "ZCBSIFJD".indexOf ( descriptor )   ) {^210^^^^^205^213^[REPLACE] if  ( "ZCBSIFJD".indexOf ( descriptor )  == -1 )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^210^211^212^^^205^213^[ADD] if  ( "ZCBSIFJD".indexOf ( descriptor )  == -1 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException (  )  ;^211^^^^^205^213^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( canBeVoid )  {^206^^^^^201^218^[REPLACE] if  ( !canBeVoid )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^207^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException (  )  ;^207^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( "ZCBSIFJD".indexOf ( descriptor )   ||  -1 )  {^210^^^^^201^218^[REPLACE] if  ( "ZCBSIFJD".indexOf ( descriptor )  == -1 )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^211^^^^^201^218^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException (  )  ;^211^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^this.state = EMPTY  ;^214^^^^^201^218^[REPLACE] state = SIMPLE_TYPE;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( v == true )  {^215^^^^^201^218^[REPLACE] if  ( sv != null )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitTypeArgument ( descriptor ) ;^216^^^^^201^218^[REPLACE] sv.visitBaseType ( descriptor ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
