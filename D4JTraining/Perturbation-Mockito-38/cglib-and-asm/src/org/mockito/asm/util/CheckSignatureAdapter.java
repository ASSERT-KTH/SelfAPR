[REPLACE]^public static final int CLASS_SIGNATURE ;^45^^^^^^^[REPLACE] public static final int CLASS_SIGNATURE = 0;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^public static final int METHOD_SIGNATURE = 1L;^51^^^^^^^[REPLACE] public static final int METHOD_SIGNATURE = 1;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^public static final int TYPE_SIGNATURE = 2 - 3;^57^^^^^^^[REPLACE] public static final int TYPE_SIGNATURE = 2;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int EMPTY  = null ;^59^^^^^^^[REPLACE] private static final int EMPTY = 1;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int FORMAL  = null ;^61^^^^^^^[REPLACE] private static final int FORMAL = 2;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int BOUND  = null ;^63^^^^^^^[REPLACE] private static final int BOUND = 4;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static  int SUPER = 8;^65^^^^^^^[REPLACE] private static final int SUPER = 8;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int PARAM ;^67^^^^^^^[REPLACE] private static final int PARAM = 16;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final  short  RETURN = 32;^69^^^^^^^[REPLACE] private static final int RETURN = 32;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int SIMPLE_TYPE ;^71^^^^^^^[REPLACE] private static final int SIMPLE_TYPE = 64;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int CLASS_TYPE ;^73^^^^^^^[REPLACE] private static final int CLASS_TYPE = 128;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private static final int END ;^75^^^^^^^[REPLACE] private static final int END = 256;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private  short  state;^85^^^^^^^[REPLACE] private int state;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^private  SignatureVisitor sv;^96^^^^^^^[REPLACE] private final SignatureVisitor sv;^ [CLASS] CheckSignatureAdapter  
[REPLACE]^this.type =  state;^108^^^^^107^111^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] SignatureVisitor) [PARAMETER] final int type SignatureVisitor sv [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^this.state  =  this.state ;^109^^^^^107^111^[REPLACE] this.state = EMPTY;^[METHOD] <init> [TYPE] SignatureVisitor) [PARAMETER] final int type SignatureVisitor sv [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^109^110^^^^107^111^[ADD] this.state = EMPTY; this.sv = sv;^[METHOD] <init> [TYPE] SignatureVisitor) [PARAMETER] final int type SignatureVisitor sv [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^this.sv =  null;^110^^^^^107^111^[REPLACE] this.sv = sv;^[METHOD] <init> [TYPE] SignatureVisitor) [PARAMETER] final int type SignatureVisitor sv [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^110^^^^^107^111^[ADD] this.sv = sv;^[METHOD] <init> [TYPE] SignatureVisitor) [PARAMETER] final int type SignatureVisitor sv [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (   ( state != EMPTY && state != FORMAL && state !=true )  ) {^116^117^118^^^115^126^[REPLACE] if  ( type == TYPE_SIGNATURE ||  ( state != EMPTY && state != FORMAL && state != BOUND )  ) {^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^119^^^^^115^126^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^119^^^^^115^126^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^CheckMethodAdapter.checkInternalName ( name, "formal type parameter" ) ;^121^^^^^115^126^[REPLACE] CheckMethodAdapter.checkIdentifier ( name, "formal type parameter" ) ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state = PARAM; ;^122^^^^^115^126^[REPLACE] state = FORMAL;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( sv == null )  {^123^^^^^115^126^[REPLACE] if  ( sv != null )  {^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv .visitTypeVariable ( name )  ;^124^^^^^115^126^[REPLACE] sv.visitFormalTypeParameter ( name ) ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^124^^^^^115^126^[ADD] sv.visitFormalTypeParameter ( name ) ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  ==  FORMAL )  {^129^^^^^128^135^[REPLACE] if  ( state != FORMAL )  {^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REMOVE]^if  (  ( state )  !=  ( SUPER )  )  {     throw new IllegalStateException (  ) ; }^129^^^^^128^135^[REMOVE] ^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^130^^^^^128^135^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^130^^^^^128^135^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state = END; ;^132^^^^^128^135^[REPLACE] state = BOUND;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^132^133^^^^128^135^[ADD] state = BOUND; SignatureVisitor v = sv == null ? null : sv.visitClassBound (  ) ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  = v .visitClassType ( null )  ;^133^^^^^128^135^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitClassBound (  ) ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^134^^^^^128^135^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state != FORMAL || state != BOUND )  {^138^^^^^137^143^[REPLACE] if  ( state != FORMAL && state != BOUND )  {^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^138^139^140^^^137^143^[ADD] if  ( state != FORMAL && state != BOUND )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^139^^^^^137^143^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^139^^^^^137^143^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  sv.visitInterfaceBound (  ) ;^141^^^^^137^143^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitInterfaceBound (  ) ;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^142^^^^^137^143^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (   ( state &  ( EMPTY | FORMAL | BOUND )  )  == 3 ) {^148^149^^^^147^155^[REPLACE] if  ( type != CLASS_SIGNATURE ||  ( state &  ( EMPTY | FORMAL | BOUND )  )  == 0 ) {^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^148^149^150^151^^147^155^[ADD] if  ( type != CLASS_SIGNATURE ||  ( state &  ( EMPTY | FORMAL | BOUND )  )  == 0 ) { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^150^^^^^147^155^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^150^^^^^147^155^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^150^^^^^147^155^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state  = null ;^152^^^^^147^155^[REPLACE] state = SUPER;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^152^^^^^147^155^[ADD] state = SUPER;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  true ;^153^^^^^147^155^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitSuperclass (  ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^153^154^^^^147^155^[ADD] SignatureVisitor v = sv == null ? null : sv.visitSuperclass (  ) ; return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^154^^^^^147^155^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  == type )  {^158^^^^^157^163^[REPLACE] if  ( state != SUPER )  {^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^159^^^^^157^163^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^159^^^^^157^163^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  false ;^161^^^^^157^163^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitInterface (  ) ;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^162^^^^^157^163^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( type != METHOD_SIGNATURE &&  ( state &  ( EMPTY | FORMAL | BOUND | PARAM )  )  == 0 ) {^168^169^170^^^167^176^[REPLACE] if  ( type != METHOD_SIGNATURE ||  ( state &  ( EMPTY | FORMAL | BOUND | PARAM )  )  == 0 ) {^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^171^^^^^167^176^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state = FORMAL; ;^173^^^^^167^176^[REPLACE] state = PARAM;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  sv.visitParameterType (  ) ;^174^^^^^167^176^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitParameterType (  ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^174^175^^^^167^176^[ADD] SignatureVisitor v = sv == null ? null : sv.visitParameterType (  ) ; return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^175^^^^^167^176^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( type !=true ) {^179^180^181^^^178^189^[REPLACE] if  ( type != METHOD_SIGNATURE ||  ( state &  ( EMPTY | FORMAL | BOUND | PARAM )  )  == 0 ) {^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^179^180^181^182^183^178^189^[ADD] if  ( type != METHOD_SIGNATURE ||  ( state &  ( EMPTY | FORMAL | BOUND | PARAM )  )  == 0 ) { throw new IllegalArgumentException  (" ")  ; }^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^182^^^^^178^189^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^182^^^^^178^189^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^182^^^^^178^189^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state  =  state ;^184^^^^^178^189^[REPLACE] state = RETURN;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  sv.visitReturnType (  ) ;^185^^^^^178^189^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitReturnType (  ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^CheckSignatureAdapter cv = new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^186^^^^^178^189^[REPLACE] CheckSignatureAdapter cv = new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^cv.canBeVoid = false;^187^^^^^178^189^[REPLACE] cv.canBeVoid = true;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^187^188^^^^178^189^[ADD] cv.canBeVoid = true; return cv;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^188^^^^^178^189^[REPLACE] return cv;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  CheckSignatureAdapter cv  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  ==  RETURN )  {^192^^^^^191^197^[REPLACE] if  ( state != RETURN )  {^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^192^193^194^^^191^197^[ADD] if  ( state != RETURN )  { throw new IllegalStateException  (" ")  ; }^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^193^^^^^191^197^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  false ;^195^^^^^191^197^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitExceptionType (  ) ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^196^^^^^191^197^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (  state != EMPTY )  {^202^^^^^201^218^[REPLACE] if  ( type != TYPE_SIGNATURE || state != EMPTY )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^203^^^^^201^218^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^203^^^^^201^218^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( descriptor  !=  'V' )  {^205^^^^^201^218^[REPLACE] if  ( descriptor == 'V' )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( "ZCBSIFJD".indexOf ( descriptor )   ||  -1 )  {^210^^^^^201^218^[REPLACE] if  ( "ZCBSIFJD".indexOf ( descriptor )  == -1 )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^211^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^211^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( canBeVoid )  {^206^^^^^201^218^[REPLACE] if  ( !canBeVoid )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^207^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^207^^^^^201^218^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^207^^^^^201^218^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( "ZCBSIFJD".indexOf ( descriptor )   !=  -1 )  {^210^^^^^201^218^[REPLACE] if  ( "ZCBSIFJD".indexOf ( descriptor )  == -1 )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state ;^214^^^^^201^218^[REPLACE] state = SIMPLE_TYPE;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( sv == null )  {^215^^^^^201^218^[REPLACE] if  ( sv != null )  {^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitTypeArgument ( descriptor ) ;^216^^^^^201^218^[REPLACE] sv.visitBaseType ( descriptor ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^216^^^^^201^218^[ADD] sv.visitBaseType ( descriptor ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char descriptor  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (  state !=false )  {^221^^^^^220^229^[REPLACE] if  ( type != TYPE_SIGNATURE || state != EMPTY )  {^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^221^222^223^^^220^229^[ADD] if  ( type != TYPE_SIGNATURE || state != EMPTY )  { throw new IllegalStateException  (" ")  ; }^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^222^^^^^220^229^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^CheckMethodAdapter.checkInternalName ( name, "type variable" ) ;^224^^^^^220^229^[REPLACE] CheckMethodAdapter.checkIdentifier ( name, "type variable" ) ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state ;^225^^^^^220^229^[REPLACE] state = SIMPLE_TYPE;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( sv == false )  {^226^^^^^220^229^[REPLACE] if  ( sv != null )  {^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitClassType ( name ) ;^227^^^^^220^229^[REPLACE] sv.visitTypeVariable ( name ) ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^227^^^^^220^229^[ADD] sv.visitTypeVariable ( name ) ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (  state != EMPTY )  {^232^^^^^231^238^[REPLACE] if  ( type != TYPE_SIGNATURE || state != EMPTY )  {^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^233^^^^^231^238^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^233^^^^^231^238^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^233^^^^^231^238^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state  = null ;^235^^^^^231^238^[REPLACE] state = SIMPLE_TYPE;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  null ;^236^^^^^231^238^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitArrayType (  ) ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^237^^^^^231^238^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( type !=true ) {^241^^^^^240^249^[REPLACE] if  ( type != TYPE_SIGNATURE || state != EMPTY )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^242^^^^^240^249^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^242^^^^^240^249^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^242^^^^^240^249^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^CheckMethodAdapter.checkIdentifier ( name, "class name" ) ;^244^^^^^240^249^[REPLACE] CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state  = null ;^245^^^^^240^249^[REPLACE] state = CLASS_TYPE;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (v == null )  {^246^^^^^240^249^[REPLACE] if  ( sv != null )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^sv.visitClassType ( name ) ;^246^247^248^^^240^249^[ADD] if  ( sv != null )  { sv.visitClassType ( name ) ; }^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitInnerClassType ( name ) ;^247^^^^^240^249^[REPLACE] sv.visitClassType ( name ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  == type )  {^252^^^^^251^259^[REPLACE] if  ( state != CLASS_TYPE )  {^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^252^253^254^^^251^259^[ADD] if  ( state != CLASS_TYPE )  { throw new IllegalStateException  (" ")  ; }^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^253^^^^^251^259^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^253^^^^^251^259^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^CheckMethodAdapter.checkInternalName ( name, "inner class name" ) ;^255^^^^^251^259^[REPLACE] CheckMethodAdapter.checkIdentifier ( name, "inner class name" ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( v == null )  {^256^^^^^251^259^[REPLACE] if  ( sv != null )  {^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv .visitClassType ( name )  ;^257^^^^^251^259^[REPLACE] sv.visitInnerClassType ( name ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  String name  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  (type  ==  CLASS_TYPE )  {^262^^^^^261^268^[REPLACE] if  ( state != CLASS_TYPE )  {^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^263^^^^^261^268^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( sv == null )  {^265^^^^^261^268^[REPLACE] if  ( sv != null )  {^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitSuperclass (  ) ;^266^^^^^261^268^[REPLACE] sv.visitTypeArgument (  ) ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  ==  CLASS_TYPE )  {^271^^^^^270^279^[REPLACE] if  ( state != CLASS_TYPE )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^272^^^^^270^279^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^272^^^^^270^279^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( "+-=".indexOf ( wildcard )   !=  -1 )  {^274^^^^^270^279^[REPLACE] if  ( "+-=".indexOf ( wildcard )  == -1 )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return ;^275^^^^^270^279^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^275^^^^^270^279^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^275^^^^^270^279^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^SignatureVisitor v  =  false ;^277^^^^^270^279^[REPLACE] SignatureVisitor v = sv == null ? null : sv.visitTypeArgument ( wildcard ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^return new CheckSignatureAdapter ( TYPE_SIGNATURE, sv ) ;^278^^^^^270^279^[REPLACE] return new CheckSignatureAdapter ( TYPE_SIGNATURE, v ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char wildcard [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  char wildcard  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( state  ==  CLASS_TYPE )  {^282^^^^^281^289^[REPLACE] if  ( state != CLASS_TYPE )  {^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[ADD]^^282^283^284^^^281^289^[ADD] if  ( state != CLASS_TYPE )  { throw new IllegalStateException  (" ")  ; }^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^283^^^^^281^289^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^state = BOUND; ;^285^^^^^281^289^[REPLACE] state = END;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^if  ( sv == null )  {^286^^^^^281^289^[REPLACE] if  ( sv != null )  {^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
[REPLACE]^sv.visitClassBound (  ) ;^287^^^^^281^289^[REPLACE] sv.visitEnd (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] CheckSignatureAdapter   [TYPE]  SignatureVisitor sv  v  [TYPE]  boolean canBeVoid  false  true  [TYPE]  int BOUND  CLASS_SIGNATURE  CLASS_TYPE  EMPTY  END  FORMAL  METHOD_SIGNATURE  PARAM  RETURN  SIMPLE_TYPE  SUPER  TYPE_SIGNATURE  state  type 
