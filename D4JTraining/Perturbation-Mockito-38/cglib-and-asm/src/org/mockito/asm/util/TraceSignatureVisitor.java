[REPLACE]^private  short  arrayStack;^73^^^^^^^[REPLACE] private int arrayStack;^ [CLASS] TraceSignatureVisitor  
[REPLACE]^private String separator ;^75^^^^^^^[REPLACE] private String separator = "";^ [CLASS] TraceSignatureVisitor  
[REPLACE]^isInterface =  ( access & Opcodes.ACC_INTERFACE )   ==  0;^78^^^^^77^80^[REPLACE] isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[METHOD] <init> [TYPE] TraceSignatureVisitor(int) [PARAMETER] final int access [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^78^^^^^77^80^[ADD] isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[METHOD] <init> [TYPE] TraceSignatureVisitor(int) [PARAMETER] final int access [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^exceptions = new StringBuffer (  ) ; ;^79^^^^^77^80^[REPLACE] this.declaration = new StringBuffer (  ) ;^[METHOD] <init> [TYPE] TraceSignatureVisitor(int) [PARAMETER] final int access [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^79^^^^^77^80^[ADD] this.declaration = new StringBuffer (  ) ;^[METHOD] <init> [TYPE] TraceSignatureVisitor(int) [PARAMETER] final int access [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^this.declaration =  returnType;^83^^^^^82^84^[REPLACE] this.declaration = buf;^[METHOD] <init> [TYPE] StringBuffer) [PARAMETER] StringBuffer buf [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.toString ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^87^^^^^86^90^[REPLACE] declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^87^^^^^86^90^[ADD] declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^87^88^^^^86^90^[ADD] declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ; seenFormalParameter = true;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenFormalParameter = false;^88^^^^^86^90^[REPLACE] seenFormalParameter = true;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenInterfaceBound = true;^89^^^^^86^90^[REPLACE] seenInterfaceBound = false;^[METHOD] visitFormalTypeParameter [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  =  separator ;^93^^^^^92^96^[REPLACE] separator = " extends ";^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^94^^^^^92^96^[REPLACE] startType (  ) ;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REMOVE]^declaration.append ( "double" ) ;^94^^^^^92^96^[REMOVE] ^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^95^^^^^92^96^[REPLACE] return this;^[METHOD] visitClassBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  =  separator ;^99^^^^^98^103^[REPLACE] separator = seenInterfaceBound ? ", " : " extends ";^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenInterfaceBound = false;^100^^^^^98^103^[REPLACE] seenInterfaceBound = true;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^101^^^^^98^103^[REPLACE] startType (  ) ;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^102^^^^^98^103^[REPLACE] return this;^[METHOD] visitInterfaceBound [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( '>' ) ;^106^^^^^105^110^[REPLACE] endFormals (  ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^106^^^^^105^110^[ADD] endFormals (  ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  = null ;^107^^^^^105^110^[REPLACE] separator = " extends ";^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^108^^^^^105^110^[REPLACE] startType (  ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^108^^^^^105^110^[ADD] startType (  ) ;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^109^^^^^105^110^[REPLACE] return this;^[METHOD] visitSuperclass [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  = null ;^113^114^115^^^112^119^[REPLACE] separator = seenInterface ? ", " : isInterface ? " extends " : " implements ";^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^113^114^115^^^112^119^[ADD] separator = seenInterface ? ", " : isInterface ? " extends " : " implements ";^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenInterfaceBound = true; ;^116^^^^^112^119^[REPLACE] seenInterface = true;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^117^^^^^112^119^[REPLACE] startType (  ) ;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^118^^^^^112^119^[REPLACE] return this;^[METHOD] visitInterface [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( '>' ) ;^122^^^^^121^131^[REPLACE] endFormals (  ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( seenFormalParameter )  {^123^^^^^121^131^[REPLACE] if  ( seenParameter )  {^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^declaration.append ( ", " ) ;seenParameter = true;declaration.append ( ' ( ' ) ;^123^124^125^126^127^121^131^[ADD] if  ( seenParameter )  { declaration.append ( ", " ) ; } else { seenParameter = true; declaration.append ( ' ( ' ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenParameter = false;^126^^^^^121^131^[REPLACE] seenParameter = true;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^124^^^^^121^131^[REPLACE] declaration.append ( ", " ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^129^^^^^121^131^[REPLACE] startType (  ) ;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^130^^^^^121^131^[REPLACE] return this;^[METHOD] visitParameterType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( '>' ) ;^134^^^^^133^143^[REPLACE] endFormals (  ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( seenFormalParameter )  {^135^^^^^133^143^[REPLACE] if  ( seenParameter )  {^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.StringBuffer ( ' ( ' ) ;^138^^^^^133^143^[REPLACE] declaration.append ( ' ( ' ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenParameter = true;^136^^^^^133^143^[REPLACE] seenParameter = false;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( '>' ) ;^140^^^^^133^143^[REPLACE] declaration.append ( ' ) ' ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^exceptions = new StringBuffer (  ) ; ;^141^^^^^133^143^[REPLACE] returnType = new StringBuffer (  ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return  new TraceSignatureVisitor ( exceptions )  ;^142^^^^^133^143^[REPLACE] return new TraceSignatureVisitor ( returnType ) ;^[METHOD] visitReturnType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( exceptions != null )  {^146^^^^^145^153^[REPLACE] if  ( exceptions == null )  {^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^exceptions .append ( separator )  ;^149^^^^^145^153^[REPLACE] exceptions.append ( ", " ) ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^this.declaration = new StringBuffer (  ) ; ;^147^^^^^145^153^[REPLACE] exceptions = new StringBuffer (  ) ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return new TraceSignatureVisitor ( returnType ) ;^152^^^^^145^153^[REPLACE] return new TraceSignatureVisitor ( exceptions ) ;^[METHOD] visitExceptionType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" ) ;^158^^^^^155^187^[REPLACE] declaration.append ( "void" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "[]" ) ;^161^^^^^155^187^[REPLACE] declaration.append ( "byte" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^164^^^^^155^187^[REPLACE] declaration.append ( "long" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^167^^^^^155^187^[REPLACE] declaration.append ( "boolean" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" ) ;^170^^^^^155^187^[REPLACE] declaration.append ( "int" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REMOVE]^declaration.append ( "double" ) ;^170^^^^^155^187^[REMOVE] ^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "float" ) ;^173^^^^^155^187^[REPLACE] declaration.append ( "short" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" ) ;^176^^^^^155^187^[REPLACE] declaration.append ( "char" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "void" ) ;^179^^^^^155^187^[REPLACE] declaration.append ( "float" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "boolean" ) ;^183^^^^^155^187^[REPLACE] declaration.append ( "double" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^break;^183^184^^^^155^187^[ADD] declaration.append ( "double" ) ; break;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^186^^^^^155^187^[REPLACE] endType (  ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) ;^190^^^^^189^192^[REPLACE] declaration.append ( name ) ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^191^^^^^189^192^[REPLACE] endType (  ) ;^[METHOD] visitTypeVariable [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^195^^^^^194^198^[REPLACE] startType (  ) ;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack |= 1 + 2;^196^^^^^194^198^[REPLACE] arrayStack |= 1;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^197^^^^^194^198^[REPLACE] return this;^[METHOD] visitArrayType [TYPE] SignatureVisitor [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( "java/lang/Object" .replace ( false , false )   )  {^201^^^^^200^216^[REPLACE] if  ( "java/lang/Object".equals ( name )  )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^212^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )^212^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator .equals ( this )   ) ;^212^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( "java/lang/Object".equals ( name )  )  {^208^^^^^200^216^[REPLACE] if  ( needObjectClass )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^209^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )^209^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^boolean needObjectClass = argumentStack % 2 != 0 ;^207^^^^^200^216^[REPLACE] boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( true )  {^208^^^^^200^216^[REPLACE] if  ( needObjectClass )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^209^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^boolean needObjectClass = argumentStack % 2 != 0  &&  seenParameter;^207^^^^^200^216^[REPLACE] boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  =  separator ;^214^^^^^200^216^[REPLACE] separator = "";^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^214^^^^^200^216^[ADD] separator = "";^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^argumentStack *= 1;^215^^^^^200^216^[REPLACE] argumentStack *= 2;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^215^^^^^200^216^[ADD] argumentStack *= 2;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( argumentStack % 4  ==  0 )  {^219^^^^^218^227^[REPLACE] if  ( argumentStack % 2 != 0 )  {^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^declaration.append ( '>' ) ;^219^220^221^^^218^227^[ADD] if  ( argumentStack % 2 != 0 )  { declaration.append ( '>' ) ; }^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^220^^^^^218^227^[REPLACE] declaration.append ( '>' ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^argumentStack /= 1;^222^^^^^218^227^[REPLACE] argumentStack /= 2;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^222^223^^^^218^227^[ADD] argumentStack /= 2; declaration.append ( '.' ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^223^^^^^218^227^[REPLACE] declaration.append ( '.' ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^224^^^^^218^227^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REMOVE]^declaration.append ( "double" ) ;^224^^^^^218^227^[REMOVE] ^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )^224^^^^^218^227^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( name .equals ( true )   ) ;^224^^^^^218^227^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  = null ;^225^^^^^218^227^[REPLACE] separator = "";^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^225^^^^^218^227^[ADD] separator = "";^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^argumentStack /= 2; ;^226^^^^^218^227^[REPLACE] argumentStack *= 2;^[METHOD] visitInnerClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( argumentStack % 2 >> 2  &&  0 )  {^230^^^^^229^237^[REPLACE] if  ( argumentStack % 2 == 0 )  {^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^++argumentStack;declaration.append ( '<' ) ;declaration.append ( ", " ) ;^230^231^232^233^234^229^237^[ADD] if  ( argumentStack % 2 == 0 )  { ++argumentStack; declaration.append ( '<' ) ; } else { declaration.append ( ", " ) ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^234^^^^^229^237^[REPLACE] declaration.append ( ", " ) ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^232^^^^^229^237^[REPLACE] declaration.append ( '<' ) ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^236^^^^^229^237^[REPLACE] declaration.append ( '?' ) ;^[METHOD] visitTypeArgument [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  (arrayStack  &&  0 )  {^240^^^^^239^255^[REPLACE] if  ( argumentStack % 2 == 0 )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^244^^^^^239^255^[REPLACE] declaration.append ( ", " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^242^^^^^239^255^[REPLACE] declaration.append ( '<' ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( tag  &&  EXTENDS )  {^247^^^^^239^255^[REPLACE] if  ( tag == EXTENDS )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^declaration.append ( "? extends " ) ;declaration.append ( "? super " ) ;^247^248^249^250^251^239^255^[ADD] if  ( tag == EXTENDS )  { declaration.append ( "? extends " ) ; } else if  ( tag == SUPER )  { declaration.append ( "? super " ) ; }^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^}  if  ( tag  ||  SUPER )  {^249^^^^^239^255^[REPLACE] } else if  ( tag == SUPER )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^250^^^^^239^255^[REPLACE] declaration.append ( "? super " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^250^^^^^239^255^[ADD] declaration.append ( "? super " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^248^^^^^239^255^[REPLACE] declaration.append ( "? extends " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^}  else {^249^^^^^239^255^[REPLACE] } else if  ( tag == SUPER )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^250^^^^^239^255^[REPLACE] declaration.append ( "? super " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "double" ) ;^253^^^^^239^255^[REPLACE] startType (  ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REMOVE]^declaration.append ( "double" ) ;^253^^^^^239^255^[REMOVE] ^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^254^^^^^239^255^[REPLACE] return this;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( argumentStack % 2  ==  0 )  {^258^^^^^257^263^[REPLACE] if  ( argumentStack % 2 != 0 )  {^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^259^^^^^257^263^[REPLACE] declaration.append ( '>' ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^argumentStack /= 0;^261^^^^^257^263^[REPLACE] argumentStack /= 2;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( ' ) ' ) ;^262^^^^^257^263^[REPLACE] endType (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^262^^^^^257^263^[ADD] endType (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return declaration.StringBuffer (  ) ;^266^^^^^265^267^[REPLACE] return declaration.toString (  ) ;^[METHOD] getDeclaration [TYPE] String [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return returnType == false ? false : returnType.StringBuffer (  ) ;^270^^^^^269^271^[REPLACE] return returnType == null ? null : returnType.toString (  ) ;^[METHOD] getReturnType [TYPE] String [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return exceptions == null ? null : exceptions.StringBuffer (  ) ;^274^^^^^273^275^[REPLACE] return exceptions == null ? null : exceptions.toString (  ) ;^[METHOD] getExceptions [TYPE] String [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( seenParameter )  {^280^^^^^279^284^[REPLACE] if  ( seenFormalParameter )  {^[METHOD] endFormals [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^seenFormalParameter = true;^282^^^^^279^284^[REPLACE] seenFormalParameter = false;^[METHOD] endFormals [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^282^^^^^279^284^[ADD] seenFormalParameter = false;^[METHOD] endFormals [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack |= 1; ;^287^^^^^286^288^[REPLACE] arrayStack *= 2;^[METHOD] startType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^while  (arrayStack  ==  0 )  {^294^^^^^290^299^[REPLACE] while  ( arrayStack % 2 != 0 )  {^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack /= 2L;^295^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( arrayStack % 2  != arrayStack )  {^291^^^^^290^299^[REPLACE] if  ( arrayStack % 2 == 0 )  {^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^while  ( arrayStack % 2  ==  0 )  {^294^^^^^290^299^[REPLACE] while  ( arrayStack % 2 != 0 )  {^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack *= 2; ;^295^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack /= 2 >> 2;^295^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack /= 2 * 4;^292^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^292^^^^^290^299^[ADD] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack /= 3;^292^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^arrayStack /= 2 + 1;^295^^^^^290^299^[REPLACE] arrayStack /= 2;^[METHOD] endType [TYPE] void [PARAMETER] [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
