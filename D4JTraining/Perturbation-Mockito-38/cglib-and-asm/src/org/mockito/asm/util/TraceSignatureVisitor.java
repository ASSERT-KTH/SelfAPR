[REPLACE]^private  StringBuffer declaration;^44^^^^^^^[REPLACE] private final StringBuffer declaration;^ [CLASS] TraceSignatureVisitor  
[REPLACE]^private  short  arrayStack;^73^^^^^^^[REPLACE] private int arrayStack;^ [CLASS] TraceSignatureVisitor  
[REPLACE]^private String separator  = null ;^75^^^^^^^[REPLACE] private String separator = "";^ [CLASS] TraceSignatureVisitor  
[REPLACE]^declaration.append ( "byte" )  ;^158^^^^^155^187^[REPLACE] declaration.append ( "void" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "void" )  ;^161^^^^^155^187^[REPLACE] declaration.append ( "byte" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^161^162^^^^155^187^[ADD] declaration.append ( "byte" ) ; break;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^164^^^^^155^187^[REPLACE] declaration.append ( "long" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^164^165^^^^155^187^[ADD] declaration.append ( "long" ) ; break;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^167^^^^^155^187^[REPLACE] declaration.append ( "boolean" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^170^^^^^155^187^[REPLACE] declaration.append ( "int" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^170^^^^^155^187^[ADD] declaration.append ( "int" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^173^^^^^155^187^[REPLACE] declaration.append ( "short" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^176^^^^^155^187^[REPLACE] declaration.append ( "char" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^179^^^^^155^187^[REPLACE] declaration.append ( "float" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^179^180^^^^155^187^[ADD] declaration.append ( "float" ) ; break;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^183^^^^^155^187^[REPLACE] declaration.append ( "double" ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^186^^^^^155^187^[REPLACE] endType (  ) ;^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REMOVE]^startType (  )  ;^186^^^^^155^187^[REMOVE] ^[METHOD] visitBaseType [TYPE] void [PARAMETER] final char descriptor [CLASS] TraceSignatureVisitor   [TYPE]  char descriptor  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if   (  arrayStack % 2 == 0  )   {  ;^201^^^^^200^216^[REPLACE] if  ( "java/lang/Object".equals ( name )  )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^212^^^^^201^213^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^212^^^^^201^213^[ADD] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^212^^^^^201^213^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( true )  {^208^^^^^200^216^[REPLACE] if  ( needObjectClass )  {^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^209^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^209^^^^^200^216^[REPLACE] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^209^^^^^200^216^[ADD] declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^boolean needObjectClass = argumentStack % 2L != 0 && seenParameter;^207^^^^^200^216^[REPLACE] boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^208^209^210^^^200^216^[ADD] if  ( needObjectClass )  { declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ; }^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^boolean needObjectClass = argumentStack % 2 + 3 != 0  <  seenParameter;^207^^^^^200^216^[REPLACE] boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^separator  =  separator ;^214^^^^^200^216^[REPLACE] separator = "";^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^argumentStack *= 2 % 3;^215^^^^^200^216^[REPLACE] argumentStack *= 2;^[METHOD] visitClassType [TYPE] void [PARAMETER] String name [CLASS] TraceSignatureVisitor   [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if   (  arrayStack % 2 == 0  )   {  ;^240^^^^^239^255^[REPLACE] if  ( argumentStack % 2 == 0 )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^244^^^^^240^245^[REPLACE] declaration.append ( ", " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^242^^^^^239^255^[REPLACE] declaration.append ( '<' ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^if  ( tag  ) {^247^^^^^239^255^[REPLACE] if  ( tag == EXTENDS )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^}  else {^249^^^^^239^255^[REPLACE] } else if  ( tag == SUPER )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^}^249^250^251^^^239^255^[ADD] else if  ( tag == SUPER )  { declaration.append ( "? super " ) ; }^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^250^^^^^239^255^[REPLACE] declaration.append ( "? super " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration .toString (  )  ;^248^^^^^239^255^[REPLACE] declaration.append ( "? extends " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^} else if  ( tag  ) {^249^^^^^239^255^[REPLACE] } else if  ( tag == SUPER )  {^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[ADD]^^250^^^^^239^255^[ADD] declaration.append ( "? super " ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^declaration.append ( "byte" )  ;^253^^^^^239^255^[REPLACE] startType (  ) ;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
[REPLACE]^return null;^254^^^^^239^255^[REPLACE] return this;^[METHOD] visitTypeArgument [TYPE] SignatureVisitor [PARAMETER] final char tag [CLASS] TraceSignatureVisitor   [TYPE]  char tag  [TYPE]  StringBuffer buf  declaration  exceptions  returnType  [TYPE]  boolean false  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  true  [TYPE]  String name  separator  [TYPE]  int access  argumentStack  arrayStack 
