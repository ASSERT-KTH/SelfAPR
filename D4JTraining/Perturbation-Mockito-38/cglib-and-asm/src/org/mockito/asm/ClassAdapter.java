[REPLACE]^this.cv =  null;^52^^^^^51^53^[REPLACE] this.cv = cv;^[METHOD] <init> [TYPE] ClassVisitor) [PARAMETER] ClassVisitor cv [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  boolean false  true 
[REPLACE]^cv.visit ( version, access, superName, signature, superName, interfaces ) ;^63^^^^^55^64^[REPLACE] cv.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^cv .visitOuterClass ( source , debug , debug )  ;^67^^^^^66^68^[REPLACE] cv.visitSource ( source, debug ) ;^[METHOD] visitSource [TYPE] void [PARAMETER] String source String debug [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String debug  source  [TYPE]  boolean false  true 
[REPLACE]^cv.visitOuterClass ( owner, owner, desc ) ;^75^^^^^70^76^[REPLACE] cv.visitOuterClass ( owner, name, desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String desc  name  owner  [TYPE]  boolean false  true 
[REPLACE]^return cv.visitAnnotation ( desc, true ) ;^82^^^^^78^83^[REPLACE] return cv.visitAnnotation ( desc, visible ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String desc final boolean visible [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String desc  [TYPE]  boolean false  true  visible 
[REPLACE]^cv .visitSource ( false , null )  ;^86^^^^^85^87^[REPLACE] cv.visitAttribute ( attr ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attr [CLASS] ClassAdapter   [TYPE]  Attribute attr  [TYPE]  ClassVisitor cv  [TYPE]  boolean false  true 
[REPLACE]^cv .visitOuterClass ( outerName , outerName , name )  ;^95^^^^^89^96^[REPLACE] cv.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[ADD]^^95^^^^^89^96^[ADD] cv.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^return cv .visitEnd (  )  ;^105^^^^^98^106^[REPLACE] return cv.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] ClassAdapter   [TYPE]  Object value  [TYPE]  ClassVisitor cv  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^return cv.visitMethod ( access, signature, desc, signature, exceptions ) ;^115^^^^^108^116^[REPLACE] return cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^cv.visitAttribute ( attr ) ;^119^^^^^118^120^[REPLACE] cv.visitEnd (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassAdapter   [TYPE]  ClassVisitor cv  [TYPE]  boolean false  true 
