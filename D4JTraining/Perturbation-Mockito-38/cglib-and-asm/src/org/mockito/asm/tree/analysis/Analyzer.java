[REPLACE]^private  short  top;^74^^^^^^^[REPLACE] private int top;^ [CLASS] Analyzer  
[REPLACE]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )   ==  0 )  {^101^^^^^100^298^[REPLACE] if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^frames = new Frame[n]  ;^102^^^^^100^298^[REPLACE] frames = new Frame[0];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^return frames;  ;^103^^^^^100^298^[REPLACE] return frames;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^frames = new Frame[3];^102^^^^^100^298^[REPLACE] frames = new Frame[0];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^n =  null.instructions.size (  ) ;^105^^^^^100^298^[REPLACE] n = m.instructions.size (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^insns =  null.instructions;^106^^^^^100^298^[REPLACE] insns = m.instructions;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^insnHandlers = new ArrayList (  )  ;^107^^^^^100^298^[REPLACE] handlers = new List[n];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^frames = new Frame[0]  ;^108^^^^^100^298^[REPLACE] frames = new Frame[n];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^frames = new Frame[n]  ;^109^^^^^100^298^[REPLACE] subroutines = new Subroutine[n];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^queued  =  queued ;^110^^^^^100^298^[REPLACE] queued = new boolean[n];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^queue  =  queue ;^111^^^^^100^298^[REPLACE] queue = new int[n];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^top = 2;^112^^^^^100^298^[REPLACE] top = 0;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnHandlers != this  )  {^121^^^^^100^298^[REPLACE] if  ( insnHandlers == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^insnHandlers =  new HashMap (  )  ;^122^^^^^100^298^[REPLACE] insnHandlers = new ArrayList (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handlers[j]  =  handlers[j] ;^123^^^^^100^298^[REPLACE] handlers[j] = insnHandlers;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^123^^^^^100^298^[ADD] handlers[j] = insnHandlers;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int i = 0 ; i < m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^298^[REPLACE] for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.size ( i ) ;^116^^^^^100^298^[REPLACE] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^117^^^^^100^298^[ADD] int begin = insns.indexOf ( tcb.start ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int end = insns.get ( tcb.end ) ;^118^^^^^100^298^[REPLACE] int end = insns.indexOf ( tcb.end ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^119^120^121^122^123^100^298^[ADD] for  ( int j = begin; j < end; ++j )  { List insnHandlers = handlers[j]; if  ( insnHandlers == null )  { insnHandlers = new ArrayList (  ) ; handlers[j] = insnHandlers;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^List insnHandlers = handlers[insn]  ;^120^^^^^100^298^[REPLACE] List insnHandlers = handlers[j];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Subroutine main = new Subroutine ( false, m.maxLocals, false ) ;^130^^^^^100^298^[REPLACE] Subroutine main = new Subroutine ( null, m.maxLocals, null ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Map subroutineHeads = new HashMap (  )  ;^131^^^^^100^298^[REPLACE] List subroutineCalls = new ArrayList (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^List subroutineCalls = new ArrayList (  )  ;^132^^^^^100^298^[REPLACE] Map subroutineHeads = new HashMap (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^findSubroutine ( 4, main, subroutineCalls ) ;^133^^^^^100^298^[REPLACE] findSubroutine ( 0, main, subroutineCalls ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  subroutine == null  )   {  ;^137^^^^^100^298^[REPLACE] if  ( sub == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^insns.indexOf ( tcb.end )  ;^142^^^^^137^143^[REPLACE] sub.callers.add ( jsr ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^138^^^^^100^298^[ADD] sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^JumpInsnNode jnode =  (  ( JumpInsnNode )   ( node )  )  ;^135^^^^^100^298^[REPLACE] JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( j.label ) ;^136^^^^^100^298^[REPLACE] Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutines[i] != null ) {^146^^^^^100^298^[REPLACE] if  ( subroutines[i] != null && subroutines[i].start == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^147^^^^^100^298^[ADD] subroutines[i] = null;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutines[i] = this;^147^^^^^100^298^[REPLACE] subroutines[i] = null;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^145^146^147^148^^100^298^[ADD] for  ( int i = 0; i < n; ++i )  { if  ( subroutines[i] != null && subroutines[i].start == null )  { subroutines[i] = null; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Frame handler = newFrame ( m.maxLocals, m.maxStack )  ;^152^^^^^100^298^[REPLACE] Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Frame current = newFrame ( m.maxLocals, m.maxStack )  ;^153^^^^^100^298^[REPLACE] Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Type ctype = getObjectType ( owner )  ;^154^^^^^100^298^[REPLACE] Type[] args = Type.getArgumentTypes ( m.desc ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int local = 4;^155^^^^^100^298^[REPLACE] int local = 0;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (   0 )  {^156^^^^^100^298^[REPLACE] if  (  ( m.access & ACC_STATIC )  == 0 )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Type ctype = Type .getArgumentTypes (  )  ;^157^^^^^100^298^[REPLACE] Type ctype = Type.getObjectType ( owner ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Type[] args = getArgumentTypes ( m.desc )  ;^157^^^^^100^298^[REPLACE] Type ctype = Type.getObjectType ( owner ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( args[i].getSize (  )   !=  2 )  {^162^^^^^100^298^[REPLACE] if  ( args[i].getSize (  )  == 2 )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^current.setLocal ( local++, interpreter.newValue ( this )  ) ;^163^^^^^100^298^[REPLACE] current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^current.setLocal (  ( local++ ) , interpreter.newValue ( null )  )  ;^163^^^^^100^298^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int i = 0 ; i < args.length; ++i )  {^160^^^^^100^298^[REPLACE] for  ( int i = 0; i < args.length; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( 0 - 2, current, null ) ;^169^^^^^100^298^[REPLACE] merge ( 0, current, null ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (  insnType == AbstractInsnNode.LINE && insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^100^298^[REPLACE] if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( ! insnNode instanceof JumpInsnNode )  {^193^^^^^183^267^[REPLACE] if  ( insnNode instanceof JumpInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof LookupSwitchInsnNode )  {^208^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;int jump = insns.indexOf ( lsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^208^209^210^211^212^183^267^[ADD] else if  ( insnNode instanceof LookupSwitchInsnNode )  { LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode; int jump = insns.indexOf ( lsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof TableSwitchInsnNode )  {^219^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^230^^^^^183^267^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( insnOpcode != ATHROW ) {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == null )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( ! insnNode instanceof VarInsnNode )  {^250^^^^^246^266^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^259^^^^^246^266^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   int var =  (  ( IincInsnNode )  insnNode ) .var;subroutine.access[var] = true;^259^260^261^262^^246^266^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^261^^^^^246^266^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( VarInsnNode )   ( insnNode )  ) .var  ;^260^^^^^246^266^[REPLACE] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^260^261^^^^246^266^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^257^^^^^253^258^[ADD] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^252^^^^^246^266^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^257^^^^^246^266^[ADD] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( IincInsnNode )   ( insnNode )  ) .var  ;^251^^^^^246^266^[REPLACE] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^259^^^^^246^266^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^261^^^^^246^266^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^252^^^^^246^266^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = true  ;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^261^^^^^246^266^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^261^^^^246^266^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^252^^^^^246^266^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (  insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var local] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == null )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( ! insnNode instanceof VarInsnNode )  {^250^^^^^183^267^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int var =  (  ( VarInsnNode )  insnNode ) .var;subroutine.access[var] = true;^250^251^252^253^254^183^267^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^259^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^261^^^^^183^267^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^261^^^^183^267^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( VarInsnNode )   ( insnNode )  ) .var  ;^260^^^^^183^267^[REPLACE] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^252^^^^^183^267^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^257^^^^^183^267^[ADD] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( IincInsnNode )   ( insnNode )  ) .var  ;^251^^^^^183^267^[REPLACE] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   int var =  (  ( IincInsnNode )  insnNode ) .var;subroutine.access[var] = true;^259^260^261^262^^183^267^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^261^^^^^183^267^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^252^^^^^183^267^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var local] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^^^^^183^267^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^261^^^^^183^267^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^252^^^^183^267^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   subroutine.access[var] = true;^259^260^261^262^^183^267^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^260^261^^^^183^267^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^^^^^183^267^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub != false )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^232^^^^^183^267^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == null )  {^237^^^^^183^267^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 - 3, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, var  1 - 1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int i = 0 ; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^183^267^[REPLACE] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Object caller = sub.callers.get ( i ) ;^235^^^^^183^267^[REPLACE] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^236^^^^^183^267^[ADD] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^throw new AnalyzerException ( "Execution can fall off end of the code" )  ;^232^^^^^183^267^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != null )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1, frames[call], current, subs[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,var  1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}^246^247^248^249^^183^267^[ADD] else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) { if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == this )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int var =  (  ( VarInsnNode )  insnNode ) .var;subroutine.access[var] = true;^250^251^252^253^254^246^266^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^253^254^255^256^257^246^266^[ADD] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  0] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^246^266^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^250^251^252^253^254^246^266^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^246^266^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^^^^^246^266^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^250^^^^^183^267^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  3] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (  insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^259^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^252^^^^^183^267^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^253^254^255^256^257^183^267^[ADD] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  2] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^236^^^^^183^267^[REPLACE] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^jump =  insns.indexOf ( null ) ;^226^^^^^183^267^[REPLACE] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^220^221^^^^183^267^[ADD] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode; int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.get ( tsi.dflt ) ;^221^^^^^183^267^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int j = 0 ; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^183^267^[REPLACE] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels.size ( j ) ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  subroutine == null  )   {  ;^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = true  ;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  subroutine == null  )   {  ;^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  0] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == this )  {^237^^^^^183^267^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  3 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^234^235^236^237^238^183^267^[ADD] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  { Object caller = subroutine.callers.get ( i ) ; int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ; if  ( frames[call] != null )  { merge ( call + 1,^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int call = insns .indexOf (  )  ;^236^^^^^183^267^[REPLACE] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != true )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^231^232^233^^^183^267^[ADD] if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^237^238^239^240^241^183^267^[ADD] if  ( frames[call] != null )  { merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (var  1, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^238^239^240^^^183^267^[ADD] merge ( call + 1, frames[call], current,^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,  ( insn + 1 )  )  ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode != ATHROW ) {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == false )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^249^250^251^252^253^246^266^[ADD] if  ( subroutine != null )  { if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^250^^^^^246^266^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^^^^^246^266^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 * 1] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var local] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^249^250^251^252^253^183^267^[ADD] if  ( subroutine != null )  { if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  4] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LookupSwitchInsnNode lsnode =  (  ( LookupSwitchInsnNode )   ( node )  )  ;^220^^^^^183^267^[REPLACE] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( top )  ;^221^^^^^183^267^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^225^^^^^183^267^[ADD] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^return ;^232^^^^^183^267^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^jump =  insns.indexOf ( null ) ;^215^^^^^183^267^[REPLACE] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LookupSwitchInsnNode lsnode =  (  ( LookupSwitchInsnNode )   ( node )  )  ;^209^^^^^183^267^[REPLACE] LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.indexOf ( tsi.dflt )  ;^210^^^^^183^267^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int i = 0  ;^213^^^^^183^267^[REPLACE] for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  lsi.labels.size ( j ) ;^214^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( ! insnNode instanceof TableSwitchInsnNode )  {^219^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == true )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   subroutine.access[var] = true;^259^260^261^262^^246^266^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^251^252^^^^246^266^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine ==sub )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = true  ;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 >>> 0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub != null )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == this  )  {^237^^^^^183^267^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (var  1, frames[call], current, subs[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,var  2 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Object caller = subroutine.callers.get ( insnType ) ;^235^^^^^183^267^[REPLACE] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call var, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  0 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1L] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^252^^^^246^266^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 2] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == null )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^226^227^^^^183^267^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int end = insns.indexOf ( tcb.end )  ;^221^^^^^183^267^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode  !=  RET )  {^230^^^^^183^267^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == true )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  sub == null  )   {  ;^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub != this )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, var  1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top == LLOAD ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^215^216^^^^183^267^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.get ( lsi.dflt ) ;^210^^^^^183^267^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^213^214^215^216^217^183^267^[ADD] for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  { LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^221^^^^^183^267^[ADD] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int i = 0  ;^224^^^^^183^267^[REPLACE] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int j = 0  ;^234^^^^^183^267^[REPLACE] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^235^^^^^183^267^[ADD] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode != GOTO ) {^195^^^^^183^267^[REPLACE] if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^merge ( insn + 1, current, subroutine ) ;newControlFlowEdge ( insn, insn + 1 ) ;^195^196^197^198^^183^267^[ADD] if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( insn  1, current, subroutine ) ;^196^^^^^183^267^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^196^197^^^^183^267^[ADD] merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, insn  1 - 4 ) ;^197^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^197^^^^^183^267^[ADD] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode  &&  JSR )  {^200^^^^^183^267^[REPLACE] if  ( insnOpcode == JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^200^201^202^203^^183^267^[ADD] if  ( insnOpcode == JSR )  { merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( top, current, subroutine ) ;^205^^^^^200^206^[REPLACE] merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( top, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^201^202^203^^^183^267^[REPLACE] merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^201^202^203^^^183^267^[ADD] merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^JumpInsnNode jsr =  (  ( JumpInsnNode )   ( subroutineCalls.remove ( 0 )  )  )  ;^194^^^^^183^267^[REPLACE] JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^199^^^^^183^267^[ADD] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( nOpcode != GOTO ) {^195^^^^^183^267^[REPLACE] if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (n  1, current, subroutine ) ;^196^^^^^183^267^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, jump )  ;^197^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode  ||  JSR )  {^200^^^^^183^267^[REPLACE] if  ( insnOpcode == JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (  ( insn + 1 ) , current, subroutine )  ;^205^^^^^200^206^[REPLACE] merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^findSubroutine ( 0, main, subroutineCalls )  ;^205^^^^^200^206^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( jsrump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^201^202^203^^^183^267^[REPLACE] merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^219^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == null )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( n == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == false )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  2 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^newControlFlowEdge ( insn,  ( insn + 1 )  )  ;^243^^^^^183^267^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub != null )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == false )  {^237^^^^^183^267^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  0, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  2] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^merge ( jump, current, subroutine ) ;^221^222^^^^183^267^[ADD] int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels .get ( insnType )  ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == this )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  4] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != this  )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 >> 4, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == true )  {^237^^^^^183^267^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1L, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == null )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels.size ( jump ) ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^215^^^^^183^267^[ADD] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int j = 0 ; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^183^267^[REPLACE] for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if   (  insnNode instanceof IincInsnNode  )   {  ;^219^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( top  ||  RET )  {^230^^^^^183^267^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == null )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  4] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == false )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^251^252^^^^183^267^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 << 4, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 2] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^250^251^252^253^254^183^267^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1L] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 >>> 4, frames[call], current, subs[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, var  1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine  =  null ;^191^^^^^183^267^[REPLACE] subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^226^^^^^183^267^[ADD] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^194^^^^^183^267^[ADD] JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.indexOf ( tsi.dflt )  ;^199^^^^^183^267^[REPLACE] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int jump = insns.indexOf ( lsi.dflt ) ;^209^210^^^^183^267^[ADD] LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode; int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  lsi.labels .get ( var )  ;^214^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^220^^^^^183^267^[ADD] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  (  ( LabelNode )   ( get ( j )  )  )  ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( insn  1, f, subroutine ) ;^187^^^^^183^267^[REPLACE] merge ( insn + 1, f, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, insn  1 ) ;^188^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( ! insnNode instanceof JumpInsnNode )  {^193^^^^^100^298^[REPLACE] if  ( insnNode instanceof JumpInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^JumpInsnNode j =  ( JumpInsnNode )  insnNode;merge ( insn + 1, current, subroutine ) ;newControlFlowEdge ( insn, insn + 1 ) ;^193^194^195^196^197^100^298^[ADD] if  ( insnNode instanceof JumpInsnNode )  { JumpInsnNode j =  ( JumpInsnNode )  insnNode; if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^208^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;int jump = insns.indexOf ( lsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^208^209^210^211^212^100^298^[ADD] else if  ( insnNode instanceof LookupSwitchInsnNode )  { LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode; int jump = insns.indexOf ( lsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof TableSwitchInsnNode )  {^219^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;int jump = insns.indexOf ( tsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^219^220^221^222^223^100^298^[ADD] else if  ( insnNode instanceof TableSwitchInsnNode )  { TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode; int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == false )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^249^250^251^252^253^100^298^[ADD] if  ( subroutine != null )  { if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( ! insnNode instanceof VarInsnNode )  {^250^^^^^100^298^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^259^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^261^^^^^100^298^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( VarInsnNode )   ( insnNode )  ) .var  ;^260^^^^^100^298^[REPLACE] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^261^^^^^100^298^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = false;^252^^^^^100^298^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var] = true  ;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int var =  (  ( IincInsnNode )   ( insnNode )  ) .var  ;^251^^^^^100^298^[REPLACE] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^253^254^255^256^257^100^298^[ADD] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   int var =  (  ( IincInsnNode )  insnNode ) .var;subroutine.access[var] = true;^259^260^261^262^^100^298^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^261^^^^^100^298^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^^^^^100^298^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[ ( var + 1 ) ] = true  ;^252^^^^^100^298^[REPLACE] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^257^^^^^100^298^[ADD] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int var =  (  ( VarInsnNode )  insnNode ) .var;subroutine.access[var] = true;^250^251^252^253^254^100^298^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode == LLOAD ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 << 3] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top == LLOAD ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != false )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^throw new AnalyzerException ( "Execution can fall off end of the code" )  ;^232^^^^^100^298^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == null )  {^237^^^^^100^298^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (var  4, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,  ( insn + 1 )  )  ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int i = 0 ; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^100^298^[REPLACE] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^235^236^^^^100^298^[ADD] Object caller = subroutine.callers.get ( i ) ; int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int call = insns .indexOf (  )  ;^236^^^^^100^298^[REPLACE] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^232^^^^^100^298^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine !=sub )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == true )  {^237^^^^^100^298^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^238^239^240^^^100^298^[ADD] merge ( call + 1, frames[call], current,^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^259^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   subroutine.access[var] = true;^259^260^261^262^^100^298^[ADD] else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (  insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^260^261^^^^100^298^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  2] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^252^^^^^100^298^[ADD] subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Object caller = sub.callers.get ( i ) ;^235^^^^^100^298^[REPLACE] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^236^^^^^100^298^[REPLACE] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^merge ( jump, current, subroutine ) ;^226^227^^^^100^298^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LookupSwitchInsnNode lsnode =  (  ( LookupSwitchInsnNode )   ( node )  )  ;^220^^^^^100^298^[REPLACE] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.get ( tsi.dflt ) ;^221^^^^^100^298^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int j = 0 ; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^100^298^[REPLACE] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^225^226^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode  &&  RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  (   ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == null )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^260^261^^^^100^298^[ADD] int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^^^^^100^298^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 + 0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( ! insnNode instanceof IincInsnNode )  {^259^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof IincInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub != null )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call var, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call var ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^234^235^236^237^238^100^298^[ADD] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  { Object caller = subroutine.callers.get ( i ) ; int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ; if  ( frames[call] != null )  { merge ( call + 1,^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^236^^^^^100^298^[ADD] int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^return ;^232^^^^^100^298^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != null )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == false )  {^237^^^^^100^298^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 >>> 1, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  0 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == false )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 0] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^jump =  insns.indexOf ( null ) ;^226^^^^^100^298^[REPLACE] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  (  ( LabelNode )   ( get ( j )  )  )  ;^225^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^235^236^^^^100^298^[ADD] Object caller = subroutine.callers.get ( i ) ; int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^251^252^^^^100^298^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^215^216^^^^100^298^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LookupSwitchInsnNode lsnode =  (  ( LookupSwitchInsnNode )   ( node )  )  ;^209^^^^^100^298^[REPLACE] LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.get ( lsi.dflt ) ;^210^^^^^100^298^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int j = 0 ; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^100^298^[REPLACE] for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^jump = insns.indexOf ( label ) ;^214^215^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( ! insnNode instanceof TableSwitchInsnNode )  {^219^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}^230^231^232^233^^100^298^[ADD] else if  ( insnOpcode == RET )  { if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode != ATHROW ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == true )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == null )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^subroutine.access[var] = true;^251^252^^^^100^298^[ADD] int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 * 4] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var local] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != true )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (var  1, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == this  )  {^237^^^^^100^298^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  1 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}^246^247^248^249^^100^298^[ADD] else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) { if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( local == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  subroutine == null  )   {  ;^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  0] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels.get ( jump ) ;^225^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine ==sub )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1L, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, var  1 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^Object caller = subroutine.callers.get ( insnType ) ;^235^^^^^100^298^[REPLACE] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^231^232^233^^^100^298^[ADD] if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^237^238^239^240^241^100^298^[ADD] if  ( frames[call] != null )  { merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 << 2] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^jump =  insns.indexOf ( null ) ;^215^^^^^100^298^[REPLACE] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^int jump = insns.indexOf ( lsi.dflt ) ;^209^210^^^^100^298^[ADD] LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode; int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^210^^^^^100^298^[ADD] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode l =  (  ( LabelNode )   ( get ( i )  )  )  ;^214^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^220^^^^^100^298^[ADD] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int end = insns.indexOf ( tcb.end )  ;^221^^^^^100^298^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^224^225^226^227^228^100^298^[ADD] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  { LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^225^^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int j = 0  ;^234^^^^^100^298^[REPLACE] for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode != GOTO ) {^195^^^^^100^298^[REPLACE] if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( insn  1, current, subroutine ) ;^196^^^^^100^298^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, jump )  ;^197^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (n  !=  JSR )  {^200^^^^^100^298^[REPLACE] if  ( insnOpcode == JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( top, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^201^202^203^^^100^298^[REPLACE] merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^JumpInsnNode jsr =  (  ( JumpInsnNode )   ( subroutineCalls.remove ( 0 )  )  )  ;^194^^^^^100^298^[REPLACE] JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jsrump = insns.indexOf ( j.label ) ;^199^^^^^100^298^[REPLACE] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode != GOTO || insnOpcode != JSR )  {^195^^^^^100^298^[REPLACE] if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^merge ( insn + 1, current, subroutine ) ;newControlFlowEdge ( insn, insn + 1 ) ;^195^196^197^198^^100^298^[ADD] if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (n  1, current, subroutine ) ;^196^^^^^100^298^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^196^197^^^^100^298^[ADD] merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, insn  1 ) ;^197^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^197^^^^^100^298^[ADD] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode  !=  JSR )  {^200^^^^^100^298^[REPLACE] if  ( insnOpcode == JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^205^^^^^200^206^[ADD] merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if   (  insnNode instanceof IincInsnNode  )   {  ;^208^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if   (  insnNode instanceof IincInsnNode  )   {  ;^219^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( top  &&  RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 3] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  insnNode instanceof JumpInsnNode  )   {  ;^250^^^^^100^298^[REPLACE] if  ( insnNode instanceof VarInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^250^251^252^253^254^100^298^[ADD] if  ( insnNode instanceof VarInsnNode )  { int var =  (  ( VarInsnNode )  insnNode ) .var; subroutine.access[var] = true; if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub != true )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  sub == null  )   {  ;^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  4 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  (   ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == this )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^226^^^^^100^298^[ADD] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^220^221^^^^100^298^[ADD] TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode; int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int i = 0  ;^224^^^^^100^298^[REPLACE] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode  ) {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == this )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  4] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 >> 1] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, call  1 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, call  1 * 4 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^newControlFlowEdge ( insn,  ( insn + 1 )  )  ;^243^^^^^100^298^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( insnOpcode != ATHROW ) {^246^247^248^^^100^298^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( n == LLOAD ) {^253^254^255^256^^246^266^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 1] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( n )  ;^221^^^^^100^298^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels.size ( j ) ;^225^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^215^^^^^100^298^[ADD] jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( n )  ;^210^^^^^100^298^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int i = 0  ;^213^^^^^100^298^[REPLACE] for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^219^^^^^100^298^[REPLACE] } else if  ( insnNode instanceof TableSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 4] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,var  3 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^243^^^^^100^298^[ADD] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var  1, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == true )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^221^^^^^100^298^[ADD] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^jump = insns.indexOf ( label ) ;^225^226^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  (local  !=  RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 3] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var  3, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == this  )  {^249^^^^^246^266^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnHandlers == false )  {^270^^^^^100^298^[REPLACE] if  ( insnHandlers != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( tcb.type != null )  {^274^^^^^100^298^[REPLACE] if  ( tcb.type == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^274^275^276^277^278^100^298^[ADD] if  ( tcb.type == null )  { type = Type.getObjectType ( "java/lang/Throwable" ) ; } else { type = Type.getObjectType ( tcb.type ) ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^type = getObjectType ( "java/lang/Throwable" )  ;^277^^^^^274^278^[REPLACE] type = Type.getObjectType ( tcb.type ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^275^^^^^100^298^[ADD] type = Type.getObjectType ( "java/lang/Throwable" ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  args[i].getSize  (    )   == 2  )   {  ;^280^^^^^100^298^[REPLACE] if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler.setLocal ( f ) ;^281^^^^^100^298^[REPLACE] handler.init ( f ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler.push (  ) ;^282^^^^^100^298^[REPLACE] handler.clearStack (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler.setLocal ( interpreter.newValue ( type )  ) ;^283^^^^^100^298^[REPLACE] handler.push ( interpreter.newValue ( type )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler.push ( interpreter.newValue ( ctype )  ) ;^283^^^^^100^298^[REPLACE] handler.push ( interpreter.newValue ( type )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( jump, current, subroutine )  ;^284^^^^^100^298^[REPLACE] merge ( jump, handler, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^type = getObjectType ( tcb.type )  ;^275^^^^^100^298^[REPLACE] type = Type.getObjectType ( "java/lang/Throwable" ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^277^^^^^100^298^[ADD] type = Type.getObjectType ( tcb.type ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^for  ( int i = 0 ; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^100^298^[REPLACE] for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^272^^^^^100^298^[REPLACE] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^273^^^^^100^298^[REPLACE] Type type;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^279^^^^^100^298^[ADD] int jump = insns.indexOf ( tcb.handler ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( tcb.type != this  )  {^274^^^^^100^298^[REPLACE] if  ( tcb.type == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( newControlFlowExceptionEdge ( n, jump )  )  {^280^^^^^100^298^[REPLACE] if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler .clearStack (  )  ;^281^^^^^100^298^[REPLACE] handler.init ( f ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^handler .setLocal ( insn )  ;^282^^^^^100^298^[REPLACE] handler.clearStack (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^282^283^^^^100^298^[ADD] handler.clearStack (  ) ; handler.push ( interpreter.newValue ( type )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^AbstractInsnNode insnNode = m.instructions.get ( insn ) ;int insnOpcode = insnNode.getOpcode (  ) ;int insnType = insnNode.getType (  ) ;^178^179^180^181^182^100^298^[ADD] try { AbstractInsnNode insnNode = m.instructions.get ( insn ) ; int insnOpcode = insnNode.getOpcode (  ) ; int insnType = insnNode.getType (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnType == AbstractInsnNode.LABEL ) {^183^184^185^186^^100^298^[REPLACE] if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^183^184^185^186^187^100^298^[ADD] if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) { merge ( insn + 1, f, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^JumpInsnNode j =  ( JumpInsnNode )  insnNode;merge ( insn + 1, current, subroutine ) ;newControlFlowEdge ( insn, insn + 1 ) ;^193^194^195^196^197^183^267^[ADD] if  ( insnNode instanceof JumpInsnNode )  { JumpInsnNode j =  ( JumpInsnNode )  insnNode; if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  else {^208^^^^^183^267^[REPLACE] } else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}^230^231^232^233^^183^267^[ADD] else if  ( insnOpcode == RET )  { if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  (   ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^183^267^[REPLACE] } else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 4] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub != false )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var  2, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^243^^^^^183^267^[ADD] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  1 >> 1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^224^225^226^227^228^183^267^[ADD] for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  { LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^225^226^^^^183^267^[ADD] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == this )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call var ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^merge ( jump, current, subroutine ) ;^226^227^^^^183^267^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( j )  ;^210^^^^^183^267^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  lsi.labels .get ( end )  ;^214^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var  1, frames[call], current, subs[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( n == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  2] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( insn )  ;^221^^^^^183^267^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  3] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub == this )  {^249^^^^^183^267^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 2] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 / 3] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^209^^^^^183^267^[ADD] LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode l =  (  ( LabelNode )   ( get ( i )  )  )  ;^214^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( var )  ;^221^^^^^183^267^[REPLACE] int jump = insns.indexOf ( tsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels .get ( j )  ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnOpcode != GOTO || insnOpcode != JSR )  {^195^^^^^183^267^[REPLACE] if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( insn  1 >>> 0, current, subroutine ) ;^196^^^^^183^267^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, insn n ) ;^197^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jsrump = insns.indexOf ( j.label ) ;^199^^^^^183^267^[REPLACE] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (  ( insn + 1 ) , f, subroutine )  ;^196^^^^^183^267^[REPLACE] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^196^^^^^183^267^[ADD] merge ( insn + 1, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   int jump = insns.indexOf ( lsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^208^209^210^211^212^183^267^[ADD] else if  ( insnNode instanceof LookupSwitchInsnNode )  { LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode; int jump = insns.indexOf ( lsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;int jump = insns.indexOf ( tsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^219^220^221^222^223^183^267^[ADD] else if  ( insnNode instanceof TableSwitchInsnNode )  { TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode; int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  3] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != this )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub !=sub )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (var  4, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( n, call  1 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 >>> 1] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub != this )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call var, frames[call], current, subs[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, call  1 >>> 2 ) ;^243^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 / 2, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( local == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels.get ( jump ) ;^225^^^^^183^267^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^214^^^^^183^267^[ADD] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine !=sub )  {^231^^^^^183^267^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( call  1 - 0, frames[call], current, subroutines[call],^238^239^240^241^^183^267^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( local == LLOAD ) {^253^254^255^256^^183^267^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^235^^^^^183^267^[REPLACE] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 >> 3] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 % 1] = true;^257^^^^^183^267^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^191^^^^^183^267^[ADD] subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns .get ( insnOpcode )  ;^210^^^^^183^267^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^jump = insns.indexOf ( label ) ;^214^215^^^^183^267^[ADD] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge (  ( insn + 1 ) , current, subroutine )  ;^187^^^^^183^267^[REPLACE] merge ( insn + 1, f, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, insn n ) ;^188^^^^^183^267^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^193^194^195^196^197^100^298^[ADD] if  ( insnNode instanceof JumpInsnNode )  { JumpInsnNode j =  ( JumpInsnNode )  insnNode; if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( insnOpcode  ) {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine == true )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,var  1 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 << 0] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  (sub == null )  {^249^^^^^100^298^[REPLACE] if  ( subroutine != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub != null )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var  1L, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 + 3] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^226^227^^^^100^298^[ADD] jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^214^^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  (   RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  3] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( var var, frames[call], current, subroutines[call],^238^239^240^241^^100^298^[REPLACE] merge ( call + 1, frames[call], current, subroutines[call],^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 * 4] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^} else if  ( local  ||  RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 + 2] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1L] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( frames[call] == this )  {^237^^^^^100^298^[REPLACE] if  ( frames[call] != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn,var  4 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( subroutine != this  )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  lsi.labels.get ( jump ) ;^214^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^LabelNode label =  ( LabelNode )  tsi.labels .get ( i )  ;^225^^^^^100^298^[REPLACE] LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^235^^^^^100^298^[ADD] Object caller = subroutine.callers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, insn n ) ;^197^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, insn + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^200^201^202^203^^100^298^[ADD] if  ( insnOpcode == JSR )  { merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( jump, current, sub ) ;^205^^^^^200^206^[REPLACE] merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.indexOf ( tsi.dflt )  ;^199^^^^^100^298^[REPLACE] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^findSubroutine ( 0, main, subroutineCalls )  ;^196^^^^^100^298^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( top  &&  JSR )  {^200^^^^^100^298^[REPLACE] if  ( insnOpcode == JSR )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 + 2] = true;^257^^^^^246^266^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 - 1] = true;^257^^^^^253^258^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub !=sub )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^newControlFlowEdge ( insn, var  0 ) ;^243^^^^^100^298^[REPLACE] newControlFlowEdge ( insn, call + 1 ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.indexOf ( tsi.dflt )  ;^210^^^^^100^298^[REPLACE] int jump = insns.indexOf ( lsi.dflt ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^}   int jump = insns.indexOf ( tsi.dflt ) ;merge ( jump, current, subroutine ) ;newControlFlowEdge ( insn, jump ) ;^219^220^221^222^223^100^298^[ADD] else if  ( insnNode instanceof TableSwitchInsnNode )  { TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode; int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^}  if  ( insnOpcode  ||  RET )  {^230^^^^^100^298^[REPLACE] } else if  ( insnOpcode == RET )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( local == LLOAD && insnOpcode == DLOAD && insnOpcode == LSTORE && insnOpcode == DSTORE ) {^253^254^255^256^^100^298^[REPLACE] if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( sub != true )  {^231^^^^^100^298^[REPLACE] if  ( subroutine == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^221^222^^^^100^298^[ADD] int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1L] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine.access[var  1 >>> 0] = true;^257^^^^^100^298^[REPLACE] subroutine.access[var + 1] = true;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insnHandlers == null )  {^270^^^^^100^298^[REPLACE] if  ( insnHandlers != null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^270^271^272^273^^100^298^[ADD] if  ( insnHandlers != null )  { for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  { TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ; Type type;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if   (  subroutine == null  )   {  ;^274^^^^^100^298^[REPLACE] if  ( tcb.type == null )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^handler.init ( f ) ;handler.clearStack (  ) ;handler.push ( interpreter.newValue ( type )  ) ;merge ( jump, handler, subroutine ) ;^280^281^282^283^284^100^298^[ADD] if  ( newControlFlowExceptionEdge ( insn, jump )  )  { handler.init ( f ) ; handler.clearStack (  ) ; handler.push ( interpreter.newValue ( type )  ) ; merge ( jump, handler, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^281^282^^^^100^298^[ADD] handler.init ( f ) ; handler.clearStack (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REMOVE]^handler.init ( f )  ;^282^^^^^100^298^[REMOVE] ^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^insns.indexOf ( tcb.end )  ;^283^^^^^100^298^[REPLACE] handler.push ( interpreter.newValue ( type )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^283^284^^^^100^298^[ADD] handler.push ( interpreter.newValue ( type )  ) ; merge ( jump, handler, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^type = getObjectType ( "java/lang/Throwable" )  ;^277^^^^^100^298^[REPLACE] type = Type.getObjectType ( tcb.type ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnTypensnHandlers.isEmpty ( i ) ;^272^^^^^100^298^[REPLACE] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int jump = insns.indexOf ( tsi.dflt )  ;^279^^^^^100^298^[REPLACE] int jump = insns.indexOf ( tcb.handler ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^281^^^^^100^298^[ADD] handler.init ( f ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^interpreter.newValue ( args[i] )  ;^283^^^^^100^298^[REPLACE] handler.push ( interpreter.newValue ( type )  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^merge ( jump, handler, sub ) ;^284^^^^^100^298^[REPLACE] merge ( jump, handler, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine = subroutine != null ? null : subroutine.copy (  ) ;^191^^^^^100^298^[REPLACE] subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^179^^^^^100^298^[ADD] AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int insnOpcode = insnNode.getType (  ) ;^180^^^^^100^298^[REPLACE] int insnOpcode = insnNode.getOpcode (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int insnType = insnNode .getOpcode (  )  ;^181^^^^^100^298^[REPLACE] int insnType = insnNode.getType (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^210^211^^^^100^298^[ADD] int jump = insns.indexOf ( lsi.dflt ) ; merge ( jump, current, subroutine ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^List nHandlers = handlers[insn];^269^^^^^100^298^[REPLACE] List insnHandlers = handlers[insn];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int j = 0  ;^271^^^^^100^298^[REPLACE] for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^272^^^^^100^298^[ADD] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^176^^^^^100^298^[ADD] queued[insn] = false;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^subroutine  =  null ;^191^^^^^100^298^[REPLACE] subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^173^^^^^100^298^[REPLACE] int insn = queue[--top];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^174^^^^^100^298^[ADD] Frame f = frames[insn];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^175^^^^^100^298^[ADD] Subroutine subroutine = subroutines[insn];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^AbstractInsnNode node = insns.get ( insn )  ;^179^^^^^100^298^[REPLACE] AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^int insnOpcode = insnNode.getOpcode (  )  ;^181^^^^^100^298^[REPLACE] int insnType = insnNode.getType (  ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^199^^^^^100^298^[ADD] int jump = insns.indexOf ( j.label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^214^215^^^^100^298^[ADD] LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^269^^^^^100^298^[ADD] List insnHandlers = handlers[insn];^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^272^273^^^^100^298^[ADD] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ; Type type;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^throw new AnalyzerException ( "Execution can fall off end of the code" )  ;^289^290^^^^100^298^[REPLACE] throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^return ;^292^293^^^^100^298^[REPLACE] throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[ADD]^^291^292^293^^^100^298^[ADD] catch  ( Exception e )  { throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^return frames;  ;^297^^^^^100^298^[REPLACE] return frames;^[METHOD] analyze [TYPE] Frame[] [PARAMETER] String owner MethodNode m [CLASS] Analyzer   [TYPE]  LabelNode label  [TYPE]  Frame current  f  handler  [TYPE]  Subroutine main  sub  subroutine  [TYPE]  Type[] args  [TYPE]  String owner  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode insnNode  [TYPE]  List[] handlers  [TYPE]  MethodNode m  [TYPE]  List insnHandlers  subroutineCalls  [TYPE]  LookupSwitchInsnNode lsi  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsi  [TYPE]  Interpreter interpreter  [TYPE]  AnalyzerException e  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  Exception e  [TYPE]  Type ctype  type  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode j  jsr  [TYPE]  Object caller  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  Map subroutineHeads 
[REPLACE]^if  ( insn < 0 && insn >= n )  {^304^^^^^302^364^[REPLACE] if  ( insn < 0 || insn >= n )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^304^305^306^^^302^364^[ADD] if  ( insn < 0 || insn >= n )  { throw new AnalyzerException  (" ")  ; }^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^throw new AnalyzerException (  (  (  ( "Error at instruction " + insn )  + ": " )  +  ( e.getMessage (  )  )  ) , e )  ;^305^^^^^302^364^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^if  ( subroutines[insn] == null )  {^307^^^^^302^364^[REPLACE] if  ( subroutines[insn] != null )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^return;  ;^308^^^^^302^364^[REPLACE] return;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^if  ( ! node instanceof JumpInsnNode )  {^314^^^^^302^364^[REPLACE] if  ( node instanceof JumpInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^} else if   (  insnNode instanceof IincInsnNode  )   {  ;^322^^^^^302^364^[REPLACE] } else if  ( node instanceof TableSwitchInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^}  if  ( ! node instanceof LookupSwitchInsnNode )  {^329^^^^^302^364^[REPLACE] } else if  ( node instanceof LookupSwitchInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^JumpInsnNode jnode =  (  ( JumpInsnNode )   ( node )  )  ;^330^^^^^302^364^[REPLACE] LookupSwitchInsnNode lsnode =  ( LookupSwitchInsnNode )  node;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^int i =  ( size (  )  )  - 1  ;^332^^^^^302^364^[REPLACE] for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LabelNode l =  ( LabelNode )  lsnode.labels.size ( i ) ;^333^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  lsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^for  ( int i = lsnode.labels.size (  )  + 2 - 0 ; i >= 0; --i )  {^332^^^^^302^364^[REPLACE] for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^333^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  lsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^323^324^^^^302^364^[ADD] TableSwitchInsnNode tsnode =  ( TableSwitchInsnNode )  node; findSubroutine ( insns.indexOf ( tsnode.dflt ) , sub, calls ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^for  ( int i = tsnode.labels.get (  )  - 4 - 1; i >= 0; --i )  {^325^^^^^302^364^[REPLACE] for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LabelNode l =  ( LabelNode )  tsnode.labels.get ( insnType ) ;^326^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  tsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^findSubroutine ( insns.indexOf ( lsnode.dflt ) , sub, calls ) ;^330^331^^^^302^364^[ADD] LookupSwitchInsnNode lsnode =  ( LookupSwitchInsnNode )  node; findSubroutine ( insns.indexOf ( lsnode.dflt ) , sub, calls ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^for  ( int i = lsnode.labels.size (  )  + 3 - 0 ; i >= 0; --i )  {^332^^^^^302^364^[REPLACE] for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LookupSwitchInsnNode lsnode =  (  ( LookupSwitchInsnNode )   ( node )  )  ;^323^^^^^302^364^[REPLACE] TableSwitchInsnNode tsnode =  ( TableSwitchInsnNode )  node;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^325^326^327^328^^302^364^[ADD] for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  { LabelNode l =  ( LabelNode )  tsnode.labels.get ( i ) ; findSubroutine ( insns.indexOf ( l ) , sub, calls ) ; }^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LabelNode l =  ( LabelNode )  tsnode.labels .get ( call )  ;^326^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  tsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^for  ( int i = lsnode.labels.size (  )  %  2 - 1; i >= 0; --i )  {^332^^^^^302^364^[REPLACE] for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LabelNode l =  ( LabelNode )  lsnode.labels.get ( insnType ) ;^333^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  lsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^if  ( node.getOpcode (  )   ) {^315^^^^^302^364^[REPLACE] if  ( node.getOpcode (  )  == JSR )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^JumpInsnNode jsr =  (  ( JumpInsnNode )   ( subroutineCalls.remove ( 0 )  )  )  ;^319^^^^^315^321^[REPLACE] JumpInsnNode jnode =  ( JumpInsnNode )  node;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^calls.get ( node ) ;^317^^^^^302^364^[REPLACE] calls.add ( node ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REMOVE]^insns.indexOf ( l )  ;^317^^^^^302^364^[REMOVE] ^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^JumpInsnNode jsr =  (  ( JumpInsnNode )   ( subroutineCalls.remove ( 0 )  )  )  ;^319^^^^^302^364^[REPLACE] JumpInsnNode jnode =  ( JumpInsnNode )  node;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^if  ( node.getOpcode (  )   ||  JSR )  {^315^^^^^302^364^[REPLACE] if  ( node.getOpcode (  )  == JSR )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^319^320^^^^315^321^[ADD] JumpInsnNode jnode =  ( JumpInsnNode )  node; findSubroutine ( insns.indexOf ( jnode.label ) , sub, calls ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^} else if  ( ! node instanceof TableSwitchInsnNode )  {^322^^^^^302^364^[REPLACE] } else if  ( node instanceof TableSwitchInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^}  else {^329^^^^^302^364^[REPLACE] } else if  ( node instanceof LookupSwitchInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^330^^^^^302^364^[ADD] LookupSwitchInsnNode lsnode =  ( LookupSwitchInsnNode )  node;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^332^333^334^335^^302^364^[ADD] for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  { LabelNode l =  ( LabelNode )  lsnode.labels.get ( i ) ; findSubroutine ( insns.indexOf ( l ) , sub, calls ) ; }^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^int i =  ( size (  )  )  - 1  ;^325^^^^^302^364^[REPLACE] for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^326^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  tsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^} else if  ( ! node instanceof LookupSwitchInsnNode )  {^329^^^^^302^364^[REPLACE] } else if  ( node instanceof LookupSwitchInsnNode )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^333^^^^^302^364^[ADD] LabelNode l =  ( LabelNode )  lsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^if  ( insnHandlers == this )  {^340^^^^^302^364^[REPLACE] if  ( insnHandlers != null )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^for  ( int i = 0 ; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^302^364^[REPLACE] for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ;^342^343^^^^302^364^[ADD] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ; findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^subroutines[insn] = subroutine.copy (  )  ;^310^^^^^302^364^[REPLACE] subroutines[insn] = sub.copy (  ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^return;  ;^360^^^^^302^364^[REPLACE] return;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^AbstractInsnNode node = insns.indexOf ( insn ) ;^311^^^^^302^364^[REPLACE] AbstractInsnNode node = insns.get ( insn ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^LabelNode l =  ( LabelNode )  tsnode.labels .get ( local )  ;^326^^^^^302^364^[REPLACE] LabelNode l =  ( LabelNode )  tsnode.labels.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^List nHandlers = handlers[insn];^339^^^^^302^364^[REPLACE] List insnHandlers = handlers[insn];^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^341^342^343^344^^302^364^[ADD] for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  { TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ; findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ; }^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^342^^^^^302^364^[REPLACE] TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[ADD]^^305^^^^^302^364^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] findSubroutine [TYPE] void [PARAMETER] int insn Subroutine sub List calls [CLASS] Analyzer   [TYPE]  LabelNode l  [TYPE]  TryCatchBlockNode tcb  [TYPE]  TableSwitchInsnNode tsnode  [TYPE]  Interpreter interpreter  [TYPE]  Subroutine sub  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  InsnList insns  [TYPE]  AbstractInsnNode node  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  [TYPE]  boolean false  true  [TYPE]  JumpInsnNode jnode  [TYPE]  List calls  insnHandlers  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  LookupSwitchInsnNode lsnode 
[REPLACE]^Subroutine oldSubroutine = subroutines[insn]  ;^452^^^^^451^477^[REPLACE] Frame oldFrame = frames[insn];^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^453^^^^^451^477^[ADD] Subroutine oldSubroutine = subroutines[insn];^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^454^^^^^451^477^[ADD] boolean changes;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( oldFrame != this  )  {^456^^^^^451^477^[REPLACE] if  ( oldFrame == null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes =  frame.merge ( frame, interpreter ) ;^460^^^^^456^461^[REPLACE] changes = oldFrame.merge ( frame, interpreter ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^457^458^^^^451^477^[ADD] frames[insn] = newFrame ( frame ) ; changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes = false;^458^^^^^451^477^[REPLACE] changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^457^^^^^451^477^[ADD] frames[insn] = newFrame ( frame ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^458^^^^^451^477^[ADD] changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^460^^^^^451^477^[ADD] changes = oldFrame.merge ( frame, interpreter ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( oldSubroutine != true )  {^463^^^^^451^477^[REPLACE] if  ( oldSubroutine == null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^463^464^465^466^467^451^477^[ADD] if  ( oldSubroutine == null )  { if  ( subroutine != null )  { subroutines[insn] = subroutine.copy (  ) ; changes = true; }^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( subroutine == true )  {^469^^^^^463^472^[REPLACE] if  ( subroutine != null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^469^470^471^^^463^472^[ADD] if  ( subroutine != null )  { changes |= oldSubroutine.merge ( subroutine ) ; }^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes |= oldSubroutine.merge ( subroutineBeforeJSR )  ;^470^^^^^463^472^[REPLACE] changes |= oldSubroutine.merge ( subroutine ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  (oldSubroutine == this )  {^464^^^^^451^477^[REPLACE] if  ( subroutine != null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^subroutines[insn] = subroutine.copy (  ) ;changes = true;^464^465^466^467^^451^477^[ADD] if  ( subroutine != null )  { subroutines[insn] = subroutine.copy (  ) ; changes = true; }^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^subroutines[insn] = sub.copy (  )  ;^465^^^^^451^477^[REPLACE] subroutines[insn] = subroutine.copy (  ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes = false;^466^^^^^451^477^[REPLACE] changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( subroutine == null )  {^464^^^^^451^477^[REPLACE] if  ( subroutine != null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^465^^^^^451^477^[ADD] subroutines[insn] = subroutine.copy (  ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if   (  subroutine == null  )   {  ;^469^^^^^451^477^[REPLACE] if  ( subroutine != null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes |= oldSubroutine.merge ( subroutineBeforeJSR )  ;^470^^^^^451^477^[REPLACE] changes |= oldSubroutine.merge ( subroutine ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^470^^^^^451^477^[ADD] changes |= oldSubroutine.merge ( subroutine ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( true ) {^473^^^^^451^477^[REPLACE] if  ( changes && !queued[insn] )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^queued[insn] = false  ;^474^^^^^451^477^[REPLACE] queued[insn] = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^queue[top++] =  successor;^475^^^^^451^477^[REPLACE] queue[top++] = insn;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^queued[insn] = false;^474^^^^^451^477^[REPLACE] queued[insn] = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame frame Subroutine subroutine [CLASS] Analyzer   [TYPE]  Frame frame  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutine  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^486^^^^^485^506^[ADD] Frame oldFrame = frames[insn];^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^Frame oldFrame = frames[insn]  ;^487^^^^^485^506^[REPLACE] Subroutine oldSubroutine = subroutines[insn];^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^TryCatchBlockNode tcb =  (  ( TryCatchBlockNode )   ( get ( i )  )  )  ;^488^^^^^485^506^[REPLACE] boolean changes;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^afterRET.merge ( oldFrame, access ) ;^490^^^^^485^506^[REPLACE] afterRET.merge ( beforeJSR, access ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  ( oldFrame != null )  {^492^^^^^485^506^[REPLACE] if  ( oldFrame == null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^frames[insn] = newFrame ( afterRET ) ;changes = true;changes = oldFrame.merge ( afterRET, access ) ;^492^493^494^495^496^485^506^[ADD] if  ( oldFrame == null )  { frames[insn] = newFrame ( afterRET ) ; changes = true; } else { changes = oldFrame.merge ( afterRET, access ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes =  null.merge ( afterRET, access ) ;^496^^^^^492^497^[REPLACE] changes = oldFrame.merge ( afterRET, access ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^frames[insn] = newFrame ( frame )  ;^493^^^^^485^506^[REPLACE] frames[insn] = newFrame ( afterRET ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^494^^^^^485^506^[ADD] changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes = false;^494^^^^^485^506^[REPLACE] changes = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes =  beforeJSR.merge ( afterRET, access ) ;^496^^^^^485^506^[REPLACE] changes = oldFrame.merge ( afterRET, access ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  (  subroutineBeforeJSR != null )  {^499^^^^^485^506^[REPLACE] if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^499^500^501^^^485^506^[ADD] if  ( oldSubroutine != null && subroutineBeforeJSR != null )  { changes |= oldSubroutine.merge ( subroutineBeforeJSR ) ; }^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^changes |= oldSubroutine.merge ( subroutine )  ;^500^^^^^485^506^[REPLACE] changes |= oldSubroutine.merge ( subroutineBeforeJSR ) ;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^if  (false && queued[insn] )  {^502^^^^^485^506^[REPLACE] if  ( changes && !queued[insn] )  {^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^503^504^^^^485^506^[ADD] queued[insn] = true; queue[top++] = insn;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^queue[top++] =  null;^504^^^^^485^506^[REPLACE] queue[top++] = insn;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[REPLACE]^queued[insn] = false;^503^^^^^485^506^[REPLACE] queued[insn] = true;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
[ADD]^^504^^^^^485^506^[ADD] queue[top++] = insn;^[METHOD] merge [TYPE] void [PARAMETER] final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [CLASS] Analyzer   [TYPE]  Frame afterRET  beforeJSR  oldFrame  [TYPE]  Interpreter interpreter  [TYPE]  boolean changes  false  true  [TYPE]  Subroutine oldSubroutine  subroutineBeforeJSR  [TYPE]  Frame[] frames  [TYPE]  int[] queue  [TYPE]  Subroutine[] subroutines  [TYPE]  boolean[] access  queued  [TYPE]  InsnList insns  [TYPE]  List[] handlers  [TYPE]  int begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var 
