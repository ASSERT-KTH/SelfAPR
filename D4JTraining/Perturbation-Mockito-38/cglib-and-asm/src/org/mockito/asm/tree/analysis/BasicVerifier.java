[REPLACE]^Value expected3;^51^^^^^50^94^[REPLACE] Value expected;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( ! (  ( BasicValue )  expected ) .isReference (  )  )  {^70^^^^^50^94^[REPLACE] if  ( ! (  ( BasicValue )  value ) .isReference (  )  )  {^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^71^72^73^^^50^94^[REPLACE] throw new AnalyzerException ( null, "an object reference", value ) ;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( ! (  ( BasicValue )  value ) .isReference (  ) ) {^77^78^79^^^50^94^[REPLACE] if  ( ! (  ( BasicValue )  value ) .isReference (  ) && value != BasicValue.RETURNADDRESS_VALUE ) {^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[ADD]^^77^78^79^80^81^50^94^[ADD] if  ( ! (  ( BasicValue )  value ) .isReference (  ) && value != BasicValue.RETURNADDRESS_VALUE ) { throw new AnalyzerException ( null, "an object reference or a return address",^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^80^81^82^^^77^83^[REPLACE] throw new AnalyzerException ( null, "an object reference or a return address", value ) ;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^55^^^^^50^94^[REPLACE] expected = BasicValue.INT_VALUE;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[ADD]^^55^56^^^^50^94^[ADD] expected = BasicValue.INT_VALUE; break;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^59^^^^^50^94^[REPLACE] expected = BasicValue.FLOAT_VALUE;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[ADD]^^59^^^^^50^94^[ADD] expected = BasicValue.FLOAT_VALUE;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^63^^^^^50^94^[REPLACE] expected = BasicValue.LONG_VALUE;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^67^^^^^50^94^[REPLACE] expected = BasicValue.DOUBLE_VALUE;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return expected;^75^^^^^50^94^[REPLACE] return value;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return expected;^84^^^^^50^94^[REPLACE] return value;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return expected;^86^^^^^50^94^[REPLACE] return value;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^80^81^82^^^50^94^[REPLACE] throw new AnalyzerException ( null, "an object reference or a return address", value ) ;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( value  ==  expected )  {^90^^^^^50^94^[REPLACE] if  ( value != expected )  {^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^91^^^^^50^94^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[ADD]^^91^^^^^50^94^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return value == expected;^93^^^^^50^94^[REPLACE] return value;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Value expected3;^99^^^^^98^183^[REPLACE] Value expected;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[ADD]^^99^^^^^98^183^[ADD] Value expected;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( !isSubTypeOf ( encountered, expected )  )  {^147^^^^^98^183^[REPLACE] if  ( ! (  ( BasicValue )  value ) .isReference (  )  )  {^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^148^149^150^^^98^183^[REPLACE] throw new AnalyzerException ( null, "an object reference", value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( !isArrayValue ( expected )  )  {^154^^^^^98^183^[REPLACE] if  ( !isArrayValue ( value )  )  {^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^155^156^157^^^98^183^[REPLACE] throw new AnalyzerException ( null, "an array reference", value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( !isSubTypeOf ( encountered, expected )  )  {^167^^^^^98^183^[REPLACE] if  ( ! (  ( BasicValue )  value ) .isReference (  )  )  {^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^168^169^170^^^98^183^[REPLACE] throw new AnalyzerException ( null, "an object reference", value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^120^^^^^98^183^[REPLACE] expected = BasicValue.INT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^127^^^^^98^183^[REPLACE] expected = BasicValue.FLOAT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^134^^^^^98^183^[REPLACE] expected = BasicValue.LONG_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^141^^^^^98^183^[REPLACE] expected = BasicValue.DOUBLE_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected = newValue ( Type.getType (  (  ( FieldInsnNode )  insn ) .desc )  ) ; ;^144^^^^^98^183^[REPLACE] expected = newValue ( Type.getObjectType (  (  ( FieldInsnNode )  insn ) .owner )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected = newValue ( Type.getObjectType (  (  ( FieldInsnNode )  insn ) .owner )  ) ; ;^174^^^^^98^183^[REPLACE] expected = newValue ( Type.getType (  (  ( FieldInsnNode )  insn ) .desc )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super.naryOperation ( insn, value ) ;^152^^^^^98^183^[REPLACE] return super.unaryOperation ( insn, value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super.naryOperation ( insn, value ) ;^159^^^^^98^183^[REPLACE] return super.unaryOperation ( insn, value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super .naryOperation ( insn , null )  ;^172^^^^^98^183^[REPLACE] return super.unaryOperation ( insn, value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^148^149^150^^^98^183^[REPLACE] throw new AnalyzerException ( null, "an object reference", value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^177^^^^^98^183^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( isSubTypeOf ( value, expected )  )  {^179^^^^^98^183^[REPLACE] if  ( !isSubTypeOf ( value, expected )  )  {^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^180^^^^^98^183^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^180^^^^^98^183^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super .naryOperation ( insn , null )  ;^182^^^^^98^183^[REPLACE] return super.unaryOperation ( insn, value ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Value expected3;^190^^^^^189^310^[REPLACE] Value expected1;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Value expected3;^191^^^^^189^310^[REPLACE] Value expected2;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( isSubTypeOf ( value2, newValue ( Type.getType ( "[Z" )  )  )  )  {^198^^^^^189^310^[REPLACE] if  ( isSubTypeOf ( value1, newValue ( Type.getType ( "[Z" )  )  )  )  {^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[S" )  ) ; ;^201^^^^^198^202^[REPLACE] expected1 = newValue ( Type.getType ( "[B" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^199^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[Z" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^194^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[I" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^195^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^195^^^^^189^310^[ADD] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[S" )  ) ; ;^201^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[B" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^203^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^206^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[C" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^207^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^210^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[S" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^211^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^211^212^^^^189^310^[ADD] expected2 = BasicValue.INT_VALUE; break;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^214^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[J" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^214^215^^^^189^310^[ADD] expected1 = newValue ( Type.getType ( "[J" )  ) ; expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^215^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^218^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[F" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^219^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^222^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[D" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^223^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^226^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getType ( "[Ljava/lang/Object;" )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^226^227^^^^189^310^[ADD] expected1 = newValue ( Type.getType ( "[Ljava/lang/Object;" )  ) ; expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^227^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^246^^^^^189^310^[REPLACE] expected1 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^247^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^247^^^^^189^310^[ADD] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^256^^^^^189^310^[REPLACE] expected1 = BasicValue.FLOAT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected = BasicValue.DOUBLE_VALUE; ;^257^^^^^189^310^[REPLACE] expected2 = BasicValue.FLOAT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^268^^^^^189^310^[REPLACE] expected1 = BasicValue.LONG_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^269^^^^^189^310^[REPLACE] expected2 = BasicValue.LONG_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^274^^^^^189^310^[REPLACE] expected1 = BasicValue.LONG_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^274^275^^^^189^310^[ADD] expected1 = BasicValue.LONG_VALUE; expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^275^^^^^189^310^[REPLACE] expected2 = BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^284^^^^^189^310^[REPLACE] expected1 = BasicValue.DOUBLE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^284^^^^^189^310^[ADD] expected1 = BasicValue.DOUBLE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^285^^^^^189^310^[REPLACE] expected2 = BasicValue.DOUBLE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^285^^^^^189^310^[ADD] expected2 = BasicValue.DOUBLE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^289^^^^^189^310^[REPLACE] expected1 = BasicValue.REFERENCE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^290^^^^^189^310^[REPLACE] expected2 = BasicValue.REFERENCE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^294^^^^^189^310^[REPLACE] expected1 = newValue ( Type.getObjectType ( fin.owner )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^294^295^^^^189^310^[ADD] expected1 = newValue ( Type.getObjectType ( fin.owner )  ) ; expected2 = newValue ( Type.getType ( fin.desc )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^295^^^^^189^310^[REPLACE] expected2 = newValue ( Type.getType ( fin.desc )  ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Type owner = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .owner ) ;^293^^^^^189^310^[REPLACE] FieldInsnNode fin =  ( FieldInsnNode )  insn;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^298^^^^^189^310^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( isSubTypeOf ( value1, expected1 )  )  {^300^^^^^189^310^[REPLACE] if  ( !isSubTypeOf ( value1, expected1 )  )  {^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^302^^^^^189^310^[REPLACE] } else if  ( !isSubTypeOf ( value2, expected2 )  )  {^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^303^^^^^189^310^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^^303^^^^^189^310^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^301^^^^^189^310^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[ADD]^}^302^303^304^^^189^310^[ADD] else if  ( !isSubTypeOf ( value2, expected2 )  )  { throw new AnalyzerException  (" ")  ; }^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^303^^^^^189^310^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^301^^^^^189^310^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( insn.getOpcode (  )   !=  AALOAD )  {^305^^^^^189^310^[REPLACE] if  ( insn.getOpcode (  )  == AALOAD )  {^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super.binaryOperation ( insn, expected2, value2 ) ;^308^^^^^305^309^[REPLACE] return super.binaryOperation ( insn, value1, value2 ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return getElementValue ( value2 ) ;^306^^^^^189^310^[REPLACE] return getElementValue ( value1 ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return super.binaryOperation ( insn, value1, value1 ) ;^308^^^^^189^310^[REPLACE] return super.binaryOperation ( insn, value1, value2 ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected2  value1  value2  [TYPE]  FieldInsnNode fin  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Value expected3;^318^^^^^317^371^[REPLACE] Value expected1;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Value expected1;^319^^^^^317^371^[REPLACE] Value expected3;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^319^^^^^317^371^[ADD] Value expected3;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( isSub  "[Z"    )  )  )  {^326^^^^^317^371^[REPLACE] if  ( isSubTypeOf ( value1, newValue ( Type.getType ( "[Z" )  )  )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[S" )  ) ; ;^329^^^^^326^330^[REPLACE] expected1 = newValue ( Type.getType ( "[B" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^329^^^^^326^330^[ADD] expected1 = newValue ( Type.getType ( "[B" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^327^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[Z" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^327^^^^^317^371^[ADD] expected1 = newValue ( Type.getType ( "[Z" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^322^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[I" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^323^^^^^317^371^[REPLACE] expected3 = BasicValue.INT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[S" )  ) ; ;^329^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[B" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^331^^^^^317^371^[REPLACE] expected3 = BasicValue.INT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^331^332^^^^317^371^[ADD] expected3 = BasicValue.INT_VALUE; break;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^334^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[C" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^334^^^^^317^371^[ADD] expected1 = newValue ( Type.getType ( "[C" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^335^^^^^317^371^[REPLACE] expected3 = BasicValue.INT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^335^^^^^317^371^[ADD] expected3 = BasicValue.INT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^338^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[S" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^338^^^^^317^371^[ADD] expected1 = newValue ( Type.getType ( "[S" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^339^^^^^317^371^[REPLACE] expected3 = BasicValue.INT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^342^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[J" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^343^^^^^317^371^[REPLACE] expected3 = BasicValue.LONG_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^346^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[F" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^347^^^^^317^371^[REPLACE] expected3 = BasicValue.FLOAT_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 = newValue ( Type.getType ( "[B" )  ) ; ;^350^^^^^317^371^[REPLACE] expected1 = newValue ( Type.getType ( "[D" )  ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^351^^^^^317^371^[REPLACE] expected3 = BasicValue.DOUBLE_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^351^^^^^317^371^[ADD] expected3 = BasicValue.DOUBLE_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected1 =  null;^354^^^^^317^371^[REPLACE] expected1 = value1;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^354^355^^^^317^371^[ADD] expected1 = value1; expected3 = BasicValue.REFERENCE_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^expected2 = BasicValue.FLOAT_VALUE; ;^355^^^^^317^371^[REPLACE] expected3 = BasicValue.REFERENCE_VALUE;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^358^^^^^317^371^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( isSubTypeOf ( value1, expected1 )  )  {^360^^^^^317^371^[REPLACE] if  ( !isSubTypeOf ( value1, expected1 )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^363^^^^^317^371^[REPLACE] } else if  ( value2 != BasicValue.INT_VALUE )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( !isSubTypeOf ( value2, expected3 )  )  {^367^^^^^317^371^[REPLACE] } else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^}^367^368^369^^^317^371^[ADD] else if  ( !isSubTypeOf ( value3, expected3 )  )  { throw new AnalyzerException  (" ")  ; }^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^368^^^^^317^371^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[ADD]^^368^^^^^317^371^[ADD] throw new AnalyzerException  (" ")  ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^368^^^^^317^371^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( "Method owner", newValue ( owner ) , ;^364^365^366^^^317^371^[REPLACE] throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE, value2 ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^367^^^^^317^371^[REPLACE] } else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^364^365^366^^^317^371^[REPLACE] throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE, value2 ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^361^362^^^^317^371^[REPLACE] throw new AnalyzerException ( "First argument", "a " + expected1 + " array reference", value1 ) ;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( value2  ==  BasicValue.INT_VALUE )  {^363^^^^^317^371^[REPLACE] } else if  ( value2 != BasicValue.INT_VALUE )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^} else if  ( !isSubTypeOf ( value3, value2 )  )  {^367^^^^^317^371^[REPLACE] } else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( !isSubTypeOf ( value3, value2 )  )  {^367^^^^^317^371^[REPLACE] } else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return false;^370^^^^^317^371^[REPLACE] return null;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected1  expected3  value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Type owner = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .owner ) ;^376^^^^^375^408^[REPLACE] int opcode = insn.getOpcode (  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^while  ( i < values.size (  )  *  0.5  )  {^397^^^^^375^408^[REPLACE] while  ( i < values.size (  )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^397^398^^^^375^408^[ADD] while  ( i < values.size (  )  )  { Value expected = newValue ( args[j++] ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( isSubTypeOf ( expected, expected )  )  {^400^^^^^375^408^[REPLACE] if  ( !isSubTypeOf ( encountered, expected )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^400^401^402^403^404^375^408^[ADD] if  ( !isSubTypeOf ( encountered, expected )  )  { throw new AnalyzerException ( "Argument " + j, expected, encountered ) ; }^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return ;^401^402^403^^^375^408^[REPLACE] throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Value expected3;^398^^^^^375^408^[REPLACE] Value expected = newValue ( args[j++] ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Value encountered =  ( Value )  values.size ( i++ ) ;^399^^^^^375^408^[REPLACE] Value encountered =  ( Value )  values.get ( i++ ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^399^^^^^375^408^[ADD] Value encountered =  ( Value )  values.get ( i++ ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^401^402^403^^^375^408^[REPLACE] throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( opcode  !=  MULTIANEWARRAY )  {^377^^^^^375^408^[REPLACE] if  ( opcode == MULTIANEWARRAY )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^while  ( i < values.size (  )  + 3 )  {^397^^^^^377^406^[REPLACE] while  ( i < values.size (  )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( isSubTypeOf ( encountered, expected )  )  {^400^^^^^377^406^[REPLACE] if  ( !isSubTypeOf ( encountered, expected )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^throw new AnalyzerException ( null, "an array reference", ;^401^402^403^^^377^406^[REPLACE] throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Value expected3;^398^^^^^377^406^[REPLACE] Value expected = newValue ( args[j++] ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Value encountered =  ( Value )  values.size ( i++ ) ;^399^^^^^377^406^[REPLACE] Value encountered =  ( Value )  values.get ( i++ ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return ;^401^402^403^^^377^406^[REPLACE] throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( opcode  ==  INVOKESTATIC )  {^388^^^^^377^406^[REPLACE] if  ( opcode != INVOKESTATIC )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( !isSubTypeOf (  ( Value )  values.size ( i++ ) , newValue ( owner )  )  )  {^390^^^^^377^406^[REPLACE] if  ( !isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return ;^391^392^393^^^377^406^[REPLACE] throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^( Value )  values.get ( 0 << 2 )  ) ;^393^^^^^377^406^[REPLACE] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^393^^^^^377^406^[ADD] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Type owner = Type.getType (  (  ( MethodInsnNode )  insn ) .owner ) ;^389^^^^^377^406^[REPLACE] Type owner = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .owner ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^throw new AnalyzerException ( "Method owner", newValue ( owner ) , ;^391^392^393^^^377^406^[REPLACE] throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^390^^^^^377^406^[REPLACE] if  ( !isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^( Value )  values.get ( 1 )  ) ;^393^^^^^377^406^[REPLACE] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REMOVE]^if  ( ! ( isSubTypeOf (  (  ( Value )   ( values.get (  ( i++ )  )  )  ) , newValue ( owner )  )  )  )  {     throw new AnalyzerException ( "Method owner", newValue ( owner ) ,  (  ( Value )   ( values.get ( 0 )  )  )  ) ; }^400^^^^^377^406^[REMOVE] ^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^int i = 2;^386^^^^^377^406^[REPLACE] int i = 0;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^386^^^^^377^406^[ADD] int i = 0;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^int j = 2;^387^^^^^377^406^[REPLACE] int j = 0;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Type[] args = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .desc ) ;^396^^^^^377^406^[REPLACE] Type[] args = Type.getArgumentTypes (  (  ( MethodInsnNode )  insn ) .desc ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^398^^^^^377^406^[ADD] Value expected = newValue ( args[j++] ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( values.get ( i )   ==  BasicValue.INT_VALUE )  {^379^^^^^375^408^[REPLACE] if  ( values.get ( i )  != BasicValue.INT_VALUE )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return ;^380^381^382^^^375^408^[REPLACE] throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^( Value )  values.size ( i )  ) ;^382^^^^^375^408^[REPLACE] ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^382^^^^^375^408^[ADD] ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^for  ( int i = 0 ; i < values.size (  )  /  0 .5 ; ++i )  {^378^^^^^375^408^[REPLACE] for  ( int i = 0; i < values.size (  ) ; ++i )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^379^380^381^382^383^375^408^[ADD] if  ( values.get ( i )  != BasicValue.INT_VALUE )  { throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ; }^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^throw new AnalyzerException ( null, "an object reference or a return address", ;^380^381^382^^^375^408^[REPLACE] throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^for  ( int i = 0 ; i < values.size (  ) ; ++i )  {^378^^^^^375^408^[REPLACE] for  ( int i = 0; i < values.size (  ) ; ++i )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^378^379^380^381^382^375^408^[ADD] for  ( int i = 0; i < values.size (  ) ; ++i )  { if  ( values.get ( i )  != BasicValue.INT_VALUE )  { throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^380^381^382^^^375^408^[ADD] throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REMOVE]^expected1 = newValue ( Type.getType ( "[B" )  ) ;^382^^^^^375^408^[REMOVE] ^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( opcode  ==  INVOKESTATIC )  {^388^^^^^375^408^[REPLACE] if  ( opcode != INVOKESTATIC )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REMOVE]^if  ( ! ( isSubTypeOf (  (  ( Value )   ( values.get (  ( i++ )  )  )  ) , newValue ( owner )  )  )  )  {     throw new AnalyzerException ( "Method owner", newValue ( owner ) ,  (  ( Value )   ( values.get ( 0 )  )  )  ) ; }^388^^^^^375^408^[REMOVE] ^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^390^^^^^375^408^[REPLACE] if  ( !isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^throw new AnalyzerException ( "Method owner", newValue ( owner ) , ;^391^392^393^^^375^408^[REPLACE] throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^( Value )  values.size ( 4 )  ) ;^393^^^^^375^408^[REPLACE] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^393^^^^^375^408^[ADD] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Type owner = Type.getType (  (  ( MethodInsnNode )  insn ) .owner ) ;^389^^^^^375^408^[REPLACE] Type owner = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .owner ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return ;^391^392^393^^^375^408^[REPLACE] throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^391^392^393^^^375^408^[ADD] throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^( Value )  values.get ( 4 )  ) ;^393^^^^^375^408^[REPLACE] ( Value )  values.get ( 0 )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^if  ( isSubTypeOf ( encountered, expected )  )  {^400^^^^^375^408^[REPLACE] if  ( !isSubTypeOf ( encountered, expected )  )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^for  ( int i = 0; i < values.size (  )  %  2; ++i )  {^378^^^^^375^408^[REPLACE] for  ( int i = 0; i < values.size (  ) ; ++i )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^int i = 0 + 0;^386^^^^^375^408^[REPLACE] int i = 0;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^int j = 0 - 3;^387^^^^^375^408^[REPLACE] int j = 0;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^389^^^^^375^408^[ADD] Type owner = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .owner ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^Type[] args = Type.getObjectType (  (  ( MethodInsnNode )  insn ) .desc ) ;^396^^^^^375^408^[REPLACE] Type[] args = Type.getArgumentTypes (  (  ( MethodInsnNode )  insn ) .desc ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[ADD]^^396^^^^^375^408^[ADD] Type[] args = Type.getArgumentTypes (  (  ( MethodInsnNode )  insn ) .desc ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return super.unaryOperation ( insn, value ) ;^407^^^^^375^408^[REPLACE] return super.naryOperation ( insn, values ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicVerifier   [TYPE]  Type owner  [TYPE]  boolean false  true  [TYPE]  Type[] args  [TYPE]  Value encountered  expected  [TYPE]  List values  [TYPE]  AbstractInsnNode insn  [TYPE]  int i  j  opcode 
[REPLACE]^return  (  ( BasicValue )  value )  .newValue ( this )  ;^411^^^^^410^412^[REPLACE] return  (  ( BasicValue )  value ) .isReference (  ) ;^[METHOD] isArrayValue [TYPE] boolean [PARAMETER] Value value [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value value 
[REPLACE]^return super.naryOperation ( insn, values ) ;^417^^^^^414^418^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value objectArrayValue 
[REPLACE]^return value  &&  expected;^421^^^^^420^422^[REPLACE] return value == expected;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] BasicVerifier   [TYPE]  boolean false  true  [TYPE]  Value expected  value 
