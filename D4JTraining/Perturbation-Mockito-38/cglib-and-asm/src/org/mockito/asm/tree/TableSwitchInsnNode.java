[REPLACE]^this.labels.addAll ( Arrays.asList ( labels )  ) ;^84^^^^^78^92^[REPLACE] super ( Opcodes.TABLESWITCH ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.max = max; ;^85^^^^^78^92^[REPLACE] this.min = min;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.min = min; ;^86^^^^^78^92^[REPLACE] this.max = max;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.dflt =  null;^87^^^^^78^92^[REPLACE] this.dflt = dflt;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.labels  =  this.labels ;^88^^^^^78^92^[REPLACE] this.labels = new ArrayList (  ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[ADD]^^88^^^^^78^92^[ADD] this.labels = new ArrayList (  ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^if  ( labels == null )  {^89^^^^^78^92^[REPLACE] if  ( labels != null )  {^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[ADD]^^89^90^91^^^78^92^[ADD] if  ( labels != null )  { this.labels.addAll ( Arrays.asList ( labels )  ) ; }^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.labels.get ( Arrays.asList ( labels )  ) ;^90^^^^^78^92^[REPLACE] this.labels.addAll ( Arrays.asList ( labels )  ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^this.labels.addAll (   labels    ) ;^90^^^^^78^92^[REPLACE] this.labels.addAll ( Arrays.asList ( labels )  ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] final int min final int max LabelNode dflt LabelNode[] labels [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^return new TableSwitchInsnNode ( min, max,^95^^^^^94^96^[REPLACE] return TABLESWITCH_INSN;^[METHOD] getType [TYPE] int [PARAMETER] [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  boolean false  true  [TYPE]  int max  min 
[REPLACE]^for  ( int i = 0; i < labels.length; ++i )  { labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^99^^^^^98^104^[REPLACE] Label[] labels = new Label[this.labels.size (  ) ];^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[ADD]^^99^^^^^98^104^[ADD] Label[] labels = new Label[this.labels.size (  ) ];^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[REPLACE]^for  ( int i = 0; i < labels.length - 3; ++i )  {^100^^^^^98^104^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[REPLACE]^labels[i]  =  labels[i] ;^101^^^^^98^104^[REPLACE] labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[REPLACE]^labels[i]  = null ;^101^^^^^98^104^[REPLACE] labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[REPLACE]^for  ( int i = 0 ; i < labels.length; ++i )  {^100^^^^^98^104^[REPLACE] for  ( int i = 0; i < labels.length; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[ADD]^^100^101^102^^^98^104^[ADD] for  ( int i = 0; i < labels.length; ++i )  { labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ; }^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
[REPLACE]^this.labels.addAll ( Arrays.asList ( labels )  ) ;^103^^^^^98^104^[REPLACE] mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] TableSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  List labels  [TYPE]  Label[] labels  [TYPE]  boolean false  true  [TYPE]  int i  max  min  [TYPE]  MethodVisitor mv 
