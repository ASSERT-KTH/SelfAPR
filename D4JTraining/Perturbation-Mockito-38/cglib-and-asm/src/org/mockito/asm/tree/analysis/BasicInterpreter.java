[REPLACE]^if  ( type != null )  {^53^^^^^52^77^[REPLACE] if  ( type == null )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REMOVE]^if  ( ! ( v.equals ( w )  )  )  {     return BasicValue.UNINITIALIZED_VALUE; }^53^^^^^52^77^[REMOVE] ^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return BasicValue.REFERENCE_VALUE;^54^^^^^52^77^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return this;^58^^^^^52^77^[REPLACE] return null;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return BasicValue.FLOAT_VALUE;^64^^^^^52^77^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return BasicValue.INT_VALUE;^66^^^^^52^77^[REPLACE] return BasicValue.FLOAT_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return BasicValue.INT_VALUE;^68^^^^^52^77^[REPLACE] return BasicValue.LONG_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return BasicValue.INT_VALUE;^70^^^^^52^77^[REPLACE] return BasicValue.DOUBLE_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^73^^^^^52^77^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^return ;^75^^^^^52^77^[REPLACE] throw new Error ( "Internal error" ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[ADD]^^75^^^^^52^77^[ADD] throw new Error ( "Internal error" ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] BasicInterpreter   [TYPE]  Type type  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! cst instanceof Integer )  {^106^^^^^79^128^[REPLACE] if  ( cst instanceof Integer )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( ! cst instanceof Float )  {^108^^^^^79^128^[REPLACE] } else if  ( cst instanceof Float )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return BasicValue.FLOAT_VALUE;return BasicValue.LONG_VALUE;^108^109^110^111^^79^128^[ADD] else if  ( cst instanceof Float )  { return BasicValue.FLOAT_VALUE; } else if  ( cst instanceof Long )  { return BasicValue.LONG_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^} else if  ( ! cst instanceof Long )  {^110^^^^^79^128^[REPLACE] } else if  ( cst instanceof Long )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^112^^^^^79^128^[REPLACE] } else if  ( cst instanceof Double )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( ! cst instanceof Type )  {^114^^^^^79^128^[REPLACE] } else if  ( cst instanceof Type )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^117^^^^^114^118^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "java/lang/Class" )  ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^117^^^^^79^128^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^113^^^^^79^128^[REPLACE] return BasicValue.DOUBLE_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^111^^^^^79^128^[REPLACE] return BasicValue.LONG_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^112^113^114^115^^79^128^[ADD] else if  ( cst instanceof Double )  { return BasicValue.DOUBLE_VALUE; } else if  ( cst instanceof Type )  { return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^114^115^116^117^118^79^128^[ADD] else if  ( cst instanceof Type )  { return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ; } else { return newValue ( Type.getType ( cst.getClass (  )  )  ) ; }^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^114^^^^^79^128^[REPLACE] } else if  ( cst instanceof Type )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^109^^^^^79^128^[REPLACE] return BasicValue.FLOAT_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return BasicValue.LONG_VALUE;return BasicValue.DOUBLE_VALUE;^110^111^112^113^^79^128^[ADD] else if  ( cst instanceof Long )  { return BasicValue.LONG_VALUE; } else if  ( cst instanceof Double )  { return BasicValue.DOUBLE_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^} else if  ( ! cst instanceof Double )  {^112^^^^^79^128^[REPLACE] } else if  ( cst instanceof Double )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getObjectType ( this )   ) ;^117^^^^^114^118^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getType ( null )   ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getObjectType ( null )   ) ;^117^^^^^79^128^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return BasicValue.DOUBLE_VALUE;return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^112^113^114^115^^79^128^[ADD] else if  ( cst instanceof Double )  { return BasicValue.DOUBLE_VALUE; } else if  ( cst instanceof Type )  { return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^} else if  ( ! cst instanceof Type )  {^114^^^^^79^128^[REPLACE] } else if  ( cst instanceof Type )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getType ( false )   ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[ADD]^}   return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^114^115^116^117^118^79^128^[ADD] else if  ( cst instanceof Type )  { return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ; } else { return newValue ( Type.getType ( cst.getClass (  )  )  ) ; }^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^107^^^^^79^128^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( ! cst instanceof Long )  {^110^^^^^79^128^[REPLACE] } else if  ( cst instanceof Long )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getObjectType ( false )   ) ;^117^^^^^114^118^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  if  ( ! cst instanceof Double )  {^112^^^^^79^128^[REPLACE] } else if  ( cst instanceof Double )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getType ( this )   ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue (   "java/lang/Class"    ) ;^115^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "java/lang/Class" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getObjectType ( this )   ) ;^117^^^^^79^128^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^}  else {^110^^^^^79^128^[REPLACE] } else if  ( cst instanceof Long )  {^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue (   cst.getClass (  )   ) ;^117^^^^^79^128^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue (   cst.getClass (  )   ) ;^117^^^^^114^118^[REPLACE] return newValue ( Type.getType ( cst.getClass (  )  )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "null" )  ) ;^82^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType ( "null" )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^90^^^^^79^128^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^93^^^^^79^128^[REPLACE] return BasicValue.LONG_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^97^^^^^79^128^[REPLACE] return BasicValue.FLOAT_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^100^^^^^79^128^[REPLACE] return BasicValue.DOUBLE_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^103^^^^^79^128^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^120^^^^^79^128^[REPLACE] return BasicValue.RETURNADDRESS_VALUE;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getObjectType (  (  ( TypeInsnNode )  insn ) .desc )  ) ;^122^^^^^79^128^[REPLACE] return newValue ( Type.getType (  (  ( FieldInsnNode )  insn ) .desc )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getReturnType (  (  ( MethodInsnNode )  insn ) .desc )  ) ;^124^^^^^79^128^[REPLACE] return newValue ( Type.getObjectType (  (  ( TypeInsnNode )  insn ) .desc )  ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^String desc =  (  ( TypeInsnNode )  insn ) .desc;^105^^^^^79^128^[REPLACE] Object cst =  (  ( LdcInsnNode )  insn ) .cst;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new Error ( "Internal error" ) ; ;^126^^^^^79^128^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] newOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Object cst  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.REFERENCE_VALUE;^133^^^^^130^134^[REPLACE] return value;^[METHOD] copyOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  AbstractInsnNode insn 
[REPLACE]^desc =   (  ( TypeInsnNode )  insn ) .desc;^210^^^^^138^222^[REPLACE] desc =  (  ( TypeInsnNode )  insn ) .desc;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^148^^^^^138^222^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^153^^^^^138^222^[REPLACE] return BasicValue.FLOAT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^158^^^^^138^222^[REPLACE] return BasicValue.LONG_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^163^^^^^138^222^[REPLACE] return BasicValue.DOUBLE_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return false;^178^^^^^138^222^[REPLACE] return null;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getType ( false )  .desc )  ) ;^180^^^^^138^222^[REPLACE] return newValue ( Type.getType (  (  ( FieldInsnNode )  insn ) .desc )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^184^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[Z" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^186^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[C" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^188^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[B" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^190^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[S" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue (   "[I"    ) ;^192^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[I" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getObjectType ( "[F" )  ) ;^194^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[F" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^196^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[D" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^198^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[J" )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "["  ^  Type.getObjectType ( desc )  )  ) ;^204^^^^^138^222^[REPLACE] return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^206^^^^^138^222^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return this;^208^^^^^138^222^[REPLACE] return null;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type .getType ( false )   ) ;^211^^^^^138^222^[REPLACE] return newValue ( Type.getObjectType ( desc )  ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^213^^^^^138^222^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return this;^218^^^^^138^222^[REPLACE] return null;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^Object cst =  (  ( LdcInsnNode )  insn ) .cst;^203^^^^^138^222^[REPLACE] String desc =  (  ( TypeInsnNode )  insn ) .desc;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^200^^^^^138^222^[REPLACE] throw new AnalyzerException  (" ")  ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^throw new Error ( "Internal error" ) ; ;^220^^^^^138^222^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[ADD]^^220^^^^^138^222^[ADD] throw new Error ( "Internal error." ) ;^[METHOD] unaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value  [TYPE]  String desc  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^245^^^^^228^294^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^252^^^^^228^294^[REPLACE] return BasicValue.FLOAT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^265^^^^^228^294^[REPLACE] return BasicValue.LONG_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.INT_VALUE;^272^^^^^228^294^[REPLACE] return BasicValue.DOUBLE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType ( "[I" )  ) ;^274^^^^^228^294^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return BasicValue.FLOAT_VALUE;^280^^^^^228^294^[REPLACE] return BasicValue.INT_VALUE;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return false;^290^^^^^228^294^[REPLACE] return null;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return ;^292^^^^^228^294^[REPLACE] throw new Error ( "Internal error." ) ;^[METHOD] binaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return this;^302^^^^^296^303^[REPLACE] return null;^[METHOD] ternaryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn Value value1 Value value2 Value value3 [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value value1  value2  value3  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( insn.getOpcode (  )   !=  MULTIANEWARRAY )  {^308^^^^^305^313^[REPLACE] if  ( insn.getOpcode (  )  == MULTIANEWARRAY )  {^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[ADD]^return newValue ( Type.getType (  (  ( MultiANewArrayInsnNode )  insn ) .desc )  ) ;return newValue ( Type.getReturnType (  (  ( MethodInsnNode )  insn ) .desc )  ) ;^308^309^310^311^312^305^313^[ADD] if  ( insn.getOpcode (  )  == MULTIANEWARRAY )  { return newValue ( Type.getType (  (  ( MultiANewArrayInsnNode )  insn ) .desc )  ) ; } else { return newValue ( Type.getReturnType (  (  ( MethodInsnNode )  insn ) .desc )  ) ; }^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getObjectType (  (  ( TypeInsnNode )  insn ) .desc )  ) ;^311^^^^^305^313^[REPLACE] return newValue ( Type.getReturnType (  (  ( MethodInsnNode )  insn ) .desc )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getSort (  (  ( MultiANewArrayInsnNode )  insn ) .desc )  ) ;^309^^^^^305^313^[REPLACE] return newValue ( Type.getType (  (  ( MultiANewArrayInsnNode )  insn ) .desc )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType (  (  ( FieldInsnNode )  insn ) .desc )  ) ;^309^^^^^305^313^[REPLACE] return newValue ( Type.getType (  (  ( MultiANewArrayInsnNode )  insn ) .desc )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[REPLACE]^return newValue ( Type.getType (  (  ( MethodInsnNode )  insn ) .desc )  ) ;^311^^^^^305^313^[REPLACE] return newValue ( Type.getReturnType (  (  ( MethodInsnNode )  insn ) .desc )  ) ;^[METHOD] naryOperation [TYPE] Value [PARAMETER] AbstractInsnNode insn List values [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  AbstractInsnNode insn 
[REPLACE]^if  ( v.equals ( w )  )  {^316^^^^^315^320^[REPLACE] if  ( !v.equals ( w )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value v  w 
[REPLACE]^return BasicValue.REFERENCE_VALUE;^317^^^^^315^320^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value v  w 
[REPLACE]^return BasicValue.INT_VALUE;^319^^^^^315^320^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] BasicInterpreter   [TYPE]  boolean false  true  [TYPE]  Value v  w 
