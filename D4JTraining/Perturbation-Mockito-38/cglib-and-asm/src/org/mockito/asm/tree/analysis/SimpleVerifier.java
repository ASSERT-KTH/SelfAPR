[REPLACE]^private  Type currentClass;^49^^^^^^^[REPLACE] private final Type currentClass;^ [CLASS] SimpleVerifier  
[REPLACE]^private  List currentClassInterfaces;^59^^^^^^^[REPLACE] private final List currentClassInterfaces;^ [CLASS] SimpleVerifier  
[REPLACE]^private  boolean isInterface;^64^^^^^^^[REPLACE] private final boolean isInterface;^ [CLASS] SimpleVerifier  
[REPLACE]^if  ( type != null )  {^112^^^^^111^141^[REPLACE] if  ( type == null )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return BasicValue.UNINITIALIZED_VALUE;  ;^113^^^^^111^141^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^boolean isArray = type.getSort (  )   !=  Type.ARRAY;^116^^^^^111^141^[REPLACE] boolean isArray = type.getSort (  )  == Type.ARRAY;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if   (  arrayType.getSort  (    )   == Type.ARRAY  )   {  ;^117^^^^^111^141^[REPLACE] if  ( isArray )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^117^118^119^120^121^111^141^[ADD] if  ( isArray )  { switch  ( type.getElementType (  ) .getSort (  )  )  { case Type.BOOLEAN: case Type.CHAR: case Type.BYTE:^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return new BasicValue ( currentSuperClass ) ;^123^^^^^111^141^[REPLACE] return new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^Value v = super.newValue ( currentSuperClass ) ;^127^^^^^111^141^[REPLACE] Value v = super.newValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if  ( v  !=  BasicValue.REFERENCE_VALUE )  {^128^^^^^111^141^[REPLACE] if  ( v == BasicValue.REFERENCE_VALUE )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^128^129^130^131^^111^141^[ADD] if  ( v == BasicValue.REFERENCE_VALUE )  { if  ( isArray )  { v = newValue ( type.getElementType (  )  ) ; String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if   (  arrayType.getSort  (    )   == Type.ARRAY  )   {  ;^129^^^^^111^141^[REPLACE] if  ( isArray )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^137^^^^^129^138^[ADD] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^130^^^^^111^141^[ADD] v = newValue ( type.getElementType (  )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^133^^^^^111^141^[ADD] desc = '[' + desc;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( Type.getType ( null )  ) ;^135^^^^^111^141^[REPLACE] v = new BasicValue ( Type.getType ( desc )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^String desc =  (  ( BasicValue )  v ) .getSort (  ) .getDescriptor (  ) ;^131^^^^^111^141^[REPLACE] String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 * 3; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^130^131^^^^111^141^[ADD] v = newValue ( type.getElementType (  )  ) ; String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^135^^^^^111^141^[ADD] v = new BasicValue ( Type.getType ( desc )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( null ) ;^137^^^^^111^141^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^String desc =  (  ( BasicValue )  v ) .getType (  )  .getSort (  )  ;^131^^^^^111^141^[REPLACE] String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^132^133^134^^^111^141^[ADD] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  { desc = '[' + desc; }^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( currentSuperClass ) ;^137^^^^^129^138^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  newValue ( null.getElementType (  )  ) ;^130^^^^^111^141^[REPLACE] v = newValue ( type.getElementType (  )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^desc = '['  desc;^133^^^^^111^141^[REPLACE] desc = '[' + desc;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 3; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  newValue ( currentSuperClass.getElementType (  )  ) ;^130^^^^^111^141^[REPLACE] v = newValue ( type.getElementType (  )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( currentSuperClass ) ;^137^^^^^111^141^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^131^^^^^111^141^[ADD] String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return w;  ;^140^^^^^111^141^[REPLACE] return v;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^Type expectedType =  (  ( BasicValue )  expected ) .getSort (  ) ;^165^^^^^164^187^[REPLACE] Type expectedType =  (  ( BasicValue )  expected ) .getType (  ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^166^^^^^164^187^[ADD] Type type =  (  ( BasicValue )  value ) .getType (  ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  "Lnull;".equals  (  t.getDescriptor  (    )    )    )   {  ;^175^^^^^164^187^[REPLACE] if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^} else if  ( type.getType (  )  == Type.OBJECT && type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^[REPLACE] } else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^}   return isAssignableFrom ( expectedType, type ) ;^177^178^179^180^^164^187^[ADD] else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) { return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return true;^182^^^^^177^183^[REPLACE] return false;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom  (  expectedType, type  )  ;  ;^180^^^^^177^183^[REPLACE] return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( expectedType, t ) ;^180^^^^^164^187^[REPLACE] return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return true;^182^^^^^164^187^[REPLACE] return false;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return false;^176^^^^^164^187^[REPLACE] return true;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^}  else {^177^178^179^^^164^187^[REPLACE] } else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( expectedType, t ) ;^180^^^^^177^183^[REPLACE] return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return type == expectedType;  ;^172^^^^^164^187^[REPLACE] return type == expectedType;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return true;  ;^176^^^^^164^187^[REPLACE] return true;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return ;^185^^^^^164^187^[REPLACE] throw new Error ( "Internal error" ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( v.equals ( w )  )  {^190^^^^^189^229^[REPLACE] if  ( !v.equals ( w )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null &&  ( t.getSort (  )  != Type.OBJECT ) {^193^194^195^^^189^229^[REPLACE] if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != null &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^193^225^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^200^^^^^196^224^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return v;^202^203^204^^^196^224^[ADD] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^203^^^^^196^224^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^205^206^207^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^206^^^^^196^224^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  t, v  )    )   {  ;^208^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^209^^^^^196^224^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null || isInterface ( t )  )  {^216^^^^^196^224^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return BasicValue.REFERENCE_VALUE;^216^217^218^^^196^224^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return BasicValue.REFERENCE_VALUE;  ;^217^^^^^196^224^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^220^221^222^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return newValue ( t ) ; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( expectedType ) ;^221^^^^^196^224^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^196^224^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^196^224^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^200^^^^^193^225^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^203^^^^^193^225^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^205^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^206^^^^^193^225^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^209^^^^^193^225^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null || isInterface ( t )  )  {^216^^^^^193^225^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^216^217^218^^^193^225^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return BasicValue.REFERENCE_VALUE;  ;^217^^^^^193^225^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^220^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue  (  t  )  ;  ;^221^^^^^193^225^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^219^^^^^193^225^[ADD] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( expectedType ) ;^221^^^^^193^225^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != true &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^189^229^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^196^197^198^199^200^189^229^[ADD] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) { if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^} else if   (  "Lnull;".equals  (  arrayType.getDescriptor  (    )    )    )   {  ;^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^202^203^204^^^196^224^[ADD] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return v;^205^206^207^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^208^209^210^^^196^224^[ADD] if  ( isAssignableFrom ( u, t )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  (  isInterface ( t )  )  {^216^^^^^196^224^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^216^217^218^^^196^224^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue  (  t  )  ;  ;^221^^^^^196^224^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^219^^^^^196^224^[ADD] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^200^^^^^189^229^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getSort (  )  )  )  {^202^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^203^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^205^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^206^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^208^209^210^^^189^229^[ADD] if  ( isAssignableFrom ( u, t )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^209^^^^^189^229^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  (  isInterface ( t )  )  {^216^^^^^189^229^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return BasicValue.REFERENCE_VALUE;  ;^217^^^^^189^229^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^220^221^222^^^189^229^[ADD] if  ( isAssignableFrom ( t, u )  )  { return newValue ( t ) ; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^189^229^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^189^229^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue  (  t  )  ;  ;^221^^^^^189^229^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return BasicValue.UNINITIALIZED_VALUE;  ;^226^^^^^189^229^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^191^^^^^189^229^[ADD] Type t =  (  ( BasicValue )  v ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type t =  (  ( BasicValue )   ( value )  ) .getType (  )  ;^192^^^^^189^229^[REPLACE] Type u =  (  ( BasicValue )  w ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != this &&  ( t.getSort (  )  != Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^189^229^[REPLACE] if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^193^194^195^196^197^189^229^[ADD] if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) { if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  )^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != false &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^193^225^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return newValue ( t ) ;^220^221^222^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return newValue ( t ) ; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( u.getSort (  )  )  )  {^202^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( u, type )  )  {^208^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  (  isInterface ( t )  )  {^216^^^^^193^225^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^220^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^193^225^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^193^225^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( currentSuperClass != this &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^189^229^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^199^200^201^^^196^224^[ADD] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getSort (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null ) {^216^^^^^196^224^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^199^200^201^^^189^229^[ADD] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  "Lnull;".equals  (  t.getDescriptor  (    )    )    )   {  ;^202^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^202^203^204^^^189^229^[ADD] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  t, v  )    )   {  ;^208^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != false ) {^216^^^^^189^229^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return BasicValue.REFERENCE_VALUE;^216^217^218^^^189^229^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^220^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type t =  (  ( BasicValue )   ( value )  ) .getType (  )  ;^191^^^^^189^229^[REPLACE] Type t =  (  ( BasicValue )  v ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type u =  (  ( BasicValue )  w ) .getSort (  ) ;^192^^^^^189^229^[REPLACE] Type u =  (  ( BasicValue )  w ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;  ;^228^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( type.equals ( u )  )  {^247^^^^^246^272^[REPLACE] if  ( t.equals ( u )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^247^248^249^^^246^272^[ADD] if  ( t.equals ( u )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^248^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if   (  currentClass != null && u.equals  (  currentClass  )    )   {  ;^250^^^^^246^272^[REPLACE] if  ( currentClass != null && t.equals ( currentClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( getSuperClass ( u )  != this  )  {^251^^^^^246^272^[REPLACE] if  ( getSuperClass ( u )  == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( currentSuperClass )  ) ;^254^^^^^251^255^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;^252^^^^^246^272^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^246^272^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( getSuperClass ( u )  != null )  {^251^^^^^246^272^[REPLACE] if  ( getSuperClass ( u )  == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^return false;return isAssignableFrom ( t, getSuperClass ( u )  ) ;^251^252^253^254^255^246^272^[ADD] if  ( getSuperClass ( u )  == null )  { return false; } else { return isAssignableFrom ( t, getSuperClass ( u )  ) ; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^251^255^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom  (  t, getSuperClass  (  u  )    )  ;  ;^254^^^^^246^272^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  (  u.equals ( currentClass )  )  {^257^^^^^246^272^[REPLACE] if  ( currentClass != null && u.equals ( currentClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if   (  arrayType.getSort  (    )   == Type.ARRAY  )   {  ;^258^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^259^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( currentClassInterfaces == true )  {^261^^^^^246^272^[REPLACE] if  ( currentClassInterfaces != null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( type, v )  )  {^264^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, v )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^265^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;  ;^265^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^[REPLACE] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^Value v = super.newValue ( type )  ;^263^^^^^246^272^[REPLACE] Type v =  ( Type )  currentClassInterfaces.get ( i ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;  ;^259^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;^269^^^^^246^272^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^262^263^264^265^266^246^272^[ADD] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  { Type v =  ( Type )  currentClassInterfaces.get ( i ) ; if  ( isAssignableFrom ( t, v )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^Type v =  ( Type )  currentClassInterfaces.size ( i ) ;^263^^^^^246^272^[REPLACE] Type v =  ( Type )  currentClassInterfaces.get ( i ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( type, currentSuperClass )  )  {^258^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( currentClassInterfaces == null )  {^261^^^^^246^272^[REPLACE] if  ( currentClassInterfaces != null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if   (  isAssignableFrom  (  u, t  )    )   {  ;^264^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, v )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return getClass  (  t  )  .isAssignableFrom  (  getClass  (  u  )    )  ;  ;^271^^^^^246^272^[REPLACE] return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
