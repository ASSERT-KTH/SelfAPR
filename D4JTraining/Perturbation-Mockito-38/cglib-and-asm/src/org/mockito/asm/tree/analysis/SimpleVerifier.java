[REPLACE]^private  Type currentSuperClass;^54^^^^^^^[REPLACE] private final Type currentSuperClass;^ [CLASS] SimpleVerifier  
[REPLACE]^private  List currentClassInterfaces;^59^^^^^^^[REPLACE] private final List currentClassInterfaces;^ [CLASS] SimpleVerifier  
[REPLACE]^private  boolean isInterface;^64^^^^^^^[REPLACE] private final boolean isInterface;^ [CLASS] SimpleVerifier  
[REPLACE]^this ( true, true, false ) ;^70^^^^^69^71^[REPLACE] this ( null, null, false ) ;^[METHOD] <init> [TYPE] SimpleVerifier() [PARAMETER] [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^this ( currentClass, currentSuperClass, true, true ) ;^86^^^^^81^87^[REPLACE] this ( currentClass, currentSuperClass, null, isInterface ) ;^[METHOD] <init> [TYPE] Type,boolean) [PARAMETER] Type currentClass Type currentSuperClass final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^this.currentSuperClass = currentSuperClass; ;^105^^^^^99^109^[REPLACE] this.currentClass = currentClass;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[ADD]^^105^^^^^99^109^[ADD] this.currentClass = currentClass;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^this.currentClass = currentClass; ;^106^^^^^99^109^[REPLACE] this.currentSuperClass = currentSuperClass;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[ADD]^^106^^^^^99^109^[ADD] this.currentSuperClass = currentSuperClass;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^this.currentClassInterfaces =  null;^107^^^^^99^109^[REPLACE] this.currentClassInterfaces = currentClassInterfaces;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^this.isInterface =  null;^108^^^^^99^109^[REPLACE] this.isInterface = isInterface;^[METHOD] <init> [TYPE] List,boolean) [PARAMETER] Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [CLASS] SimpleVerifier   [TYPE]  Type currentClass  currentSuperClass  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isInterface  true 
[REPLACE]^if  ( type != null )  {^112^^^^^111^141^[REPLACE] if  ( type == null )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^113^^^^^111^141^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^boolean isArray = type.getSort (  )   ||  Type.ARRAY;^116^^^^^111^141^[REPLACE] boolean isArray = type.getSort (  )  == Type.ARRAY;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^116^^^^^111^141^[ADD] boolean isArray = type.getSort (  )  == Type.ARRAY;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if  ( true )  {^117^^^^^111^141^[REPLACE] if  ( isArray )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return new BasicValue ( currentSuperClass ) ;^123^^^^^111^141^[REPLACE] return new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^Value v = super.newValue ( currentSuperClass ) ;^127^^^^^111^141^[REPLACE] Value v = super.newValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^127^^^^^111^141^[ADD] Value v = super.newValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if  ( v  &&  BasicValue.REFERENCE_VALUE )  {^128^^^^^111^141^[REPLACE] if  ( v == BasicValue.REFERENCE_VALUE )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^128^129^130^131^^111^141^[ADD] if  ( v == BasicValue.REFERENCE_VALUE )  { if  ( isArray )  { v = newValue ( type.getElementType (  )  ) ; String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^if  ( currentClass != null && u.equals ( currentClass )  )  {^129^^^^^111^141^[REPLACE] if  ( isArray )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^v = newValue ( type.getElementType (  )  ) ;String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^129^130^131^132^133^111^141^[ADD] if  ( isArray )  { v = newValue ( type.getElementType (  )  ) ; String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ; for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  { desc = '[' + desc;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( currentSuperClass ) ;^137^^^^^129^138^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i  !=  type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  newValue ( currentSuperClass.getElementType (  )  ) ;^130^^^^^111^141^[REPLACE] v = newValue ( type.getElementType (  )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^130^^^^^111^141^[ADD] v = newValue ( type.getElementType (  )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( Type.getType ( null )  ) ;^135^^^^^111^141^[REPLACE] v = new BasicValue ( Type.getType ( desc )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^String desc =  (  ( BasicValue )  v ) .getSort (  ) .getDescriptor (  ) ;^131^^^^^111^141^[REPLACE] String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 * 0; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i  <=  currentSuperClass.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^desc = '[' +true;^133^^^^^111^141^[REPLACE] desc = '[' + desc;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( null ) ;^137^^^^^111^141^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^137^^^^^111^141^[ADD] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 - 0; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^132^133^134^^^111^141^[ADD] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  { desc = '[' + desc; }^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^129^130^131^132^133^111^141^[ADD] if  ( isArray )  { v = newValue ( type.getElementType (  )  ) ; String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ; for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  { desc = '[' + desc;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( null ) ;^137^^^^^129^138^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^137^^^^^129^138^[ADD] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^135^^^^^111^141^[ADD] v = new BasicValue ( Type.getType ( desc )  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 + 1; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i  >  type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^v =  new BasicValue ( currentSuperClass ) ;^137^^^^^111^141^[REPLACE] v = new BasicValue ( type ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[ADD]^^131^^^^^111^141^[ADD] String desc =  (  ( BasicValue )  v ) .getType (  ) .getDescriptor (  ) ;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^for  ( int i = 4; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^[REPLACE] for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^return w;^140^^^^^111^141^[REPLACE] return v;^[METHOD] newValue [TYPE] Value [PARAMETER] Type type [CLASS] SimpleVerifier   [TYPE]  Value v  [TYPE]  Type currentClass  currentSuperClass  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  String desc  [TYPE]  int i 
[REPLACE]^Type t =  (  ( BasicValue )  value ) .getSort (  ) ;^144^^^^^143^147^[REPLACE] Type t =  (  ( BasicValue )  value ) .getType (  ) ;^[METHOD] isArrayValue [TYPE] boolean [PARAMETER] Value value [CLASS] SimpleVerifier   [TYPE]  Value value  [TYPE]  Type currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return t != true ||  ( "Ltrue;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  ;^145^146^^^^143^147^[REPLACE] return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[METHOD] isArrayValue [TYPE] boolean [PARAMETER] Value value [CLASS] SimpleVerifier   [TYPE]  Value value  [TYPE]  Type currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type arrayType =  (  ( BasicValue )  objectArrayValue )  .getType (  )  ;^152^^^^^149^162^[REPLACE] Type arrayType =  (  ( BasicValue )  objectArrayValue ) .getType (  ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( arrayType == null )  {^153^^^^^149^162^[REPLACE] if  ( arrayType != null )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( arrayType.getSort (  )   ||  Type.ARRAY )  {^154^^^^^149^162^[REPLACE] if  ( arrayType.getSort (  )  == Type.ARRAY )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^}  if  ( "Lthis;".equals ( arrayType.getDescriptor (  )  )  )  {^157^^^^^149^162^[REPLACE] } else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return new BasicValue ( type ) ;^158^^^^^149^162^[REPLACE] return objectArrayValue;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( Type .getSort (  )   )  ) ;^155^156^^^^149^162^[REPLACE] return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^}  else {^157^^^^^149^162^[REPLACE] } else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^}^157^158^159^^^149^162^[ADD] else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  { return objectArrayValue; }^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 >> 0 )  )  ) ;^155^156^^^^149^162^[REPLACE] return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( arrayType.getType (  )   &&  Type.ARRAY )  {^154^^^^^149^162^[REPLACE] if  ( arrayType.getSort (  )  == Type.ARRAY )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^154^155^156^157^158^149^162^[ADD] if  ( arrayType.getSort (  )  == Type.ARRAY )  { return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ; } else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  { return objectArrayValue;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^}   return objectArrayValue;^157^158^159^^^149^162^[ADD] else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  { return objectArrayValue; }^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( Type.getType ( type.getDescriptor (  ) .substring ( 1 )  )  ) ;^155^156^^^^149^162^[REPLACE] return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^}  if  ( "Ltrue;".equals ( arrayType.getDescriptor (  )  )  )  {^157^^^^^149^162^[REPLACE] } else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  {^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( Type.getType ( arrayType .getSort (  )  .substring ( 1 >> 4 )  )  ) ;^155^156^^^^149^162^[REPLACE] return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return ;^161^^^^^149^162^[REPLACE] throw new Error ( "Internal error" ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^161^^^^^149^162^[ADD] throw new Error ( "Internal error" ) ;^[METHOD] getElementValue [TYPE] Value [PARAMETER] Value objectArrayValue [CLASS] SimpleVerifier   [TYPE]  Value objectArrayValue  [TYPE]  Type arrayType  currentClass  currentSuperClass  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type expectedType =  (  ( BasicValue )  expected ) .getSort (  ) ;^165^^^^^164^187^[REPLACE] Type expectedType =  (  ( BasicValue )  expected ) .getType (  ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type type =  (  ( BasicValue )  value )  .getType (  )  ;^166^^^^^164^187^[REPLACE] Type type =  (  ( BasicValue )  value ) .getType (  ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^175^^^^^164^187^[REPLACE] if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^}  else {^177^178^179^^^164^187^[REPLACE] } else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return true;^182^^^^^164^187^[REPLACE] return false;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( expectedType, t ) ;^180^^^^^164^187^[REPLACE] return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, type ) ;^180^^^^^164^187^[REPLACE] return isAssignableFrom ( expectedType, type ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return false;^176^^^^^164^187^[REPLACE] return true;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^returnt  !=  expectedType;;^172^^^^^164^187^[REPLACE] return type == expectedType;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return ;^185^^^^^164^187^[REPLACE] throw new Error ( "Internal error" ) ;^[METHOD] isSubTypeOf [TYPE] boolean [PARAMETER] Value value Value expected [CLASS] SimpleVerifier   [TYPE]  Value expected  value  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( v.equals ( w )  )  {^190^^^^^189^229^[REPLACE] if  ( !v.equals ( w )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^Type t =  (  ( BasicValue )  v ) .getType (  ) ;Type u =  (  ( BasicValue )  w ) .getType (  ) ;^190^191^192^193^194^189^229^[ADD] if  ( !v.equals ( w )  )  { Type t =  (  ( BasicValue )  v ) .getType (  ) ; Type u =  (  ( BasicValue )  w ) .getType (  ) ; if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  )^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null &&  ( t.getSort (  )  != Type.OBJECT ) {^193^194^195^^^189^229^[REPLACE] if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != null &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^193^225^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^199^200^201^^^196^224^[ADD] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^200^^^^^196^224^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getSort (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^203^^^^^196^224^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( u, t )  )  {^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^205^206^207^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^206^^^^^196^224^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^208^209^210^^^196^224^[ADD] if  ( isAssignableFrom ( u, t )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^209^^^^^196^224^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  (  isInterface ( t )  )  {^216^^^^^196^224^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^217^^^^^196^224^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return newValue ( t ) ;^220^221^222^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return newValue ( t ) ; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^196^224^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  genullSuperClass ( null ) ;^219^^^^^196^224^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^200^^^^^193^225^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( currentSuperClass.getDescriptor (  )  )  )  {^202^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^203^^^^^193^225^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( u, t )  )  {^205^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^206^^^^^193^225^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, v )  )  {^208^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^209^^^^^193^225^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( type != this ) {^216^^^^^193^225^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^217^^^^^193^225^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^193^225^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^193^225^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != null &&  ( u.getSort (  )  != Type.OBJECT ) {^196^197^198^^^189^229^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( t.getSort (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, v )  )  {^208^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^220^221^222^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return newValue ( t ) ; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( expectedType ) ;^221^^^^^196^224^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^196^224^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^219^^^^^196^224^[ADD] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^199^200^201^^^189^229^[ADD] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^200^^^^^189^229^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^202^203^204^^^189^229^[ADD] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^203^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^205^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^206^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return v;^209^^^^^189^229^[REPLACE] return w;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t != null || isInterface ( t )  )  {^216^^^^^189^229^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^216^217^218^^^189^229^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^217^^^^^189^229^[REPLACE] return BasicValue.REFERENCE_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^189^229^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( type ) ;^221^^^^^189^229^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^t =  getypeSuperClass ( type ) ;^219^^^^^189^229^[REPLACE] t = getSuperClass ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^226^^^^^189^229^[REPLACE] return BasicValue.UNINITIALIZED_VALUE;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type t =  (  ( BasicValue )  v )  .getType (  )  ;^191^^^^^189^229^[REPLACE] Type t =  (  ( BasicValue )  v ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Type u =  (  ( BasicValue )  w )  .getType (  )  ;^192^^^^^189^229^[REPLACE] Type u =  (  ( BasicValue )  w ) .getType (  ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != true &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^193^225^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return v;^205^206^207^^^196^224^[ADD] if  ( isAssignableFrom ( t, u )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lfalse;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^199^200^201^^^193^225^[ADD] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^193^225^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^205^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^208^^^^^193^225^[REPLACE] if  ( isAssignableFrom ( u, t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( type != false ) {^216^^^^^193^225^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^216^217^218^^^193^225^[ADD] if  ( t == null || isInterface ( t )  )  { return BasicValue.REFERENCE_VALUE; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return newValue ( expectedType ) ;^221^^^^^193^225^[REPLACE] return newValue ( t ) ;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( u != true &&  ( u.getType (  )  != Type.OBJECT ) {^196^197^198^^^189^229^[REPLACE] if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^196^224^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^^202^203^204^^^196^224^[ADD] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  { return v; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( type, u )  )  {^205^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( isAssignableFrom ( expectedType, u )  )  {^220^^^^^196^224^[REPLACE] if  ( isAssignableFrom ( t, u )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Ltrue;".equals ( t.getDescriptor (  )  )  )  {^199^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( "Lthis;".equals ( u.getDescriptor (  )  )  )  {^202^^^^^189^229^[REPLACE] if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[ADD]^return w;^208^209^210^^^189^229^[ADD] if  ( isAssignableFrom ( u, t )  )  { return w; }^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  (  isInterface ( t )  )  {^216^^^^^189^229^[REPLACE] if  ( t == null || isInterface ( t )  )  {^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return w;^228^^^^^189^229^[REPLACE] return v;^[METHOD] merge [TYPE] Value [PARAMETER] Value v Value w [CLASS] SimpleVerifier   [TYPE]  Value v  w  [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( currentClass == null && type.equals ( currentClass )  )  {^232^^^^^231^236^[REPLACE] if  ( currentClass != null && t.equals ( currentClass )  )  {^[METHOD] isInterface [TYPE] boolean [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^233^^^^^231^236^[REPLACE] return isInterface;^[METHOD] isInterface [TYPE] boolean [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return getClass ( type ) .isInterface (  ) ;^235^^^^^231^236^[REPLACE] return getClass ( t ) .isInterface (  ) ;^[METHOD] isInterface [TYPE] boolean [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( currentClass == null && t.equals ( currentClass )  )  {^239^^^^^238^244^[REPLACE] if  ( currentClass != null && t.equals ( currentClass )  )  {^[METHOD] getSuperClass [TYPE] Type [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  Class c  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^240^^^^^238^244^[REPLACE] return currentSuperClass;^[METHOD] getSuperClass [TYPE] Type [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  Class c  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^Class c = getClass ( type ) .getSuperclass (  ) ;^242^^^^^238^244^[REPLACE] Class c = getClass ( t ) .getSuperclass (  ) ;^[METHOD] getSuperClass [TYPE] Type [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  Class c  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^return   null ;^243^^^^^238^244^[REPLACE] return c == null ? null : Type.getType ( c ) ;^[METHOD] getSuperClass [TYPE] Type [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  [TYPE]  List currentClassInterfaces  [TYPE]  Class c  [TYPE]  boolean false  isArray  isInterface  true 
[REPLACE]^if  ( t.equals ( currentSuperClass )  )  {^247^^^^^246^272^[REPLACE] if  ( t.equals ( u )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^248^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  (  t.equals ( currentClass )  )  {^250^^^^^246^272^[REPLACE] if  ( currentClass != null && t.equals ( currentClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^250^251^252^253^254^246^272^[ADD] if  ( currentClass != null && t.equals ( currentClass )  )  { if  ( getSuperClass ( u )  == null )  { return false; } else { return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( getSuperClass ( u )  != true )  {^251^^^^^246^272^[REPLACE] if  ( getSuperClass ( u )  == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^return false;return isAssignableFrom ( t, getSuperClass ( u )  ) ;^251^252^253^254^255^246^272^[ADD] if  ( getSuperClass ( u )  == null )  { return false; } else { return isAssignableFrom ( t, getSuperClass ( u )  ) ; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^251^255^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;^252^^^^^246^272^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( t, getSuperClass ( currentSuperClass )  ) ;^254^^^^^246^272^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( getSuperClass ( u )  != null )  {^251^^^^^246^272^[REPLACE] if  ( getSuperClass ( u )  == null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^246^272^[REPLACE] return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  (  u.equals ( currentClass )  )  {^257^^^^^246^272^[REPLACE] if  ( currentClass != null && u.equals ( currentClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( type, currentSuperClass )  )  {^258^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^258^259^260^^^246^272^[ADD] if  ( isAssignableFrom ( t, currentSuperClass )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^259^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( currentClassInterfaces == null )  {^261^^^^^246^272^[REPLACE] if  ( currentClassInterfaces != null )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( u, t )  )  {^264^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, v )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^264^265^266^^^246^272^[ADD] if  ( isAssignableFrom ( t, v )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return false;^265^^^^^246^272^[REPLACE] return true;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < currentClassInterfaces.size (  )  - 2; ++i )  {^262^^^^^246^272^[REPLACE] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^Type v =  ( Type )  currentClassInterfaces.size ( i ) ;^263^^^^^246^272^[REPLACE] Type v =  ( Type )  currentClassInterfaces.get ( i ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^263^^^^^246^272^[ADD] Type v =  ( Type )  currentClassInterfaces.get ( i ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^[REPLACE] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < currentClassInterfaces.length (  ) ; ++i )  {^262^^^^^246^272^[REPLACE] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( isAssignableFrom ( type, v )  )  {^264^^^^^246^272^[REPLACE] if  ( isAssignableFrom ( t, v )  )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return true;^269^^^^^246^272^[REPLACE] return false;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^^262^263^264^265^266^246^272^[ADD] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  { Type v =  ( Type )  currentClassInterfaces.get ( i ) ; if  ( isAssignableFrom ( t, v )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[ADD]^return true;^258^259^260^^^246^272^[ADD] if  ( isAssignableFrom ( t, currentSuperClass )  )  { return true; }^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < currentClassInterfaces.length (  ) ; ++i )  {^262^^^^^246^272^[REPLACE] for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^return getClass ( type ) .isAssignableFrom ( getClass ( u )  ) ;^271^^^^^246^272^[REPLACE] return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[METHOD] isAssignableFrom [TYPE] boolean [PARAMETER] Type t Type u [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  int i 
[REPLACE]^if  ( t.getSort (  )   !=  Type.ARRAY )  {^276^^^^^274^283^[REPLACE] if  ( t.getSort (  )  == Type.ARRAY )  {^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[ADD]^^276^277^278^^^274^283^[ADD] if  ( t.getSort (  )  == Type.ARRAY )  { return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ; }^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^return   type.getDescriptor (  )   ) ;^277^^^^^274^283^[REPLACE] return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[ADD]^return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^275^276^277^278^^274^283^[ADD] try { if  ( t.getSort (  )  == Type.ARRAY )  { return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ; }^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( t.getType (  )   ||  Type.ARRAY )  {^276^^^^^274^283^[REPLACE] if  ( t.getSort (  )  == Type.ARRAY )  {^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^return Class.forName ( t.getDescriptor (  ) .substring ( '/', '.' )  ) ;^277^^^^^274^283^[REPLACE] return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^return Class.forName ( type.getDescriptor (  ) .substring ( '/', '.' )  ) ;^277^^^^^274^283^[REPLACE] return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^return   t.getClassName (  )  ;^279^^^^^274^283^[REPLACE] return Class.forName ( t.getClassName (  )  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
[REPLACE]^return ;^281^^^^^274^283^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getClass [TYPE] Class [PARAMETER] Type t [CLASS] SimpleVerifier   [TYPE]  Type arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  [TYPE]  List currentClassInterfaces  [TYPE]  boolean false  isArray  isInterface  true  [TYPE]  ClassNotFoundException e 
