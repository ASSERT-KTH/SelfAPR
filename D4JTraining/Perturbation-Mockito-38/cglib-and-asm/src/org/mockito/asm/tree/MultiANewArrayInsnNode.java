[REPLACE]^public  long  dims;^52^^^^^^^[REPLACE] public int dims;^ [CLASS] MultiANewArrayInsnNode  
[REPLACE]^mv.visitMultiANewArrayInsn ( desc, dims ) ;^61^^^^^60^64^[REPLACE] super ( Opcodes.MULTIANEWARRAY ) ;^[METHOD] <init> [TYPE] String,int) [PARAMETER] String desc final int dims [CLASS] MultiANewArrayInsnNode   [TYPE]  int dims  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^this.desc =  null;^62^^^^^60^64^[REPLACE] this.desc = desc;^[METHOD] <init> [TYPE] String,int) [PARAMETER] String desc final int dims [CLASS] MultiANewArrayInsnNode   [TYPE]  int dims  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^this.dims =  null;^63^^^^^60^64^[REPLACE] this.dims = dims;^[METHOD] <init> [TYPE] String,int) [PARAMETER] String desc final int dims [CLASS] MultiANewArrayInsnNode   [TYPE]  int dims  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^return new MultiANewArrayInsnNode ( desc, dims ) ;^67^^^^^66^68^[REPLACE] return MULTIANEWARRAY_INSN;^[METHOD] getType [TYPE] int [PARAMETER] [CLASS] MultiANewArrayInsnNode   [TYPE]  int dims  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^super ( Opcodes.MULTIANEWARRAY ) ;^71^^^^^70^72^[REPLACE] mv.visitMultiANewArrayInsn ( desc, dims ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] MultiANewArrayInsnNode   [TYPE]  String desc  [TYPE]  boolean false  true  [TYPE]  int dims  [TYPE]  MethodVisitor mv 
[REPLACE]^return MULTIANEWARRAY_INSN;^75^^^^^74^76^[REPLACE] return new MultiANewArrayInsnNode ( desc, dims ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] MultiANewArrayInsnNode   [TYPE]  String desc  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int dims 
