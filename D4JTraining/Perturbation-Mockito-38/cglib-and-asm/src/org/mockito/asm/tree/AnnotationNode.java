[REPLACE]^if  ( av == null )  {^172^^^^^171^190^[REPLACE] if  ( av != null )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^172^173^174^175^^171^190^[ADD] if  ( av != null )  { if  ( value instanceof String[] )  { String[] typeconst =  ( String[] )  value; av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^if  ( ! value instanceof String[] )  {^173^^^^^171^190^[REPLACE] if  ( value instanceof String[] )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^} else if  ( ! value instanceof AnnotationNode )  {^176^^^^^171^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  if  ( ! value instanceof List )  {^179^^^^^171^190^[REPLACE] } else if  ( value instanceof List )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av.visitAnnotation ( name, value ) ;^187^^^^^179^188^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = v.visitArray ( name ) ;^180^^^^^171^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^List array = new ArrayList (  )  ;^181^^^^^171^190^[REPLACE] List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^int i = 0  ;^182^^^^^171^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^180^181^^^^171^190^[ADD] AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.size (  ) ; ++j )  {^182^^^^^171^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationNode annotation = new AnnotationNode ( desc )  ;^177^^^^^171^190^[REPLACE] AnnotationNode an =  ( AnnotationNode )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av .visitEnum ( value , name , value )  ;^187^^^^^179^188^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = v .visit ( desc , value )  ;^180^^^^^171^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^174^175^^^^171^190^[ADD] String[] typeconst =  ( String[] )  value; av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  else {^176^^^^^171^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  else {^179^^^^^171^190^[REPLACE] } else if  ( value instanceof List )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^}   AnnotationVisitor v = av.visitArray ( name ) ;List array =  ( List )  value;^179^180^181^182^183^171^190^[ADD] else if  ( value instanceof List )  { AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value; for  ( int j = 0; j < array.size (  ) ; ++j )  { accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av.visit ( value, value ) ;^187^^^^^179^188^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = av.visitArray ( value ) ;^180^^^^^171^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^181^^^^^171^190^[ADD] List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^177^178^^^^171^190^[ADD] AnnotationNode an =  ( AnnotationNode )  value; an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^187^^^^^179^188^[ADD] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^180^^^^^171^190^[ADD] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^String[] typeconst =  ( String[] )  value;av.visitEnum ( name, typeconst[0], typeconst[1] ) ;AnnotationNode an =  ( AnnotationNode )  value;^173^174^175^176^177^171^190^[ADD] if  ( value instanceof String[] )  { String[] typeconst =  ( String[] )  value; av.visitEnum ( name, typeconst[0], typeconst[1] ) ; } else if  ( value instanceof AnnotationNode )  { AnnotationNode an =  ( AnnotationNode )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  if  ( ! avalue instanceof AnnotationNode )  {^176^^^^^171^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^}   AnnotationNode an =  ( AnnotationNode )  value;an.accept ( av.visitAnnotation ( name, an.desc )  ) ;AnnotationVisitor v = av.visitArray ( name ) ;^176^177^178^179^180^171^190^[ADD] else if  ( value instanceof AnnotationNode )  { AnnotationNode an =  ( AnnotationNode )  value; an.accept ( av.visitAnnotation ( name, an.desc )  ) ; } else if  ( value instanceof List )  { AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^int i = 0  ;^180^^^^^171^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^182^183^184^^^171^190^[ADD] for  ( int j = 0; j < array.size (  ) ; ++j )  { accept ( v, null, array.get ( j )  ) ; }^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^String name =  (  ( String )   ( values.get ( i )  )  )  ;^174^^^^^171^190^[REPLACE] String[] typeconst =  ( String[] )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  if  ( ! value instanceof AnnotationNode )  {^176^^^^^171^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av .visitEnum ( desc , name , name )  ;^187^^^^^179^188^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REMOVE]^v.visitEnd (  )  ;^187^^^^^179^188^[REMOVE] ^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = av .visit ( value , value )  ;^180^^^^^171^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
