[REPLACE]^public  char  desc;^47^^^^^^^[REPLACE] public String desc;^ [CLASS] AnnotationNode  
[REPLACE]^this.desc =  null;^68^^^^^67^69^[REPLACE] this.desc = desc;^[METHOD] <init> [TYPE] String) [PARAMETER] String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^this.values =  null;^77^^^^^76^78^[REPLACE] this.values = values;^[METHOD] <init> [TYPE] List) [PARAMETER] List values [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  [TYPE]  boolean false  true 
[REPLACE]^if  ( values != null )  {^85^^^^^84^92^[REPLACE] if  ( values == null )  {^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[REPLACE]^values  =  2 ;^86^^^^^84^92^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[REPLACE]^if  ( this.desc == null )  {^88^^^^^84^92^[REPLACE] if  ( this.desc != null )  {^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[REPLACE]^values.get ( name ) ;^89^^^^^84^92^[REPLACE] values.add ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[ADD]^^89^^^^^84^92^[ADD] values.add ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[REPLACE]^values.add ( name ) ;^91^^^^^84^92^[REPLACE] values.add ( value ) ;^[METHOD] visit [TYPE] void [PARAMETER] String name Object value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  Object value  [TYPE]  String desc  name  [TYPE]  boolean false  true 
[REPLACE]^if  ( values != null )  {^99^^^^^94^106^[REPLACE] if  ( values == null )  {^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^^99^100^101^^^94^106^[ADD] if  ( values == null )  { values = new ArrayList ( this.desc != null ? 2 : 1 ) ; }^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values  =  2 ;^100^^^^^94^106^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values = new ArrayList ( this.desc == null ? 2 : 1 ) ;^100^^^^^94^106^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^^100^^^^^94^106^[ADD] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^if  (value == null )  {^102^^^^^94^106^[REPLACE] if  ( this.desc != null )  {^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values.add ( value ) ;^103^^^^^94^106^[REPLACE] values.add ( name ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^^103^^^^^94^106^[ADD] values.add ( name ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values.add ( new String[] { desc, name } ) ;^105^^^^^94^106^[REPLACE] values.add ( new String[] { desc, value } ) ;^[METHOD] visitEnum [TYPE] void [PARAMETER] String name String desc String value [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( values != this  )  {^112^^^^^108^121^[REPLACE] if  ( values == null )  {^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^values  =  2 ;^113^^^^^108^121^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^values = new ArrayList ( this.desc == false ? 2 : 1 ) ;^113^^^^^108^121^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^if  (value == true )  {^115^^^^^108^121^[REPLACE] if  ( this.desc != null )  {^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^values.add ( value ) ;^116^^^^^108^121^[REPLACE] values.add ( name ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^List array = new ArrayList (  ) ;^118^^^^^108^121^[REPLACE] AnnotationNode annotation = new AnnotationNode ( desc ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^values.get ( annotation ) ;^119^^^^^108^121^[REPLACE] values.add ( annotation ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^return new AnnotationNode ( array ) ;^120^^^^^108^121^[REPLACE] return annotation;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String name String desc [CLASS] AnnotationNode   [TYPE]  List values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  AnnotationNode annotation 
[REPLACE]^if  (array != null )  {^124^^^^^123^133^[REPLACE] if  ( values == null )  {^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^124^125^126^^^123^133^[ADD] if  ( values == null )  { values = new ArrayList ( this.desc != null ? 2 : 1 ) ; }^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values  =  1 ) ;^125^^^^^123^133^[REPLACE] values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( this.desc == null )  {^127^^^^^123^133^[REPLACE] if  ( this.desc != null )  {^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^values.add ( name ) ;^127^128^129^^^123^133^[ADD] if  ( this.desc != null )  { values.add ( name ) ; }^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values.add ( value ) ;^128^^^^^123^133^[REPLACE] values.add ( name ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^String name =  ( String )  values.get ( i ) ;^130^^^^^123^133^[REPLACE] List array = new ArrayList (  ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[ADD]^^130^^^^^123^133^[ADD] List array = new ArrayList (  ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^values.add ( values ) ;^131^^^^^123^133^[REPLACE] values.add ( array ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^return  new AnnotationNode ( desc )  ;^132^^^^^123^133^[REPLACE] return new AnnotationNode ( array ) ;^[METHOD] visitArray [TYPE] AnnotationVisitor [PARAMETER] String name [CLASS] AnnotationNode   [TYPE]  List array  values  [TYPE]  String desc  name  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( av == null )  {^148^^^^^147^158^[REPLACE] if  ( av != null )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( values == null )  {^149^^^^^147^158^[REPLACE] if  ( values != null )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^149^150^151^152^153^147^158^[ADD] if  ( values != null )  { for  ( int i = 0; i < values.size (  ) ; i += 2 )  { String name =  ( String )  values.get ( i ) ; Object value = values.get ( i + 1 ) ; accept ( av, name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.size (  )  - 5; i += 2 )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^String name =  ( String )  values.size ( i ) ;^151^^^^^147^158^[REPLACE] String name =  ( String )  values.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.size ( i  <=  1 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.size (  ) ; i += 0  )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.size ( i  !=  1 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^152^^^^^147^158^[ADD] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.length (  ) ; i += 2 )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^151^^^^^147^158^[ADD] String name =  ( String )  values.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.get ( i  &&  3 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^151^152^^^^147^158^[ADD] String name =  ( String )  values.get ( i ) ; Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.get ( i  &  4 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( values == this )  {^149^^^^^147^158^[REPLACE] if  ( values != null )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.length (  ) ; i += 2 )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.get ( i  |  1 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^accept ( av, name, value ) ;^152^153^^^^147^158^[ADD] Object value = values.get ( i + 1 ) ; accept ( av, name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.get ( i  &  1 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.size (  )  + 2; i += 2 )  {^150^^^^^147^158^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.size ( i  &&  2 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Object value = values.size ( i  ==  1 ) ;^152^^^^^147^158^[REPLACE] Object value = values.get ( i + 1 ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av [CLASS] AnnotationNode   [TYPE]  AnnotationVisitor av  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( av == null )  {^172^^^^^167^190^[REPLACE] if  ( av != null )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^if  ( ! value instanceof String[] )  {^173^^^^^167^190^[REPLACE] if  ( value instanceof String[] )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  if  ( ! value instanceof AnnotationNode )  {^176^^^^^167^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  if  ( ! value instanceof List )  {^179^^^^^167^190^[REPLACE] } else if  ( value instanceof List )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av.visitAnnotation ( name, value ) ;^187^^^^^167^190^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  + 5; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, false, array.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, null, values.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = av.visitArray ( value ) ;^180^^^^^167^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^String[] typeconst =  ( String[] )  value;^181^^^^^167^190^[REPLACE] List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.size (  ) ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.length (  ) ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, true, array.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^183^^^^^167^190^[ADD] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, null, array.add ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = v.visitArray ( name ) ;^180^^^^^167^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^List array =  ( List )  value;^180^181^^^^167^190^[ADD] AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^String[] typeconst =  ( String[] )  value;^177^^^^^167^190^[REPLACE] AnnotationNode an =  ( AnnotationNode )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^} else if  ( ! value instanceof List )  {^179^^^^^167^190^[REPLACE] } else if  ( value instanceof List )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^}   AnnotationVisitor v = av.visitArray ( name ) ;List array =  ( List )  value;^179^180^181^182^183^167^190^[ADD] else if  ( value instanceof List )  { AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value; for  ( int j = 0; j < array.size (  ) ; ++j )  { accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^187^^^^^167^190^[ADD] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.size (  )  *  2; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, this, array.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  /  2; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, this, array.add ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^177^178^^^^167^190^[ADD] AnnotationNode an =  ( AnnotationNode )  value; an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^180^^^^^167^190^[ADD] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^181^^^^^167^190^[ADD] List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^182^183^184^^^167^190^[ADD] for  ( int j = 0; j < array.size (  ) ; ++j )  { accept ( v, null, array.get ( j )  ) ; }^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^String name =  ( String )  values.get ( i ) ;^174^^^^^167^190^[REPLACE] String[] typeconst =  ( String[] )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  else {^176^^^^^167^190^[REPLACE] } else if  ( value instanceof AnnotationNode )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^}  else {^179^^^^^167^190^[REPLACE] } else if  ( value instanceof List )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^}   List array =  ( List )  value;^179^180^181^182^183^167^190^[ADD] else if  ( value instanceof List )  { AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value; for  ( int j = 0; j < array.size (  ) ; ++j )  { accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REMOVE]^values.add ( name ) ;^187^^^^^167^190^[REMOVE] ^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  - 3; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  *  0.5 ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^AnnotationVisitor v = v .visit ( desc , value )  ;^180^^^^^167^190^[REPLACE] AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  %  0.5 ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, this, values.add ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, null, values.add ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  + 1; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^174^175^^^^167^190^[ADD] String[] typeconst =  ( String[] )  value; av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^173^174^175^176^177^167^190^[ADD] if  ( value instanceof String[] )  { String[] typeconst =  ( String[] )  value; av.visitEnum ( name, typeconst[0], typeconst[1] ) ; } else if  ( value instanceof AnnotationNode )  { AnnotationNode an =  ( AnnotationNode )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av.visitAnnotation ( value, value ) ;^187^^^^^167^190^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  - 1; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  + 2; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^180^181^^^^167^190^[ADD] AnnotationVisitor v = av.visitArray ( name ) ; List array =  ( List )  value;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < values.length (  ) ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, true, values.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.length (  ) ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, false, array.add ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^^177^178^^^^167^190^[ADD] AnnotationNode an =  ( AnnotationNode )  value; an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[ADD]^}   AnnotationNode an =  ( AnnotationNode )  value;an.accept ( av.visitAnnotation ( name, an.desc )  ) ;AnnotationVisitor v = av.visitArray ( name ) ;^176^177^178^179^180^167^190^[ADD] else if  ( value instanceof AnnotationNode )  { AnnotationNode an =  ( AnnotationNode )  value; an.accept ( av.visitAnnotation ( name, an.desc )  ) ; } else if  ( value instanceof List )  { AnnotationVisitor v = av.visitArray ( name ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^av.visit ( value, value ) ;^187^^^^^167^190^[REPLACE] av.visit ( name, value ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.add (  )  - 3; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( v, this, values.get ( j )  ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REMOVE]^values.add ( array ) ;^183^^^^^167^190^[REMOVE] ^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^accept ( av, name, value ) ;^183^^^^^167^190^[REPLACE] accept ( v, null, array.get ( j )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.add (  )  /  2; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < array.size (  )  + 3; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < values.length (  ) ; ++j )  {^182^^^^^167^190^[REPLACE] for  ( int j = 0; j < array.size (  ) ; ++j )  {^[METHOD] accept [TYPE] void [PARAMETER] AnnotationVisitor av String name Object value [CLASS] AnnotationNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  AnnotationVisitor av  v  [TYPE]  List array  values  [TYPE]  Object value  [TYPE]  String desc  name  value  [TYPE]  String[] typeconst  [TYPE]  int j 
