[REPLACE]^private List local;^69^^^^^^^[REPLACE] public List local;^ [CLASS] FrameNode  
[REPLACE]^private List stack;^77^^^^^^^[REPLACE] public List stack;^ [CLASS] FrameNode  
[REPLACE]^super ( -1 << 1 ) ;^109^^^^^108^129^[REPLACE] super ( -1 ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^clone.type = type  ;^110^^^^^108^129^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^this.stack = asList ( nStack, stack )  ;^114^^^^^108^129^[REPLACE] this.local = asList ( nLocal, local ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^this.local = asList ( nLocal, local )  ;^115^^^^^108^129^[REPLACE] this.stack = asList ( nStack, stack ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^this.stack = asList ( nStack, stack )  ;^118^^^^^108^129^[REPLACE] this.local = asList ( nLocal, local ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[ADD]^^121^122^^^^108^129^[ADD] this.local = asList ( nLocal, local ) ; break;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[REPLACE]^this.stack = asList ( 4, stack ) ;^126^^^^^108^129^[REPLACE] this.stack = asList ( 1, stack ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] final int type final int nLocal Object[] local final int nStack Object[] stack [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  Object[] local  stack 
[ADD]^^144^145^146^^^140^163^[ADD] mv.visitFrame ( type, local.size (  ) , asArray ( local ) ,^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^local .subList ( nLocal , type )  , asArray ( local ) , stack^145^146^147^148^^140^163^[REPLACE] local.size (  ) , asArray ( local ) , stack.size (  ) , asArray ( stack )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^asList ( 1, stack )  ;^148^^^^^140^163^[REPLACE] asArray ( stack )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0 , null ) ;^151^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^mv.visitFrame ( type, local .subList ( type , type )  , asArray ( local ) , 0, null ) ;^151^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^asList ( 1, stack )  ;^151^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^mv.visitFrame ( type, 0, null, 1, asArray ( stack )  )  ;^154^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^l.size (  )  ;^154^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[ADD]^^154^155^^^^140^163^[ADD] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ; break;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^asList ( 1, stack )  ;^154^^^^^140^163^[REPLACE] mv.visitFrame ( type, local.size (  ) , asArray ( local ) , 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^mv.visitFrame ( type, 4, null, 4, null ) ;^157^^^^^140^163^[REPLACE] mv.visitFrame ( type, 0, null, 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[ADD]^^157^^^^^140^163^[ADD] mv.visitFrame ( type, 0, null, 0, null ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^mv.visitFrame ( type, 0L, null, 1, asArray ( stack )  ) ;^160^^^^^140^163^[REPLACE] mv.visitFrame ( type, 0, null, 1, asArray ( stack )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[ADD]^^160^^^^^140^163^[ADD] mv.visitFrame ( type, 0, null, 1, asArray ( stack )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^asList ( 1, stack )  ;^160^^^^^140^163^[REPLACE] mv.visitFrame ( type, 0, null, 1, asArray ( stack )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  boolean false  true  [TYPE]  int nLocal  nStack  type  [TYPE]  MethodVisitor mv 
[REPLACE]^int i = 0  ;^166^^^^^165^189^[REPLACE] FrameNode clone = new FrameNode (  ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^this.type = type  ;^167^^^^^165^189^[REPLACE] clone.type = type;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^if  ( local == null )  {^168^^^^^165^189^[REPLACE] if  ( local != null )  {^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^clone.local = new ArrayList (  ) ;^168^169^170^171^^165^189^[ADD] if  ( local != null )  { clone.local = new ArrayList (  ) ; for  ( int i = 0; i < local.size (  ) ; ++i )  { Object l = local.get ( i ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^if  ( ! l instanceof LabelNode )  {^172^^^^^165^189^[REPLACE] if  ( l instanceof LabelNode )  {^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^l = labels.get ( l ) ;^172^173^174^^^165^189^[ADD] if  ( l instanceof LabelNode )  { l = labels.get ( l ) ; }^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^s = labels.get ( s )  ;^173^^^^^165^189^[REPLACE] l = labels.get ( l ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^^169^^^^^165^189^[ADD] clone.local = new ArrayList (  ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^^170^171^172^173^174^165^189^[ADD] for  ( int i = 0; i < local.size (  ) ; ++i )  { Object l = local.get ( i ) ; if  ( l instanceof LabelNode )  { l = labels.get ( l ) ; }^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^Object s = stack.get ( i )  ;^171^^^^^165^189^[REPLACE] Object l = local.get ( i ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^clone.stack = new ArrayList (  )  ;^169^^^^^165^189^[REPLACE] clone.local = new ArrayList (  ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^if   (  local != null  )   {  ;^178^^^^^165^189^[REPLACE] if  ( stack != null )  {^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^if  ( ! s instanceof LabelNode )  {^182^^^^^165^189^[REPLACE] if  ( s instanceof LabelNode )  {^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^s = labels.get ( s ) ;^182^183^184^^^165^189^[ADD] if  ( s instanceof LabelNode )  { s = labels.get ( s ) ; }^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^l = labels.get ( l )  ;^183^^^^^165^189^[REPLACE] s = labels.get ( s ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^^179^^^^^165^189^[ADD] clone.stack = new ArrayList (  ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^for  ( int i = 0 ; i < stack.size (  ) ; ++i )  {^180^^^^^165^189^[REPLACE] for  ( int i = 0; i < stack.size (  ) ; ++i )  {^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^Object l = local.get ( i )  ;^181^^^^^165^189^[REPLACE] Object s = stack.get ( i ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^^183^^^^^165^189^[ADD] s = labels.get ( s ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[ADD]^^180^181^182^183^184^165^189^[ADD] for  ( int i = 0; i < stack.size (  ) ; ++i )  { Object s = stack.get ( i ) ; if  ( s instanceof LabelNode )  { s = labels.get ( s ) ; }^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^Object s = stack.add ( i ) ;^181^^^^^165^189^[REPLACE] Object s = stack.get ( i ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
[REPLACE]^return clone;  ;^188^^^^^165^189^[REPLACE] return clone;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] FrameNode   [TYPE]  List local  stack  [TYPE]  FrameNode clone  [TYPE]  Object l  s  [TYPE]  boolean false  true  [TYPE]  Map labels  [TYPE]  int i  nLocal  nStack  type 
