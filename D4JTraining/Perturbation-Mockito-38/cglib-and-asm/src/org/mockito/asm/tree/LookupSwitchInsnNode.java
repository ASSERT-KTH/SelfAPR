[REPLACE]^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels )  ;^77^^^^^76^89^[REPLACE] super ( Opcodes.LOOKUPSWITCH ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^77^^^^^76^89^[ADD] super ( Opcodes.LOOKUPSWITCH ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^this.dflt =  null;^78^^^^^76^89^[REPLACE] this.dflt = dflt;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^79^80^^^^76^89^[ADD] this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ; this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^this.labels = new ArrayList ( labels == null ? 0 : labels.length + 1 ) ;^80^^^^^76^89^[REPLACE] this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( keys == this  )  {^81^^^^^76^89^[REPLACE] if  ( keys != null )  {^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^81^82^83^84^^76^89^[ADD] if  ( keys != null )  { for  ( int i = 0; i < keys.length; ++i )  { this.keys.add ( new Integer ( keys[i] )  ) ; }^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < keys.length; ++i )  {^82^^^^^76^89^[REPLACE] for  ( int i = 0; i < keys.length; ++i )  {^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( labels == null )  {^86^^^^^76^89^[REPLACE] if  ( labels != null )  {^[METHOD] <init> [TYPE] LabelNode[]) [PARAMETER] LabelNode dflt final int[] keys LabelNode[] labels [CLASS] LookupSwitchInsnNode   [TYPE]  LabelNode dflt  [TYPE]  LabelNode[] labels  [TYPE]  List keys  labels  [TYPE]  int[] keys  [TYPE]  boolean false  true  [TYPE]  int i 
