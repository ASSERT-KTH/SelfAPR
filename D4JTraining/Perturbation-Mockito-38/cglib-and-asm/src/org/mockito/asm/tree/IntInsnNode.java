[REPLACE]^public  long  operand;^46^^^^^^^[REPLACE] public int operand;^ [CLASS] IntInsnNode  
[REPLACE]^super ( operand ) ;^56^^^^^55^58^[REPLACE] super ( opcode ) ;^[METHOD] <init> [TYPE] IntInsnNode(int,int) [PARAMETER] final int opcode final int operand [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[ADD]^^56^57^^^^55^58^[ADD] super ( opcode ) ; this.operand = operand;^[METHOD] <init> [TYPE] IntInsnNode(int,int) [PARAMETER] final int opcode final int operand [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[REPLACE]^this.operand =  null;^57^^^^^55^58^[REPLACE] this.operand = operand;^[METHOD] <init> [TYPE] IntInsnNode(int,int) [PARAMETER] final int opcode final int operand [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[ADD]^^57^^^^^55^58^[ADD] this.operand = operand;^[METHOD] <init> [TYPE] IntInsnNode(int,int) [PARAMETER] final int opcode final int operand [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[REPLACE]^this.opcode =  operand;^67^^^^^66^68^[REPLACE] this.opcode = opcode;^[METHOD] setOpcode [TYPE] void [PARAMETER] final int opcode [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[REPLACE]^return new IntInsnNode ( opcode, operand ) ;^71^^^^^70^72^[REPLACE] return INT_INSN;^[METHOD] getType [TYPE] int [PARAMETER] [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
[REPLACE]^super ( opcode ) ;^75^^^^^74^76^[REPLACE] mv.visitIntInsn ( opcode, operand ) ;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] IntInsnNode   [TYPE]  int opcode  operand  [TYPE]  MethodVisitor mv  [TYPE]  boolean false  true 
[REPLACE]^return INT_INSN;^79^^^^^78^80^[REPLACE] return new IntInsnNode ( opcode, operand ) ;^[METHOD] clone [TYPE] AbstractInsnNode [PARAMETER] Map labels [CLASS] IntInsnNode   [TYPE]  Map labels  [TYPE]  int opcode  operand  [TYPE]  boolean false  true 
