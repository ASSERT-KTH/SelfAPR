[REPLACE]^private static boolean check;^50^^^^^^^[REPLACE] public static boolean check;^ [CLASS] InsnList InsnListIterator  
[REPLACE]^if  (   ( contains ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^222^223^224^^^221^249^[ADD] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^223^^^^^221^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^223^^^^^221^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^225^^^^^221^249^[REPLACE] AbstractInsnNode next = location.next;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = next  ;^226^^^^^221^249^[REPLACE] insn.next = next;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next == null )  {^227^^^^^221^249^[REPLACE] if  ( next != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^next.prev = insn;last = insn;^227^228^229^230^231^221^249^[ADD] if  ( next != null )  { next.prev = insn; } else { last = insn; }^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = insn  ;^230^^^^^227^231^[REPLACE] last = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = ilast  ;^228^^^^^221^249^[REPLACE] next.prev = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = insn  ;^230^^^^^221^249^[REPLACE] last = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^232^^^^^221^249^[REPLACE] AbstractInsnNode prev = location.prev;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev  ;^233^^^^^221^249^[REPLACE] insn.prev = prev;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev == null )  {^234^^^^^221^249^[REPLACE] if  ( prev != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first.prev = insn  ;^237^^^^^234^238^[REPLACE] first = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^235^^^^^221^249^[ADD] prev.next = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = next  ;^235^^^^^221^249^[REPLACE] prev.next = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^237^^^^^221^249^[ADD] first = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( cache == null )  {^239^^^^^221^249^[REPLACE] if  ( cache != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0 + 4;^244^^^^^239^245^[REPLACE] insn.index = 0;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache[index]  =  cache[index] ;^241^^^^^221^249^[REPLACE] cache[index] = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0  ;^242^^^^^221^249^[REPLACE] insn.index = index;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^240^241^^^^221^249^[ADD] int index = location.index; cache[index] = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache[index] ;^241^^^^^221^249^[REPLACE] cache[index] = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^244^^^^^221^249^[ADD] insn.index = 0;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^int index = next.index;^240^^^^^221^249^[REPLACE] int index = location.index;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.index = -4;^246^^^^^221^249^[REPLACE] location.index = -1;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^247^^^^^221^249^[ADD] location.prev = null;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.next = this;^248^^^^^221^249^[REPLACE] location.next = null;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check ) {^284^^^^^283^302^[REPLACE] if  ( check && insns == this )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^284^285^286^^^283^302^[ADD] if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^285^^^^^283^302^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  ||  0) {^287^^^^^283^302^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return;  ;^288^^^^^283^302^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^290^^^^^283^302^[ADD] size += insns.size;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( last != null )  {^291^^^^^283^302^[REPLACE] if  ( last == null )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^ilast.next = next  ;^296^^^^^291^299^[REPLACE] last.next = elem;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^last = insns.last;^297^298^^^^291^299^[ADD] elem.prev = last; last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast  ;^298^^^^^291^299^[REPLACE] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^295^^^^^291^299^[REPLACE] AbstractInsnNode elem = insns.first;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst  ;^292^^^^^283^302^[REPLACE] first = insns.first;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast  ;^293^^^^^283^302^[REPLACE] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^293^^^^^283^302^[ADD] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^elem.prev = last;^296^297^^^^283^302^[ADD] last.next = elem; elem.prev = last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^next.prev = ilast  ;^297^^^^^283^302^[REPLACE] elem.prev = last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast  ;^298^^^^^283^302^[REPLACE] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^295^^^^^283^302^[REPLACE] AbstractInsnNode elem = insns.first;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^300^^^^^283^302^[REPLACE] cache = null;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^301^^^^^283^302^[REPLACE] insns.removeAll ( false ) ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( check || insns == this )  {^337^^^^^336^355^[REPLACE] if  ( check && insns == this )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^338^^^^^336^355^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  ||  0 ) {^340^^^^^336^355^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return;  ;^341^^^^^336^355^[REPLACE] return;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^343^^^^^336^355^[REPLACE] size += insns.size;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( first != null )  {^344^^^^^336^355^[REPLACE] if  ( first == null )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first.prev = insn  ;^349^^^^^344^352^[REPLACE] first.prev = elem;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.next = first  ;^350^^^^^344^352^[REPLACE] elem.next = first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = insns.last  ;^351^^^^^344^352^[REPLACE] first = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^348^349^^^^344^352^[ADD] AbstractInsnNode elem = insns.last; first.prev = elem;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst  ;^345^^^^^336^355^[REPLACE] first = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast  ;^346^^^^^336^355^[REPLACE] last = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^346^^^^^336^355^[ADD] last = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^elem.next = first;^349^350^^^^336^355^[ADD] first.prev = elem; elem.next = first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.next = first  ;^350^^^^^336^355^[REPLACE] elem.next = first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst  ;^351^^^^^336^355^[REPLACE] first = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^348^^^^^336^355^[REPLACE] AbstractInsnNode elem = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = null  ;^353^^^^^336^355^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^354^^^^^336^355^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^354^^^^^336^355^[ADD] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( check &&  ( contains ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^370^^^^^368^384^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^370^^^^^368^384^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^373^^^^^368^384^[ADD] AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next != null )  {^374^^^^^368^384^[REPLACE] if  ( next == null )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = ilast  ;^377^^^^^374^378^[REPLACE] next.prev = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = insn  ;^375^^^^^368^384^[REPLACE] last = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^377^^^^^368^384^[ADD] next.prev = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.next = null  ;^379^^^^^368^384^[REPLACE] location.next = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = next  ;^380^^^^^368^384^[REPLACE] insn.next = next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.next = location  ;^381^^^^^368^384^[REPLACE] insn.prev = location;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^382^^^^^368^384^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 4;^383^^^^^368^384^[REPLACE] insn.index = 0;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check || ! ( contains ( location )  || insns != this )  )  {^397^^^^^396^417^[REPLACE] if  ( check && ! ( contains ( location )  && insns != this )  )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^397^398^399^^^396^417^[ADD] if  ( check && ! ( contains ( location )  && insns != this )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^398^^^^^396^417^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (   0) {^400^^^^^396^417^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return;  ;^401^^^^^396^417^[REPLACE] return;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^403^^^^^396^417^[ADD] size += insns.size;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^404^^^^^396^417^[REPLACE] AbstractInsnNode ifirst = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = insn.prev  ;^405^^^^^396^417^[REPLACE] AbstractInsnNode ilast = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^406^^^^^396^417^[ADD] AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( location != null )  {^407^^^^^396^417^[REPLACE] if  ( next == null )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn  ;^410^^^^^407^411^[REPLACE] next.prev = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = insns.last  ;^408^^^^^396^417^[REPLACE] last = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^408^^^^^396^417^[ADD] last = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^410^^^^^396^417^[ADD] next.prev = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^location.next = null  ;^412^^^^^396^417^[REPLACE] location.next = ifirst;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^prev.next = next  ;^413^^^^^396^417^[REPLACE] ilast.next = next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = location  ;^414^^^^^396^417^[REPLACE] ifirst.prev = location;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^415^^^^^396^417^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^416^^^^^396^417^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( check &&  ( contains ( next )  && insn.index == -1 )  )  {^431^^^^^430^446^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^432^^^^^430^446^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^432^^^^^430^446^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = next.prev;^435^^^^^430^446^[REPLACE] AbstractInsnNode prev = location.prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if   (  next != null  )   {  ;^436^^^^^430^446^[REPLACE] if  ( prev == null )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^436^437^438^439^440^430^446^[ADD] if  ( prev == null )  { first = insn; } else { prev.next = insn; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^439^^^^^436^440^[ADD] prev.next = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = next  ;^437^^^^^430^446^[REPLACE] first = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^439^^^^^430^446^[ADD] prev.next = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^441^^^^^430^446^[ADD] location.prev = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^442^^^^^430^446^[ADD] insn.next = location;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev  ;^443^^^^^430^446^[REPLACE] insn.prev = prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^444^445^^^^430^446^[ADD] cache = null; insn.index = 0;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 4;^445^^^^^430^446^[REPLACE] insn.index = 0;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check || ! ( contains ( location  )  || insns != this )  )  {^459^^^^^458^479^[REPLACE] if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^460^^^^^458^479^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException (  )  ;^460^^^^^458^479^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (   0) {^462^^^^^458^479^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return;  ;^463^^^^^458^479^[REPLACE] return;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^465^^^^^458^479^[REPLACE] size += insns.size;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^AbstractInsnNode ilast = insns.last;AbstractInsnNode prev = location .prev;first = ifirst;^466^467^468^469^470^458^479^[ADD] AbstractInsnNode ifirst = insns.first; AbstractInsnNode ilast = insns.last; AbstractInsnNode prev = location .prev; if  ( prev == null )  { first = ifirst;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^AbstractInsnNode prev = location .prev;^467^468^^^^458^479^[ADD] AbstractInsnNode ilast = insns.last; AbstractInsnNode prev = location .prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = next .prev;^468^^^^^458^479^[REPLACE] AbstractInsnNode prev = location .prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != null )  {^469^^^^^458^479^[REPLACE] if  ( prev == null )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^first = ifirst;prev.next = ifirst;^469^470^471^472^473^458^479^[ADD] if  ( prev == null )  { first = ifirst; } else { prev.next = ifirst; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^prev.next = next  ;^472^^^^^469^473^[REPLACE] prev.next = ifirst;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^470^471^472^473^^458^479^[ADD] first = ifirst; } else { prev.next = ifirst; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = insn  ;^470^^^^^458^479^[REPLACE] first = ifirst;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^472^473^^^^458^479^[ADD] prev.next = ifirst; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^location.prev = null  ;^474^^^^^458^479^[REPLACE] location .prev = ilast;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.next = location  ;^475^^^^^458^479^[REPLACE] ilast.next = location ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first.prev = insn  ;^476^^^^^458^479^[REPLACE] ifirst.prev = prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^477^^^^^458^479^[REPLACE] cache = null;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^478^^^^^458^479^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( check && contains ( insn )  )  {^491^^^^^490^518^[REPLACE] if  ( check && !contains ( insn )  )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^491^492^493^^^490^518^[ADD] if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^492^^^^^490^518^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = location.next;^495^^^^^490^518^[REPLACE] AbstractInsnNode next = insn.next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = location.next  ;^496^^^^^490^518^[REPLACE] AbstractInsnNode prev = insn.prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next != null )  {^497^^^^^490^518^[REPLACE] if  ( next == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^497^498^499^500^^490^518^[ADD] if  ( next == null )  { if  ( prev == null )  { first = null; last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if   (  next != null  )   {  ;^506^^^^^497^513^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = null  ;^510^^^^^506^512^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^511^^^^^506^512^[ADD] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = null  ;^507^^^^^497^513^[REPLACE] first = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^508^^^^^497^513^[ADD] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = null  ;^510^^^^^497^513^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn  ;^511^^^^^497^513^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != true )  {^498^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^last = prev;^502^503^^^^498^504^[ADD] prev.next = null; last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  ifirst;^503^^^^^498^504^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = true;^499^^^^^490^518^[REPLACE] first = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last = true;^500^^^^^490^518^[REPLACE] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = false;^499^^^^^490^518^[REPLACE] first = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^500^^^^^490^518^[ADD] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^502^^^^^490^518^[ADD] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  ifirst;^503^^^^^490^518^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != false )  {^498^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^498^499^500^501^502^490^518^[ADD] if  ( prev == null )  { first = null; last = null; } else { prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = false;^502^^^^^498^504^[REPLACE] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  null;^503^^^^^498^504^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = null  ;^500^^^^^490^518^[REPLACE] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev !=ifirst )  {^506^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn  ;^511^^^^^506^512^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = null  ;^507^^^^^490^518^[REPLACE] first = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn  ;^508^^^^^490^518^[REPLACE] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last = this;^500^^^^^490^518^[REPLACE] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = false;^502^^^^^490^518^[REPLACE] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^508^^^^^490^518^[ADD] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = null  ;^510^^^^^490^518^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn  ;^511^^^^^490^518^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = false;^514^^^^^490^518^[REPLACE] cache = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^515^516^^^^490^518^[ADD] insn.index = -1; insn.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = this;^516^^^^^490^518^[REPLACE] insn.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^517^^^^^490^518^[ADD] insn.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
