[REPLACE]^public  boolean check;^50^^^^^^^[REPLACE] public static boolean check;^ [CLASS] InsnList InsnListIterator  
[REPLACE]^private  long  size;^55^^^^^^^[REPLACE] private int size;^ [CLASS] InsnList InsnListIterator  
[REPLACE]^if ( index==size (  )  *  0.5  )  {^570^^^^^569^577^[REPLACE] if ( index==size (  )  )  {^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[ADD]^next = null;prev = getLast (  ) ;next = get ( index ) ;^570^571^572^573^574^569^577^[ADD] if ( index==size (  )  )  { next = null; prev = getLast (  ) ; } else { next = get ( index ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^next =  get ( size ) ;^574^^^^^569^577^[REPLACE] next = get ( index ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^prev = prev.prev; ;^575^^^^^569^577^[REPLACE] prev = next.prev;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^next = this;^571^^^^^569^577^[REPLACE] next = null;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^prev  =  prev ;^572^^^^^569^577^[REPLACE] prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[ADD]^^572^^^^^569^577^[ADD] prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[ADD]^^571^572^^^^569^577^[ADD] next = null; prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^prev  = null ;^572^^^^^569^577^[REPLACE] prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^next =  get ( null ) ;^574^^^^^569^577^[REPLACE] next = get ( index ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return size (  ) ;^79^^^^^78^80^[REPLACE] return size;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return size (  ) ;^89^^^^^88^90^[REPLACE] return first;^[METHOD] getFirst [TYPE] AbstractInsnNode [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return size (  ) ;^99^^^^^98^100^[REPLACE] return last;^[METHOD] getLast [TYPE] AbstractInsnNode [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^if (index < 0 && index >= size) {^113^^^^^112^120^[REPLACE] if  ( index < 0 || index >= size )  {^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^114^^^^^112^120^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[ADD]^^114^^^^^112^120^[ADD] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^if  ( cache != null )  {^116^^^^^112^120^[REPLACE] if  ( cache == null )  {^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^cache  =  cache ;^117^^^^^112^120^[REPLACE] cache = toArray (  ) ;^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[ADD]^^117^^^^^112^120^[ADD] cache = toArray (  ) ;^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return size (  ) ;^119^^^^^112^120^[REPLACE] return cache[index];^[METHOD] get [TYPE] AbstractInsnNode [PARAMETER] final int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  last  next  prev  [TYPE]  int index  size 
[REPLACE]^AbstractInsnNode elem = first;^131^^^^^130^136^[REPLACE] AbstractInsnNode i = first;^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[ADD]^^131^^^^^130^136^[ADD] AbstractInsnNode i = first;^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^while  ( i != null  !=  i != insn )  {^132^^^^^130^136^[REPLACE] while  ( i != null && i != insn )  {^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^i =  insn.next;^133^^^^^130^136^[REPLACE] i = i.next;^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^i =  null.next;^133^^^^^130^136^[REPLACE] i = i.next;^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^returninsn ;^135^^^^^130^136^[REPLACE] return i != null;^[METHOD] contains [TYPE] boolean [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^if  (  contains ( last )  )  {^154^^^^^153^161^[REPLACE] if  ( check && !contains ( insn )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^155^^^^^153^161^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[ADD]^^155^^^^^153^161^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return ;^155^^^^^153^161^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^if  ( cache != null )  {^157^^^^^153^161^[REPLACE] if  ( cache == null )  {^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^cache ;^158^^^^^153^161^[REPLACE] cache = toArray (  ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^cache  = null ;^158^^^^^153^161^[REPLACE] cache = toArray (  ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return last.index;^160^^^^^153^161^[REPLACE] return insn.index;^[METHOD] indexOf [TYPE] int [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^AbstractInsnNode elem = first;^169^^^^^168^174^[REPLACE] AbstractInsnNode insn = first;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size  [TYPE]  MethodVisitor mv 
[REPLACE]^while  ( insn == null )  {^170^^^^^168^174^[REPLACE] while  ( insn != null )  {^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size  [TYPE]  MethodVisitor mv 
[REPLACE]^insn = next; ;^172^^^^^168^174^[REPLACE] insn = insn.next;^[METHOD] accept [TYPE] void [PARAMETER] MethodVisitor mv [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size  [TYPE]  MethodVisitor mv 
[REPLACE]^return iterator ( 3 ) ;^182^^^^^181^183^[REPLACE] return iterator ( 0 ) ;^[METHOD] iterator [TYPE] ListIterator [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^return new InsnListIterator ( size ) ;^191^^^^^190^192^[REPLACE] return new InsnListIterator ( index ) ;^[METHOD] iterator [TYPE] ListIterator [PARAMETER] int index [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode first  i  insn  last  next  prev  [TYPE]  int index  size 
[REPLACE]^int i = 4;^200^^^^^199^209^[REPLACE] int i = 0;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode insn = first;^201^^^^^199^209^[REPLACE] AbstractInsnNode elem = first;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode result = next;^202^^^^^199^209^[REPLACE] AbstractInsnNode[] insns = new AbstractInsnNode[size];^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^while  ( elem == this )  {^203^^^^^199^209^[REPLACE] while  ( elem != null )  {^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insns[i]  =  insns[i] ;^204^^^^^199^209^[REPLACE] insns[i] = elem;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[ADD]^elem.index = i++;^204^205^^^^199^209^[ADD] insns[i] = elem; elem.index = i++;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^elem.index ;^205^^^^^199^209^[REPLACE] elem.index = i++;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^elem =  prev.next;^206^^^^^199^209^[REPLACE] elem = elem.next;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[ADD]^^204^205^^^^199^209^[ADD] insns[i] = elem; elem.index = i++;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^208^^^^^199^209^[REPLACE] return insns;^[METHOD] toArray [TYPE] AbstractInsnNode[] [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check &&  ( contains ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^223^^^^^221^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^223^^^^^221^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^223^^^^^221^249^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = next.next;^225^^^^^221^249^[REPLACE] AbstractInsnNode next = location.next;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.next = null; ;^226^^^^^221^249^[REPLACE] insn.next = next;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  (location == null )  {^227^^^^^221^249^[REPLACE] if  ( next != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^230^^^^^227^231^[REPLACE] last = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^228^^^^^221^249^[REPLACE] next.prev = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^230^^^^^221^249^[REPLACE] last = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^230^^^^^221^249^[ADD] last = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = next.prev;^232^^^^^221^249^[REPLACE] AbstractInsnNode prev = location.prev;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^233^^^^^221^249^[REPLACE] insn.prev = prev;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev ==first )  {^234^^^^^221^249^[REPLACE] if  ( prev != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^237^^^^^234^238^[REPLACE] first = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^235^^^^^221^249^[REPLACE] prev.next = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^237^^^^^221^249^[REPLACE] first = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^237^^^^^221^249^[ADD] first = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( cache == null )  {^239^^^^^221^249^[REPLACE] if  ( cache != null )  {^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = index; ;^244^^^^^239^245^[REPLACE] insn.index = 0;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^244^^^^^239^245^[ADD] insn.index = 0;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache[index]  =  cache[index] ;^241^^^^^221^249^[REPLACE] cache[index] = insn;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^241^242^^^^221^249^[ADD] cache[index] = insn; insn.index = index;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0; ;^242^^^^^221^249^[REPLACE] insn.index = index;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^int index = next.index;^240^^^^^221^249^[REPLACE] int index = location.index;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0 % 1;^244^^^^^221^249^[REPLACE] insn.index = 0;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.index = -0;^246^^^^^221^249^[REPLACE] location.index = -1;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^246^^^^^221^249^[ADD] location.index = -1;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.prev = true;^247^^^^^221^249^[REPLACE] location.prev = null;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.next = this;^248^^^^^221^249^[REPLACE] location.next = null;^[METHOD] set [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check ) {^260^^^^^259^274^[REPLACE] if  ( check && insn.index != -1 )  {^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^261^^^^^259^274^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( last !=next )  {^264^^^^^259^274^[REPLACE] if  ( last == null )  {^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = insn; ;^268^^^^^259^274^[REPLACE] last.next = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = prev; ;^269^^^^^259^274^[REPLACE] insn.prev = last;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^265^^^^^259^274^[REPLACE] first = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^265^266^^^^259^274^[ADD] first = insn; last = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^266^^^^^259^274^[REPLACE] last = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^last = insn;^265^266^^^^259^274^[ADD] first = insn; last = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^271^^^^^259^274^[REPLACE] last = insn;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^272^^^^^259^274^[REPLACE] cache = null;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = index; ;^273^^^^^259^274^[REPLACE] insn.index = 0;^[METHOD] add [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  (  insns == this )  {^284^^^^^283^302^[REPLACE] if  ( check && insns == this )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^285^^^^^283^302^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^285^^^^^283^302^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^285^^^^^283^302^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  !=  0 ) {^287^^^^^283^302^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^287^288^289^^^283^302^[ADD] if  ( insns.size == 0 )  { return; }^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^288^^^^^283^302^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^290^^^^^283^302^[REPLACE] size += insns.size;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( last != null )  {^291^^^^^283^302^[REPLACE] if  ( last == null )  {^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^296^^^^^283^302^[REPLACE] last.next = elem;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = last; ;^297^^^^^283^302^[REPLACE] elem.prev = last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast; ;^298^^^^^283^302^[REPLACE] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = insns.last;^295^^^^^283^302^[REPLACE] AbstractInsnNode elem = insns.first;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^292^^^^^283^302^[REPLACE] first = insns.first;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast; ;^293^^^^^283^302^[REPLACE] last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^296^297^^^^283^302^[ADD] last.next = elem; elem.prev = last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^last = insns.last;^297^298^^^^283^302^[ADD] elem.prev = last; last = insns.last;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^300^^^^^283^302^[REPLACE] cache = null;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^300^^^^^283^302^[ADD] cache = null;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.get ( true ) ;^301^^^^^283^302^[REPLACE] insns.removeAll ( false ) ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^301^^^^^283^302^[ADD] insns.removeAll ( false ) ;^[METHOD] add [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  (  insn.index != -1 * 2 )  {^313^^^^^312^327^[REPLACE] if  ( check && insn.index != -1 )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^314^^^^^312^327^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^314^^^^^312^327^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^314^^^^^312^327^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( first !=prev )  {^317^^^^^312^327^[REPLACE] if  ( first == null )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = insn; ;^321^^^^^312^327^[REPLACE] first.prev = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.next = null; ;^322^^^^^312^327^[REPLACE] insn.next = first;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^318^^^^^312^327^[REPLACE] first = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^319^^^^^312^327^[REPLACE] last = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^319^^^^^312^327^[ADD] last = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^322^^^^^312^327^[ADD] insn.next = first;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^324^^^^^312^327^[REPLACE] first = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^324^325^^^^312^327^[ADD] first = insn; cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^325^^^^^312^327^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 3;^326^^^^^312^327^[REPLACE] insn.index = 0;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check ) {^337^^^^^336^355^[REPLACE] if  ( check && insns == this )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^337^338^339^^^336^355^[ADD] if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^338^^^^^336^355^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^338^^^^^336^355^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  !=  0) {^340^^^^^336^355^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^return;^340^341^342^^^336^355^[ADD] if  ( insns.size == 0 )  { return; }^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^341^^^^^336^355^[REPLACE] return;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^343^^^^^336^355^[REPLACE] size += insns.size;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( first != this  )  {^344^^^^^336^355^[REPLACE] if  ( first == null )  {^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^first = insns.first;last = insns.last;AbstractInsnNode elem = insns.last;^344^345^346^347^348^336^355^[ADD] if  ( first == null )  { first = insns.first; last = insns.last; } else { AbstractInsnNode elem = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^ifirst.prev = prev; ;^349^^^^^336^355^[REPLACE] first.prev = elem;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^349^350^^^^336^355^[ADD] first.prev = elem; elem.next = first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.next = first; ;^350^^^^^336^355^[REPLACE] elem.next = first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^351^^^^^336^355^[REPLACE] first = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = insns.first;^348^^^^^336^355^[REPLACE] AbstractInsnNode elem = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^345^^^^^336^355^[REPLACE] first = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = ilast; ;^346^^^^^336^355^[REPLACE] last = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^349^^^^^336^355^[ADD] first.prev = elem;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^348^^^^^336^355^[ADD] AbstractInsnNode elem = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^353^^^^^336^355^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^353^^^^^336^355^[ADD] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^354^^^^^336^355^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  (   ( contains ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^369^370^371^^^368^384^[ADD] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^370^^^^^368^384^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^370^^^^^368^384^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = next.next;^373^^^^^368^384^[REPLACE] AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next !=location )  {^374^^^^^368^384^[REPLACE] if  ( next == null )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^377^^^^^368^384^[REPLACE] next.prev = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^375^^^^^368^384^[REPLACE] last = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^377^^^^^368^384^[ADD] next.prev = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.next = ifirst; ;^379^^^^^368^384^[REPLACE] location.next = insn;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.next = null; ;^380^^^^^368^384^[REPLACE] insn.next = next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^ifirst.prev = location; ;^381^^^^^368^384^[REPLACE] insn.prev = location;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^381^^^^^368^384^[ADD] insn.prev = location;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^382^^^^^368^384^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 1;^383^^^^^368^384^[REPLACE] insn.index = 0;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check || ! ( contains ( location )  || insns != this )  )  {^397^^^^^396^417^[REPLACE] if  ( check && ! ( contains ( location )  && insns != this )  )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^398^^^^^396^417^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  ||  0 ) {^400^^^^^396^417^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^400^401^402^^^396^417^[ADD] if  ( insns.size == 0 )  { return; }^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^401^^^^^396^417^[REPLACE] return;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^403^^^^^396^417^[REPLACE] size += insns.size;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode result = next;^404^^^^^396^417^[REPLACE] AbstractInsnNode ifirst = insns.first;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = insns.last;^405^^^^^396^417^[REPLACE] AbstractInsnNode ilast = insns.last;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^405^406^^^^396^417^[ADD] AbstractInsnNode ilast = insns.last; AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = next.next;^406^^^^^396^417^[REPLACE] AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^406^^^^^396^417^[ADD] AbstractInsnNode next = location.next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( next != null )  {^407^^^^^396^417^[REPLACE] if  ( next == null )  {^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^410^^^^^396^417^[REPLACE] next.prev = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last = insns.last; ;^408^^^^^396^417^[REPLACE] last = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^408^^^^^396^417^[ADD] last = ilast;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^location.next = null; ;^412^^^^^396^417^[REPLACE] location.next = ifirst;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^ilast.next = next;ifirst.prev = location;cache = null;insns.removeAll ( false ) ;^412^413^414^415^416^396^417^[ADD] location.next = ifirst; ilast.next = next; ifirst.prev = location; cache = null; insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^413^^^^^396^417^[REPLACE] ilast.next = next;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = location; ;^414^^^^^396^417^[REPLACE] ifirst.prev = location;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^415^^^^^396^417^[REPLACE] cache = null;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.removeAll ( true ) ;^416^^^^^396^417^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^416^^^^^396^417^[ADD] insns.removeAll ( false ) ;^[METHOD] insert [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  (   ( contains ( location )  && insn.index == -1 )  )  {^431^^^^^430^446^[REPLACE] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^431^432^433^^^430^446^[ADD] if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return ;^432^^^^^430^446^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^432^^^^^430^446^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = next.prev;^435^^^^^430^446^[REPLACE] AbstractInsnNode prev = location.prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != true )  {^436^^^^^430^446^[REPLACE] if  ( prev == null )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last.next = insn; ;^439^^^^^430^446^[REPLACE] prev.next = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = ifirst; ;^437^^^^^430^446^[REPLACE] first = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^location.prev = null; ;^441^^^^^430^446^[REPLACE] location.prev = insn;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^ilast.next = location ; ;^442^^^^^430^446^[REPLACE] insn.next = location;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^insn.prev = prev;^442^443^^^^430^446^[ADD] insn.next = location; insn.prev = prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^443^^^^^430^446^[REPLACE] insn.prev = prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = false;^444^^^^^430^446^[REPLACE] cache = null;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 3;^445^^^^^430^446^[REPLACE] insn.index = 0;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  (  ! ( contains ( location  )  || insns != this )  )  {^459^^^^^458^479^[REPLACE] if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return ;^460^^^^^458^479^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if (insns.size  ||  0 ) {^462^^^^^458^479^[REPLACE] if  ( insns.size == 0 )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^462^463^464^^^458^479^[ADD] if  ( insns.size == 0 )  { return; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^463^^^^^458^479^[REPLACE] return;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^size +=  null.size;^465^^^^^458^479^[REPLACE] size += insns.size;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode result = next;^466^^^^^458^479^[REPLACE] AbstractInsnNode ifirst = insns.first;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = insns.last;^467^^^^^458^479^[REPLACE] AbstractInsnNode ilast = insns.last;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = next .prev;^468^^^^^458^479^[REPLACE] AbstractInsnNode prev = location .prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != null )  {^469^^^^^458^479^[REPLACE] if  ( prev == null )  {^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^prev.next = insn; ;^472^^^^^458^479^[REPLACE] prev.next = ifirst;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^first = insns.first; ;^470^^^^^458^479^[REPLACE] first = ifirst;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^location.prev = null; ;^474^^^^^458^479^[REPLACE] location .prev = ilast;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insn.next = location; ;^475^^^^^458^479^[REPLACE] ilast.next = location ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^next.prev = prev; ;^476^^^^^458^479^[REPLACE] ifirst.prev = prev;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^cache = null;insns.removeAll ( false ) ;^476^477^478^479^^458^479^[ADD] ifirst.prev = prev; cache = null; insns.removeAll ( false ) ; }^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^477^^^^^458^479^[REPLACE] cache = null;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^477^^^^^458^479^[ADD] cache = null;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^insns.get ( true ) ;^478^^^^^458^479^[REPLACE] insns.removeAll ( false ) ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[ADD]^^478^^^^^458^479^[ADD] insns.removeAll ( false ) ;^[METHOD] insertBefore [TYPE] void [PARAMETER] AbstractInsnNode location InsnList insns [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  InsnList insns  [TYPE]  int i  index  size 
[REPLACE]^if  ( check && contains ( insn )  )  {^491^^^^^490^518^[REPLACE] if  ( check && !contains ( insn )  )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^492^^^^^490^518^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^492^^^^^490^518^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = location.next;^495^^^^^490^518^[REPLACE] AbstractInsnNode next = insn.next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode prev = location.prev;^496^^^^^490^518^[REPLACE] AbstractInsnNode prev = insn.prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next !=location )  {^497^^^^^490^518^[REPLACE] if  ( next == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( ifirst != true )  {^506^^^^^497^513^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^506^507^508^509^510^497^513^[ADD] if  ( prev == null )  { first = next; next.prev = null; } else { prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = insn; ;^510^^^^^497^513^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = prev; ;^511^^^^^497^513^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn = next; ;^507^^^^^497^513^[REPLACE] first = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^507^508^^^^497^513^[ADD] first = next; next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = this;^508^^^^^497^513^[REPLACE] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( ifirst != null )  {^498^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = this;^502^^^^^498^504^[REPLACE] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  ifirst;^503^^^^^498^504^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last = null; ;^499^^^^^490^518^[REPLACE] first = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last = false;^500^^^^^490^518^[REPLACE] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = true;^499^^^^^490^518^[REPLACE] first = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = true;^502^^^^^490^518^[REPLACE] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  ifirst;^503^^^^^490^518^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  (ifirst != null )  {^498^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^498^499^500^501^502^490^518^[ADD] if  ( prev == null )  { first = null; last = null; } else { prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^502^^^^^498^504^[ADD] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last =  null;^503^^^^^498^504^[REPLACE] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^last = null;^499^500^^^^490^518^[ADD] first = null; last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^last = this;^500^^^^^490^518^[REPLACE] last = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  (ifirst != null )  {^506^^^^^490^518^[REPLACE] if  ( prev == null )  {^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = insn; ;^510^^^^^506^512^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = prev; ;^511^^^^^506^512^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn = next; ;^507^^^^^490^518^[REPLACE] first = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = true;^508^^^^^490^518^[REPLACE] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = false;^502^^^^^490^518^[REPLACE] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^502^^^^^490^518^[ADD] prev.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^503^^^^^490^518^[ADD] last = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next.prev = this;^508^^^^^490^518^[REPLACE] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^508^^^^^490^518^[ADD] next.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^prev.next = insn; ;^510^^^^^490^518^[REPLACE] prev.next = next;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = prev; ;^511^^^^^490^518^[REPLACE] next.prev = prev;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = true;^514^^^^^490^518^[REPLACE] cache = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0; ;^515^^^^^490^518^[REPLACE] insn.index = -1;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = false;^516^^^^^490^518^[REPLACE] insn.prev = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next = null; ;^517^^^^^490^518^[REPLACE] insn.next = null;^[METHOD] remove [TYPE] void [PARAMETER] AbstractInsnNode insn [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^while  ( insn == null )  {^529^^^^^526^541^[REPLACE] while  ( insn != null )  {^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = 0; ;^531^^^^^526^541^[REPLACE] insn.index = -1;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = true;^532^^^^^526^541^[REPLACE] insn.prev = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next = null; ;^533^^^^^526^541^[REPLACE] insn.next = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn = insn.next; ;^534^^^^^526^541^[REPLACE] insn = next;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode next = location.next;^530^^^^^526^541^[REPLACE] AbstractInsnNode next = insn.next;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( false )  {^527^^^^^526^541^[REPLACE] if  ( mark )  {^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^while  ( location == null )  {^529^^^^^526^541^[REPLACE] while  ( insn != null )  {^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = -0;^531^^^^^526^541^[REPLACE] insn.index = -1;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^531^^^^^526^541^[ADD] insn.index = -1;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.prev = false;^532^^^^^526^541^[REPLACE] insn.prev = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.next = this;^533^^^^^526^541^[REPLACE] insn.next = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^530^^^^^526^541^[ADD] AbstractInsnNode next = insn.next;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = -1 - 4;^531^^^^^526^541^[REPLACE] insn.index = -1;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = first;^528^^^^^526^541^[REPLACE] AbstractInsnNode insn = first;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn.index = -1L;^531^^^^^526^541^[REPLACE] insn.index = -1;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^528^^^^^526^541^[ADD] AbstractInsnNode insn = first;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^size = 0 ;^537^^^^^526^541^[REPLACE] size = 0;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^first = false;^538^^^^^526^541^[REPLACE] first = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^538^^^^^526^541^[ADD] first = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next = null; ;^539^^^^^526^541^[REPLACE] last = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^539^^^^^526^541^[ADD] last = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^cache = this;^540^^^^^526^541^[REPLACE] cache = null;^[METHOD] removeAll [TYPE] void [PARAMETER] final boolean mark [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^next = get ( index ) ;^547^^^^^546^548^[REPLACE] removeAll ( check ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode elem = first;^556^^^^^555^563^[REPLACE] AbstractInsnNode insn = first;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^556^^^^^555^563^[ADD] AbstractInsnNode insn = first;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^while  (location == false )  {^557^^^^^555^563^[REPLACE] while  ( insn != null )  {^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^557^558^559^^^555^563^[ADD] while  ( insn != null )  { if  ( insn instanceof LabelNode )  { (  ( LabelNode )  insn ) .resetLabel (  ) ;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( ! insn instanceof LabelNode )  {^558^^^^^555^563^[REPLACE] if  ( insn instanceof LabelNode )  {^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ;^559^^^^^555^563^[REPLACE] (  ( LabelNode )  insn ) .resetLabel (  ) ;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^insn = next; ;^561^^^^^555^563^[REPLACE] insn = insn.next;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[ADD]^^561^^^^^555^563^[ADD] insn = insn.next;^[METHOD] resetLabels [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^return false ;^580^^^^^579^581^[REPLACE] return next != null;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  [TYPE]  int i  index  size 
[REPLACE]^if  ( next != null )  {^584^^^^^583^591^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^585^^^^^583^591^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode result = prev;^587^^^^^583^591^[REPLACE] AbstractInsnNode result = next;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^next = result; ;^588^^^^^583^591^[REPLACE] prev = result;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[ADD]^^588^^^^^583^591^[ADD] prev = result;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^next = result; ;^589^^^^^583^591^[REPLACE] next = result.next;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return prev;^590^^^^^583^591^[REPLACE] return result;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^InsnList.this .removeAll ( check )  ;^594^^^^^593^596^[REPLACE] InsnList.this.remove ( prev ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^prev = next.prev; ;^595^^^^^593^596^[REPLACE] prev = prev.prev;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return true ;^599^^^^^598^600^[REPLACE] return prev != null;^[METHOD] hasPrevious [TYPE] boolean [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^AbstractInsnNode result = next;^603^^^^^602^607^[REPLACE] AbstractInsnNode result = prev;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^next = null; ;^604^^^^^602^607^[REPLACE] next = result;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^prev = next.prev; ;^605^^^^^602^607^[REPLACE] prev = result.prev;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[ADD]^^605^606^^^^602^607^[ADD] prev = result.prev; return result;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return prev;^606^^^^^602^607^[REPLACE] return result;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^if  ( next != null )  {^610^^^^^609^617^[REPLACE] if  ( next == null )  {^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[ADD]^^610^611^612^^^609^617^[ADD] if  ( next == null )  { return size (  ) ; }^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return prev.index;^611^^^^^609^617^[REPLACE] return size (  ) ;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^if  ( cache != null )  {^613^^^^^609^617^[REPLACE] if  ( cache == null )  {^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^cache  = null ;^614^^^^^609^617^[REPLACE] cache = toArray (  ) ;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^cache  =  cache ;^614^^^^^609^617^[REPLACE] cache = toArray (  ) ;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^616^^^^^609^617^[REPLACE] return next.index;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^if  ( prev != null )  {^620^^^^^619^627^[REPLACE] if  ( prev == null )  {^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[ADD]^return -1;^620^621^622^^^619^627^[ADD] if  ( prev == null )  { return -1; }^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return -1L;^621^^^^^619^627^[REPLACE] return -1;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return -4;^621^^^^^619^627^[REPLACE] return -1;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^if  ( cache != this  )  {^623^^^^^619^627^[REPLACE] if  ( cache == null )  {^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^cache  =  cache ;^624^^^^^619^627^[REPLACE] cache = toArray (  ) ;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^return size (  ) ;^626^^^^^619^627^[REPLACE] return prev.index;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^InsnList.this.insert ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^[REPLACE] InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[METHOD] add [TYPE] void [PARAMETER] Object o [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  Object o  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[ADD]^^630^631^632^^^629^632^[ADD] InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ; prev =  ( AbstractInsnNode )  o; }^[METHOD] add [TYPE] void [PARAMETER] Object o [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  Object o  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^prev =   ( AbstractInsnNode )  o;^631^^^^^629^632^[REPLACE] prev =  ( AbstractInsnNode )  o;^[METHOD] add [TYPE] void [PARAMETER] Object o [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  Object o  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^InsnList.this.insert ( next.prev,  ( AbstractInsnNode )  o ) ;^635^^^^^634^637^[REPLACE] InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[METHOD] set [TYPE] void [PARAMETER] Object o [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  Object o  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^prev =   ( AbstractInsnNode )  o;^636^^^^^634^637^[REPLACE] prev =  ( AbstractInsnNode )  o;^[METHOD] set [TYPE] void [PARAMETER] Object o [CLASS] InsnList InsnListIterator   [TYPE]  AbstractInsnNode[] cache  insns  [TYPE]  Object o  [TYPE]  boolean check  false  mark  true  [TYPE]  AbstractInsnNode elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  [TYPE]  int i  index  size 
[REPLACE]^if ( index==size (  )  /  2 )  {^570^^^^^569^577^[REPLACE] if ( index==size (  )  )  {^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^next =  get ( null ) ;^574^^^^^569^577^[REPLACE] next = get ( index ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^prev = prev.prev; ;^575^^^^^569^577^[REPLACE] prev = next.prev;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^next = result; ;^571^^^^^569^577^[REPLACE] next = null;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^prev  =  prev ;^572^^^^^569^577^[REPLACE] prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^next = false;^571^^^^^569^577^[REPLACE] next = null;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^prev ;^572^^^^^569^577^[REPLACE] prev = getLast (  ) ;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[ADD]^^574^575^^^^569^577^[ADD] next = get ( index ) ; prev = next.prev;^[METHOD] <init> [TYPE] InsnList$InsnListIterator(int) [PARAMETER] int index [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^return false ;^580^^^^^579^581^[REPLACE] return next != null;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  [TYPE]  boolean false  true 
[REPLACE]^if  (result != null )  {^584^^^^^583^591^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[ADD]^^584^585^586^^^583^591^[ADD] if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return ;^585^^^^^583^591^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[ADD]^^585^^^^^583^591^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^AbstractInsnNode result = prev;^587^^^^^583^591^[REPLACE] AbstractInsnNode result = next;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^prev = result.prev; ;^588^^^^^583^591^[REPLACE] prev = result;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^next = result; ;^589^^^^^583^591^[REPLACE] next = result.next;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return prev;^590^^^^^583^591^[REPLACE] return result;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^InsnList.this.get ( prev ) ;^594^^^^^593^596^[REPLACE] InsnList.this.remove ( prev ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^prev = result.prev; ;^595^^^^^593^596^[REPLACE] prev = prev.prev;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[ADD]^^595^^^^^593^596^[ADD] prev = prev.prev;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return true ;^599^^^^^598^600^[REPLACE] return prev != null;^[METHOD] hasPrevious [TYPE] boolean [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^AbstractInsnNode result = next;^603^^^^^602^607^[REPLACE] AbstractInsnNode result = prev;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^prev = result; ;^604^^^^^602^607^[REPLACE] next = result;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^prev = result; ;^605^^^^^602^607^[REPLACE] prev = result.prev;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return prev;^606^^^^^602^607^[REPLACE] return result;^[METHOD] previous [TYPE] Object [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^if  (result != null )  {^610^^^^^609^617^[REPLACE] if  ( next == null )  {^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[ADD]^return size (  ) ;^610^611^612^^^609^617^[ADD] if  ( next == null )  { return size (  ) ; }^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return next.index;^611^^^^^609^617^[REPLACE] return size (  ) ;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^if  ( cache != null )  {^613^^^^^609^617^[REPLACE] if  ( cache == null )  {^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^cache  =  cache ;^614^^^^^609^617^[REPLACE] cache = toArray (  ) ;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return size (  ) ;^616^^^^^609^617^[REPLACE] return next.index;^[METHOD] nextIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^if  ( prev != null )  {^620^^^^^619^627^[REPLACE] if  ( prev == null )  {^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return -1 - 3;^621^^^^^619^627^[REPLACE] return -1;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return -1 - 1;^621^^^^^619^627^[REPLACE] return -1;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^if  ( cache != null )  {^623^^^^^619^627^[REPLACE] if  ( cache == null )  {^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^cache  = null ;^624^^^^^619^627^[REPLACE] cache = toArray (  ) ;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^cache  =  cache ;^624^^^^^619^627^[REPLACE] cache = toArray (  ) ;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^return size (  ) ;^626^^^^^619^627^[REPLACE] return prev.index;^[METHOD] previousIndex [TYPE] int [PARAMETER] [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  boolean false  true 
[REPLACE]^InsnList.this.set ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^[REPLACE] InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[METHOD] add [TYPE] void [PARAMETER] Object o [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^prev =   ( AbstractInsnNode )  o;^631^^^^^629^632^[REPLACE] prev =  ( AbstractInsnNode )  o;^[METHOD] add [TYPE] void [PARAMETER] Object o [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^InsnList.this.remove ( prev ) ;^635^^^^^634^637^[REPLACE] InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[METHOD] set [TYPE] void [PARAMETER] Object o [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^prev =   ( AbstractInsnNode )  o;^636^^^^^634^637^[REPLACE] prev =  ( AbstractInsnNode )  o;^[METHOD] set [TYPE] void [PARAMETER] Object o [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  Object o  [TYPE]  boolean false  true 
[ADD]^^636^^^^^634^637^[ADD] prev =  ( AbstractInsnNode )  o;^[METHOD] set [TYPE] void [PARAMETER] Object o [CLASS] InsnListIterator   [TYPE]  AbstractInsnNode next  prev  result  [TYPE]  Object o  [TYPE]  boolean false  true 
