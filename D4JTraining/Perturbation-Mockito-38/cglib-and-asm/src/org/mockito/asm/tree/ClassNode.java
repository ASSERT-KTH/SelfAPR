[REPLACE]^public  long  version;^51^^^^^^^[REPLACE] public int version;^ [CLASS] ClassNode  
[REPLACE]^private int access;^57^^^^^^^[REPLACE] public int access;^ [CLASS] ClassNode  
[REPLACE]^private String name;^63^^^^^^^[REPLACE] public String name;^ [CLASS] ClassNode  
[REPLACE]^public  boolean  superName;^76^^^^^^^[REPLACE] public String superName;^ [CLASS] ClassNode  
[REPLACE]^public  double  sourceFile;^89^^^^^^^[REPLACE] public String sourceFile;^ [CLASS] ClassNode  
[REPLACE]^public  long  sourceDebug;^95^^^^^^^[REPLACE] public String sourceDebug;^ [CLASS] ClassNode  
[REPLACE]^public  double  outerMethod;^107^^^^^^^[REPLACE] public String outerMethod;^ [CLASS] ClassNode  
[REPLACE]^private List methods;^137^^^^^^^[REPLACE] public List methods;^ [CLASS] ClassNode  
[REPLACE]^this.fields = new ArrayList (  ) ; ;^143^^^^^142^147^[REPLACE] this.interfaces = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.fields = new ArrayList (  ) ; ;^144^^^^^142^147^[REPLACE] this.innerClasses = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^144^^^^^142^147^[ADD] this.innerClasses = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.interfaces = new ArrayList (  ) ; ;^145^^^^^142^147^[REPLACE] this.fields = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.fields = new ArrayList (  ) ; ;^146^^^^^142^147^[REPLACE] this.methods = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^146^^^^^142^147^[ADD] this.methods = new ArrayList (  ) ;^[METHOD] <init> [TYPE] ClassNode() [PARAMETER] [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.version =  null;^161^^^^^153^169^[REPLACE] this.version = version;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^161^162^^^^153^169^[ADD] this.version = version; this.access = access;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.access =  null;^162^^^^^153^169^[REPLACE] this.access = access;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.name =  superName;^163^^^^^153^169^[REPLACE] this.name = name;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.signature =  superName;^164^^^^^153^169^[REPLACE] this.signature = signature;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^164^^^^^153^169^[ADD] this.signature = signature;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.superName =  sourceFile;^165^^^^^153^169^[REPLACE] this.superName = superName;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^165^^^^^153^169^[ADD] this.superName = superName;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^if  ( interfaces == null )  {^166^^^^^153^169^[REPLACE] if  ( interfaces != null )  {^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.interfaces.add ( Arrays.asList ( interfaces )  ) ;^167^^^^^153^169^[REPLACE] this.interfaces.addAll ( Arrays.asList ( interfaces )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^this.interfaces.addAll (   interfaces    ) ;^167^^^^^153^169^[REPLACE] this.interfaces.addAll ( Arrays.asList ( interfaces )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] final int version final int access String name String signature String superName String[] interfaces [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^sourceFile =  superName;^172^^^^^171^174^[REPLACE] sourceFile = file;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  file  name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^sourceDebug =  superName;^173^^^^^171^174^[REPLACE] sourceDebug = debug;^[METHOD] visitSource [TYPE] void [PARAMETER] String file String debug [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  file  name  outerClass  outerMethod  outerMethodDesc  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^outerClass =  null;^181^^^^^176^184^[REPLACE] outerClass = owner;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  name  outerClass  outerMethod  outerMethodDesc  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^outerMethod =  superName;^182^^^^^176^184^[REPLACE] outerMethod = name;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  name  outerClass  outerMethod  outerMethodDesc  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^outerMethodDesc =  superName;^183^^^^^176^184^[REPLACE] outerMethodDesc = desc;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  name  outerClass  outerMethod  outerMethodDesc  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^InnerClassNode icn = new InnerClassNode ( name, owner, innerName, access ) ;^192^193^194^195^^186^197^[REPLACE] InnerClassNode icn = new InnerClassNode ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version  [TYPE]  InnerClassNode icn 
[REPLACE]^innerClasses.get ( icn ) ;^196^^^^^186^197^[REPLACE] innerClasses.add ( icn ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version  [TYPE]  InnerClassNode icn 
[ADD]^^196^^^^^186^197^[ADD] innerClasses.add ( icn ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName final int access [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  int access  version  [TYPE]  InnerClassNode icn 
[REPLACE]^MethodNode mn = new MethodNode ( access, name,^206^^^^^199^209^[REPLACE] FieldNode fn = new FieldNode ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  Object value  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  FieldNode fn  [TYPE]  int access  version 
[REPLACE]^fields.get ( fn ) ;^207^^^^^199^209^[REPLACE] fields.add ( fn ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  Object value  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  FieldNode fn  [TYPE]  int access  version 
[REPLACE]^return mn;^208^^^^^199^209^[REPLACE] return fn;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] final int access String name String desc String signature Object value [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  Object value  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  boolean false  true  [TYPE]  FieldNode fn  [TYPE]  int access  version 
[ADD]^^218^219^220^^^211^225^[ADD] MethodNode mn = new MethodNode ( access, name, desc,^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  MethodNode mn  [TYPE]  int access  version 
[REPLACE]^methods.get ( mn ) ;^223^^^^^211^225^[REPLACE] methods.add ( mn ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  MethodNode mn  [TYPE]  int access  version 
[REPLACE]^return fn;^224^^^^^211^225^[REPLACE] return mn;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] final int access String name String desc String signature String[] exceptions [CLASS] ClassNode   [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  MethodNode mn  [TYPE]  int access  version 
[REPLACE]^MethodNode mn = new MethodNode ( access, name,^238^^^^^236^279^[REPLACE] String[] interfaces = new String[this.interfaces.size (  ) ];^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^this.interfaces.add ( interfaces ) ;^239^^^^^236^279^[REPLACE] this.interfaces.toArray ( interfaces ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^cv.visitOuterClass ( outerClass, outerMethod, outerMethodDesc ) ;^240^^^^^236^279^[REPLACE] cv.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^240^^^^^236^279^[ADD] cv.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^if  ( sourceFile == null || sourceDebug != null )  {^242^^^^^236^279^[REPLACE] if  ( sourceFile != null || sourceDebug != null )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^242^243^244^^^236^279^[ADD] if  ( sourceFile != null || sourceDebug != null )  { cv.visitSource ( sourceFile, sourceDebug ) ; }^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^cv.visitOuterClass ( outerClass, outerMethod, outerMethodDesc ) ;^243^^^^^236^279^[REPLACE] cv.visitSource ( sourceFile, sourceDebug ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^243^^^^^236^279^[ADD] cv.visitSource ( sourceFile, sourceDebug ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^if  ( outerClass == false )  {^246^^^^^236^279^[REPLACE] if  ( outerClass != null )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^cv.visit ( version, access, name, signature, superName, interfaces ) ;^247^^^^^236^279^[REPLACE] cv.visitOuterClass ( outerClass, outerMethod, outerMethodDesc ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^247^^^^^236^279^[ADD] cv.visitOuterClass ( outerClass, outerMethod, outerMethodDesc ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^String[] interfaces = new String[this.interfaces.size (  ) ];^250^^^^^236^279^[REPLACE] int i, n;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^n = visibleAnnotations == null ? 0 : visibleAnnotations.size (  )  %  2;^251^^^^^236^279^[REPLACE] n = visibleAnnotations == null ? 0 : visibleAnnotations.size (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i  >=  n; ++i )  {^252^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^AnnotationNode an =  ( AnnotationNode )  visibleAnnotations.size ( version ) ;^253^^^^^236^279^[REPLACE] AnnotationNode an =  ( AnnotationNode )  visibleAnnotations.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^253^254^^^^236^279^[ADD] AnnotationNode an =  ( AnnotationNode )  visibleAnnotations.get ( i ) ; an.accept ( cv.visitAnnotation ( an.desc, true )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 4; i < n; ++i )  {^252^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^AnnotationNode an =  ( AnnotationNode )  visibleAnnotations.get ( version ) ;^253^^^^^236^279^[REPLACE] AnnotationNode an =  ( AnnotationNode )  visibleAnnotations.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^n = invisibleAnnotations == true ? 0 : invisibleAnnotations.length (  ) ;^256^^^^^236^279^[REPLACE] n = invisibleAnnotations == null ? 0 : invisibleAnnotations.size (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i  !=  n; ++i )  {^257^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^AnnotationNode an =  ( AnnotationNode )  versionnvisibleAnnotations.get ( i ) ;^258^^^^^236^279^[REPLACE] AnnotationNode an =  ( AnnotationNode )  invisibleAnnotations.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0 >> 0; i < n; ++i )  {^257^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^AnnotationNode an =  ( AnnotationNode )  invisibleAnnotations.size ( i ) ;^258^^^^^236^279^[REPLACE] AnnotationNode an =  ( AnnotationNode )  invisibleAnnotations.get ( i ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^n = attrs == null ? 0 : attrs.size (  )  + 1;^261^^^^^236^279^[REPLACE] n = attrs == null ? 0 : attrs.size (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^261^^^^^236^279^[ADD] n = attrs == null ? 0 : attrs.size (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i  >  n; ++i )  {^262^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^cv.visitAttribute (  ( Attribute )  attrs.get ( version )  ) ;^263^^^^^236^279^[REPLACE] cv.visitAttribute (  ( Attribute )  attrs.get ( i )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^cv.visitAttribute (  ( Attribute )  attrs.size ( i )  ) ;^263^^^^^236^279^[REPLACE] cv.visitAttribute (  ( Attribute )  attrs.get ( i )  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0 * 4; i < n; ++i )  {^262^^^^^236^279^[REPLACE] for  ( i = 0; i < n; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( version = 0; i < innerClasses.size (  )  + 2; ++i )  {^266^^^^^236^279^[REPLACE] for  ( i = 0; i < innerClasses.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^266^267^268^^^236^279^[ADD] for  ( i = 0; i < innerClasses.size (  ) ; ++i )  { (  ( InnerClassNode )  innerClasses.get ( i )  ) .accept ( cv ) ; }^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i < innerClasses.size (  ) ; ++i )  { (  ( InnerClassNode )  innerClasses.get ( i )  ) .accept ( cv ) ;^267^^^^^236^279^[REPLACE] (  ( InnerClassNode )  innerClasses.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^(  ( InnerClassNode )  versionnnerClasses.size ( i )  ) .accept ( cv ) ;^267^^^^^236^279^[REPLACE] (  ( InnerClassNode )  innerClasses.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0 ; i < innerClasses.size (  ) ; ++i )  {^266^^^^^236^279^[REPLACE] for  ( i = 0; i < innerClasses.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i < fields.size (  )  *  2; ++i )  {^270^^^^^236^279^[REPLACE] for  ( i = 0; i < fields.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^(  ( FieldNode )  fields.size ( i )  ) .accept ( cv ) ;^271^^^^^236^279^[REPLACE] (  ( FieldNode )  fields.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^271^^^^^236^279^[ADD] (  ( FieldNode )  fields.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^(  ( FieldNode )  fields.get ( version )  ) .accept ( cv ) ;^271^^^^^236^279^[REPLACE] (  ( FieldNode )  fields.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0 ; i < fields.size (  ) ; ++i )  {^270^^^^^236^279^[REPLACE] for  ( i = 0; i < fields.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^270^271^272^^^236^279^[ADD] for  ( i = 0; i < fields.size (  ) ; ++i )  { (  ( FieldNode )  fields.get ( i )  ) .accept ( cv ) ; }^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0; i < methods.size (  )  + 4; ++i )  {^274^^^^^236^279^[REPLACE] for  ( i = 0; i < methods.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^(  ( MethodNode )  methods.get ( version )  ) .accept ( cv ) ;^275^^^^^236^279^[REPLACE] (  ( MethodNode )  methods.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^(  ( MethodNode )  methods.size ( i )  ) .accept ( cv ) ;^275^^^^^236^279^[REPLACE] (  ( MethodNode )  methods.get ( i )  ) .accept ( cv ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^for  ( i = 0 ; i < methods.size (  ) ; ++i )  {^274^^^^^236^279^[REPLACE] for  ( i = 0; i < methods.size (  ) ; ++i )  {^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^274^275^276^^^236^279^[ADD] for  ( i = 0; i < methods.size (  ) ; ++i )  { (  ( MethodNode )  methods.get ( i )  ) .accept ( cv ) ; }^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[REPLACE]^methods.add ( mn ) ;^278^^^^^236^279^[REPLACE] cv.visitEnd (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
[ADD]^^278^^^^^236^279^[ADD] cv.visitEnd (  ) ;^[METHOD] accept [TYPE] void [PARAMETER] ClassVisitor cv [CLASS] ClassNode   [TYPE]  boolean false  true  [TYPE]  AnnotationNode an  [TYPE]  List fields  innerClasses  interfaces  methods  [TYPE]  String debug  desc  file  innerName  name  outerClass  outerMethod  outerMethodDesc  outerName  owner  signature  sourceDebug  sourceFile  superName  [TYPE]  ClassVisitor cv  [TYPE]  String[] interfaces  [TYPE]  int access  i  n  version 
