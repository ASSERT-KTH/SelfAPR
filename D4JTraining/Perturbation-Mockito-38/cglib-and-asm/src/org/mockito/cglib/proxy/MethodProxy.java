[REPLACE]^private final Object initLock ;^41^^^^^^^[REPLACE] private final Object initLock = new Object (  ) ;^ [CLASS] MethodProxy FastClassInfo CreateInfo  
[REPLACE]^this.c2 = c2; ;^103^^^^^101^111^[REPLACE] this.c1 = c1;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^this.c1 = c1; ;^104^^^^^101^111^[REPLACE] this.c2 = c2;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^AbstractClassGenerator fromEnhancer = AbstractClassGenerator .getStrategy (  )  ;^105^^^^^101^111^[REPLACE] AbstractClassGenerator fromEnhancer = AbstractClassGenerator.getCurrent (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^if  ( fromEnhancer == null )  {^106^^^^^101^111^[REPLACE] if  ( fromEnhancer != null )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^namingPolicy =  null.getNamingPolicy (  ) ;^107^^^^^101^111^[REPLACE] namingPolicy = fromEnhancer.getNamingPolicy (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^strategy =  null.getStrategy (  ) ;^108^^^^^101^111^[REPLACE] strategy = fromEnhancer.getStrategy (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^attemptLoad =  null.getAttemptLoad (  ) ;^109^^^^^101^111^[REPLACE] attemptLoad = fromEnhancer.getAttemptLoad (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^strategy = fromEnhancer.getStrategy (  ) ;^107^108^^^^101^111^[ADD] namingPolicy = fromEnhancer.getNamingPolicy (  ) ; strategy = fromEnhancer.getStrategy (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  AbstractClassGenerator fromEnhancer  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClass.Generator g = new FastClass.Generator (  ) ;^49^^^^^48^54^[REPLACE] MethodProxy proxy = new MethodProxy (  ) ;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^49^^^^^48^54^[ADD] MethodProxy proxy = new MethodProxy (  ) ;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^proxy.sig2 =  new Signature ( name2, desc )  ; ;^50^^^^^48^54^[REPLACE] proxy.sig1 = new Signature ( name1, desc ) ;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^proxy.sig1 =  new Signature ( name1, desc )  ; ;^51^^^^^48^54^[REPLACE] proxy.sig2 = new Signature ( name2, desc ) ;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^proxy.createInfo =  new CreateInfo ( c1, c2 ) ;^52^^^^^48^54^[REPLACE] proxy.createInfo = new CreateInfo ( c1, c2 ) ;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^return fastClassInfo.i2;^53^^^^^48^54^[REPLACE] return proxy;^[METHOD] create [TYPE] MethodProxy [PARAMETER] Class c1 Class c2 String desc String name1 String name2 [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  MethodProxy proxy  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  [TYPE]  Class c1  c2  [TYPE]  String desc  name1  name2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^if  ( fastClassInfo != null ) {^66^67^^^^57^83^[REPLACE] if  ( fastClassInfo == null ) {^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^if  (fci != null ) {^70^71^^^^66^82^[REPLACE] if  ( fastClassInfo == null ) {^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f2 = helper ( ci, ci.c2 ) ; ;^75^^^^^66^82^[REPLACE] fci.f1 = helper ( ci, ci.c1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f1 = helper ( ci, ci.c1 ) ; ;^76^^^^^66^82^[REPLACE] fci.f2 = helper ( ci, ci.c2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^76^77^^^^66^82^[ADD] fci.f2 = helper ( ci, ci.c2 ) ; fci.i1 = fci.f1.getIndex ( sig1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i2 = fci.f2.getIndex ( sig2 ) ; ;^77^^^^^66^82^[REPLACE] fci.i1 = fci.f1.getIndex ( sig1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i1 = fci.f1.getIndex ( sig1 ) ; ;^78^^^^^66^82^[REPLACE] fci.i2 = fci.f2.getIndex ( sig2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fastClassInfo =  null;^79^^^^^66^82^[REPLACE] fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^72^^^^^66^82^[REPLACE] CreateInfo ci = createInfo;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClass.Generator g = new FastClass.Generator (  ) ;^74^^^^^66^82^[REPLACE] FastClassInfo fci = new FastClassInfo (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^74^^^^^66^82^[ADD] FastClassInfo fci = new FastClassInfo (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^78^^^^^66^82^[ADD] fci.i2 = fci.f2.getIndex ( sig2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^79^^^^^66^82^[ADD] fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^if  ( fastClassInfo != null ) {^70^71^^^^57^83^[REPLACE] if  ( fastClassInfo == null ) {^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f2 = helper ( ci, ci.c2 ) ; ;^75^^^^^70^80^[REPLACE] fci.f1 = helper ( ci, ci.c1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f1 = helper ( ci, ci.c1 ) ; ;^76^^^^^70^80^[REPLACE] fci.f2 = helper ( ci, ci.c2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i2 = fci.f2.getIndex ( sig2 ) ; ;^77^^^^^70^80^[REPLACE] fci.i1 = fci.f1.getIndex ( sig1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i1 = fci.f1.getIndex ( sig1 ) ; ;^78^^^^^70^80^[REPLACE] fci.i2 = fci.f2.getIndex ( sig2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^78^79^^^^70^80^[ADD] fci.i2 = fci.f2.getIndex ( sig2 ) ; fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fastClassInfo =  null;^79^^^^^70^80^[REPLACE] fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^72^^^^^70^80^[REPLACE] CreateInfo ci = createInfo;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClass.Generator g = new FastClass.Generator (  ) ;^74^^^^^70^80^[REPLACE] FastClassInfo fci = new FastClassInfo (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^74^^^^^70^80^[ADD] FastClassInfo fci = new FastClassInfo (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f2 = helper ( ci, ci.c2 ) ; ;^75^^^^^57^83^[REPLACE] fci.f1 = helper ( ci, ci.c1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.f1 = helper ( ci, ci.c1 ) ; ;^76^^^^^57^83^[REPLACE] fci.f2 = helper ( ci, ci.c2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i2 = fci.f2.getIndex ( sig2 ) ; ;^77^^^^^57^83^[REPLACE] fci.i1 = fci.f1.getIndex ( sig1 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fci.i1 = fci.f1.getIndex ( sig1 ) ; ;^78^^^^^57^83^[REPLACE] fci.i2 = fci.f2.getIndex ( sig2 ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^^78^79^^^^57^83^[ADD] fci.i2 = fci.f2.getIndex ( sig2 ) ; fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^fastClassInfo =  null;^79^^^^^57^83^[REPLACE] fastClassInfo = fci;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^72^^^^^57^83^[REPLACE] CreateInfo ci = createInfo;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClass.Generator g = new FastClass.Generator (  ) ;^74^^^^^57^83^[REPLACE] FastClassInfo fci = new FastClassInfo (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^115^^^^^114^122^[REPLACE] FastClass.Generator g = new FastClass.Generator (  ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^g.setClassLoader ( type ) ;^116^^^^^114^122^[REPLACE] g.setType ( type ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^g.setClassLoader ( createInfo.c2.getClassLoader (  )  ) ;^117^^^^^114^122^[REPLACE] g.setClassLoader ( ci.c2.getClassLoader (  )  ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REMOVE]^fci.i1 = fci.f1.getIndex ( sig1 ) ;^117^^^^^114^122^[REMOVE] ^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^g.setNamingPolicy ( createInfo.namingPolicy ) ;^118^^^^^114^122^[REPLACE] g.setNamingPolicy ( ci.namingPolicy ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^g.setNamingPolicy ( ci.strategy ) ;^119^^^^^114^122^[REPLACE] g.setStrategy ( ci.strategy ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^g.setAttemptLoad ( createInfo.attemptLoad ) ;^120^^^^^114^122^[REPLACE] g.setAttemptLoad ( ci.attemptLoad ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[ADD]^^120^^^^^114^122^[ADD] g.setAttemptLoad ( ci.attemptLoad ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^return true.create (  ) ;^121^^^^^114^122^[REPLACE] return g.create (  ) ;^[METHOD] helper [TYPE] FastClass [PARAMETER] CreateInfo ci Class type [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Generator g 
[REPLACE]^return proxy;^131^^^^^130^132^[REPLACE] return sig1;^[METHOD] getSignature [TYPE] Signature [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^return sig2 .Signature ( this , null )  ;^141^^^^^140^142^[REPLACE] return sig2.getName (  ) ;^[METHOD] getSuperName [TYPE] String [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^return sig2.getName (  ) ;^152^^^^^151^154^[REPLACE] init (  ) ;^[METHOD] getSuperIndex [TYPE] int [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[REPLACE]^return proxy;^153^^^^^151^154^[REPLACE] return fastClassInfo.i2;^[METHOD] getSuperIndex [TYPE] int [PARAMETER] [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig1  sig2  [TYPE]  Object initLock  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy 
[ADD]^MethodInterceptorGenerator.FIND_PROXY_TYPES ) ;return  ( MethodProxy ) m.invoke ( null, new Object[]{ sig } ) ;^165^166^167^168^169^164^176^[ADD] try { Method m = type.getDeclaredMethod ( MethodInterceptorGenerator.FIND_PROXY_NAME, MethodInterceptorGenerator.FIND_PROXY_TYPES ) ; return  ( MethodProxy ) m.invoke ( null, new Object[]{ sig } ) ; } catch  ( NoSuchMethodException e )  {^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^return  ( MethodProxy ) m.invoke ( this, new Object[]{ sig } ) ;^168^^^^^164^176^[REPLACE] return  ( MethodProxy ) m.invoke ( null, new Object[]{ sig } ) ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^Method m = type .getClassLoader (  )  ;^166^167^^^^164^176^[REPLACE] Method m = type.getDeclaredMethod ( MethodInterceptorGenerator.FIND_PROXY_NAME, MethodInterceptorGenerator.FIND_PROXY_TYPES ) ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^return  ( MethodProxy ) m.invoke ( false, new Object[]{ sig } ) ;^168^^^^^164^176^[REPLACE] return  ( MethodProxy ) m.invoke ( null, new Object[]{ sig } ) ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^throw new CodeGenerationException  (" ")  ; ;^170^^^^^164^176^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^172^^^^^164^176^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^174^^^^^164^176^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[ADD]^^169^170^^^^164^176^[ADD] catch  ( NoSuchMethodException e )  { throw new IllegalArgumentException  (" ")  ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[ADD]^^171^172^^^^164^176^[ADD] catch  ( IllegalAccessException e )  { throw new CodeGenerationException  (" ")  ;^[METHOD] find [TYPE] MethodProxy [PARAMETER] Class type Signature sig [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Method m  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  NoSuchMethodException e  [TYPE]  IllegalAccessException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  [TYPE]  Class c1  c2  type 
[REPLACE]^if  ( fastClassInfo.i1  >= i2 ) throw new IllegalArgumentException  (" ")  ;^196^197^^^^188^200^[REPLACE] if  ( fastClassInfo.i1 < 0 ) throw new IllegalArgumentException  (" ")  ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[ADD]^^196^197^198^199^^188^200^[ADD] if  ( fastClassInfo.i1 < 0 ) throw new IllegalArgumentException  (" ")  ; throw e; }^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[REPLACE]^throw new CodeGenerationException  (" ")  ; ;^197^^^^^188^200^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[ADD]^^197^^^^^188^200^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[ADD]^init (  ) ;FastClassInfo fci = fastClassInfo;return fci.f1.invoke ( fci.i1, obj, args ) ;^189^190^191^192^193^188^200^[ADD] try { init (  ) ; FastClassInfo fci = fastClassInfo; return fci.f1.invoke ( fci.i1, obj, args ) ; } catch  ( InvocationTargetException e )  {^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[REPLACE]^return fci.f2.invoke ( fci.i2, obj, args ) ;^192^^^^^188^200^[REPLACE] return fci.f1.invoke ( fci.i1, obj, args ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^191^^^^^188^200^[REPLACE] FastClassInfo fci = fastClassInfo;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^194^^^^^188^200^[REPLACE] throw e.getTargetException  (" ")  ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[REPLACE]^return ;^198^^^^^188^200^[REPLACE] throw e;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[ADD]^^198^^^^^188^200^[ADD] throw e;^[METHOD] invoke [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  CreateInfo ci  createInfo  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  InvocationTargetException e  [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  Class c1  c2  type  [TYPE]  Object[] args  [TYPE]  IllegalArgumentException e 
[ADD]^init (  ) ;FastClassInfo fci = fastClassInfo;return fci.f2.invoke ( fci.i2, obj, args ) ;^213^214^215^216^217^212^220^[ADD] try { init (  ) ; FastClassInfo fci = fastClassInfo; return fci.f2.invoke ( fci.i2, obj, args ) ; } catch  ( InvocationTargetException e )  {^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^return fastClassInfo.f2.invoke ( fci.i2, obj, args ) ;^216^^^^^212^220^[REPLACE] return fci.f2.invoke ( fci.i2, obj, args ) ;^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^FastClassInfo fci = new FastClassInfo (  ) ;^215^^^^^212^220^[REPLACE] FastClassInfo fci = fastClassInfo;^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^return fci.f2.invoke ( fci.i2, initLock, args ) ;^216^^^^^212^220^[REPLACE] return fci.f2.invoke ( fci.i2, obj, args ) ;^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^218^^^^^212^220^[REPLACE] throw e.getTargetException  (" ")  ;^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] MethodProxy FastClassInfo CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^long  i2;^90^^^^^^^[REPLACE] int i2;^[METHOD] invokeSuper [TYPE] Object [PARAMETER] Object obj Object[] args [CLASS] FastClassInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  CreateInfo ci  createInfo  [TYPE]  boolean attemptLoad  false  true  [TYPE]  FastClass f1  f2  [TYPE]  Signature sig  sig1  sig2  [TYPE]  Object initLock  obj  [TYPE]  FastClassInfo fastClassInfo  fci  [TYPE]  Class c1  c2  type  [TYPE]  int i1  i2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Object[] args  [TYPE]  InvocationTargetException e 
[REPLACE]^this.c2 = c2; ;^103^^^^^101^111^[REPLACE] this.c1 = c1;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^this.c1 = c1; ;^104^^^^^101^111^[REPLACE] this.c2 = c2;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[ADD]^^104^^^^^101^111^[ADD] this.c2 = c2;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^AbstractClassGenerator fromEnhancer = AbstractClassGenerator.getStrategy (  ) ;^105^^^^^101^111^[REPLACE] AbstractClassGenerator fromEnhancer = AbstractClassGenerator.getCurrent (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^if  ( fromEnhancer == true )  {^106^^^^^101^111^[REPLACE] if  ( fromEnhancer != null )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^namingPolicy =  null.getNamingPolicy (  ) ;^107^^^^^101^111^[REPLACE] namingPolicy = fromEnhancer.getNamingPolicy (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^strategy =  null.getStrategy (  ) ;^108^^^^^101^111^[REPLACE] strategy = fromEnhancer.getStrategy (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[REPLACE]^attemptLoad =  null.getAttemptLoad (  ) ;^109^^^^^101^111^[REPLACE] attemptLoad = fromEnhancer.getAttemptLoad (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
[ADD]^^109^^^^^101^111^[ADD] attemptLoad = fromEnhancer.getAttemptLoad (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class c1 Class c2 [CLASS] CreateInfo   [TYPE]  GeneratorStrategy strategy  [TYPE]  Class c1  c2  [TYPE]  boolean attemptLoad  false  true  [TYPE]  NamingPolicy namingPolicy  [TYPE]  AbstractClassGenerator fromEnhancer 
