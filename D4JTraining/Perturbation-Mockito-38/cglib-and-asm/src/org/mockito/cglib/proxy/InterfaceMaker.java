[REPLACE]^private static final Source SOURCE  = null ;^35^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( InterfaceMaker.class.getName (  )  ) ;^ [CLASS] InterfaceMaker  
[REPLACE]^private Map signatures ;^36^^^^^^^[REPLACE] private Map signatures = new HashMap (  ) ;^ [CLASS] InterfaceMaker  
[REPLACE]^int i = 0  ;^103^^^^^102^118^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
[REPLACE]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC & Constants.ACC_INTERFACE, getClassName (  ) , null,^104^105^106^107^^102^118^[REPLACE] ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
[REPLACE]^int i = 0  ;^110^^^^^102^118^[REPLACE] for  ( Iterator it = signatures.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
[REPLACE]^Signature sig =  ( Signature ) it .hasNext (  )  ;^111^^^^^102^118^[REPLACE] Signature sig =  ( Signature ) it.next (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
[REPLACE]^Type[] exceptions =  ( Type[] ) signatures.keySet ( sig ) ;^112^^^^^102^118^[REPLACE] Type[] exceptions =  ( Type[] ) signatures.get ( sig ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
[REPLACE]^ce .begin_class ( true , true )  ;^117^^^^^102^118^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] InterfaceMaker   [TYPE]  boolean false  true  [TYPE]  Signature sig  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Type[] exceptions  [TYPE]  ClassVisitor v  [TYPE]  Map signatures  [TYPE]  Source SOURCE 
