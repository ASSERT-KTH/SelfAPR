[REPLACE]^public static final InvocationHandlerGenerator INSTANCE  = null ;^26^^^^^^^[REPLACE] public static final InvocationHandlerGenerator INSTANCE = new InvocationHandlerGenerator (  ) ;^ [CLASS] InvocationHandlerGenerator  
[REPLACE]^private  final Type INVOCATION_HANDLER = TypeUtils.parseType ( "org.mockito.cglib.proxy.InvocationHandler" ) ;^28^29^^^^28^29^[REPLACE] private static final Type INVOCATION_HANDLER = TypeUtils.parseType ( "org.mockito.cglib.proxy.InvocationHandler" ) ;^ [CLASS] InvocationHandlerGenerator  
[REPLACE]^private static  Type UNDECLARED_THROWABLE_EXCEPTION = TypeUtils.parseType ( "org.mockito.cglib.proxy.UndeclaredThrowableException" ) ;^30^31^^^^30^31^[REPLACE] private static final Type UNDECLARED_THROWABLE_EXCEPTION = TypeUtils.parseType ( "org.mockito.cglib.proxy.UndeclaredThrowableException" ) ;^ [CLASS] InvocationHandlerGenerator  
[REPLACE]^private static final Type METHOD ;^32^33^^^^32^33^[REPLACE] private static final Type METHOD = TypeUtils.parseType ( "java.lang.reflect.Method" ) ;^ [CLASS] InvocationHandlerGenerator  
[REPLACE]^private static final Signature INVOKE ;^34^35^^^^34^35^[REPLACE] private static final Signature INVOKE = TypeUtils.parseSignature ( "Object invoke ( Object, java.lang.reflect.Method, Object[] ) " ) ;^ [CLASS] InvocationHandlerGenerator  
[REPLACE]^Signature impl = context.getImplSignature ( method )  ;^38^^^^^37^56^[REPLACE] for  ( Iterator it = methods.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] generate [TYPE] void [PARAMETER] ClassEmitter ce Context context List methods [CLASS] InvocationHandlerGenerator   [TYPE]  Context context  [TYPE]  CodeEmitter e  [TYPE]  Type INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  [TYPE]  boolean false  true  [TYPE]  Signature INVOKE  impl  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Block handler  [TYPE]  List methods  [TYPE]  MethodInfo method  [TYPE]  InvocationHandlerGenerator INSTANCE 
[REPLACE]^MethodInfo method =  ( MethodInfo ) it .hasNext (  )  ;^39^^^^^37^56^[REPLACE] MethodInfo method =  ( MethodInfo ) it.next (  ) ;^[METHOD] generate [TYPE] void [PARAMETER] ClassEmitter ce Context context List methods [CLASS] InvocationHandlerGenerator   [TYPE]  Context context  [TYPE]  CodeEmitter e  [TYPE]  Type INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  [TYPE]  boolean false  true  [TYPE]  Signature INVOKE  impl  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Block handler  [TYPE]  List methods  [TYPE]  MethodInfo method  [TYPE]  InvocationHandlerGenerator INSTANCE 
[ADD]^^40^41^^^^37^56^[ADD] Signature impl = context.getImplSignature ( method ) ; ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, impl.getName (  ) , METHOD, null ) ;^[METHOD] generate [TYPE] void [PARAMETER] ClassEmitter ce Context context List methods [CLASS] InvocationHandlerGenerator   [TYPE]  Context context  [TYPE]  CodeEmitter e  [TYPE]  Type INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  [TYPE]  boolean false  true  [TYPE]  Signature INVOKE  impl  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Block handler  [TYPE]  List methods  [TYPE]  MethodInfo method  [TYPE]  InvocationHandlerGenerator INSTANCE 
[REPLACE]^Iterator it = methods.iterator (  )  ;^43^^^^^37^56^[REPLACE] CodeEmitter e = context.beginMethod ( ce, method ) ;^[METHOD] generate [TYPE] void [PARAMETER] ClassEmitter ce Context context List methods [CLASS] InvocationHandlerGenerator   [TYPE]  Context context  [TYPE]  CodeEmitter e  [TYPE]  Type INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  [TYPE]  boolean false  true  [TYPE]  Signature INVOKE  impl  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Block handler  [TYPE]  List methods  [TYPE]  MethodInfo method  [TYPE]  InvocationHandlerGenerator INSTANCE 
[REPLACE]^Block handler = e.unbox (  ) ;^44^^^^^37^56^[REPLACE] Block handler = e.begin_block (  ) ;^[METHOD] generate [TYPE] void [PARAMETER] ClassEmitter ce Context context List methods [CLASS] InvocationHandlerGenerator   [TYPE]  Context context  [TYPE]  CodeEmitter e  [TYPE]  Type INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  [TYPE]  boolean false  true  [TYPE]  Signature INVOKE  impl  [TYPE]  ClassEmitter ce  [TYPE]  Iterator it  [TYPE]  Block handler  [TYPE]  List methods  [TYPE]  MethodInfo method  [TYPE]  InvocationHandlerGenerator INSTANCE 
