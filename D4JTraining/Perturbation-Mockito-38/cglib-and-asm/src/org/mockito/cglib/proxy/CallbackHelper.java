[REPLACE]^private Map methodMap  = null ;^29^^^^^^^[REPLACE] private Map methodMap = new HashMap (  ) ;^ [CLASS] CallbackHelper  
[REPLACE]^private List callbacks ;^30^^^^^^^[REPLACE] private List callbacks = new ArrayList (  ) ;^ [CLASS] CallbackHelper  
[ADD]^^34^^^^^33^55^[ADD] List methods = new ArrayList (  ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^Enhancer.getMethods ( superclass, interfaces, callbacks ) ;^35^^^^^33^55^[REPLACE] Enhancer.getMethods ( superclass, interfaces, methods ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^36^^^^^33^55^[ADD] Map indexes = new HashMap (  ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^if  ( callback != null ) throw new IllegalStateException  (" ")  ;^40^41^^^^33^55^[REPLACE] if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^40^41^42^43^44^33^55^[ADD] if  ( callback == null ) throw new IllegalStateException  (" ")  ; boolean isCallback = callback instanceof Callback; if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^throw new IllegalStateException ( "getCallback must return a Callback or a Class consistently for every Method" )  ;^41^^^^^33^55^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^if  ( ! ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^33^55^[REPLACE] if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^44^^^^^33^55^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^if  ( ! i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^33^55^[REPLACE] if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^45^46^47^48^49^33^55^[ADD] if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ; Integer index =  ( Integer ) indexes.get ( callback ) ; if  ( index == null )  { index = new Integer ( callbacks.size (  )  ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^return ;^46^^^^^33^55^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^if  ( index != null )  {^48^^^^^33^55^[REPLACE] if  ( index == null )  {^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^index  = null ;^49^^^^^33^55^[REPLACE] index = new Integer ( callbacks.size (  )  ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^49^^^^^33^55^[ADD] index = new Integer ( callbacks.size (  )  ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^37^38^39^40^41^33^55^[ADD] for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  { Method method =  ( Method ) methods.get ( i ) ; Object callback = getCallback ( method ) ; if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^for  ( int i = 0, size = callbacks.size (  ) ; i < size; i++ )  {^37^^^^^33^55^[REPLACE] for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^Method method =  ( Method ) methods .get ( i )  ;^38^^^^^33^55^[REPLACE] Method method =  ( Method ) methods.get ( i ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[ADD]^^39^^^^^33^55^[ADD] Object callback = getCallback ( method ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^int i = 0  ;^42^^^^^33^55^[REPLACE] boolean isCallback = callback instanceof Callback;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^Integer index =  ( Integer ) indexes.hashCode ( callback ) ;^47^^^^^33^55^[REPLACE] Integer index =  ( Integer ) indexes.get ( callback ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^throw new IllegalStateException ( "getCallback cannot return null" )  ;^44^^^^^33^55^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
[REPLACE]^throw new IllegalStateException ( "getCallback cannot return null" )  ;^46^^^^^33^55^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] Class superclass Class[] interfaces [CLASS] CallbackHelper   [TYPE]  Integer index  [TYPE]  Class[] interfaces  [TYPE]  boolean false  isCallback  true  [TYPE]  List callbacks  methods  [TYPE]  Class superclass  [TYPE]  Object callback  [TYPE]  Method method  [TYPE]  Map indexes  methodMap  [TYPE]  int i  size 
