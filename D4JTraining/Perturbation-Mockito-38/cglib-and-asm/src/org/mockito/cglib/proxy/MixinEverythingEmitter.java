[REPLACE]^super ( v, className, classes, this ) ;^34^^^^^33^35^[REPLACE] super ( v, className, classes, null ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] ClassVisitor v String className Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  ClassVisitor v  [TYPE]  String className 
[ADD]^^34^^^^^33^35^[ADD] super ( v, className, classes, null ) ;^[METHOD] <init> [TYPE] Class[]) [PARAMETER] ClassVisitor v String className Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  ClassVisitor v  [TYPE]  String className 
[REPLACE]^List methods = new ArrayList ( Arrays.asList ( type.getMethods (  )  )  ) ;^38^^^^^37^43^[REPLACE] List list = new ArrayList (  ) ;^[METHOD] getInterfaces [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  List list  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < classes.length + 3; i++ )  {^39^^^^^37^43^[REPLACE] for  ( int i = 0; i < classes.length; i++ )  {^[METHOD] getInterfaces [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  List list  [TYPE]  int i 
[REPLACE]^super ( v, className, classes, null ) ;^40^^^^^37^43^[REPLACE] ReflectUtils.addAllInterfaces ( classes[i], list ) ;^[METHOD] getInterfaces [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  List list  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < classes.length; i++ )  {^39^^^^^37^43^[REPLACE] for  ( int i = 0; i < classes.length; i++ )  {^[METHOD] getInterfaces [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  List list  [TYPE]  int i 
[REPLACE]^return  ( Class[] ) list.size ( new Class[list.size (  ) ] ) ;^42^^^^^37^43^[REPLACE] return  ( Class[] ) list.toArray ( new Class[list.size (  ) ] ) ;^[METHOD] getInterfaces [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] MixinEverythingEmitter   [TYPE]  Class[] classes  [TYPE]  boolean false  true  [TYPE]  List list  [TYPE]  int i 
[REPLACE]^List methods = new ArrayList ( Arrays.asList ( type .getMethods ( type )   )  ) ;^46^^^^^45^49^[REPLACE] List methods = new ArrayList ( Arrays.asList ( type.getMethods (  )  )  ) ;^[METHOD] getMethods [TYPE] Method[] [PARAMETER] Class type [CLASS] MixinEverythingEmitter   [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  List methods 
[REPLACE]^CollectionUtils.filter ( methods, new RejectModifierPredicate ( Modifier.FINAL & Modifier.STATIC )  ) ;^47^^^^^45^49^[REPLACE] CollectionUtils.filter ( methods, new RejectModifierPredicate ( Modifier.FINAL | Modifier.STATIC )  ) ;^[METHOD] getMethods [TYPE] Method[] [PARAMETER] Class type [CLASS] MixinEverythingEmitter   [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  List methods 
[REPLACE]^return  ( Class[] ) list.toArray ( new Class[list.size (  ) ] ) ;^48^^^^^45^49^[REPLACE] return  ( Method[] ) methods.toArray ( new Method[methods.size (  ) ] ) ;^[METHOD] getMethods [TYPE] Method[] [PARAMETER] Class type [CLASS] MixinEverythingEmitter   [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  List methods 
