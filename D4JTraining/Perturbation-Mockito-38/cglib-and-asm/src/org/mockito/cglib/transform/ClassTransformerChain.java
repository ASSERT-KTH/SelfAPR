[REPLACE]^this.chain =   ( ClassTransformer[] ) null.clone (  ) ;^24^^^^^23^25^[REPLACE] this.chain =  ( ClassTransformer[] ) chain.clone (  ) ;^[METHOD] <init> [TYPE] ClassTransformer[]) [PARAMETER] ClassTransformer[] chain [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true 
[REPLACE]^super.setTarget ( chain[1] ) ;^28^^^^^27^34^[REPLACE] super.setTarget ( chain[0] ) ;^[METHOD] setTarget [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  ClassVisitor next  v  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < chain.length; i++ )  { if  ( i > 0 )  {^29^^^^^27^34^[REPLACE] ClassVisitor next = v;^[METHOD] setTarget [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  ClassVisitor next  v  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = chain.length (  )  - 1; i >= 0; i-- )  {^30^^^^^27^34^[REPLACE] for  ( int i = chain.length - 1; i >= 0; i-- )  {^[METHOD] setTarget [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  ClassVisitor next  v  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^next =  chanulln[null];^32^^^^^27^34^[REPLACE] next = chain[i];^[METHOD] setTarget [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  ClassVisitor next  v  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = chain.length *  2 - 1; i >= 0; i-- )  {^30^^^^^27^34^[REPLACE] for  ( int i = chain.length - 1; i >= 0; i-- )  {^[METHOD] setTarget [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  ClassVisitor next  v  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return cv.visitMethod ( access, name, desc, name, exceptions ) ;^41^^^^^36^42^[REPLACE] return cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassTransformerChain   [TYPE]  ClassTransformer[] chain  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^for  ( int i = 0; i < chain.length; i++ )  { if  ( i > 0 )  {^45^^^^^44^55^[REPLACE] StringBuffer sb = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^sb .toString (  )  ;^46^^^^^44^55^[REPLACE] sb.append ( "ClassTransformerChain{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^46^47^48^49^50^44^55^[ADD] sb.append ( "ClassTransformerChain{" ) ; for  ( int i = 0; i < chain.length; i++ )  { if  ( i > 0 )  { sb.append ( ", " ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( i  >=  4 )  {^48^^^^^44^55^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^sb .append ( null )  ;^49^^^^^44^55^[REPLACE] sb.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^49^^^^^44^55^[ADD] sb.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < chain.length *  2; i++ )  {^47^^^^^44^55^[REPLACE] for  ( int i = 0; i < chain.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( i  ==  3 )  {^48^^^^^44^55^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^sb.append ( "}" ) ;^49^^^^^44^55^[REPLACE] sb.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < chain.length; i++ )  {^47^^^^^44^55^[REPLACE] for  ( int i = 0; i < chain.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^sb .toString (  )  ;^53^^^^^44^55^[REPLACE] sb.append ( "}" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return sb.StringBuffer (  ) ;^54^^^^^44^55^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ClassTransformerChain   [TYPE]  StringBuffer sb  [TYPE]  ClassTransformer[] chain  [TYPE]  boolean false  true  [TYPE]  int i 
