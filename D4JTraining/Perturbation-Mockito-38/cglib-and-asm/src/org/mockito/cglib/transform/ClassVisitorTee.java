[REPLACE]^this.cv2 = cv2; ;^24^^^^^23^26^[REPLACE] this.cv1 = cv1;^[METHOD] <init> [TYPE] ClassVisitor) [PARAMETER] ClassVisitor cv1 ClassVisitor cv2 [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^this.cv1 = cv1; ;^25^^^^^23^26^[REPLACE] this.cv2 = cv2;^[METHOD] <init> [TYPE] ClassVisitor) [PARAMETER] ClassVisitor cv1 ClassVisitor cv2 [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^34^^^^^28^36^[REPLACE] cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] int version int access String name String signature String superName String[] interfaces [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[ADD]^^34^35^^^^28^36^[ADD] cv1.visit ( version, access, name, signature, superName, interfaces ) ; cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] int version int access String name String signature String superName String[] interfaces [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^cv2.visit ( version, access, signature, signature, superName, interfaces ) ;^35^^^^^28^36^[REPLACE] cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[METHOD] visit [TYPE] void [PARAMETER] int version int access String name String signature String superName String[] interfaces [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  int access  version 
[REPLACE]^cv2.visitEnd (  ) ;^39^^^^^38^42^[REPLACE] cv1.visitEnd (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv1.visitEnd (  ) ;^40^^^^^38^42^[REPLACE] cv2.visitEnd (  ) ;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv1 = cv2 = true;^41^^^^^38^42^[REPLACE] cv1 = cv2 = null;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv1 = cv2 = this;^41^^^^^38^42^[REPLACE] cv1 = cv2 = null;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[ADD]^^41^^^^^38^42^[ADD] cv1 = cv2 = null;^[METHOD] visitEnd [TYPE] void [PARAMETER] [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^45^^^^^44^47^[REPLACE] cv1.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName int access [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[REMOVE]^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^45^^^^^44^47^[REMOVE] ^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName int access [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^cv2.visitInnerClass ( innerName, outerName, innerName, access ) ;^46^^^^^44^47^[REPLACE] cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName int access [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[ADD]^^46^^^^^44^47^[ADD] cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[METHOD] visitInnerClass [TYPE] void [PARAMETER] String name String outerName String innerName int access [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String innerName  name  outerName  [TYPE]  boolean false  true  [TYPE]  int access 
[REPLACE]^FieldVisitor fv1 = cv1.visitField ( access, signature, desc, signature, value ) ;^54^^^^^49^61^[REPLACE] FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^FieldVisitor fv2 = cv2.visitMethod ( access, name, desc, signature, value ) ;^55^^^^^49^61^[REPLACE] FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[ADD]^^55^^^^^49^61^[ADD] FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^if  ( fv1 != null ) return fv2;^56^57^^^^49^61^[REPLACE] if  ( fv1 == null ) return fv2;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[ADD]^return fv2;return fv1;return new FieldVisitorTee ( fv1, fv2 ) ;^56^57^58^59^60^49^61^[ADD] if  ( fv1 == null ) return fv2; if  ( fv2 == null ) return fv1; return new FieldVisitorTee ( fv1, fv2 ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^return fv1;^57^^^^^49^61^[REPLACE] return fv2;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^if  ( fv1 != null ) return fv1;^58^59^^^^49^61^[REPLACE] if  ( fv2 == null ) return fv1;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^return fv2;^59^^^^^49^61^[REPLACE] return fv1;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^return new MethodVisitorTee ( mv1, mv2 ) ;^60^^^^^49^61^[REPLACE] return new FieldVisitorTee ( fv1, fv2 ) ;^[METHOD] visitField [TYPE] FieldVisitor [PARAMETER] int access String name String desc String signature Object value [CLASS] ClassVisitorTee   [TYPE]  Object value  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  FieldVisitor fv1  fv2  [TYPE]  int access 
[REPLACE]^MethodVisitor mv1 = cv1 .visitEnd (  )  ;^69^^^^^64^76^[REPLACE] MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^MethodVisitor mv2 = cv2 .visitEnd (  )  ;^70^^^^^64^76^[REPLACE] MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^if  ( mv1 != null ) return mv2;^71^72^^^^64^76^[REPLACE] if  ( mv1 == null ) return mv2;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^return mv1;^72^^^^^64^76^[REPLACE] return mv2;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^if  ( mv2 != null ) return mv1;^73^74^^^^64^76^[REPLACE] if  ( mv2 == null ) return mv1;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[ADD]^return mv1;return new MethodVisitorTee ( mv1, mv2 ) ;^73^74^75^76^^64^76^[ADD] if  ( mv2 == null ) return mv1; return new MethodVisitorTee ( mv1, mv2 ) ; }^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^return mv2;^74^^^^^64^76^[REPLACE] return mv1;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^return fv1;^74^^^^^64^76^[REPLACE] return mv1;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^return new FieldVisitorTee ( fv1, fv2 ) ;^75^^^^^64^76^[REPLACE] return new MethodVisitorTee ( mv1, mv2 ) ;^[METHOD] visitMethod [TYPE] MethodVisitor [PARAMETER] int access String name String desc String signature String[] exceptions [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  signature  [TYPE]  String[] exceptions  [TYPE]  boolean false  true  [TYPE]  int access  [TYPE]  MethodVisitor mv1  mv2 
[REPLACE]^cv1.visitAnnotation ( source, debug ) ;^79^^^^^78^81^[REPLACE] cv1.visitSource ( source, debug ) ;^[METHOD] visitSource [TYPE] void [PARAMETER] String source String debug [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String debug  source  [TYPE]  boolean false  true 
[REPLACE]^cv2 .visitOuterClass ( source , source , source )  ;^80^^^^^78^81^[REPLACE] cv2.visitSource ( source, debug ) ;^[METHOD] visitSource [TYPE] void [PARAMETER] String source String debug [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String debug  source  [TYPE]  boolean false  true 
[REPLACE]^cv2.visitOuterClass ( owner, name, desc ) ;^84^^^^^83^86^[REPLACE] cv1.visitOuterClass ( owner, name, desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  owner  [TYPE]  boolean false  true 
[REPLACE]^cv1.visitOuterClass ( owner, name, desc ) ;^85^^^^^83^86^[REPLACE] cv2.visitOuterClass ( owner, name, desc ) ;^[METHOD] visitOuterClass [TYPE] void [PARAMETER] String owner String name String desc [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  name  owner  [TYPE]  boolean false  true 
[REPLACE]^return AnnotationVisitorTee.getInstance ( cv1.visitSource ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^[REPLACE] return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[METHOD] visitAnnotation [TYPE] AnnotationVisitor [PARAMETER] String desc boolean visible [CLASS] ClassVisitorTee   [TYPE]  ClassVisitor cv1  cv2  [TYPE]  String desc  [TYPE]  boolean false  true  visible 
[REPLACE]^cv1 .visitSource ( null , 1 )  ;^94^^^^^93^96^[REPLACE] cv1.visitAttribute ( attrs ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attrs [CLASS] ClassVisitorTee   [TYPE]  Attribute attrs  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[ADD]^^94^^^^^93^96^[ADD] cv1.visitAttribute ( attrs ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attrs [CLASS] ClassVisitorTee   [TYPE]  Attribute attrs  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[REPLACE]^cv2 .visitSource ( false , this )  ;^95^^^^^93^96^[REPLACE] cv2.visitAttribute ( attrs ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attrs [CLASS] ClassVisitorTee   [TYPE]  Attribute attrs  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
[ADD]^^95^^^^^93^96^[ADD] cv2.visitAttribute ( attrs ) ;^[METHOD] visitAttribute [TYPE] void [PARAMETER] Attribute attrs [CLASS] ClassVisitorTee   [TYPE]  Attribute attrs  [TYPE]  ClassVisitor cv1  cv2  [TYPE]  boolean false  true 
