[REPLACE]^return filter.accept ( name.replace ( '/', '.' )  ) ;^24^^^^^23^26^[REPLACE] super ( pass ) ;^[METHOD] <init> [TYPE] ClassTransformer) [PARAMETER] ClassFilter filter ClassTransformer pass [CLASS] ClassFilterTransformer   [TYPE]  ClassFilter filter  [TYPE]  ClassTransformer pass  [TYPE]  boolean false  true 
[REPLACE]^this.filter =  null;^25^^^^^23^26^[REPLACE] this.filter = filter;^[METHOD] <init> [TYPE] ClassTransformer) [PARAMETER] ClassFilter filter ClassTransformer pass [CLASS] ClassFilterTransformer   [TYPE]  ClassFilter filter  [TYPE]  ClassTransformer pass  [TYPE]  boolean false  true 
[REPLACE]^return filter.accept ( superName.replace ( '/', '.' )  ) ;^29^^^^^28^30^[REPLACE] return filter.accept ( name.replace ( '/', '.' )  ) ;^[METHOD] accept [TYPE] boolean [PARAMETER] int version int access String name String signature String superName String[] interfaces [CLASS] ClassFilterTransformer   [TYPE]  String name  signature  superName  [TYPE]  String[] interfaces  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  int access  version 
