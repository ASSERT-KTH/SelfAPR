[REPLACE]^private  java.security.ProtectionDomain DOMAIN ;^31^^^^^^^[REPLACE] private static java.security.ProtectionDomain DOMAIN ;^ [CLASS] AbstractClassLoader 1  
[REPLACE]^super ( classPath ) ;^45^^^^^44^48^[REPLACE] super ( parent ) ;^[METHOD] <init> [TYPE] ClassFilter) [PARAMETER] ClassLoader parent ClassLoader classPath ClassFilter filter [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^this.filter =  null;^46^^^^^44^48^[REPLACE] this.filter = filter;^[METHOD] <init> [TYPE] ClassFilter) [PARAMETER] ClassLoader parent ClassLoader classPath ClassFilter filter [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^this.classPath =  parent;^47^^^^^44^48^[REPLACE] this.classPath = classPath;^[METHOD] <init> [TYPE] ClassFilter) [PARAMETER] ClassLoader parent ClassLoader classPath ClassFilter filter [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^return AbstractClassLoader.class.getClassLoader (  ) ;^39^^^^^38^40^[REPLACE] return AbstractClassLoader.class.getProtectionDomain (  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^byte[] b = w.toByteArray (  ) ;^52^^^^^50^102^[REPLACE] Class loaded = findLoadedClass ( name ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^if (  loaded == null  ) {^54^^^^^50^102^[REPLACE] if (  loaded != null  ) {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^54^55^56^57^^50^102^[ADD] if (  loaded != null  ) { if (  loaded.getClassLoader (  )  == this  ) { return loaded; }^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^if (  loaded.getClassLoader (  )   != parent  ) {^55^^^^^50^102^[REPLACE] if (  loaded.getClassLoader (  )  == this  ) {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^55^56^57^^^50^102^[ADD] if (  loaded.getClassLoader (  )  == this  ) { return loaded; }^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return null;^56^^^^^50^102^[REPLACE] return loaded;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^if (  parent (  )   &&  this  ) {^55^^^^^50^102^[REPLACE] if (  loaded.getClassLoader (  )  == this  ) {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^return loaded;^55^56^57^^^50^102^[ADD] if (  loaded.getClassLoader (  )  == this  ) { return loaded; }^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^if  ( filter.accept ( name )  )  {^60^^^^^50^102^[REPLACE] if  ( !filter.accept ( name )  )  {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^60^61^62^^^50^102^[ADD] if  ( !filter.accept ( name )  )  { return super.loadClass ( name ) ; }^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return super .getFlags (  )  ;^61^^^^^50^102^[REPLACE] return super.loadClass ( name ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return super.findLoadedClass ( name ) ;^61^^^^^50^102^[REPLACE] return super.loadClass ( name ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^Class loaded = findLoadedClass ( name ) ;^63^^^^^50^102^[REPLACE] ClassReader r;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^63^^^^^50^102^[ADD] ClassReader r;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^if  ( is != null )  {^70^^^^^50^102^[REPLACE] if  ( is == null )  {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^throw new CodeGenerationException  (" ")  ; ;^72^^^^^50^102^[REPLACE] throw new ClassNotFoundException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^) ;^64^65^66^67^68^50^102^[ADD] try {  java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return ;^72^^^^^50^102^[REPLACE] throw new ClassNotFoundException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^r = new ClassReader ( is ) ;^75^76^77^^79^50^102^[ADD] try {  r = new ClassReader ( is ) ; } finally {^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^r =  new ClassReader ( null ) ;^77^^^^^50^102^[REPLACE] r = new ClassReader ( is ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^77^^^^^50^102^[ADD] r = new ClassReader ( is ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )   ^  ".class" ) ;^66^67^68^^^50^102^[REPLACE] java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )   >  ".class" ) ;^66^67^68^^^50^102^[REPLACE] java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return ;^85^^^^^50^102^[REPLACE] throw new ClassNotFoundException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^85^^^^^50^102^[ADD] throw new ClassNotFoundException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^ClassWriter w =  new DebuggingClassWriter ( ClassWriter.COMPUTE_MAXS ) ;getGenerator ( r ) .generateClass ( w ) ;byte[] b = w.toByteArray (  ) ;Class c = super.defineClass ( name, b, 0, b.length, DOMAIN ) ;^88^89^90^91^92^50^102^[ADD] try { ClassWriter w =  new DebuggingClassWriter ( ClassWriter.COMPUTE_MAXS ) ; getGenerator ( r ) .generateClass ( w ) ; byte[] b = w.toByteArray (  ) ; Class c = super.defineClass ( name, b, 0, b.length, DOMAIN ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return 0;^94^^^^^50^102^[REPLACE] return c;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^Class c = super.defineClass ( name, b, 0, b.length, DOMAIN ) ;^89^^^^^50^102^[REPLACE] ClassWriter w =  new DebuggingClassWriter ( ClassWriter.COMPUTE_MAXS ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^Class loaded = findLoadedClass ( name ) ;^91^^^^^50^102^[REPLACE] byte[] b = w.toByteArray (  ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^Class c = super.defineClass ( name, b, 0 , b.length, DOMAIN ) ;^92^^^^^50^102^[REPLACE] Class c = super.defineClass ( name, b, 0, b.length, DOMAIN ) ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return ;^96^^^^^50^102^[REPLACE] throw e;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^96^^^^^50^102^[ADD] throw e;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return ;^98^^^^^50^102^[REPLACE] throw e;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^throw new ClassNotFoundException  (" ")  ; ;^100^^^^^50^102^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^100^^^^^50^102^[ADD] throw new CodeGenerationException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[ADD]^^99^100^^^^50^102^[ADD] catch  ( Exception e )  { throw new CodeGenerationException  (" ")  ;^[METHOD] loadClass [TYPE] Class [PARAMETER] String name [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  InputStream is  [TYPE]  Error e  [TYPE]  String name  [TYPE]  IOException e  [TYPE]  ClassWriter w  [TYPE]  Exception e  [TYPE]  byte[] b  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  Class c  loaded 
[REPLACE]^return AbstractClassLoader.class.getProtectionDomain (  ) ;^105^^^^^104^106^[REPLACE] return new ClassReaderGenerator ( r, attributes (  ) , getFlags (  )  ) ;^[METHOD] getGenerator [TYPE] ClassGenerator [PARAMETER] ClassReader r [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  ClassReader r  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^return 4;^109^^^^^108^110^[REPLACE] return 0;^[METHOD] getFlags [TYPE] int [PARAMETER] [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
[REPLACE]^return this;^113^^^^^112^114^[REPLACE] return null;^[METHOD] attributes [TYPE] Attribute[] [PARAMETER] [CLASS] AbstractClassLoader 1   [TYPE]  ProtectionDomain DOMAIN  [TYPE]  ClassLoader classPath  parent  [TYPE]  boolean false  true  [TYPE]  ClassFilter filter 
