[REPLACE]^private static  Source SOURCE = new Source ( ParallelSorter.class.getName (  )  ) ;^255^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ParallelSorter.class.getName (  )  ) ;^ [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  
[REPLACE]^this.a =  arrays;^189^^^^^188^191^[REPLACE] this.a = a;^[METHOD] <init> [TYPE] Comparator) [PARAMETER] Object[] a Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^this.cmp =  null;^190^^^^^188^191^[REPLACE] this.cmp = cmp;^[METHOD] <init> [TYPE] Comparator) [PARAMETER] Object[] a Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public ObjectComparer ( Object[] a )  { this.a =  arrays; }^200^^^^^^^[REPLACE] public ObjectComparer ( Object[] a )  { this.a = a; }^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public IntComparer ( int[] a )  { this.a =  null; }^208^^^^^^^[REPLACE] public IntComparer ( int[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$IntComparer(int[]) [PARAMETER] int[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public LongComparer ( long[] a )  { this.a =  null; }^214^^^^^^^[REPLACE] public LongComparer ( long[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$LongComparer(long[]) [PARAMETER] long[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[ADD]^^214^215^216^^^^^[ADD] public LongComparer ( long[] a )  { this.a = a; } public int compare ( int i, int j )  { long vi = a[i];^[METHOD] <init> [TYPE] ParallelSorter$LongComparer(long[]) [PARAMETER] long[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public FloatComparer ( float[] a )  { this.a =  null; }^224^^^^^^^[REPLACE] public FloatComparer ( float[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$FloatComparer(float[]) [PARAMETER] float[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public DoubleComparer ( double[] a )  { this.a =  null; }^234^^^^^^^[REPLACE] public DoubleComparer ( double[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$DoubleComparer(double[]) [PARAMETER] double[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public ShortComparer ( short[] a )  { this.a =  null; }^244^^^^^^^[REPLACE] public ShortComparer ( short[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$ShortComparer(short[]) [PARAMETER] short[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public ByteComparer ( byte[] a )  { this.a =  null; }^250^^^^^^^[REPLACE] public ByteComparer ( byte[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$ByteComparer(byte[]) [PARAMETER] byte[] a [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^super.quickSort ( lo, hi - 1 ) ;^260^^^^^259^261^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ParallelSorter$Generator() [PARAMETER] [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^float vj = a[j];^67^^^^^66^70^[REPLACE] Generator gen = new Generator (  ) ;^[METHOD] create [TYPE] ParallelSorter [PARAMETER] Object[] arrays [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  Generator gen 
[REPLACE]^gen.setArrays ( a ) ;^68^^^^^66^70^[REPLACE] gen.setArrays ( arrays ) ;^[METHOD] create [TYPE] ParallelSorter [PARAMETER] Object[] arrays [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  Generator gen 
[REMOVE]^return cmp.compare ( a[i], a[j] ) ;^68^^^^^66^70^[REMOVE] ^[METHOD] create [TYPE] ParallelSorter [PARAMETER] Object[] arrays [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  Generator gen 
[REPLACE]^return gen.Generator (  ) ;^69^^^^^66^70^[REPLACE] return gen.create (  ) ;^[METHOD] create [TYPE] ParallelSorter [PARAMETER] Object[] arrays [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  Generator gen 
[REPLACE]^return  (  ( Object[] ) a[0 ] ) .length;^73^^^^^72^74^[REPLACE] return  (  ( Object[] ) a[0] ) .length;^[METHOD] len [TYPE] int [PARAMETER] [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^quickSort ( index, 1, len (  ) , null ) ;^81^^^^^80^82^[REPLACE] quickSort ( index, 0, len (  ) , null ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 0, len (  ) , null ) ;^81^^^^^80^82^[REPLACE] quickSort ( index, 0, len (  ) , null ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[ADD]^^81^^^^^80^82^[ADD] quickSort ( index, 0, len (  ) , null ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^quickSort ( index, lo, hi, true ) ;^91^^^^^90^92^[REPLACE] quickSort ( index, lo, hi, null ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index int lo int hi [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^quickSort ( index, 0L, len (  ) , cmp ) ;^100^^^^^99^101^[REPLACE] quickSort ( index, 0, len (  ) , cmp ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[ADD]^^100^^^^^99^101^[ADD] quickSort ( index, 0, len (  ) , cmp ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 0, len (  ) , cmp ) ;^100^^^^^99^101^[REPLACE] quickSort ( index, 0, len (  ) , cmp ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return cmp.compare ( a[i], a[j] ) ;^111^^^^^110^113^[REPLACE] chooseComparer ( index, cmp ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index int lo int hi Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^super.mergeSort ( lo, hi  <  1 ) ;^112^^^^^110^113^[REPLACE] super.quickSort ( lo, hi - 1 ) ;^[METHOD] quickSort [TYPE] void [PARAMETER] int index int lo int hi Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 4, len (  ) , null ) ;^119^^^^^118^120^[REPLACE] mergeSort ( index, 0, len (  ) , null ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 0, len (  ) , cmp ) ;^119^^^^^118^120^[REPLACE] mergeSort ( index, 0, len (  ) , null ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, lo, hi, this ) ;^129^^^^^128^130^[REPLACE] mergeSort ( index, lo, hi, null ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index int lo int hi [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 3, len (  ) , cmp ) ;^139^^^^^138^140^[REPLACE] mergeSort ( index, 0, len (  ) , cmp ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^mergeSort ( index, 0, len (  ) , null ) ;^139^^^^^138^140^[REPLACE] mergeSort ( index, 0, len (  ) , cmp ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[ADD]^^139^^^^^138^140^[ADD] mergeSort ( index, 0, len (  ) , cmp ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return cmp.compare ( a[i], a[j] ) ;^150^^^^^149^152^[REPLACE] chooseComparer ( index, cmp ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index int lo int hi Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^super.mergeSort ( lo, hi  !=  1 ) ;^151^^^^^149^152^[REPLACE] super.mergeSort ( lo, hi - 1 ) ;^[METHOD] mergeSort [TYPE] void [PARAMETER] int index int lo int hi Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int hi  index  lo  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^float vj = a[j];^155^^^^^154^174^[REPLACE] Object array = a[index];^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^Class type = array.Object (  ) .getComponentType (  ) ;^156^^^^^154^174^[REPLACE] Class type = array.getClass (  ) .getComponentType (  ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^if  ( arrays.length == 0 )  {^157^^^^^154^174^[REPLACE] if  ( type.equals ( Integer.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^159^^^^^154^174^[REPLACE] } else if  ( type.equals ( Long.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new DoubleComparer (  ( double[] ) array ) ;^159^160^161^162^^154^174^[ADD] else if  ( type.equals ( Long.TYPE )  )  { comparer = new LongComparer (  ( long[] ) array ) ; } else if  ( type.equals ( Double.TYPE )  )  { comparer = new DoubleComparer (  ( double[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^161^^^^^154^174^[REPLACE] } else if  ( type.equals ( Double.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^163^^^^^154^174^[REPLACE] } else if  ( type.equals ( Float.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^165^^^^^154^174^[REPLACE] } else if  ( type.equals ( Short.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REMOVE]^if  ( type.equals ( TYPE )  )  {     comparer = new ByteComparer (  (  ( byte[] )   ( array )  )  ) ; }else     if  ( cmp != null )  {         comparer = new ComparatorComparer (  (  ( Object[] )   ( array )  ) , cmp ) ;     }else {         comparer = new ObjectComparer (  (  ( Object[] )   ( array )  )  ) ;     }^165^^^^^154^174^[REMOVE] ^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( type .getClass (  )   )  {^167^^^^^154^174^[REPLACE] } else if  ( type.equals ( Byte.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REMOVE]^if  ( type.equals ( TYPE )  )  {     comparer = new ShortComparer (  (  ( short[] )   ( array )  )  ) ; }else     if  ( type.equals ( TYPE )  )  {         comparer = new ByteComparer (  (  ( byte[] )   ( array )  )  ) ;     }else         if  ( cmp != null )  {             comparer = new ComparatorComparer (  (  ( Object[] )   ( array )  ) , cmp ) ;         }else {             comparer = new ObjectComparer (  (  ( Object[] )   ( array )  )  ) ;         }^167^^^^^154^174^[REMOVE] ^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( cmp == this  )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;comparer = new ObjectComparer (  ( Object[] ) array ) ;^169^170^171^172^173^154^174^[ADD] else if  ( cmp != null )  { comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ; } else { comparer = new ObjectComparer (  ( Object[] ) array ) ; }^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^172^^^^^154^174^[REPLACE] comparer = new ObjectComparer (  ( Object[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^170^^^^^154^174^[REPLACE] comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^168^^^^^154^174^[REPLACE] comparer = new ByteComparer (  ( byte[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^168^^^^^154^174^[ADD] comparer = new ByteComparer (  ( byte[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( cmp == null )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^172^^^^^154^174^[ADD] comparer = new ObjectComparer (  ( Object[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^166^^^^^154^174^[REPLACE] comparer = new ShortComparer (  ( short[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^167^^^^^154^174^[REPLACE] } else if  ( type.equals ( Byte.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^167^168^169^170^^154^174^[ADD] else if  ( type.equals ( Byte.TYPE )  )  { comparer = new ByteComparer (  ( byte[] ) array ) ; } else if  ( cmp != null )  { comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( cmp == null )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  else {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^166^^^^^154^174^[ADD] comparer = new ShortComparer (  ( short[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ; ;^164^^^^^154^174^[REPLACE] comparer = new FloatComparer (  ( float[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( type.equals ( Long.TYPE )  )  {^165^^^^^154^174^[REPLACE] } else if  ( type.equals ( Short.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^170^^^^^154^174^[ADD] comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( cmp == this  )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( cmp == true )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REMOVE]^if  ( type.equals ( TYPE )  )  {     comparer = new ByteComparer (  (  ( byte[] )   ( array )  )  ) ; }else     if  ( cmp != null )  {         comparer = new ComparatorComparer (  (  ( Object[] )   ( array )  ) , cmp ) ;     }else {         comparer = new ObjectComparer (  (  ( Object[] )   ( array )  )  ) ;     }^169^^^^^154^174^[REMOVE] ^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( cmp == false )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^164^^^^^154^174^[ADD] comparer = new FloatComparer (  ( float[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^162^^^^^154^174^[REPLACE] comparer = new DoubleComparer (  ( double[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^^162^^^^^154^174^[ADD] comparer = new DoubleComparer (  ( double[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( type.equals ( Float.TYPE )  )  {^163^^^^^154^174^[REPLACE] } else if  ( type.equals ( Float.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new FloatComparer (  ( float[] ) array ) ;comparer = new ShortComparer (  ( short[] ) array ) ;^163^164^165^166^^154^174^[ADD] else if  ( type.equals ( Float.TYPE )  )  { comparer = new FloatComparer (  ( float[] ) array ) ; } else if  ( type.equals ( Short.TYPE )  )  { comparer = new ShortComparer (  ( short[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ShortComparer (  ( short[] ) array ) ;comparer = new ByteComparer (  ( byte[] ) array ) ;^165^166^167^168^^154^174^[ADD] else if  ( type.equals ( Short.TYPE )  )  { comparer = new ShortComparer (  ( short[] ) array ) ; } else if  ( type.equals ( Byte.TYPE )  )  { comparer = new ByteComparer (  ( byte[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( type.equals ( Long.TYPE )  )  {^167^^^^^154^174^[REPLACE] } else if  ( type.equals ( Byte.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( type.equals ( Byte.TYPE )  )  {^167^^^^^154^174^[REPLACE] } else if  ( type.equals ( Byte.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ObjectComparer (  ( Object[] ) array ) ;^169^170^171^172^173^154^174^[ADD] else if  ( cmp != null )  { comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ; } else { comparer = new ObjectComparer (  ( Object[] ) array ) ; }^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ByteComparer (  ( byte[] ) array ) ;comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^167^168^169^170^^154^174^[ADD] else if  ( type.equals ( Byte.TYPE )  )  { comparer = new ByteComparer (  ( byte[] ) array ) ; } else if  ( cmp != null )  { comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^160^^^^^154^174^[REPLACE] comparer = new LongComparer (  ( long[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( type.equals ( Double.TYPE )  )  {^161^^^^^154^174^[REPLACE] } else if  ( type.equals ( Double.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( type.equals ( Short.TYPE )  )  {^165^^^^^154^174^[REPLACE] } else if  ( type.equals ( Short.TYPE )  )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^comparer = new FloatComparer (  ( float[] ) array ) ; ;^158^^^^^154^174^[REPLACE] comparer = new IntComparer (  ( int[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new DoubleComparer (  ( double[] ) array ) ;comparer = new FloatComparer (  ( float[] ) array ) ;^161^162^163^164^^154^174^[ADD] else if  ( type.equals ( Double.TYPE )  )  { comparer = new DoubleComparer (  ( double[] ) array ) ; } else if  ( type.equals ( Float.TYPE )  )  { comparer = new FloatComparer (  ( float[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^} else if  ( cmp == this )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^}  if  ( cmp == this )  {^169^^^^^154^174^[REPLACE] } else if  ( cmp != null )  {^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REMOVE]^if  ( type.equals ( TYPE )  )  {     comparer = new ByteComparer (  (  ( byte[] )   ( array )  )  ) ; }else     if  ( cmp != null )  {         comparer = new ComparatorComparer (  (  ( Object[] )   ( array )  ) , cmp ) ;     }else {         comparer = new ObjectComparer (  (  ( Object[] )   ( array )  )  ) ;     }^161^^^^^154^174^[REMOVE] ^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REMOVE]^if  ( type.equals ( TYPE )  )  {     comparer = new ByteComparer (  (  ( byte[] )   ( array )  )  ) ; }else     if  ( cmp != null )  {         comparer = new ComparatorComparer (  (  ( Object[] )   ( array )  ) , cmp ) ;     }else {         comparer = new ObjectComparer (  (  ( Object[] )   ( array )  )  ) ;     }^163^^^^^154^174^[REMOVE] ^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[ADD]^}   comparer = new ByteComparer (  ( byte[] ) array ) ;^165^166^167^168^^154^174^[ADD] else if  ( type.equals ( Short.TYPE )  )  { comparer = new ShortComparer (  ( short[] ) array ) ; } else if  ( type.equals ( Byte.TYPE )  )  { comparer = new ByteComparer (  ( byte[] ) array ) ;^[METHOD] chooseComparer [TYPE] void [PARAMETER] int index Comparator cmp [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int index  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object array  [TYPE]  Class type  [TYPE]  Object[] a  arrays 
[REPLACE]^return comparer .compare ( i , j )  ;^177^^^^^176^178^[REPLACE] return comparer.compare ( i, j ) ;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return cmp .compare ( j , j )  ;^194^^^^^193^195^[REPLACE] return cmp.compare ( a[i], a[j] ) ;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return cmp.compare ( a[i], a[j] ) ;^202^^^^^201^203^[REPLACE] return  (  ( Comparable ) a[i] ) .compareTo ( a[j] ) ;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public int compare ( int i, int j )  { return a[i] - a[j]; } }^209^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^long vj = a[j];^216^^^^^215^219^[REPLACE] long vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  long vi  vj  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^long vi = a[i];^217^^^^^215^219^[REPLACE] long vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  long vi  vj  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return  ( vi ;^218^^^^^215^219^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  long vi  vj  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^float vj = a[j];^226^^^^^225^229^[REPLACE] float vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  float vi  vj  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^float vi = a[i];^227^^^^^225^229^[REPLACE] float vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  float vi  vj  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return  ( vi ;^228^^^^^225^229^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  float vi  vj  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^double vj = a[j];^236^^^^^235^239^[REPLACE] double vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  double vi  vj  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[ADD]^^236^237^^^^235^239^[ADD] double vi = a[i]; double vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  double vi  vj  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^double vi = a[i];^237^^^^^235^239^[REPLACE] double vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  double vi  vj  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return   1 ;^238^^^^^235^239^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  double vi  vj  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^public int compare ( int i, int j )  { return a[i] - a[j]; } }^245^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^public int compare ( int i, int j )  { return a[i] -null; }^251^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  int i  j  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return this;^264^^^^^263^265^[REPLACE] return null;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^this.arrays =  null;^268^^^^^267^269^[REPLACE] this.arrays = arrays;^[METHOD] setArrays [TYPE] void [PARAMETER] Object[] arrays [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^272^^^^^271^273^[REPLACE] return  ( ParallelSorter ) super.create ( ClassesKey.create ( arrays )  ) ;^[METHOD] create [TYPE] ParallelSorter [PARAMETER] [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^if  ( arrays.length /  2 == 0 )  {^276^^^^^275^285^[REPLACE] if  ( arrays.length == 0 )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return ;^277^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[ADD]^^277^^^^^275^285^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^if  ( arrays[i].getClass (  ) .isArray (  )  )  {^280^^^^^275^285^[REPLACE] if  ( !arrays[i].getClass (  ) .isArray (  )  )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return ;^281^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^if  ( !arrays[i].getClass (  ) .isArray (  )  )  { throw new IllegalArgumentException  (" ")  ;^281^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^for  ( int i = 0; i < arrays.length + 3; i++ )  {^279^^^^^275^285^[REPLACE] for  ( int i = 0; i < arrays.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^if  ( arrays[i].Object (  ) .isArray (  )  )  {^280^^^^^275^285^[REPLACE] if  ( !arrays[i].getClass (  ) .isArray (  )  )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[ADD]^^281^^^^^275^285^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^for  ( int i = 0 ; i < arrays.length; i++ )  {^279^^^^^275^285^[REPLACE] for  ( int i = 0; i < arrays.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^284^^^^^275^285^[REPLACE] new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  long[] a  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  ClassVisitor v  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  Comparator cmp  [TYPE]  float[] a  [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  Comparer comparer  [TYPE]  Object[] a  arrays 
[REPLACE]^return  (  ( ParallelSorter ) ReflectUtils.len ( type )  ) .newInstance ( arrays ) ;^288^^^^^287^289^[REPLACE] return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Class type  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^return  (  ( ParallelSorter ) instance ) .len ( arrays ) ;^292^^^^^291^293^[REPLACE] return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator   [TYPE]  byte[] a  [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  long[] a  [TYPE]  Comparer comparer  [TYPE]  short[] a  [TYPE]  int[] a  [TYPE]  Object instance  [TYPE]  Object[] a  arrays  [TYPE]  Source SOURCE  [TYPE]  Comparator cmp  [TYPE]  float[] a 
[REPLACE]^this.a =  null;^189^^^^^188^191^[REPLACE] this.a = a;^[METHOD] <init> [TYPE] Comparator) [PARAMETER] Object[] a Comparator cmp [CLASS] ComparatorComparer   [TYPE]  Object[] a  [TYPE]  Comparator cmp  [TYPE]  boolean false  true 
[REPLACE]^this.cmp =  null;^190^^^^^188^191^[REPLACE] this.cmp = cmp;^[METHOD] <init> [TYPE] Comparator) [PARAMETER] Object[] a Comparator cmp [CLASS] ComparatorComparer   [TYPE]  Object[] a  [TYPE]  Comparator cmp  [TYPE]  boolean false  true 
[REPLACE]^public ObjectComparer ( Object[] a )  { this.a =  null; }^200^^^^^^^[REPLACE] public ObjectComparer ( Object[] a )  { this.a = a; }^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] a [CLASS] ObjectComparer   [TYPE]  Object[] a  [TYPE]  boolean false  true 
[ADD]^^200^201^202^^^^^[ADD] public ObjectComparer ( Object[] a )  { this.a = a; } public int compare ( int i, int j )  { return  (  ( Comparable ) a[i] ) .compareTo ( a[j] ) ;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] a [CLASS] ObjectComparer   [TYPE]  Object[] a  [TYPE]  boolean false  true 
[REPLACE]^public IntComparer ( int[] a )  { this.a =  null; }^208^^^^^^^[REPLACE] public IntComparer ( int[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$IntComparer(int[]) [PARAMETER] int[] a [CLASS] IntComparer   [TYPE]  int[] a  [TYPE]  boolean false  true 
[REPLACE]^public int compare ( int i, int j )  { return a[i]  <=  a[j]; }^209^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] IntComparer   [TYPE]  int[] a  [TYPE]  int i  j  [TYPE]  boolean false  true 
[REPLACE]^public LongComparer ( long[] a )  { this.a =  null; }^214^^^^^^^[REPLACE] public LongComparer ( long[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$LongComparer(long[]) [PARAMETER] long[] a [CLASS] LongComparer   [TYPE]  long[] a  [TYPE]  boolean false  true 
[REPLACE]^long vj = a[j];^216^^^^^215^219^[REPLACE] long vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] LongComparer   [TYPE]  boolean false  true  [TYPE]  long[] a  [TYPE]  int i  j  [TYPE]  long vi  vj 
[REPLACE]^long vi = a[i];^217^^^^^215^219^[REPLACE] long vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] LongComparer   [TYPE]  boolean false  true  [TYPE]  long[] a  [TYPE]  int i  j  [TYPE]  long vi  vj 
[REPLACE]^return   0 % 1 ;^218^^^^^215^219^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] LongComparer   [TYPE]  boolean false  true  [TYPE]  long[] a  [TYPE]  int i  j  [TYPE]  long vi  vj 
[REPLACE]^public FloatComparer ( float[] a )  { this.a =  null; }^224^^^^^^^[REPLACE] public FloatComparer ( float[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$FloatComparer(float[]) [PARAMETER] float[] a [CLASS] FloatComparer   [TYPE]  float[] a  [TYPE]  boolean false  true 
[ADD]^^224^225^226^^^^^[ADD] public FloatComparer ( float[] a )  { this.a = a; } public int compare ( int i, int j )  { float vi = a[i];^[METHOD] <init> [TYPE] ParallelSorter$FloatComparer(float[]) [PARAMETER] float[] a [CLASS] FloatComparer   [TYPE]  float[] a  [TYPE]  boolean false  true 
[REPLACE]^float vj = a[j];^226^^^^^225^229^[REPLACE] float vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] FloatComparer   [TYPE]  boolean false  true  [TYPE]  float vi  vj  [TYPE]  int i  j  [TYPE]  float[] a 
[REPLACE]^float vi = a[i];^227^^^^^225^229^[REPLACE] float vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] FloatComparer   [TYPE]  boolean false  true  [TYPE]  float vi  vj  [TYPE]  int i  j  [TYPE]  float[] a 
[REPLACE]^return   0 ;^228^^^^^225^229^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] FloatComparer   [TYPE]  boolean false  true  [TYPE]  float vi  vj  [TYPE]  int i  j  [TYPE]  float[] a 
[REPLACE]^public DoubleComparer ( double[] a )  { this.a =  null; }^234^^^^^^^[REPLACE] public DoubleComparer ( double[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$DoubleComparer(double[]) [PARAMETER] double[] a [CLASS] DoubleComparer   [TYPE]  double[] a  [TYPE]  boolean false  true 
[ADD]^^234^235^236^^^^^[ADD] public DoubleComparer ( double[] a )  { this.a = a; } public int compare ( int i, int j )  { double vi = a[i];^[METHOD] <init> [TYPE] ParallelSorter$DoubleComparer(double[]) [PARAMETER] double[] a [CLASS] DoubleComparer   [TYPE]  double[] a  [TYPE]  boolean false  true 
[REPLACE]^double vj = a[j];^236^^^^^235^239^[REPLACE] double vi = a[i];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] DoubleComparer   [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  int i  j  [TYPE]  double vi  vj 
[REPLACE]^double vi = a[i];^237^^^^^235^239^[REPLACE] double vj = a[j];^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] DoubleComparer   [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  int i  j  [TYPE]  double vi  vj 
[REPLACE]^return  ( vi ;^238^^^^^235^239^[REPLACE] return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] DoubleComparer   [TYPE]  boolean false  true  [TYPE]  double[] a  [TYPE]  int i  j  [TYPE]  double vi  vj 
[REPLACE]^public ShortComparer ( short[] a )  { this.a =  null; }^244^^^^^^^[REPLACE] public ShortComparer ( short[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$ShortComparer(short[]) [PARAMETER] short[] a [CLASS] ShortComparer   [TYPE]  short[] a  [TYPE]  boolean false  true 
[REPLACE]^public int compare ( int i, int j )  { return a[i]  ==  a[j]; }^245^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ShortComparer   [TYPE]  short[] a  [TYPE]  int i  j  [TYPE]  boolean false  true 
[REPLACE]^public ByteComparer ( byte[] a )  { this.a =  null; }^250^^^^^^^[REPLACE] public ByteComparer ( byte[] a )  { this.a = a; }^[METHOD] <init> [TYPE] ParallelSorter$ByteComparer(byte[]) [PARAMETER] byte[] a [CLASS] ByteComparer   [TYPE]  byte[] a  [TYPE]  boolean false  true 
[REPLACE]^public int compare ( int i, int j )  { return a[i] - a[j]; } }^251^^^^^^^[REPLACE] public int compare ( int i, int j )  { return a[i] - a[j]; }^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] ByteComparer   [TYPE]  byte[] a  [TYPE]  int i  j  [TYPE]  boolean false  true 
[REPLACE]^private static final Source SOURCE ;^255^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ParallelSorter.class.getName (  )  ) ;^[METHOD] compare [TYPE] int [PARAMETER] int i int j [CLASS] Generator   [TYPE]  byte[] a  [TYPE]  int i  j  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException  (" ")  ;^260^^^^^259^261^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ParallelSorter$Generator() [PARAMETER] [CLASS] Generator   [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  boolean false  true 
[REPLACE]^return false;^264^^^^^263^265^[REPLACE] return null;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] Generator   [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  boolean false  true 
[REPLACE]^this.arrays =  null;^268^^^^^267^269^[REPLACE] this.arrays = arrays;^[METHOD] setArrays [TYPE] void [PARAMETER] Object[] arrays [CLASS] Generator   [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  boolean false  true 
[ADD]^^268^^^^^267^269^[ADD] this.arrays = arrays;^[METHOD] setArrays [TYPE] void [PARAMETER] Object[] arrays [CLASS] Generator   [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  boolean false  true 
[REPLACE]^if  ( arrays.length (  )  == 0  )  {^276^^^^^275^285^[REPLACE] if  ( arrays.length == 0 )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[ADD]^^276^277^278^^^275^285^[ADD] if  ( arrays.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^return ;^277^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[ADD]^^277^^^^^275^285^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^if  ( arrays[i].getClass (  ) .isArray (  )  )  {^280^^^^^275^285^[REPLACE] if  ( !arrays[i].getClass (  ) .isArray (  )  )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^return ;^281^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^if  ( !arrays[i].getClass (  ) .isArray (  )  )  { throw new IllegalArgumentException  (" ")  ;^281^^^^^275^285^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < arrays.length %  0 .5 ; i++ )  {^279^^^^^275^285^[REPLACE] for  ( int i = 0; i < arrays.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < arrays.length; i++ )  {^279^^^^^275^285^[REPLACE] for  ( int i = 0; i < arrays.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^284^^^^^275^285^[REPLACE] new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays  [TYPE]  int i 
[REPLACE]^return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^288^^^^^287^289^[REPLACE] return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] Generator   [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays 
[REPLACE]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^292^^^^^291^293^[REPLACE] return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] arrays 
