[REPLACE]^private static final Source SOURCE ;^30^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( BeanGenerator.class.getName (  )  ) ;^ [CLASS] BeanGenerator  
[REPLACE]^private static final BeanGeneratorKey KEY_FACTORY ;^31^32^^^^31^32^[REPLACE] private static final BeanGeneratorKey KEY_FACTORY = ( BeanGeneratorKey ) KeyFactory.create ( BeanGeneratorKey.class ) ;^ [CLASS] BeanGenerator  
[REPLACE]^private Map props  = null ;^39^^^^^^^[REPLACE] private Map props = new HashMap (  ) ;^ [CLASS] BeanGenerator  
[ADD]^^94^95^^^^93^110^[ADD] int size = props.size (  ) ; String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[ADD]^^95^96^^^^93^110^[ADD] String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ; Type[] types = new Type[size];^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^int i = 0  ;^96^^^^^93^110^[REPLACE] Type[] types = new Type[size];^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[ADD]^^98^^^^^93^110^[ADD] types[i] =  ( Type ) props.get ( names[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^97^^^^^93^110^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^int i = 0  ;^100^^^^^93^110^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) ,type ! =  Constants.TYPE_OBJECT,^101^102^103^104^^93^110^[REPLACE] ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^EmitUtils .add_properties ( ce , names , types )  ;^107^^^^^93^110^[REPLACE] EmitUtils.null_constructor ( ce ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^super ( SOURCE )  ;^108^^^^^93^110^[REPLACE] EmitUtils.add_properties ( ce, names, types ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
[REPLACE]^super ( SOURCE )  ;^109^^^^^93^110^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] BeanGenerator   [TYPE]  boolean classOnly  false  true  [TYPE]  Type[] types  [TYPE]  ClassEmitter ce  [TYPE]  BeanGeneratorKey KEY_FACTORY  [TYPE]  Class superclass  type  [TYPE]  ClassVisitor v  [TYPE]  String[] names  [TYPE]  Map props  [TYPE]  Source SOURCE  [TYPE]  int i  size 
