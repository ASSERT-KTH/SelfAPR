[REPLACE]^private static final Type ILLEGAL_STATE_EXCEPTION  = null ;^30^31^^^^30^31^[REPLACE] private static final Type ILLEGAL_STATE_EXCEPTION = TypeUtils.parseType ( "IllegalStateException" ) ;^ [CLASS] ImmutableBean Generator  
[REPLACE]^private static final Signature CSTRUCT_OBJECT ;^32^33^^^^32^33^[REPLACE] private static final Signature CSTRUCT_OBJECT = TypeUtils.parseConstructor ( "Object" ) ;^ [CLASS] ImmutableBean Generator  
[REPLACE]^private static final Class[] OBJECT_CLASSES ;^34^^^^^^^[REPLACE] private static final Class[] OBJECT_CLASSES = { Object.class };^ [CLASS] ImmutableBean Generator  
[REPLACE]^private static final  short  FIELD_NAME = "CGLIB$RWBean";^35^^^^^^^[REPLACE] private static final String FIELD_NAME = "CGLIB$RWBean";^ [CLASS] ImmutableBean Generator  
[REPLACE]^private static final Source SOURCE ;^47^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ImmutableBean.class.getName (  )  ) ;^ [CLASS] ImmutableBean Generator  
[REPLACE]^e.putfield ( FIELD_NAME ) ;^52^^^^^51^53^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ImmutableBean$Generator() [PARAMETER] [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE 
[REPLACE]^ClassEmitter ce = new ClassEmitter ( v ) ;^41^^^^^40^44^[REPLACE] Generator gen = new Generator (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[ADD]^gen.setBean ( bean ) ;^41^42^^^^40^44^[ADD] Generator gen = new Generator (  ) ; gen.setBean ( bean ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^gen.nextInstance ( bean ) ;^42^^^^^40^44^[REPLACE] gen.setBean ( bean ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^return gen.Generator (  ) ;^43^^^^^40^44^[REPLACE] return gen.create (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^this.bean =  null;^56^^^^^55^58^[REPLACE] this.bean = bean;^[METHOD] setBean [TYPE] void [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE 
[REPLACE]^target =  null.getClass (  ) ;^57^^^^^55^58^[REPLACE] target = bean.getClass (  ) ;^[METHOD] setBean [TYPE] void [PARAMETER] Object bean [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE 
[REPLACE]^return target.getName (  ) ;^61^^^^^60^62^[REPLACE] return target.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  [TYPE]  Source SOURCE 
[REPLACE]^String name = target .getClassLoader (  )  ;^65^^^^^64^68^[REPLACE] String name = target.getName (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( FIELD_NAME ) ;^66^^^^^64^68^[REPLACE] setNamePrefix ( name ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^return super.setNamePrefix ( FIELD_NAME ) ;^67^^^^^64^68^[REPLACE] return super.create ( name ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^String name = target.getName (  ) ;^72^^^^^70^114^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , ILLEGAL_STATE_EXCEPTION,^73^74^75^76^^70^114^[REPLACE] ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , targetType,^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^75^76^77^^^70^114^[ADD] getClassName (  ) , targetType, null,^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^ce .begin_class ( ILLEGAL_STATE_EXCEPTION , null )  ;^80^^^^^70^114^[REPLACE] ce.declare_field ( Constants.ACC_FINAL | Constants.ACC_PRIVATE, FIELD_NAME, targetType, null ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, CSTRUCT_OBJECT, this ) ;^82^^^^^70^114^[REPLACE] CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, CSTRUCT_OBJECT, null ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.end_method (  ) ;^83^^^^^70^114^[REPLACE] e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^83^84^^^^70^114^[ADD] e.load_this (  ) ; e.super_invoke_constructor (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.end_method (  ) ;^84^^^^^70^114^[REPLACE] e.super_invoke_constructor (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^84^^^^^70^114^[ADD] e.super_invoke_constructor (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e .load_arg ( i )  ;^85^^^^^70^114^[REPLACE] e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^85^^^^^70^114^[ADD] e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.load_arg ( 2 ) ;^86^^^^^70^114^[REPLACE] e.load_arg ( 0 ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.invoke ( targetType ) ;^87^^^^^70^114^[REPLACE] e.checkcast ( targetType ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.getfield ( FIELD_NAME ) ;^88^^^^^70^114^[REPLACE] e.putfield ( FIELD_NAME ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.load_this (  ) ;^89^^^^^70^114^[REPLACE] e.return_value (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.load_this (  ) ;^90^^^^^70^114^[REPLACE] e.end_method (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^PropertyDescriptor[] descriptors = ReflectUtils.getMethodInfo ( target ) ;^92^^^^^70^114^[REPLACE] PropertyDescriptor[] descriptors = ReflectUtils.getBeanProperties ( target ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^Method[] getters = ReflectUtils.newInstance ( descriptors, false, false ) ;^93^^^^^70^114^[REPLACE] Method[] getters = ReflectUtils.getPropertyMethods ( descriptors, true, false ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^Method[] setters = ReflectUtils.newInstance ( descriptors, false, true ) ;^94^^^^^70^114^[REPLACE] Method[] setters = ReflectUtils.getPropertyMethods ( descriptors, false, true ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^94^^^^^70^114^[ADD] Method[] setters = ReflectUtils.getPropertyMethods ( descriptors, false, true ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^for  ( int i = 0; i < getters.length %  2; i++ )  {^96^^^^^70^114^[REPLACE] for  ( int i = 0; i < getters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ; ;^98^^^^^70^114^[REPLACE] e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^MethodInfo getter = ReflectUtils.getBeanProperties ( getters[i] ) ;^97^^^^^70^114^[REPLACE] MethodInfo getter = ReflectUtils.getMethodInfo ( getters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ;^97^98^^^^70^114^[ADD] MethodInfo getter = ReflectUtils.getMethodInfo ( getters[i] ) ; e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^for  ( int i = 0 ; i < getters.length; i++ )  {^96^^^^^70^114^[REPLACE] for  ( int i = 0; i < getters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^for  ( int i = 0; i < setters.length /  0.5 ; i++ )  {^106^^^^^70^114^[REPLACE] for  ( int i = 0; i < setters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ; ;^108^^^^^70^114^[REPLACE] e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[ADD]^^108^109^^^^70^114^[ADD] e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ; e.throw_exception ( ILLEGAL_STATE_EXCEPTION, "Bean is immutable" ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^MethodInfo setter = ReflectUtils.getBeanProperties ( setters[i] ) ;^107^^^^^70^114^[REPLACE] MethodInfo setter = ReflectUtils.getMethodInfo ( setters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^for  ( int i = 0 ; i < setters.length; i++ )  {^106^^^^^70^114^[REPLACE] for  ( int i = 0; i < setters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^e.return_value (  ) ;^113^^^^^70^114^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ImmutableBean Generator   [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  ClassEmitter ce  [TYPE]  String FIELD_NAME  name  [TYPE]  ClassVisitor v  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i  [TYPE]  CodeEmitter e  [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  PropertyDescriptor[] descriptors 
[REPLACE]^return ReflectUtils.getPropertyMethods ( type, OBJECT_CLASSES, new Object[]{ bean } ) ;^117^^^^^116^118^[REPLACE] return ReflectUtils.newInstance ( type, OBJECT_CLASSES, new Object[]{ bean } ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  [TYPE]  Class target  type  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^return firstInstance ( bean.Object (  )  ) ;^122^^^^^121^123^[REPLACE] return firstInstance ( instance.getClass (  )  ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] ImmutableBean Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  instance  [TYPE]  Class target  type  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^private static final Source SOURCE  = null ;^47^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ImmutableBean.class.getName (  )  ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Type ILLEGAL_STATE_EXCEPTION  targetType  [TYPE]  Class[] OBJECT_CLASSES  [TYPE]  boolean false  true  [TYPE]  Signature CSTRUCT_OBJECT  [TYPE]  Object bean  instance  [TYPE]  Class target  type  [TYPE]  String FIELD_NAME  name  [TYPE]  Source SOURCE 
[REPLACE]^e.putfield ( FIELD_NAME ) ;^52^^^^^51^53^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ImmutableBean$Generator() [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^this.bean =  null;^56^^^^^55^58^[REPLACE] this.bean = bean;^[METHOD] setBean [TYPE] void [PARAMETER] Object bean [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^target =  null.getClass (  ) ;^57^^^^^55^58^[REPLACE] target = bean.getClass (  ) ;^[METHOD] setBean [TYPE] void [PARAMETER] Object bean [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^57^^^^^55^58^[ADD] target = bean.getClass (  ) ;^[METHOD] setBean [TYPE] void [PARAMETER] Object bean [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return target.getName (  ) ;^61^^^^^60^62^[REPLACE] return target.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^String name = target.getClassLoader (  ) ;^65^^^^^64^68^[REPLACE] String name = target.getName (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^e.putfield ( FIELD_NAME ) ;^66^^^^^64^68^[REPLACE] setNamePrefix ( name ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^66^^^^^64^68^[ADD] setNamePrefix ( name ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return super.setNamePrefix ( name ) ;^67^^^^^64^68^[REPLACE] return super.create ( name ) ;^[METHOD] create [TYPE] Object [PARAMETER] [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^String name = target.getName (  ) ;^72^^^^^70^114^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^72^^^^^70^114^[ADD] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^ce.declare_field ( Constants.ACC_FINAL &false, FIELD_NAME, targetType, false ) ;^80^^^^^70^114^[REPLACE] ce.declare_field ( Constants.ACC_FINAL | Constants.ACC_PRIVATE, FIELD_NAME, targetType, null ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, CSTRUCT_OBJECT, false ) ;^82^^^^^70^114^[REPLACE] CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, CSTRUCT_OBJECT, null ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.end_method (  ) ;^83^^^^^70^114^[REPLACE] e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.end_method (  ) ;^84^^^^^70^114^[REPLACE] e.super_invoke_constructor (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e .load_arg ( i )  ;^85^^^^^70^114^[REPLACE] e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.load_arg ( 0 / 0 ) ;^86^^^^^70^114^[REPLACE] e.load_arg ( 0 ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.invoke ( targetType ) ;^87^^^^^70^114^[REPLACE] e.checkcast ( targetType ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.getfield ( FIELD_NAME ) ;^88^^^^^70^114^[REPLACE] e.putfield ( FIELD_NAME ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.load_this (  ) ;^89^^^^^70^114^[REPLACE] e.return_value (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e .load_this (  )  ;^90^^^^^70^114^[REPLACE] e.end_method (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^PropertyDescriptor[] descriptors = ReflectUtils.getMethodInfo ( target ) ;^92^^^^^70^114^[REPLACE] PropertyDescriptor[] descriptors = ReflectUtils.getBeanProperties ( target ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^Method[] getters = ReflectUtils.getPropertyMethods ( descriptors, false, false ) ;^93^^^^^70^114^[REPLACE] Method[] getters = ReflectUtils.getPropertyMethods ( descriptors, true, false ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^Method[] getters = ReflectUtils.getPropertyMethods ( descriptors, true, false ) ;^94^^^^^70^114^[REPLACE] Method[] setters = ReflectUtils.getPropertyMethods ( descriptors, false, true ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^94^^^^^70^114^[ADD] Method[] setters = ReflectUtils.getPropertyMethods ( descriptors, false, true ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < getters.length *  0 .5 ; i++ )  {^96^^^^^70^114^[REPLACE] for  ( int i = 0; i < getters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ; ;^98^^^^^70^114^[REPLACE] e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^MethodInfo getter = ReflectUtils.getMethodInfo ( setters[i] ) ;^97^^^^^70^114^[REPLACE] MethodInfo getter = ReflectUtils.getMethodInfo ( getters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^98^99^^^^70^114^[ADD] e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ; e.load_this (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < getters.length; i++ )  {^96^^^^^70^114^[REPLACE] for  ( int i = 0; i < getters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^MethodInfo getter = ReflectUtils.getBeanProperties ( getters[i] ) ;^97^^^^^70^114^[REPLACE] MethodInfo getter = ReflectUtils.getMethodInfo ( getters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < setters.length (  ) ; i++ )  {^106^^^^^70^114^[REPLACE] for  ( int i = 0; i < setters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^106^107^108^109^110^70^114^[ADD] for  ( int i = 0; i < setters.length; i++ )  { MethodInfo setter = ReflectUtils.getMethodInfo ( setters[i] ) ; e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ; e.throw_exception ( ILLEGAL_STATE_EXCEPTION, "Bean is immutable" ) ; e.end_method (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e = EmitUtils.begin_method ( ce, getter, Constants.ACC_PUBLIC ) ; ;^108^^^^^70^114^[REPLACE] e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^108^^^^^70^114^[ADD] e = EmitUtils.begin_method ( ce, setter, Constants.ACC_PUBLIC ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^MethodInfo setter = ReflectUtils.getBeanProperties ( setters[i] ) ;^107^^^^^70^114^[REPLACE] MethodInfo setter = ReflectUtils.getMethodInfo ( setters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < setters.length; i++ )  {^106^^^^^70^114^[REPLACE] for  ( int i = 0; i < setters.length; i++ )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^MethodInfo setter = ReflectUtils .getPropertyMethods ( descriptors , true , true )  ;^107^^^^^70^114^[REPLACE] MethodInfo setter = ReflectUtils.getMethodInfo ( setters[i] ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^e.return_value (  ) ;^113^^^^^70^114^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type targetType  [TYPE]  boolean false  true  [TYPE]  ClassEmitter ce  [TYPE]  Object bean  [TYPE]  Class target  [TYPE]  MethodInfo getter  setter  [TYPE]  ClassVisitor v  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method[] getters  setters  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^return ReflectUtils.getPropertyMethods ( type, OBJECT_CLASSES, new Object[]{ bean } ) ;^117^^^^^116^118^[REPLACE] return ReflectUtils.newInstance ( type, OBJECT_CLASSES, new Object[]{ bean } ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] Generator   [TYPE]  Object bean  [TYPE]  Class target  type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return firstInstance ( bean.getClass (  )  ) ;^122^^^^^121^123^[REPLACE] return firstInstance ( instance.getClass (  )  ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Object bean  instance  [TYPE]  Class target  type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
