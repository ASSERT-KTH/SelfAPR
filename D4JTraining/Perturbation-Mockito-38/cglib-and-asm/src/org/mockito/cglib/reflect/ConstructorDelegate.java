[REPLACE]^private  final ConstructorKey KEY_FACTORY = ( ConstructorKey ) KeyFactory.create ( ConstructorKey.class, KeyFactory.CLASS_BY_NAME ) ;^29^30^^^^29^30^[REPLACE] private static final ConstructorKey KEY_FACTORY = ( ConstructorKey ) KeyFactory.create ( ConstructorKey.class, KeyFactory.CLASS_BY_NAME ) ;^ [CLASS] ConstructorDelegate Generator  
[REPLACE]^private static  Source SOURCE = new Source ( ConstructorDelegate.class.getName (  )  ) ;^47^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ConstructorDelegate.class.getName (  )  ) ;^ [CLASS] ConstructorDelegate Generator  
[REPLACE]^private static final Type CONSTRUCTOR_DELEGATE  = null ;^48^49^^^^48^49^[REPLACE] private static final Type CONSTRUCTOR_DELEGATE = TypeUtils.parseType ( "org.mockito.cglib.reflect.ConstructorDelegate" ) ;^ [CLASS] ConstructorDelegate Generator  
[REPLACE]^e.dup (  ) ;^55^^^^^54^56^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ConstructorDelegate$Generator() [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^ClassEmitter ce = new ClassEmitter ( v ) ;^40^^^^^39^44^[REPLACE] Generator gen = new Generator (  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[ADD]^^40^41^^^^39^44^[ADD] Generator gen = new Generator (  ) ; gen.setTargetClass ( targetClass ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^gen.setInterface ( iface ) ;^41^^^^^39^44^[REPLACE] gen.setTargetClass ( targetClass ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^gen.setTargetClass ( iface ) ;^42^^^^^39^44^[REPLACE] gen.setInterface ( iface ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[ADD]^return gen.create (  ) ;^42^43^44^^^39^44^[ADD] gen.setInterface ( iface ) ; return gen.create (  ) ; }^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^return gen.Generator (  ) ;^43^^^^^39^44^[REPLACE] return gen.create (  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] Class targetClass Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^this.iface =  targetClass;^59^^^^^58^60^[REPLACE] this.iface = iface;^[METHOD] setInterface [TYPE] void [PARAMETER] Class iface [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^this.targetClass =  iface;^63^^^^^62^64^[REPLACE] this.targetClass = targetClass;^[METHOD] setTargetClass [TYPE] void [PARAMETER] Class targetClass [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( targetClass .getClassLoader (  )   ) ;^67^^^^^66^70^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( targetClass.getClassLoader (  )  ) ;^67^^^^^66^70^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getClassLoader (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^[REPLACE] Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^return  ( ConstructorDelegate ) super.getClassName ( key ) ;^69^^^^^66^70^[REPLACE] return  ( ConstructorDelegate ) super.create ( key ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^return targetClass.getName (  ) ;^73^^^^^72^74^[REPLACE] return targetClass.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( targetClass .getClassLoader (  )   ) ;^77^^^^^76^109^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^setNamePrefix ( targetClass.getClassLoader (  )  ) ;^77^^^^^76^109^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^final Method newInstance = ReflectUtils.newInstance ( iface ) ;^79^^^^^76^109^[REPLACE] final Method newInstance = ReflectUtils.findNewInstance ( iface ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^if  ( !newInstance.getParameterTypes (  ) .isAssignableFrom ( targetClass )  )  {^80^^^^^76^109^[REPLACE] if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( targetClass )  )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^81^^^^^76^109^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^81^^^^^76^109^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^83^^^^^76^109^[REPLACE] final Constructor constructor;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^83^^^^^76^109^[ADD] final Constructor constructor;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^84^85^86^87^88^76^109^[ADD] try { constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ; } catch  ( NoSuchMethodException e )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^constructor =  targetClass.getDeclaredConstructor ( null.getParameterTypes (  )  ) ;^85^^^^^76^109^[REPLACE] constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^85^^^^^76^109^[ADD] constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^87^^^^^76^109^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Generator gen = new Generator (  ) ;^90^^^^^76^109^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^93^94^95^^^76^109^[ADD] getClassName (  ) , CONSTRUCTOR_DELEGATE, new Type[]{ Type.getType ( iface )  },^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^new Type[]{ Type.create ( iface )  }, Constants.SOURCE_FILE ) ;^95^96^^^^76^109^[REPLACE] new Type[]{ Type.getType ( iface )  }, Constants.SOURCE_FILE ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Type declaring = Type.create ( constructor.getDeclaringClass (  )  ) ;^97^^^^^76^109^[REPLACE] Type declaring = Type.getType ( constructor.getDeclaringClass (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^ce   ;^98^^^^^76^109^[REPLACE] EmitUtils.null_constructor ( ce ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^CodeEmitter e = ce .begin_class ( CONSTRUCTOR_DELEGATE , null )   ) ;^99^100^101^^^76^109^[REPLACE] CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^99^100^101^^^76^109^[ADD] CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e .invoke_constructor ( CONSTRUCTOR_DELEGATE )  ;^102^^^^^76^109^[REPLACE] e.new_instance ( declaring ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.load_args (  ) ;^103^^^^^76^109^[REPLACE] e.dup (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e .invoke_constructor ( CONSTRUCTOR_DELEGATE )  ;^104^^^^^76^109^[REPLACE] e.load_args (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^104^105^^^^76^109^[ADD] e.load_args (  ) ; e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.invoke_constructor ( CONSTRUCTOR_DELEGATE, ReflectUtils.getSignature ( constructor )  ) ;^105^^^^^76^109^[REPLACE] e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) ,^105^^^^^76^109^[REPLACE] e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REMOVE]^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) ,^105^^^^^76^109^[REMOVE] ^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e .new_instance ( CONSTRUCTOR_DELEGATE )  ;^106^^^^^76^109^[REPLACE] e.return_value (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.dup (  ) ;^107^^^^^76^109^[REPLACE] e.end_method (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^ce.begin_method (  ) ;^108^^^^^76^109^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] ConstructorDelegate Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ReflectUtils.findNewInstance ( type ) ;^112^^^^^111^113^[REPLACE] return ReflectUtils.newInstance ( type ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^return ReflectUtils.newInstance ( type ) ;^116^^^^^115^117^[REPLACE] return instance;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] ConstructorDelegate Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^private static final Source SOURCE  = null ;^47^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( ConstructorDelegate.class.getName (  )  ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^private  final Type CONSTRUCTOR_DELEGATE = TypeUtils.parseType ( "org.mockito.cglib.reflect.ConstructorDelegate" ) ;^48^49^^^^48^49^[REPLACE] private static final Type CONSTRUCTOR_DELEGATE = TypeUtils.parseType ( "org.mockito.cglib.reflect.ConstructorDelegate" ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  ConstructorKey KEY_FACTORY  [TYPE]  Source SOURCE 
[REPLACE]^e.dup (  ) ;^55^^^^^54^56^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] ConstructorDelegate$Generator() [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^this.iface =  targetClass;^59^^^^^58^60^[REPLACE] this.iface = iface;^[METHOD] setInterface [TYPE] void [PARAMETER] Class iface [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^this.targetClass =  null;^63^^^^^62^64^[REPLACE] this.targetClass = targetClass;^[METHOD] setTargetClass [TYPE] void [PARAMETER] Class targetClass [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^63^^^^^62^64^[ADD] this.targetClass = targetClass;^[METHOD] setTargetClass [TYPE] void [PARAMETER] Class targetClass [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^67^^^^^66^70^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( targetClass .getClassLoader (  )   ) ;^67^^^^^66^70^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getClassLoader (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^[REPLACE] Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^68^69^70^^^66^70^[ADD] Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ; return  ( ConstructorDelegate ) super.create ( key ) ; }^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return  ( ConstructorDelegate ) super.getClassName ( key ) ;^69^^^^^66^70^[REPLACE] return  ( ConstructorDelegate ) super.create ( key ) ;^[METHOD] create [TYPE] ConstructorDelegate [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return targetClass.getName (  ) ;^73^^^^^72^74^[REPLACE] return targetClass.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  [TYPE]  Class iface  targetClass  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^setNamePrefix ( targetClass.getClassLoader (  )  ) ;^77^^^^^76^109^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^77^^^^^76^109^[ADD] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^setNamePrefix ( targetClass .getClassLoader (  )   ) ;^77^^^^^76^109^[REPLACE] setNamePrefix ( targetClass.getName (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^final Method newInstance = ReflectUtils.newInstance ( iface ) ;^79^^^^^76^109^[REPLACE] final Method newInstance = ReflectUtils.findNewInstance ( iface ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^if  ( !newInstance.getReturnType (  ) .getDeclaredConstructor ( targetClass )  )  {^80^^^^^76^109^[REPLACE] if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( targetClass )  )  {^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^81^^^^^76^109^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^81^^^^^76^109^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^83^^^^^76^109^[REPLACE] final Constructor constructor;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^83^^^^^76^109^[ADD] final Constructor constructor;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^84^85^86^87^88^76^109^[ADD] try { constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ; } catch  ( NoSuchMethodException e )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^constructor =  targetClass.getDeclaredConstructor ( null.getParameterTypes (  )  ) ;^85^^^^^76^109^[REPLACE] constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^85^^^^^76^109^[ADD] constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^87^^^^^76^109^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^90^^^^^76^109^[REPLACE] ClassEmitter ce = new ClassEmitter ( v ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^93^94^95^^^76^109^[ADD] getClassName (  ) , CONSTRUCTOR_DELEGATE, new Type[]{ Type.getType ( iface )  },^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^new Type[]{ Type.create ( iface )  }, Constants.SOURCE_FILE ) ;^95^96^^^^76^109^[REPLACE] new Type[]{ Type.getType ( iface )  }, Constants.SOURCE_FILE ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^Type declaring = Type.create ( constructor.getDeclaringClass (  )  ) ;^97^^^^^76^109^[REPLACE] Type declaring = Type.getType ( constructor.getDeclaringClass (  )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^ce   ;^98^^^^^76^109^[REPLACE] EmitUtils.null_constructor ( ce ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^CodeEmitter e = ce.begin_class ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^99^100^101^^^76^109^[REPLACE] CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.invoke_constructor ( declaring ) ;^102^^^^^76^109^[REPLACE] e.new_instance ( declaring ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.load_args (  ) ;^103^^^^^76^109^[REPLACE] e.dup (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e .invoke_constructor ( CONSTRUCTOR_DELEGATE )  ;^104^^^^^76^109^[REPLACE] e.load_args (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.invoke_constructor ( declaring, ReflectUtils .getExceptionTypes ( newInstance )   ) ;^105^^^^^76^109^[REPLACE] e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.load_args (  ) ;^106^^^^^76^109^[REPLACE] e.return_value (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^106^^^^^76^109^[ADD] e.return_value (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^e.dup (  ) ;^107^^^^^76^109^[REPLACE] e.end_method (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^ce .begin_class ( CONSTRUCTOR_DELEGATE , this )  ;^108^^^^^76^109^[REPLACE] ce.end_class (  ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  CodeEmitter e  [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  ClassEmitter ce  [TYPE]  Class iface  targetClass  [TYPE]  ClassVisitor v  [TYPE]  Method newInstance  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ReflectUtils.findNewInstance ( targetClass ) ;^112^^^^^111^113^[REPLACE] return ReflectUtils.newInstance ( type ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return ReflectUtils.newInstance ( type ) ;^116^^^^^115^117^[REPLACE] return instance;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Type CONSTRUCTOR_DELEGATE  declaring  [TYPE]  Class iface  targetClass  type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
