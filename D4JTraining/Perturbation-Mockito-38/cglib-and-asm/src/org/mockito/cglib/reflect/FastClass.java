[REPLACE]^private static  Source SOURCE = new Source ( FastClass.class.getName (  )  ) ;^52^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( FastClass.class.getName (  )  ) ;^ [CLASS] FastClass Generator  
[REPLACE]^return ;^31^^^^^30^32^[REPLACE] throw new Error ( "Using the FastClass empty constructor--please report to the cglib-devel mailing list" ) ;^[METHOD] <init> [TYPE] FastClass() [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^this.type =  null;^35^^^^^34^36^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class type [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[ADD]^^35^^^^^34^36^[ADD] this.type = type;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class type [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^sb.append ( ' ) ' ) ;^56^^^^^55^57^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] FastClass$Generator() [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^40^^^^^38^42^[REPLACE] return create ( type.getClassLoader (  ) ,type ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] Class type [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^StringBuffer sb = new StringBuffer (  ) ;^44^^^^^43^48^[REPLACE] Generator gen = new Generator (  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] ClassLoader loader Class type [CLASS] FastClass Generator   [TYPE]  ClassLoader loader  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^gen.firstInstance ( type ) ;^45^^^^^43^48^[REPLACE] gen.setType ( type ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] ClassLoader loader Class type [CLASS] FastClass Generator   [TYPE]  ClassLoader loader  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^gen .getClassName (  )  ;^46^^^^^43^48^[REPLACE] gen.setClassLoader ( loader ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] ClassLoader loader Class type [CLASS] FastClass Generator   [TYPE]  ClassLoader loader  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REMOVE]^sb.append ( ' ) ' ) ;^46^^^^^43^48^[REMOVE] ^[METHOD] create [TYPE] FastClass [PARAMETER] ClassLoader loader Class type [CLASS] FastClass Generator   [TYPE]  ClassLoader loader  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^return gen .create ( loader , type )  ;^47^^^^^43^48^[REPLACE] return gen.create (  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] ClassLoader loader Class type [CLASS] FastClass Generator   [TYPE]  ClassLoader loader  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Generator gen 
[REPLACE]^this.type =  null;^60^^^^^59^61^[REPLACE] this.type = type;^[METHOD] setType [TYPE] void [PARAMETER] Class type [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^setNamePrefix ( type.toString (  )  ) ;^64^^^^^63^66^[REPLACE] setNamePrefix ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^setNamePrefix ( type .getClassLoader (  )   ) ;^64^^^^^63^66^[REPLACE] setNamePrefix ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return  ( FastClass ) super .create ( false , type )  ;^65^^^^^63^66^[REPLACE] return  ( FastClass ) super.create ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.getName (  ) ;^69^^^^^68^70^[REPLACE] return type.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^throw new NoSuchMethodError ( e.getMessage (  )  ) ;^73^^^^^72^74^[REPLACE] new FastClassEmitter ( v, getClassName (  ) , type ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^73^^^^^72^74^[ADD] new FastClassEmitter ( v, getClassName (  ) , type ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return ReflectUtils .newInstance ( false , null )  ;^77^78^79^^^76^80^[REPLACE] return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[METHOD] firstInstance [TYPE] Object [PARAMETER] Class type [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.toString (  ) ;^83^^^^^82^84^[REPLACE] return instance;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^88^^^^^87^89^[REPLACE] return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] String name Class[] parameterTypes Object obj Object[] args [CLASS] FastClass Generator   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  Object obj  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  Object[] args 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , true ) ;^92^^^^^91^93^[REPLACE] return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^[METHOD] newInstance [TYPE] Object [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^96^^^^^95^97^[REPLACE] return newInstance ( getIndex ( parameterTypes ) , args ) ;^[METHOD] newInstance [TYPE] Object [PARAMETER] Class[] parameterTypes Object[] args [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Object[] args 
[REPLACE]^return  new FastConstructor ( this, constructor )  ;^100^^^^^99^101^[REPLACE] return new FastMethod ( this, method ) ;^[METHOD] getMethod [TYPE] FastMethod [PARAMETER] Method method [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Method method  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return  new Generator (  )  ;^104^^^^^103^105^[REPLACE] return new FastConstructor ( this, constructor ) ;^[METHOD] getConstructor [TYPE] FastConstructor [PARAMETER] Constructor constructor [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  Constructor constructor 
[ADD]^return getMethod ( type.getMethod ( name, parameterTypes )  ) ;^108^109^110^111^112^107^113^[ADD] try { return getMethod ( type.getMethod ( name, parameterTypes )  ) ; } catch  ( NoSuchMethodException e )  { throw new NoSuchMethodError ( e.getMessage (  )  ) ; }^[METHOD] getMethod [TYPE] FastMethod [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  String name  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^109^^^^^107^113^[REPLACE] return getMethod ( type.getMethod ( name, parameterTypes )  ) ;^[METHOD] getMethod [TYPE] FastMethod [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  String name  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^111^^^^^107^113^[REPLACE] throw new NoSuchMethodError ( e.getMessage (  )  ) ;^[METHOD] getMethod [TYPE] FastMethod [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  String name  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^^111^^^^^107^113^[ADD] throw new NoSuchMethodError ( e.getMessage (  )  ) ;^[METHOD] getMethod [TYPE] FastMethod [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  String name  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[ADD]^return getConstructor ( type.getConstructor ( parameterTypes )  ) ;^116^117^118^119^120^115^121^[ADD] try { return getConstructor ( type.getConstructor ( parameterTypes )  ) ; } catch  ( NoSuchMethodException e )  { throw new NoSuchMethodError ( e.getMessage (  )  ) ; }^[METHOD] getConstructor [TYPE] FastConstructor [PARAMETER] Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return newInstance ( getIndex ( Constants.EMPTY_CLASS_ARRAY ) , null ) ;^117^^^^^115^121^[REPLACE] return getConstructor ( type.getConstructor ( parameterTypes )  ) ;^[METHOD] getConstructor [TYPE] FastConstructor [PARAMETER] Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return.getConstructor ( type.getConstructor ( parameterTypes )  ) ;^117^^^^^115^121^[REPLACE] return getConstructor ( type.getConstructor ( parameterTypes )  ) ;^[METHOD] getConstructor [TYPE] FastConstructor [PARAMETER] Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^119^^^^^115^121^[REPLACE] throw new NoSuchMethodError ( e.getMessage (  )  ) ;^[METHOD] getConstructor [TYPE] FastConstructor [PARAMETER] Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Source SOURCE  [TYPE]  NoSuchMethodException e 
[REPLACE]^return type.toString (  ) ;^124^^^^^123^125^[REPLACE] return type.getName (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.toString (  ) ;^128^^^^^127^129^[REPLACE] return type;^[METHOD] getJavaClass [TYPE] Class [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.getName (  ) ;^132^^^^^131^133^[REPLACE] return type.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.Object (  ) ;^136^^^^^135^137^[REPLACE] return type.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^if  ( o != null ) {^140^^^^^139^144^[REPLACE] if  ( o == null || ! ( o instanceof FastClass )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return true;^141^^^^^139^144^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return type.Object (  (  ( FastClass ) o ) .type ) ;^143^^^^^139^144^[REPLACE] return type.equals (  (  ( FastClass ) o ) .type ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] FastClass Generator   [TYPE]  Class type  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^Generator gen = new Generator (  ) ;^194^^^^^193^202^[REPLACE] StringBuffer sb = new StringBuffer (  ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^sb.append ( ' ) ' ) ;^195^^^^^193^202^[REPLACE] sb.append ( name ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^sb.StringBuffer ( ' ( ' ) ;^196^^^^^193^202^[REPLACE] sb.append ( ' ( ' ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^196^^^^^193^202^[ADD] sb.append ( ' ( ' ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < parameterTypes.length - 4; i++ )  {^197^^^^^193^202^[REPLACE] for  ( int i = 0; i < parameterTypes.length; i++ )  {^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^197^198^199^^^193^202^[ADD] for  ( int i = 0; i < parameterTypes.length; i++ )  { sb.append ( Type.getDescriptor ( parameterTypes[i] )  ) ; }^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^sb.append (   parameterTypes[i]    ) ;^198^^^^^193^202^[REPLACE] sb.append ( Type.getDescriptor ( parameterTypes[i] )  ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[ADD]^^198^^^^^193^202^[ADD] sb.append ( Type.getDescriptor ( parameterTypes[i] )  ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < parameterTypes.length; i++ )  {^197^^^^^193^202^[REPLACE] for  ( int i = 0; i < parameterTypes.length; i++ )  {^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^sb.append ( ' ( ' ) ;^200^^^^^193^202^[REPLACE] sb.append ( ' ) ' ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^return type.toString (  ) ;^201^^^^^193^202^[REPLACE] return sb.toString (  ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] FastClass Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^private static final Source SOURCE  = null ;^52^^^^^^^[REPLACE] private static final Source SOURCE = new Source ( FastClass.class.getName (  )  ) ;^[METHOD] getSignatureWithoutReturnType [TYPE] String [PARAMETER] String name Class[] parameterTypes [CLASS] Generator   [TYPE]  StringBuffer sb  [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  Class type  [TYPE]  String name  [TYPE]  Source SOURCE  [TYPE]  int i 
[REPLACE]^setNamePrefix ( type.getName (  )  ) ;^56^^^^^55^57^[REPLACE] super ( SOURCE ) ;^[METHOD] <init> [TYPE] FastClass$Generator() [PARAMETER] [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^this.type =  null;^60^^^^^59^61^[REPLACE] this.type = type;^[METHOD] setType [TYPE] void [PARAMETER] Class type [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^setNamePrefix ( type.getClassLoader (  )  ) ;^64^^^^^63^66^[REPLACE] setNamePrefix ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[ADD]^^64^65^^^^63^66^[ADD] setNamePrefix ( type.getName (  )  ) ; return  ( FastClass ) super.create ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return  ( FastClass ) super.getClassName ( type.getName (  )  ) ;^65^^^^^63^66^[REPLACE] return  ( FastClass ) super.create ( type.getName (  )  ) ;^[METHOD] create [TYPE] FastClass [PARAMETER] [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^return type.getName (  ) ;^69^^^^^68^70^[REPLACE] return type.getClassLoader (  ) ;^[METHOD] getDefaultClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] Generator   [TYPE]  Class type  [TYPE]  Source SOURCE  [TYPE]  boolean false  true 
[REPLACE]^setNamePrefix ( type.getName (  )  ) ;^73^^^^^72^74^[REPLACE] new FastClassEmitter ( v, getClassName (  ) , type ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  Class type  [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[ADD]^^73^^^^^72^74^[ADD] new FastClassEmitter ( v, getClassName (  ) , type ) ;^[METHOD] generateClass [TYPE] void [PARAMETER] ClassVisitor v [CLASS] Generator   [TYPE]  Class type  [TYPE]  ClassVisitor v  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
[REPLACE]^return type.getClassLoader (  ) ;^83^^^^^82^84^[REPLACE] return instance;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Generator   [TYPE]  Class type  [TYPE]  Object instance  [TYPE]  boolean false  true  [TYPE]  Source SOURCE 
