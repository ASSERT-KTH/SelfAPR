[REPLACE]^int[] mapping  = null ;^55^^^^^^^[REPLACE] int[] mapping = new int[40];^ [CLASS] LocalVariablesSorter State  
[REPLACE]^protected  int firstLocal;^59^^^^^^^[REPLACE] protected final int firstLocal;^ [CLASS] LocalVariablesSorter State  
[REPLACE]^super ( lvs.mv ) ;^67^^^^^62^75^[REPLACE] super ( mv ) ;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^state ;^68^^^^^62^75^[REPLACE] state = new State (  ) ;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^desc   ;^69^^^^^62^75^[REPLACE] Type[] args = Type.getArgumentTypes ( desc ) ;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^state.nextLocal  =  1;^70^^^^^62^75^[REPLACE] state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^for  ( int i = 0 ; i < args.length %  0 .5 ; i++ )  {^71^^^^^62^75^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^state.nextLocal +=  null[i].getSize (  ) ;^72^^^^^62^75^[REPLACE] state.nextLocal += args[i].getSize (  ) ;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[ADD]^^72^^^^^62^75^[ADD] state.nextLocal += args[i].getSize (  ) ;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^71^^^^^62^75^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^firstLocal ;^74^^^^^62^75^[REPLACE] firstLocal = state.nextLocal;^[METHOD] <init> [TYPE] MethodVisitor) [PARAMETER] final int access String desc MethodVisitor mv [CLASS] LocalVariablesSorter State   [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  Type[] args  [TYPE]  int[] mapping  [TYPE]  String desc  [TYPE]  int access  firstLocal  i  nextLocal  [TYPE]  MethodVisitor mv 
[REPLACE]^super ( mv ) ;^78^^^^^77^81^[REPLACE] super ( lvs.mv ) ;^[METHOD] <init> [TYPE] LocalVariablesSorter) [PARAMETER] LocalVariablesSorter lvs [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  LocalVariablesSorter lvs  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal 
[REPLACE]^state =  null.state;^79^^^^^77^81^[REPLACE] state = lvs.state;^[METHOD] <init> [TYPE] LocalVariablesSorter) [PARAMETER] LocalVariablesSorter lvs [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  LocalVariablesSorter lvs  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal 
[REPLACE]^firstLocal =  null.firstLocal;^80^^^^^77^81^[REPLACE] firstLocal = lvs.firstLocal;^[METHOD] <init> [TYPE] LocalVariablesSorter) [PARAMETER] LocalVariablesSorter lvs [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  LocalVariablesSorter lvs  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal 
[ADD]^^80^^^^^77^81^[ADD] firstLocal = lvs.firstLocal;^[METHOD] <init> [TYPE] LocalVariablesSorter) [PARAMETER] LocalVariablesSorter lvs [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  LocalVariablesSorter lvs  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal 
[REPLACE]^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^84^^^^^83^96^[REPLACE] int size;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal  opcode  size  var 
[REPLACE]^size = 0 ;^90^^^^^83^96^[REPLACE] size = 2;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal  opcode  size  var 
[ADD]^^90^^^^^83^96^[ADD] size = 2;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal  opcode  size  var 
[REPLACE]^size = 2; ;^93^^^^^83^96^[REPLACE] size = 1;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal  opcode  size  var 
[REPLACE]^mv.visitVarInsn ( opcode, remap ( nextLocal, size )  ) ;^95^^^^^83^96^[REPLACE] mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[METHOD] visitVarInsn [TYPE] void [PARAMETER] final int opcode final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  nextLocal  opcode  size  var 
[REPLACE]^mv.visitIincInsn ( remap ( var, 3 ) , increment ) ;^99^^^^^98^100^[REPLACE] mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  nextLocal  opcode  size  var 
[REPLACE]^mv.visitIincInsn ( remap ( var, 1 >> 4 ) , increment ) ;^99^^^^^98^100^[REPLACE] mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[METHOD] visitIincInsn [TYPE] void [PARAMETER] final int var final int increment [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  nextLocal  opcode  size  var 
[REPLACE]^mv.visitVarInsn ( var, state.nextLocal ) ;^103^^^^^102^104^[REPLACE] mv.visitMaxs ( maxStack, state.nextLocal ) ;^[METHOD] visitMaxs [TYPE] void [PARAMETER] final int maxStack final int maxLocals [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var 
[REPLACE]^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( size )  ) ;^114^^^^^106^115^[REPLACE] mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[METHOD] visitLocalVariable [TYPE] void [PARAMETER] String name String desc String signature Label start Label end final int index [CLASS] LocalVariablesSorter State   [TYPE]  Label end  start  [TYPE]  int[] mapping  [TYPE]  String desc  name  signature  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var 
[REPLACE]^int value = state.mapping[key];^120^^^^^119^123^[REPLACE] int var = state.nextLocal;^[METHOD] newLocal [TYPE] int [PARAMETER] final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var 
[REPLACE]^state.nextLocal +=  opcode;^121^^^^^119^123^[REPLACE] state.nextLocal += size;^[METHOD] newLocal [TYPE] int [PARAMETER] final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var 
[REPLACE]^return nextLocal;^122^^^^^119^123^[REPLACE] return var;^[METHOD] newLocal [TYPE] int [PARAMETER] final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var 
[REPLACE]^if  (value  ==  firstLocal )  {^126^^^^^125^143^[REPLACE] if  ( var < firstLocal )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value;^127^^^^^125^143^[REPLACE] return var;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value - 1;^127^^^^^125^143^[REPLACE] return var;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int key = 0  * var + size -value;^129^^^^^125^143^[REPLACE] int key = 2 * var + size - 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^130^^^^^125^143^[REPLACE] int length = state.mapping.length;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^130^^^^^125^143^[ADD] int length = state.mapping.length;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  ( key >= length (  )  )  {^131^^^^^125^143^[REPLACE] if  ( key >= length )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;state.mapping = newMapping;^131^132^133^134^135^125^143^[ADD] if  ( key >= length )  { int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ]; System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ; state.mapping = newMapping; }^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping =  mapping;^134^^^^^125^143^[REPLACE] state.mapping = newMapping;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] newMapping = new int[  2 * length /  2  ];^132^^^^^125^143^[REPLACE] int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] newMapping = new int[  2 * length *  0.5   ];^132^^^^^125^143^[REPLACE] int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int value = key < state.mapping.length ? state.mapping[key] : 0;^136^^^^^125^143^[REPLACE] int value = state.mapping[key];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^136^^^^^125^143^[ADD] int value = state.mapping[key];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  ( value  &&  0 )  {^137^^^^^125^143^[REPLACE] if  ( value == 0 )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = opcode + 1;^138^^^^^125^143^[REPLACE] value = state.nextLocal + 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping[key]  =  state.mapping[key] ;^139^^^^^125^143^[REPLACE] state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^139^^^^^125^143^[ADD] state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.nextLocal +=  value;^140^^^^^125^143^[REPLACE] state.nextLocal += size;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = state.nextLocal +value;^138^^^^^125^143^[REPLACE] value = state.nextLocal + 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^138^139^^^^125^143^[ADD] value = state.nextLocal + 1; state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping[key]  = null ;^139^^^^^125^143^[REPLACE] state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.nextLocal +=  null;^140^^^^^125^143^[REPLACE] state.nextLocal += size;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value  !=  4;;^142^^^^^125^143^[REPLACE] return value - 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  ( value  != value )  {^146^^^^^145^158^[REPLACE] if  ( var < firstLocal )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value;^147^^^^^145^158^[REPLACE] return var;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int key = 2  ;^149^^^^^145^158^[REPLACE] int key = 2 * var;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^149^^^^^145^158^[ADD] int key = 2 * var;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int value = nextLocal < state.mapping.length %  2 ? state.mapping[key] : 0 ;^150^^^^^145^158^[REPLACE] int value = key < state.mapping.length ? state.mapping[key] : 0;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  (var  &&  0 )  {^151^^^^^145^158^[REPLACE] if  ( value == 0 )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = key + 1 < state.mapping.length *  0.5  ? state.mapping[key + 1] : 0;^152^^^^^145^158^[REPLACE] value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = key + 1 < state.mapping.length + 2 ? state.mapping[key + 1] : 0;^152^^^^^145^158^[REPLACE] value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  ( value  ||  0 )  {^154^^^^^145^158^[REPLACE] if  ( value == 0 )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^154^155^156^^^145^158^[ADD] if  ( value == 0 )  { throw new IllegalStateException  (" ")  ; }^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return ;^155^^^^^145^158^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value -var;^157^^^^^145^158^[REPLACE] return value - 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] mapping ;^55^^^^^^^[REPLACE] int[] mapping = new int[40];^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
