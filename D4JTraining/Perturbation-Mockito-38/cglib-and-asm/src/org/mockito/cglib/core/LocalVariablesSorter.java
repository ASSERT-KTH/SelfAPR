[REPLACE]^int[] mapping  = null ;^55^^^^^^^[REPLACE] int[] mapping = new int[40];^ [CLASS] LocalVariablesSorter State  
[REPLACE]^long  nextLocal;^56^^^^^^^[REPLACE] int nextLocal;^ [CLASS] LocalVariablesSorter State  
[REPLACE]^protected final  long  firstLocal;^59^^^^^^^[REPLACE] protected final int firstLocal;^ [CLASS] LocalVariablesSorter State  
[REPLACE]^if  ( var  ==  firstLocal )  {^126^^^^^125^143^[REPLACE] if  ( var < firstLocal )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value;^127^^^^^125^143^[REPLACE] return var;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return var;  ;^127^^^^^125^143^[REPLACE] return var;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int key = 2 * var + size size;^129^^^^^125^143^[REPLACE] int key = 2 * var + size - 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^130^^^^^125^143^[ADD] int length = state.mapping.length;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  ( key >= length /  0  )  {^131^^^^^125^143^[REPLACE] if  ( key >= length )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping =  mapping;^134^^^^^125^143^[REPLACE] state.mapping = newMapping;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] newMapping = new int[Math.max ( 2 * length (  ) , key + 1 ) ];^132^^^^^125^143^[REPLACE] int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] newMapping = new int[Math.max ( 2 * length + 2, key + 1 ) ];^132^^^^^125^143^[REPLACE] int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int size  ;^136^^^^^125^143^[REPLACE] int value = state.mapping[key];^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^if  (var  !=  0 )  {^137^^^^^125^143^[REPLACE] if  ( value == 0 )  {^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = state.nextLocal  1;^138^^^^^125^143^[REPLACE] value = state.nextLocal + 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping[key] ;^139^^^^^125^143^[REPLACE] state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[ADD]^^140^^^^^125^143^[ADD] state.nextLocal += size;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^value = size  0 ;^138^^^^^125^143^[REPLACE] value = state.nextLocal + 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^state.mapping[key]  =  state.mapping[key] ;^139^^^^^125^143^[REPLACE] state.mapping[key] = value;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^return value  1;^142^^^^^125^143^[REPLACE] return value - 1;^[METHOD] remap [TYPE] int [PARAMETER] final int var final int size [CLASS] LocalVariablesSorter State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
[REPLACE]^int[] mapping  = null ;^55^^^^^^^[REPLACE] int[] mapping = new int[40];^[METHOD] remap [TYPE] int [PARAMETER] final int var [CLASS] State   [TYPE]  int[] mapping  newMapping  [TYPE]  boolean false  true  [TYPE]  State state  [TYPE]  int access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var 
