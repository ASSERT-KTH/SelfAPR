[REPLACE]^private static  Object NAME_KEY = new Object (  ) ;^36^^^^^^^[REPLACE] private static final Object NAME_KEY = new Object (  ) ;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^private static final ThreadLocal CURRENT  = null ;^37^^^^^^^[REPLACE] private static final ThreadLocal CURRENT = new ThreadLocal (  ) ;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^private GeneratorStrategy strategy  = null ;^39^^^^^^^[REPLACE] private GeneratorStrategy strategy = DefaultGeneratorStrategy.INSTANCE;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^private NamingPolicy namingPolicy  = null ;^40^^^^^^^[REPLACE] private NamingPolicy namingPolicy = DefaultNamingPolicy.INSTANCE;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^private  byte  namePrefix;^43^^^^^^^[REPLACE] private String namePrefix;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^private boolean useCache ;^45^^^^^^^[REPLACE] private boolean useCache = true;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^Map cache ;^51^^^^^^^[REPLACE] Map cache = new WeakHashMap (  ) ;^ [CLASS] AbstractClassGenerator Source 1  
[REPLACE]^this.name =  namePrefix;^53^^^^^52^54^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.source =  null;^58^^^^^57^59^[REPLACE] this.source = source;^[METHOD] <init> [TYPE] AbstractClassGenerator$Source) [PARAMETER] Source source [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.namePrefix =  name;^62^^^^^61^63^[REPLACE] this.namePrefix = namePrefix;^[METHOD] setNamePrefix [TYPE] void [PARAMETER] String namePrefix [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( className != null ) className = getClassName ( getClassLoader (  )  ) ;^66^67^^^^65^69^[REPLACE] if  ( className == null ) className = getClassName ( getClassLoader (  )  ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^className  = null ;^67^^^^^65^69^[REPLACE] className = getClassName ( getClassLoader (  )  ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^className ;^67^^^^^65^69^[REPLACE] className = getClassName ( getClassLoader (  )  ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return attemptLoad;^68^^^^^65^69^[REPLACE] return className;^[METHOD] getClassName [TYPE] String [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  [TYPE]  Object NAME_KEY  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^final Set nameCache = getClassNameCache ( classLoader ) ;^72^^^^^71^78^[REPLACE] final Set nameCache = getClassNameCache ( loader ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] ClassLoader loader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  Set nameCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[ADD]^^72^^^^^71^78^[ADD] final Set nameCache = getClassNameCache ( loader ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] ClassLoader loader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  Set nameCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return  ( AbstractClassGenerator ) CURRENT.get (  ) ;^73^^^^^71^78^[REPLACE] return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[METHOD] getClassName [TYPE] String [PARAMETER] ClassLoader loader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  Set nameCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return nameCache.add ( arg ) ;^75^^^^^71^78^[REPLACE] return nameCache.contains ( arg ) ;^[METHOD] getClassName [TYPE] String [PARAMETER] ClassLoader loader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  Set nameCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return null.add ( arg ) ;^75^^^^^74^76^[REPLACE] return nameCache.contains ( arg ) ;^[METHOD] evaluate [TYPE] boolean [PARAMETER] Object arg [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return  ( Set )  (  ( Map ) source.cache .get ( arg )   )^81^^^^^80^82^[REPLACE] return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[METHOD] getClassNameCache [TYPE] Set [PARAMETER] ClassLoader loader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.classLoader =  loader;^94^^^^^93^95^[REPLACE] this.classLoader = classLoader;^[METHOD] setClassLoader [TYPE] void [PARAMETER] ClassLoader classLoader [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( namingPolicy != this  ) namingPolicy = DefaultNamingPolicy.INSTANCE;^103^104^^^^102^106^[REPLACE] if  ( namingPolicy == null ) namingPolicy = DefaultNamingPolicy.INSTANCE;^[METHOD] setNamingPolicy [TYPE] void [PARAMETER] NamingPolicy namingPolicy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[ADD]^namingPolicy = DefaultNamingPolicy.INSTANCE;this.namingPolicy = namingPolicy;^103^104^105^106^^102^106^[ADD] if  ( namingPolicy == null ) namingPolicy = DefaultNamingPolicy.INSTANCE; this.namingPolicy = namingPolicy; }^[METHOD] setNamingPolicy [TYPE] void [PARAMETER] NamingPolicy namingPolicy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^namingPolicy ;^104^^^^^102^106^[REPLACE] namingPolicy = DefaultNamingPolicy.INSTANCE;^[METHOD] setNamingPolicy [TYPE] void [PARAMETER] NamingPolicy namingPolicy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.namingPolicy =  null;^105^^^^^102^106^[REPLACE] this.namingPolicy = namingPolicy;^[METHOD] setNamingPolicy [TYPE] void [PARAMETER] NamingPolicy namingPolicy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return className;^112^^^^^111^113^[REPLACE] return namingPolicy;^[METHOD] getNamingPolicy [TYPE] NamingPolicy [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.useCache =  true;^120^^^^^119^121^[REPLACE] this.useCache = useCache;^[METHOD] setUseCache [TYPE] void [PARAMETER] boolean useCache [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return className;^127^^^^^126^128^[REPLACE] return useCache;^[METHOD] getUseCache [TYPE] boolean [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.attemptLoad =  useCache;^136^^^^^135^137^[REPLACE] this.attemptLoad = attemptLoad;^[METHOD] setAttemptLoad [TYPE] void [PARAMETER] boolean attemptLoad [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return className;^140^^^^^139^141^[REPLACE] return attemptLoad;^[METHOD] getAttemptLoad [TYPE] boolean [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( strategy != false ) strategy = DefaultGeneratorStrategy.INSTANCE;^148^149^^^^147^151^[REPLACE] if  ( strategy == null ) strategy = DefaultGeneratorStrategy.INSTANCE;^[METHOD] setStrategy [TYPE] void [PARAMETER] GeneratorStrategy strategy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^strategy  = null ;^149^^^^^147^151^[REPLACE] strategy = DefaultGeneratorStrategy.INSTANCE;^[METHOD] setStrategy [TYPE] void [PARAMETER] GeneratorStrategy strategy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[ADD]^^149^^^^^147^151^[ADD] strategy = DefaultGeneratorStrategy.INSTANCE;^[METHOD] setStrategy [TYPE] void [PARAMETER] GeneratorStrategy strategy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^strategy ;^149^^^^^147^151^[REPLACE] strategy = DefaultGeneratorStrategy.INSTANCE;^[METHOD] setStrategy [TYPE] void [PARAMETER] GeneratorStrategy strategy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.strategy =  null;^150^^^^^147^151^[REPLACE] this.strategy = strategy;^[METHOD] setStrategy [TYPE] void [PARAMETER] GeneratorStrategy strategy [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return className;^157^^^^^156^158^[REPLACE] return strategy;^[METHOD] getStrategy [TYPE] GeneratorStrategy [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return  ( AbstractClassGenerator ) CURRENT.ThreadLocal (  ) ;^165^^^^^164^166^[REPLACE] return  ( AbstractClassGenerator ) CURRENT.get (  ) ;^[METHOD] getCurrent [TYPE] AbstractClassGenerator [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^Class gen = null;^169^^^^^168^183^[REPLACE] ClassLoader t = classLoader;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( t != true )  {^170^^^^^168^183^[REPLACE] if  ( t == null )  {^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t  = null ;^171^^^^^168^183^[REPLACE] t = getDefaultClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t  =  t ;^171^^^^^168^183^[REPLACE] t = getDefaultClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( t != null )  {^173^^^^^168^183^[REPLACE] if  ( t == null )  {^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t ;^174^^^^^168^183^[REPLACE] t = getClass (  ) .getClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t  =  t ;^174^^^^^168^183^[REPLACE] t = getClass (  ) .getClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( t != true )  {^176^^^^^168^183^[REPLACE] if  ( t == null )  {^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t ;^177^^^^^168^183^[REPLACE] t = Thread.currentThread (  ) .getContextClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^t  =  t ;^177^^^^^168^183^[REPLACE] t = Thread.currentThread (  ) .getContextClassLoader (  ) ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( t != true )  {^179^^^^^168^183^[REPLACE] if  ( t == null )  {^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^throw new CodeGenerationException  (" ")  ; ;^180^^^^^168^183^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[ADD]^^180^^^^^168^183^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^return className;^182^^^^^168^183^[REPLACE] return t;^[METHOD] getClassLoader [TYPE] ClassLoader [PARAMETER] [CLASS] AbstractClassGenerator Source 1   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^if  ( cache != true )  {^195^^^^^187^240^[REPLACE] if  ( cache2 == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^}  if  ( useCache )  {^199^^^^^187^240^[REPLACE] } else if  ( useCache )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^}   Reference ref =  ( Reference ) cache2.get ( key ) ;gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^199^200^201^202^^187^240^[ADD] else if  ( useCache )  { Reference ref =  ( Reference ) cache2.get ( key ) ; gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ; }^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen  =  ref.get (  )  ) ;^201^^^^^187^240^[REPLACE] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Reference ref =  ( Reference ) cache2.get ( NAME_KEY ) ;^200^^^^^187^240^[REPLACE] Reference ref =  ( Reference ) cache2.get ( key ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^200^^^^^187^240^[ADD] Reference ref =  ( Reference ) cache2.get ( key ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  ( Class )   (  (  ref != true  )  ? true : ref.get (  )  ) ;^201^^^^^187^240^[REPLACE] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Reference ref =  ( Reference ) cache.get ( key ) ;^200^^^^^187^240^[REPLACE] Reference ref =  ( Reference ) cache2.get ( key ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^cache2 =  new HashSet (  )  ;^196^^^^^187^240^[REPLACE] cache2 = new HashMap (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^}  else {^199^^^^^187^240^[REPLACE] } else if  ( useCache )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen  =  null ;^201^^^^^187^240^[REPLACE] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != true )  {^203^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^Object save = CURRENT.get (  ) ;CURRENT.set ( this ) ;this.key = key;^203^204^205^206^207^187^240^[ADD] if  ( gen == null )  { Object save = CURRENT.get (  ) ; CURRENT.set ( this ) ; try { this.key = key;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^} else if  ( useCache )  {^209^^^^^187^240^[REPLACE] if  ( attemptLoad )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^gen = loader.loadClass ( getClassName (  )  ) ;^210^211^212^^214^187^240^[ADD] try { gen = loader.loadClass ( getClassName (  )  ) ; } catch  ( ClassNotFoundException e )  { }^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  classLoader.loadClass ( getClassName (  )  ) ;^211^^^^^187^240^[REPLACE] gen = loader.loadClass ( getClassName (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^212^213^214^^^187^240^[ADD] catch  ( ClassNotFoundException e )  {  }^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != null )  {^216^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^byte[] b = strategy.generate ( this ) ;String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;getClassNameCache ( loader ) .add ( className ) ;gen = ReflectUtils.defineClass ( className, b, loader ) ;^216^217^218^219^220^187^240^[ADD] if  ( gen == null )  { byte[] b = strategy.generate ( this ) ; String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ; getClassNameCache ( loader ) .add ( className ) ; gen = ReflectUtils.defineClass ( className, b, loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  ReflectUtils.defineClass ( name, b, loader ) ;^220^^^^^187^240^[REPLACE] gen = ReflectUtils.defineClass ( className, b, loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Object save = CURRENT.get (  ) ;^217^^^^^187^240^[REPLACE] byte[] b = strategy.generate ( this ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^String className =   new ClassReader ( b )  ;^218^^^^^187^240^[REPLACE] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^} else if  ( useCache )  {^223^^^^^187^240^[REPLACE] if  ( useCache )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Object save = CURRENT.get (  ) ;^224^^^^^187^240^[REPLACE] cache2.put ( key, new WeakReference ( gen )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^this.key = key;^206^207^^209^210^187^240^[ADD] try { this.key = key; if  ( attemptLoad )  { try {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  null.loadClass ( getClassName (  )  ) ;^211^^^^^187^240^[REPLACE] gen = loader.loadClass ( getClassName (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^211^^^^^187^240^[ADD] gen = loader.loadClass ( getClassName (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^220^^^^^187^240^[ADD] gen = ReflectUtils.defineClass ( className, b, loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^217^218^^^^187^240^[ADD] byte[] b = strategy.generate ( this ) ; String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^223^224^225^^^187^240^[ADD] if  ( useCache )  { cache2.put ( key, new WeakReference ( gen )  ) ; }^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^cache2.put ( NAME_KEY, new WeakReference ( gen )  ) ;^224^^^^^187^240^[REPLACE] cache2.put ( key, new WeakReference ( gen )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^224^^^^^187^240^[ADD] cache2.put ( key, new WeakReference ( gen )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^this.key =  NAME_KEY;^207^^^^^187^240^[REPLACE] this.key = key;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^207^^^^^187^240^[ADD] this.key = key;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^return className;^226^^^^^187^240^[REPLACE] return firstInstance ( gen ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^218^219^^^^187^240^[ADD] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ; getClassNameCache ( loader ) .add ( className ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Object save = CURRENT.ThreadLocal (  ) ;^204^^^^^187^240^[REPLACE] Object save = CURRENT.get (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^209^210^211^212^^187^240^[ADD] if  ( attemptLoad )  { try { gen = loader.loadClass ( getClassName (  )  ) ; } catch  ( ClassNotFoundException e )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^String className = ClassNameReader .getClassName ( namePrefix , namePrefix , arg , this )  ;^218^^^^^187^240^[REPLACE] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^cache2.put ( key, new WeakReference ( gen )  ) ;^223^224^225^^^187^240^[ADD] if  ( useCache )  { cache2.put ( key, new WeakReference ( gen )  ) ; }^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^Class gen = null;ClassLoader loader = getClassLoader (  ) ;^188^189^^191^192^187^240^[ADD] try { Class gen = null; synchronized  ( source )  { ClassLoader loader = getClassLoader (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  (cache != null )  {^195^^^^^187^240^[REPLACE] if  ( cache2 == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( t == null )  {^199^^^^^187^240^[REPLACE] } else if  ( useCache )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  ( Class )   (  (  ref != null  )  ? null : ref.get (  )  ) ;^201^^^^^187^240^[REPLACE] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^201^^^^^187^240^[ADD] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != null )  {^203^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != false )  {^216^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^217^^^^^187^240^[ADD] byte[] b = strategy.generate ( this ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^String className = ClassNameReader .getClassName ( className , name , arg , true )  ;^218^^^^^187^240^[REPLACE] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != true )  {^216^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen =  ReflectUtils.defineClass ( null, b, loader ) ;^220^^^^^187^240^[REPLACE] gen = ReflectUtils.defineClass ( className, b, loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^218^^^^^187^240^[ADD] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^cache2 .get ( save )  ;^224^^^^^187^240^[REPLACE] cache2.put ( key, new WeakReference ( gen )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^String className = ClassNameReader .getClassName ( namePrefix , className , save , false )  ;^218^^^^^187^240^[REPLACE] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^String className = ClassNameReader .getClassName ( namePrefix , className , NAME_KEY , null )  ;^218^^^^^187^240^[REPLACE] String className = ClassNameReader.getClassName ( new ClassReader ( b )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^cache2 =   ( Map ) source.cache.get ( classLoader ) ;^194^^^^^187^240^[REPLACE] cache2 =  ( Map ) source.cache.get ( loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^194^^^^^187^240^[ADD] cache2 =  ( Map ) source.cache.get ( loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^return className;^232^^^^^187^240^[REPLACE] return firstInstance ( gen ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Class gen = false;^189^^^^^187^240^[REPLACE] Class gen = null;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Object save = CURRENT.get (  ) ;^192^^^^^187^240^[REPLACE] ClassLoader loader = getClassLoader (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Map cache2 = true;^193^^^^^187^240^[REPLACE] Map cache2 = null;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Reference ref =  ( Reference ) cache2 .get ( NAME_KEY )  ;^200^^^^^187^240^[REPLACE] Reference ref =  ( Reference ) cache2.get ( key ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Object save = CURRENT .get ( NAME_KEY )  ;^204^^^^^187^240^[REPLACE] Object save = CURRENT.get (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^204^^^^^187^240^[ADD] Object save = CURRENT.get (  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^if  ( gen != this  )  {^216^^^^^187^240^[REPLACE] if  ( gen == null )  {^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^cache2 =   ( Map ) source.cache.get ( null ) ;^194^^^^^187^240^[REPLACE] cache2 =  ( Map ) source.cache.get ( loader ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^gen  =  true ;^201^^^^^187^240^[REPLACE] gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Class gen = this;^189^^^^^187^240^[REPLACE] Class gen = null;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^Map cache2 = this;^193^^^^^187^240^[REPLACE] Map cache2 = null;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^return ;^234^^^^^187^240^[REPLACE] throw e;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^return ;^236^^^^^187^240^[REPLACE] throw e;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^236^^^^^187^240^[ADD] throw e;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^238^^^^^187^240^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[ADD]^^237^238^^^^187^240^[ADD] catch  ( Exception e )  { throw new CodeGenerationException  (" ")  ;^[METHOD] create [TYPE] Object [PARAMETER] Object key [CLASS] AbstractClassGenerator Source 1   [TYPE]  Reference ref  [TYPE]  Error e  [TYPE]  String className  name  namePrefix  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source  [TYPE]  Exception e  [TYPE]  GeneratorStrategy strategy  [TYPE]  byte[] b  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  RuntimeException e  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  key  save  [TYPE]  Class gen  [TYPE]  Map cache  cache2  [TYPE]  ClassNotFoundException e 
[REPLACE]^int  name;^50^^^^^^^[REPLACE] String name;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Source   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  instance  key  save  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  cache2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^Map cache ;^51^^^^^^^[REPLACE] Map cache = new WeakHashMap (  ) ;^[METHOD] nextInstance [TYPE] Object [PARAMETER] Object instance [CLASS] Source   [TYPE]  GeneratorStrategy strategy  [TYPE]  boolean attemptLoad  false  true  useCache  [TYPE]  ThreadLocal CURRENT  [TYPE]  ClassLoader classLoader  loader  t  [TYPE]  Object NAME_KEY  arg  instance  key  save  [TYPE]  String className  name  namePrefix  [TYPE]  Map cache  cache2  [TYPE]  NamingPolicy namingPolicy  [TYPE]  Source source 
[REPLACE]^this.name =  null;^53^^^^^52^54^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] Source   [TYPE]  Map cache  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return null.contains ( arg ) ;^75^^^^^74^76^[REPLACE] return nameCache.contains ( arg ) ;^[METHOD] evaluate [TYPE] boolean [PARAMETER] Object arg [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Object arg 
