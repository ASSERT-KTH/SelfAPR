[REPLACE]^public static  String DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^26^^^^^^^[REPLACE] public static final String DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^ [CLASS] DebuggingClassWriter 1  
[REPLACE]^private  String debugLocation;^28^^^^^^^[REPLACE] private static String debugLocation;^ [CLASS] DebuggingClassWriter 1  
[REPLACE]^if  ( superName == null )  {^77^^^^^69^111^[REPLACE] if  ( debugLocation != null )  {^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^if   (  debugLocation != null  )   {  ;^90^^^^^69^111^[REPLACE] if  ( traceEnabled )  {^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;ClassReader cr = new ClassReader ( b ) ;^90^91^92^93^94^69^111^[ADD] if  ( traceEnabled )  { file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ; try { ClassReader cr = new ClassReader ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^ClassReader cr = new ClassReader ( b ) ;PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;cr.accept ( tcv, 0 ) ;^93^94^95^96^97^69^111^[ADD] try { ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^94^^^^^69^111^[REPLACE] ClassReader cr = new ClassReader ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^95^^^^^69^111^[REPLACE] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( true, pw ) ;^96^^^^^69^111^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^91^92^^^^69^111^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^69^111^[REPLACE] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( this, pw ) ;^96^^^^^69^111^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^79^80^^82^83^69^111^[ADD] try { new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ; File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ; OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^96^97^^^^69^111^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) , dirs  ".asm" ) ;^91^^^^^69^111^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^92^^^^^69^111^[ADD] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out.write ( b ) ;out.close (  ) ;^84^85^86^87^88^69^111^[ADD] try { out.write ( b ) ; } finally { out.close (  ) ; }^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^super (  )  ;^85^^^^^69^111^[REPLACE] out.write ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^95^^^^^69^111^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file =  new File ( debugLocation )  , dirs  ".asm" ) ;^91^^^^^69^111^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , dirs  ".class" ) ;^82^^^^^69^111^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  ;^83^^^^^69^111^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) ,superName  ".asm" ) ;^91^^^^^69^111^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^78^^^^^69^111^[REPLACE] String dirs = className.replace ( '.', File.separatorChar ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^82^83^^^^69^111^[ADD] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ; OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return ;^104^^^^^69^111^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^96^^^^^69^111^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^94^95^^^^69^111^[ADD] ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^94^^^^^69^111^[ADD] ClassReader cr = new ClassReader ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^91^^^^^69^111^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out .close (  )  ;^85^^^^^69^111^[REPLACE] out.write ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^85^^^^^69^111^[ADD] out.write ( b ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^95^96^^^^69^111^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , superName  ".class" ) ;^82^^^^^69^111^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^83^^^^^69^111^[ADD] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^91^92^^^^69^111^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return className;  ;^71^72^^^^69^111^[REPLACE] return  ( byte[] )  java.security.AccessController.doPrivileged ( new java.security.PrivilegedAction (  )  {^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return b;  ;^107^^^^^69^111^[REPLACE] return b;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^76^^^^^69^111^[REPLACE] byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^76^^^^^73^108^[ADD] byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( debugLocation == null )  {^77^^^^^73^108^[REPLACE] if  ( debugLocation != null )  {^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REMOVE]^if  ( traceEnabled )  {     file = new File ( new File ( debugLocation ) ,  ( dirs + ".asm" )  ) ;     out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;     try {         ClassReader cr = new ClassReader ( b ) ;         PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;         TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;         cr.accept ( tcv, 0 ) ;         pw.flush (  ) ;     } finally {         out.close (  ) ;     } }^77^^^^^73^108^[REMOVE] ^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^if   (  debugLocation != null  )   {  ;^90^^^^^73^108^[REPLACE] if  ( traceEnabled )  {^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^90^91^92^93^94^73^108^[ADD] if  ( traceEnabled )  { file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ; try { ClassReader cr = new ClassReader ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^ClassReader cr = new ClassReader ( b ) ;PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;cr.accept ( tcv, 0 ) ;^93^94^95^96^97^73^108^[ADD] try { ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^94^^^^^73^108^[REPLACE] ClassReader cr = new ClassReader ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^95^^^^^73^108^[REPLACE] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( true, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^91^92^^^^73^108^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^73^108^[REPLACE] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( this, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^79^80^^82^83^73^108^[ADD] try { new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ; File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ; OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^94^^^^^73^108^[ADD] ClassReader cr = new ClassReader ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^95^96^^^^73^108^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) , dirs  ".asm" ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^92^^^^^73^108^[ADD] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^95^^^^^73^108^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( false, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out.write ( b ) ;out.close (  ) ;^84^85^86^87^88^73^108^[ADD] try { out.write ( b ) ; } finally { out.close (  ) ; }^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^super (  )  ;^85^^^^^73^108^[REPLACE] out.write ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , signature signature ) ;^82^^^^^73^108^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  ;^83^^^^^73^108^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^96^^^^^73^108^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^94^95^^^^73^108^[ADD] ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^91^92^^^^73^108^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^78^^^^^73^108^[REPLACE] String dirs = className.replace ( '.', File.separatorChar ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , superName  dirs ) ;^82^^^^^73^108^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return ;^104^^^^^73^108^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) ,superName  ".asm" ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^95^96^^^^73^108^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) ,signature  ".asm" ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out .close (  )  ;^85^^^^^73^108^[REPLACE] out.write ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , superName  ".class" ) ;^82^^^^^73^108^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , dirs  ".class" ) ;^82^^^^^73^108^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^103^104^^^^73^108^[ADD] catch  ( IOException e )  { throw new CodeGenerationException  (" ")  ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return b;  ;^107^^^^^73^108^[REPLACE] return b;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] DebuggingClassWriter 1   [TYPE]  byte[] b  [TYPE]  boolean false  traceEnabled  true  [TYPE]  TraceClassVisitor tcv  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^76^^^^^73^108^[REPLACE] byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( debugLocation == this  )  {^77^^^^^73^108^[REPLACE] if  ( debugLocation != null )  {^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^String dirs = className.replace ( '.', File.separatorChar ) ;new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^77^78^79^80^^73^108^[ADD] if  ( debugLocation != null )  { String dirs = className.replace ( '.', File.separatorChar ) ; try { new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^if   (  debugLocation != null  )   {  ;^90^^^^^73^108^[REPLACE] if  ( traceEnabled )  {^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^ClassReader cr = new ClassReader ( b ) ;PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;cr.accept ( tcv, 0 ) ;^93^94^95^96^97^73^108^[ADD] try { ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^94^^^^^73^108^[REPLACE] ClassReader cr = new ClassReader ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  )  ;^95^^^^^73^108^[REPLACE] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( false, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file =  new File ( debugLocation )  , dirs  ".asm" ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^73^108^[REPLACE] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^94^95^^^^73^108^[ADD] ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^cr.accept ( tcv, 0 ) ;^96^97^^^^73^108^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^79^80^^82^83^73^108^[ADD] try { new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ; File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ; OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^95^96^^^^73^108^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ; TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^96^97^^^^73^108^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ; cr.accept ( tcv, 0 ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^91^92^^^^73^108^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^out.write ( b ) ;out.close (  ) ;^84^85^86^87^88^73^108^[ADD] try { out.write ( b ) ; } finally { out.close (  ) ; }^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^out .close (  )  ;^85^^^^^73^108^[REPLACE] out.write ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^91^^^^^73^108^[ADD] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^File file = new File ( new File ( debugLocation ) , dirs  ".class" ) ;^82^^^^^73^108^[REPLACE] File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^byte[] b = toByteArray (  )  ;^83^^^^^73^108^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( true, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) , dirs  dirs ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^78^^^^^73^108^[ADD] String dirs = className.replace ( '.', File.separatorChar ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return ;^104^^^^^73^108^[REPLACE] throw new CodeGenerationException  (" ")  ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^90^91^92^93^94^73^108^[ADD] if  ( traceEnabled )  { file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ; out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ; try { ClassReader cr = new ClassReader ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^TraceClassVisitor tcv = new TraceClassVisitor ( this, pw ) ;^96^^^^^73^108^[REPLACE] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^file = new File ( new File ( debugLocation ) , dirs  ".asm" ) ;^91^^^^^73^108^[REPLACE] file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^92^^^^^73^108^[ADD] out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^96^^^^^73^108^[ADD] TraceClassVisitor tcv = new TraceClassVisitor ( null, pw ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^super (  )  ;^85^^^^^73^108^[REPLACE] out.write ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^94^95^^^^73^108^[ADD] ClassReader cr = new ClassReader ( b ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^95^^^^^73^108^[ADD] PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( out )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^85^^^^^73^108^[ADD] out.write ( b ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[ADD]^^83^^^^^73^108^[ADD] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
[REPLACE]^return b;  ;^107^^^^^73^108^[REPLACE] return b;^[METHOD] run [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  byte[] b  [TYPE]  TraceClassVisitor tcv  [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ClassReader cr  [TYPE]  String dirs  [TYPE]  IOException e  [TYPE]  File file  [TYPE]  PrintWriter pw 
