[REPLACE]^private  int wantedCount;^9^^^^^^^[REPLACE] private final int wantedCount;^ [CLASS] Discrepancy  
[REPLACE]^this.wantedCount =  actualCount;^13^^^^^12^15^[REPLACE] this.wantedCount = wantedCount;^[METHOD] <init> [TYPE] Discrepancy(int,int) [PARAMETER] int wantedCount int actualCount [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[ADD]^this.actualCount = actualCount;^13^14^^^^12^15^[ADD] this.wantedCount = wantedCount; this.actualCount = actualCount;^[METHOD] <init> [TYPE] Discrepancy(int,int) [PARAMETER] int wantedCount int actualCount [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[REPLACE]^this.actualCount =  wantedCount;^14^^^^^12^15^[REPLACE] this.actualCount = actualCount;^[METHOD] <init> [TYPE] Discrepancy(int,int) [PARAMETER] int wantedCount int actualCount [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[REPLACE]^return Pluralizer.pluralize ( actualCount ) ;^18^^^^^17^19^[REPLACE] return wantedCount;^[METHOD] getWantedCount [TYPE] int [PARAMETER] [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[REPLACE]^return   wantedCount   ;^22^^^^^21^23^[REPLACE] return Pluralizer.pluralize ( wantedCount ) ;^[METHOD] getPluralizedWantedCount [TYPE] String [PARAMETER] [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[REPLACE]^return Pluralizer.pluralize ( actualCount ) ;^26^^^^^25^27^[REPLACE] return actualCount;^[METHOD] getActualCount [TYPE] int [PARAMETER] [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
[REPLACE]^return Pluralizer.pluralize ( wantedCount ) ;^30^^^^^29^31^[REPLACE] return Pluralizer.pluralize ( actualCount ) ;^[METHOD] getPluralizedActualCount [TYPE] String [PARAMETER] [CLASS] Discrepancy   [TYPE]  int actualCount  wantedCount  [TYPE]  boolean false  true 
