[REPLACE]^private  Invocation invocation;^20^^^^^^^[REPLACE] private final Invocation invocation;^ [CLASS] InvocationMatcher  
[REPLACE]^this.invocation =  null;^24^^^^^23^30^[REPLACE] this.invocation = invocation;^[METHOD] <init> [TYPE] List) [PARAMETER] Invocation invocation Matcher> matchers [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^if  ( false.isEmpty (  )  )  {^25^^^^^23^30^[REPLACE] if  ( matchers.isEmpty (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] Invocation invocation Matcher> matchers [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^this.matchers =  this;^28^^^^^23^30^[REPLACE] this.matchers = matchers;^[METHOD] <init> [TYPE] List) [PARAMETER] Invocation invocation Matcher> matchers [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^this.matchers =  null.argumentsToMatchers (  ) ;^26^^^^^23^30^[REPLACE] this.matchers = invocation.argumentsToMatchers (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] Invocation invocation Matcher> matchers [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[ADD]^^26^^^^^23^30^[ADD] this.matchers = invocation.argumentsToMatchers (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] Invocation invocation Matcher> matchers [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^33^^^^^32^34^[REPLACE] this ( invocation, Collections.<Matcher>emptyList (  )  ) ;^[METHOD] <init> [TYPE] Invocation) [PARAMETER] Invocation invocation [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.getMock (  ) ;^37^^^^^36^38^[REPLACE] return invocation.getMethod (  ) ;^[METHOD] getMethod [TYPE] Method [PARAMETER] [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.getMethod (  ) ;^41^^^^^40^42^[REPLACE] return this.invocation;^[METHOD] getInvocation [TYPE] Invocation [PARAMETER] [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.toString ( matchers, printSettings ) ;^45^^^^^44^46^[REPLACE] return this.matchers;^[METHOD] getMatchers [TYPE] List [PARAMETER] [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.toString ( matchers, printSettings ) ;^49^^^^^48^50^[REPLACE] return invocation.toString ( matchers, new PrintSettings (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] InvocationMatcher   [TYPE]  Invocation invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return   hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^[REPLACE] return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[METHOD] matches [TYPE] boolean [PARAMETER] Invocation actual [CLASS] InvocationMatcher   [TYPE]  Invocation actual  invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^if  ( actualArgs.length != matchers .isEmpty (  )   /  0.5  )  {^59^^^^^58^68^[REPLACE] if  ( actualArgs.length != matchers.size (  )  )  {^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^return true;^60^^^^^58^68^[REPLACE] return false;^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^if  ( !matchers .isEmpty (  )  .matches ( actualArgs[i] )  )  {^63^^^^^58^68^[REPLACE] if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  {^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^return true;^64^^^^^58^68^[REPLACE] return false;^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < actualArgs.length - 5; i++ )  {^62^^^^^58^68^[REPLACE] for  ( int i = 0; i < actualArgs.length; i++ )  {^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[ADD]^^62^63^64^65^^58^68^[ADD] for  ( int i = 0; i < actualArgs.length; i++ )  { if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  { return false; }^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^if  ( matchers.get ( i ) .matches ( actualArgs[i] )  )  {^63^^^^^58^68^[REPLACE] if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  {^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < actualArgs.length; i++ )  {^62^^^^^58^68^[REPLACE] for  ( int i = 0; i < actualArgs.length; i++ )  {^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[REPLACE]^return false;^67^^^^^58^68^[REPLACE] return true;^[METHOD] argumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs  [TYPE]  int i 
[ADD]^return argumentsMatch ( actualArgs ) ;return false;^71^72^73^74^75^70^76^[ADD] try { return argumentsMatch ( actualArgs ) ; } catch  ( Throwable t )  { return false; }^[METHOD] safelyArgumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  Throwable t  [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs 
[REPLACE]^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^72^^^^^70^76^[REPLACE] return argumentsMatch ( actualArgs ) ;^[METHOD] safelyArgumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  Throwable t  [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs 
[REPLACE]^return true;^74^^^^^70^76^[REPLACE] return false;^[METHOD] safelyArgumentsMatch [TYPE] boolean [PARAMETER] Object[] actualArgs [CLASS] InvocationMatcher   [TYPE]  Throwable t  [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  invocation  [TYPE]  Object[] actualArgs 
[REPLACE]^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^83^^^^^82^97^[REPLACE] String wantedMethodName = getMethod (  ) .getName (  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^String currentMethodName = invocation.getMethod (  ) .getName (  ) ;^84^^^^^82^97^[REPLACE] String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^final boolean methodNameEquals = wantedMethodName .getName (  )  ;^86^^^^^82^97^[REPLACE] final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^87^^^^^82^97^[REPLACE] final boolean isUnverified = !candidate.isVerified (  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[ADD]^^87^88^89^90^^82^97^[ADD] final boolean isUnverified = !candidate.isVerified (  ) ; final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ; final boolean methodEquals = hasSameMethod ( candidate ) ; final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )   &&  candidate.getMock (  ) ;^88^^^^^82^97^[REPLACE] final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^final boolean methodEquals = hasSameMethod ( invocation ) ;^89^^^^^82^97^[REPLACE] final boolean methodEquals = hasSameMethod ( candidate ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^final boolean overloadedButSameArgs =true ;^90^^^^^82^97^[REPLACE] final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^if  ( methodNameEquals && isUnverified && mockIsTheSame && overloadedButSameArgs )  {^92^^^^^82^97^[REPLACE] if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^return false;^93^^^^^82^97^[REPLACE] return true;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^return true;^96^^^^^82^97^[REPLACE] return false;^[METHOD] hasSimilarMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  List matchers  [TYPE]  String currentMethodName  wantedMethodName  [TYPE]  boolean false  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  true  [TYPE]  Invocation actual  candidate  invocation 
[REPLACE]^return invocation.getMethod (  )  .getName (  )  ;^100^^^^^99^101^[REPLACE] return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[METHOD] hasSameMethod [TYPE] boolean [PARAMETER] Invocation candidate [CLASS] InvocationMatcher   [TYPE]  Invocation actual  candidate  invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.getMethod (  ) ;^104^^^^^103^105^[REPLACE] return invocation.getLocation (  ) ;^[METHOD] getLocation [TYPE] Location [PARAMETER] [CLASS] InvocationMatcher   [TYPE]  Invocation actual  candidate  invocation  [TYPE]  List matchers  [TYPE]  boolean false  true 
[REPLACE]^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^108^^^^^107^109^[REPLACE] return invocation.toString ( matchers, printSettings ) ;^[METHOD] toString [TYPE] String [PARAMETER] PrintSettings printSettings [CLASS] InvocationMatcher   [TYPE]  PrintSettings printSettings  [TYPE]  List matchers  [TYPE]  boolean false  true  [TYPE]  Invocation actual  candidate  invocation 
