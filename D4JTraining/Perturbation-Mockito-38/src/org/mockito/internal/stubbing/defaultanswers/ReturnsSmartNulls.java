[REPLACE]^private  InvocationOnMock invocation;^40^^^^^^^[REPLACE] private final InvocationOnMock invocation;^ [CLASS] ReturnsSmartNulls ThrowingInterceptor  
[REPLACE]^private  Location location = new Location (  ) ;^41^^^^^^^[REPLACE] private final Location location = new Location (  ) ;^ [CLASS] ReturnsSmartNulls ThrowingInterceptor  
[REPLACE]^private final Answer<Object> delegate  = null ;^57^^^^^^^[REPLACE] private final Answer<Object> delegate = new ReturnsMoreEmptyValues (  ) ;^ [CLASS] ReturnsSmartNulls ThrowingInterceptor  
[REPLACE]^this.invocation =  null;^44^^^^^43^45^[REPLACE] this.invocation = invocation;^[METHOD] <init> [TYPE] InvocationOnMock) [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[ADD]^^44^^^^^43^45^[ADD] this.invocation = invocation;^[METHOD] <init> [TYPE] InvocationOnMock) [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^if  ( ClassImposterizer.INSTANCE.canImposterise ( type )  )  {^48^^^^^47^54^[REPLACE] if  ( Invocation.isToString ( method )  )  {^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return "SmartNull returned by unstubbed "  |  invocation.getMethod (  ) .getName (  )   |  " (  )  method on mock";^49^^^^^47^54^[REPLACE] return "SmartNull returned by unstubbed " + invocation.getMethod (  ) .getName (  )  + " (  )  method on mock";^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return "SmartNull returned by unstubbed "  ^  invocation.getMethod (  ) .getName (  )   ^  " (  )  method on mock";^49^^^^^47^54^[REPLACE] return "SmartNull returned by unstubbed " + invocation.getMethod (  ) .getName (  )  + " (  )  method on mock";^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^new Reporter (  )  .Reporter (  )  ;^52^^^^^47^54^[REPLACE] new Reporter (  ) .smartNullPointerException ( location ) ;^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return false;^53^^^^^47^54^[REPLACE] return null;^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^Class<?> type = invocation.getMethod (  ) .getReturnType (  ) ;^60^^^^^59^69^[REPLACE] Object defaultReturnValue = delegate.answer ( invocation ) ;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^if  ( defaultReturnValue == null )  {^61^^^^^59^69^[REPLACE] if  ( defaultReturnValue != null )  {^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[ADD]^^61^62^63^^^59^69^[ADD] if  ( defaultReturnValue != null )  { return defaultReturnValue; }^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^return null;^62^^^^^59^69^[REPLACE] return defaultReturnValue;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^Object defaultReturnValue = delegate.answer ( invocation ) ;^64^^^^^59^69^[REPLACE] Class<?> type = invocation.getMethod (  ) .getReturnType (  ) ;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^if  ( ClassImposterizer.INSTANCE .imposterise ( null , true )   )  {^65^^^^^59^69^[REPLACE] if  ( ClassImposterizer.INSTANCE.canImposterise ( type )  )  {^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^return   new ThrowingInterceptor ( invocation )  ;^66^^^^^59^69^[REPLACE] return ClassImposterizer.INSTANCE.imposterise ( new ThrowingInterceptor ( invocation ) , type ) ;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^return ClassImposterizer.INSTANCE .canImposterise ( this )  ;^66^^^^^59^69^[REPLACE] return ClassImposterizer.INSTANCE.imposterise ( new ThrowingInterceptor ( invocation ) , type ) ;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^return false;^68^^^^^59^69^[REPLACE] return null;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ReturnsSmartNulls ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^private  Location location = new Location (  ) ;^41^^^^^^^[REPLACE] private final Location location = new Location (  ) ;^[METHOD] answer [TYPE] Object [PARAMETER] InvocationOnMock invocation [CLASS] ThrowingInterceptor   [TYPE]  Answer delegate  [TYPE]  Object defaultReturnValue  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  Location location 
[REPLACE]^this.invocation =  null;^44^^^^^43^45^[REPLACE] this.invocation = invocation;^[METHOD] <init> [TYPE] InvocationOnMock) [PARAMETER] InvocationOnMock invocation [CLASS] ThrowingInterceptor   [TYPE]  InvocationOnMock invocation  [TYPE]  Location location  [TYPE]  boolean false  true 
[REPLACE]^return "SmartNull returned by unstubbed "  ;^49^^^^^47^54^[REPLACE] return "SmartNull returned by unstubbed " + invocation.getMethod (  ) .getName (  )  + " (  )  method on mock";^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ThrowingInterceptor   [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return false ;^49^^^^^47^54^[REPLACE] return "SmartNull returned by unstubbed " + invocation.getMethod (  ) .getName (  )  + " (  )  method on mock";^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ThrowingInterceptor   [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return "SmartNull returned by unstubbed " + invocation.getMethod (  ) .getName (  )  + " (  )  method on mock";^52^^^^^47^54^[REPLACE] new Reporter (  ) .smartNullPointerException ( location ) ;^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ThrowingInterceptor   [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
[REPLACE]^return true;^53^^^^^47^54^[REPLACE] return null;^[METHOD] intercept [TYPE] Object [PARAMETER] Object obj Method method Object[] args MethodProxy proxy [CLASS] ThrowingInterceptor   [TYPE]  boolean false  true  [TYPE]  InvocationOnMock invocation  [TYPE]  MethodProxy proxy  [TYPE]  Object obj  [TYPE]  Method method  [TYPE]  Object[] args  [TYPE]  Location location 
