[REPLACE]^super ( nextToSearch ) ;^19^^^^^18^21^[REPLACE] super ( parent ) ;^[METHOD] <init> [TYPE] ClassLoader) [PARAMETER] ClassLoader parent ClassLoader nextToSearch [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  boolean false  true 
[REPLACE]^this.nextToSearch =  parent;^20^^^^^18^21^[REPLACE] this.nextToSearch = nextToSearch;^[METHOD] <init> [TYPE] ClassLoader) [PARAMETER] ClassLoader parent ClassLoader nextToSearch [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  boolean false  true 
[ADD]^^20^^^^^18^21^[ADD] this.nextToSearch = nextToSearch;^[METHOD] <init> [TYPE] ClassLoader) [PARAMETER] ClassLoader parent ClassLoader nextToSearch [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  boolean false  true 
[REPLACE]^return combineLoadersOf ( classes[1], classes ) ;^24^^^^^23^25^[REPLACE] return combineLoadersOf ( classes[0], classes ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER]  classes [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class[] classes  [TYPE]  boolean false  true 
[REPLACE]^ClassLoader loader = parentLoaders.get ( parentLoaders.size (  ) -1 ) ;^28^^^^^27^50^[REPLACE] List<ClassLoader> loaders = new ArrayList<ClassLoader> (  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^addIfNewElement ( loaders, null.getClassLoader (  )  ) ;^30^^^^^27^50^[REPLACE] addIfNewElement ( loaders, first.getClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^for  ( Class<?> c : others )  { addIfNewElement ( loaders, c.getClassLoader (  )  ) ;^31^^^^^27^50^[REPLACE] for  ( Class<?> c : others )  {^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^addIfNewElement ( this, SearchingClassLoader.class.getClassLoader (  )  ) ;^40^^^^^27^50^[REPLACE] addIfNewElement ( loaders, SearchingClassLoader.class.getClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[ADD]^^40^^^^^27^50^[ADD] addIfNewElement ( loaders, SearchingClassLoader.class.getClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ;^40^^^^^27^50^[REPLACE] addIfNewElement ( loaders, SearchingClassLoader.class.getClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^addIfNewElement ( true, currentThread (  ) .getContextClassLoader (  )  ) ;^44^^^^^27^50^[REPLACE] addIfNewElement ( loaders, currentThread (  ) .getContextClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REMOVE]^loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ;^44^^^^^27^50^[REMOVE] ^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^addIfNewElement ( loaders, c.getClassLoader (  )  ) ;^44^^^^^27^50^[REPLACE] addIfNewElement ( loaders, currentThread (  ) .getContextClassLoader (  )  ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^return loader;^49^^^^^27^50^[REPLACE] return combine ( loaders ) ;^[METHOD] combineLoadersOf [TYPE] ClassLoader [PARAMETER] Class<?> first  others [CLASS] SearchingClassLoader   [TYPE]  ClassLoader nextToSearch  parent  [TYPE]  Class c  first  [TYPE]  List loaders  [TYPE]  Class[] others  [TYPE]  boolean false  true 
[REPLACE]^ClassLoader loader = null.get ( parentLoaders.length (  ) -1 ) ;^53^^^^^52^60^[REPLACE] ClassLoader loader = parentLoaders.get ( parentLoaders.size (  ) -1 ) ;^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = parentLoaders.size (  )  *  0 -0 ; i >= 0; i-- )  {^55^^^^^52^60^[REPLACE] for  ( int i = parentLoaders.size (  ) -2; i >= 0; i-- )  {^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^55^56^57^^^52^60^[ADD] for  ( int i = parentLoaders.size (  ) -2; i >= 0; i-- )  { loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ; }^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^loader =  new SearchingClassLoader ( true.get ( i ) , loader ) ;^56^^^^^52^60^[REPLACE] loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ;^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^loader =  new SearchingClassLoader ( null.get ( i ) , loader ) ;^56^^^^^52^60^[REPLACE] loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ;^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^56^^^^^52^60^[ADD] loader = new SearchingClassLoader ( parentLoaders.get ( i ) , loader ) ;^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = parentLoaders.size (  )  *  0.5 -2; i >= 0; i-- )  {^55^^^^^52^60^[REPLACE] for  ( int i = parentLoaders.size (  ) -2; i >= 0; i-- )  {^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return parent;^59^^^^^52^60^[REPLACE] return loader;^[METHOD] combine [TYPE] ClassLoader [PARAMETER] ClassLoader> parentLoaders [CLASS] SearchingClassLoader   [TYPE]  ClassLoader loader  nextToSearch  parent  [TYPE]  List parentLoaders  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( c == null ) {^63^^^^^62^66^[REPLACE] if  ( c != null && !loaders.contains ( c )  )  {^[METHOD] addIfNewElement [TYPE] void [PARAMETER] ClassLoader> loaders ClassLoader c [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  List loaders  [TYPE]  boolean false  true 
[ADD]^^63^64^65^^^62^66^[ADD] if  ( c != null && !loaders.contains ( c )  )  { loaders.add ( c ) ; }^[METHOD] addIfNewElement [TYPE] void [PARAMETER] ClassLoader> loaders ClassLoader c [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  List loaders  [TYPE]  boolean false  true 
[REPLACE]^loaders .contains ( null )  ;^64^^^^^62^66^[REPLACE] loaders.add ( c ) ;^[METHOD] addIfNewElement [TYPE] void [PARAMETER] ClassLoader> loaders ClassLoader c [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  List loaders  [TYPE]  boolean false  true 
[REMOVE]^addIfNewElement ( loaders, c.getClassLoader (  )  ) ;^64^^^^^62^66^[REMOVE] ^[METHOD] addIfNewElement [TYPE] void [PARAMETER] ClassLoader> loaders ClassLoader c [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  List loaders  [TYPE]  boolean false  true 
[REPLACE]^if  ( nextToSearch == null )  {^70^^^^^69^75^[REPLACE] if  ( nextToSearch != null )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String name [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return super.loadClass ( name ) ;^73^^^^^69^75^[REPLACE] return super.findClass ( name ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String name [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return nextToSearch .findClass ( name )  ;^71^^^^^69^75^[REPLACE] return nextToSearch.loadClass ( name ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String name [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return nextToSearch.findClass ( name ) ;^71^^^^^69^75^[REPLACE] return nextToSearch.loadClass ( name ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String name [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return super .SearchingClassLoader ( loader , c )  ;^73^^^^^69^75^[REPLACE] return super.findClass ( name ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String name [CLASS] SearchingClassLoader   [TYPE]  ClassLoader c  loader  nextToSearch  parent  [TYPE]  String name  [TYPE]  boolean false  true 
