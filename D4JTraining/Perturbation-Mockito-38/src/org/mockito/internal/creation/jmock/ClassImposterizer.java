[REPLACE]^public static final ClassImposterizer INSTANCE  = null ;^30^^^^^^^[REPLACE] public static final ClassImposterizer INSTANCE = new ClassImposterizer (  ) ;^ [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  
[REPLACE]^private ObjenesisStd objenesis  = null ;^37^^^^^^^[REPLACE] private ObjenesisStd objenesis = new ObjenesisStd (  ) ;^ [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  
[REPLACE]^private  final NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES = new MockitoNamingPolicy (  )  {^39^^^^^39^44^[REPLACE] private static final NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES = new MockitoNamingPolicy (  )  {^ [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  
[REPLACE]^private static final CallbackFilter IGNORE_BRIDGE_METHODS ;^46^^^^^46^50^[REPLACE] private static final CallbackFilter IGNORE_BRIDGE_METHODS = new CallbackFilter (  )  {^ [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  
[REPLACE]^if  ( mockedType  &&  Object.class )  {^73^^^^^72^115^[REPLACE] if  ( mockedType == Object.class )  {^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^mockedType = ClassWithSuperclassToWorkAroundCglibBug.class;^73^74^75^^^72^115^[ADD] if  ( mockedType == Object.class )  { mockedType = ClassWithSuperclassToWorkAroundCglibBug.class; }^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^mockedType  = null ;^74^^^^^72^115^[REPLACE] mockedType = ClassWithSuperclassToWorkAroundCglibBug.class;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^mockedType ;^74^^^^^72^115^[REPLACE] mockedType = ClassWithSuperclassToWorkAroundCglibBug.class;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^Factory proxy =  (  ( Factory )   ( objenesis.newInstance ( proxyClass )  )  )  ;^77^^^^^72^115^[REPLACE] Enhancer enhancer = new Enhancer (  )  {^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( null )  ) ;^84^^^^^72^115^[REPLACE] enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( mockedType )  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( true )  ) ;^84^^^^^72^115^[REPLACE] enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( mockedType )  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setUseFactory ( false ) ;^85^^^^^72^115^[REPLACE] enhancer.setUseFactory ( true ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^^85^^^^^72^115^[ADD] enhancer.setUseFactory ( true ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^if  ( null.isInterface (  )  )  {^86^^^^^72^115^[REPLACE] if  ( mockedType.isInterface (  )  )  {^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer .setInterfaces ( null )  ;^90^^^^^86^92^[REPLACE] enhancer.setSuperclass ( mockedType ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setSuperclass ( interfaces ) ;^91^^^^^86^92^[REPLACE] enhancer.setInterfaces ( interfaces ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer .setInterfaces ( null )  ;^87^^^^^72^115^[REPLACE] enhancer.setSuperclass ( Object.class ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^^87^88^^^^72^115^[ADD] enhancer.setSuperclass ( Object.class ) ; enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setInterfaces ( prepend ( mockedType, this )  ) ;^88^^^^^72^115^[REPLACE] enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer.setInterfaces ( prepend ( null, interfaces )  ) ;^88^^^^^72^115^[REPLACE] enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^method.isBridge (  )  ;^93^^^^^72^115^[REPLACE] enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer .setCallbackTypes ( interfaces )  ;^94^^^^^72^115^[REPLACE] enhancer.setCallbackFilter ( IGNORE_BRIDGE_METHODS ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^^94^^^^^72^115^[ADD] enhancer.setCallbackFilter ( IGNORE_BRIDGE_METHODS ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^if  ( mockedType.getSigners (  )  == null )  {^95^^^^^72^115^[REPLACE] if  ( mockedType.getSigners (  )  != null )  {^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ;enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^95^96^97^98^99^72^115^[ADD] if  ( mockedType.getSigners (  )  != null )  { enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ; } else { enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ; }^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer .setUseFactory ( false )  ;^98^^^^^95^99^[REPLACE] enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^enhancer .setUseFactory ( true )  ;^96^^^^^72^115^[REPLACE] enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^if   (  mockedType.getSigners  (    )   != null  )   {  ;^104^^^^^72^115^[REPLACE] if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^throw new MockitoException (  (  (  (  ( "\n" + "Mockito cannot mock this class: " )  + mockedType )  + ".\n" )  + "Mockito can only mock visible & non-final classes" )  )  ;^105^106^107^108^^72^115^[REPLACE] throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^return enhancer.createClass (  ) ;^101^102^103^104^105^72^115^[ADD] try { return enhancer.createClass (  ) ; } catch  ( CodeGenerationException e )  { if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  { throw new MockitoException ( "\n"^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^return enhancer .setSuperclass ( true )  ;^102^^^^^72^115^[REPLACE] return enhancer.createClass (  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^return enhancer .setSuperclass ( 0 )  ;^102^^^^^72^115^[REPLACE] return enhancer.createClass (  ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[ADD]^^105^106^107^^^72^115^[ADD] throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n"^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
[REPLACE]^return ;^110^111^112^113^^72^115^[REPLACE] throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[METHOD] createProxyClass [TYPE] <T> [PARAMETER] Class<?> mockedType  interfaces [CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [TYPE]  ObjenesisStd objenesis  [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  Enhancer enhancer  [TYPE]  CodeGenerationException e  [TYPE]  ClassImposterizer INSTANCE  [TYPE]  Class mockedType  sc  [TYPE]  List constructors  [TYPE]  CallbackFilter IGNORE_BRIDGE_METHODS  [TYPE]  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES 
