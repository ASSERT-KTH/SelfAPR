[REPLACE]^runner =  new BlockJUnit4ClassRunner ( false )  {^22^^^^^21^30^[REPLACE] runner = new BlockJUnit4ClassRunner ( klass )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> klass [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  Class klass  [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  FrameworkMethod method  [TYPE]  Statement statement 
[REPLACE]^return runner.getDescription (  ) ;^27^^^^^21^30^[REPLACE] return super.withBefores ( method, target, statement ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> klass [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  Class klass  [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  FrameworkMethod method  [TYPE]  Statement statement 
[REPLACE]^target   ;^26^^^^^23^28^[REPLACE] MockitoAnnotations.initMocks ( target ) ;^[METHOD] withBefores [TYPE] Statement [PARAMETER] FrameworkMethod method Object target Statement statement [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  FrameworkMethod method  [TYPE]  Statement statement 
[REPLACE]^return runner.getDescription (  ) ;^27^^^^^23^28^[REPLACE] return super.withBefores ( method, target, statement ) ;^[METHOD] withBefores [TYPE] Statement [PARAMETER] FrameworkMethod method Object target Statement statement [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  FrameworkMethod method  [TYPE]  Statement statement 
[REPLACE]^runner.filter ( notifier ) ;^36^^^^^32^37^[REPLACE] runner.run ( notifier ) ;^[METHOD] run [TYPE] void [PARAMETER] RunNotifier notifier [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  RunNotifier notifier  [TYPE]  boolean false  true 
[ADD]^^36^37^^^^32^37^[ADD] runner.run ( notifier ) ; }^[METHOD] run [TYPE] void [PARAMETER] RunNotifier notifier [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  RunNotifier notifier  [TYPE]  boolean false  true 
[REPLACE]^return super.withBefores ( method, target, statement ) ;^40^^^^^39^41^[REPLACE] return runner.getDescription (  ) ;^[METHOD] getDescription [TYPE] Description [PARAMETER] [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  boolean false  true 
[REPLACE]^runner.run ( filter ) ;^45^^^^^43^46^[REPLACE] runner.filter ( filter ) ;^[METHOD] filter [TYPE] void [PARAMETER] Filter filter [CLASS] JUnit45AndHigherRunnerImpl 1   [TYPE]  BlockJUnit4ClassRunner runner  [TYPE]  Filter filter  [TYPE]  boolean false  true 
[REPLACE]^target   ;^26^^^^^23^28^[REPLACE] MockitoAnnotations.initMocks ( target ) ;^[METHOD] withBefores [TYPE] Statement [PARAMETER] FrameworkMethod method Object target Statement statement [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Statement statement  [TYPE]  Object target  [TYPE]  FrameworkMethod method 
[REPLACE]^return super .withBefores ( method , target , statement )  ;^27^^^^^23^28^[REPLACE] return super.withBefores ( method, target, statement ) ;^[METHOD] withBefores [TYPE] Statement [PARAMETER] FrameworkMethod method Object target Statement statement [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Statement statement  [TYPE]  Object target  [TYPE]  FrameworkMethod method 
