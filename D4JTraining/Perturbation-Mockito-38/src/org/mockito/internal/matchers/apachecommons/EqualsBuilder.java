[REPLACE]^private boolean isEquals ;^99^^^^^^^[REPLACE] private boolean isEquals = true;^ [CLASS] EqualsBuilder  
[REPLACE]^return reflectionEquals ( lhs, rhs, true, null, null ) ;^132^^^^^131^133^[REPLACE] return reflectionEquals ( lhs, rhs, false, null, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  true 
[REPLACE]^return reflectionEquals ( lhs, rhs, true, null, excludeFields ) ;^155^^^^^154^156^[REPLACE] return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  true  [TYPE]  String[] excludeFields 
[REPLACE]^return reflectionEquals ( lhs, rhs, testTransients, true, true ) ;^179^^^^^178^180^[REPLACE] return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  testTransients  true 
[REPLACE]^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, true ) ;^208^^^^^207^209^[REPLACE] return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class reflectUpToClass  [TYPE]  boolean false  isEquals  testTransients  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^239^^^^^238^284^[REPLACE] if  ( lhs == rhs )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^return true;^239^240^241^^^238^284^[ADD] if  ( lhs == rhs )  { return true; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return false;^240^^^^^238^284^[REPLACE] return true;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  (  rhs == null )  {^242^^^^^238^284^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^242^243^244^^^238^284^[ADD] if  ( lhs == null || rhs == null )  { return false; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^243^^^^^238^284^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class rhsClass = lhs.getClass (  ) ;^249^^^^^238^284^[REPLACE] Class lhsClass = lhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = rhs.getClass (  ) ;^250^^^^^238^284^[REPLACE] Class rhsClass = rhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = lhs.getClass (  ) ;^251^^^^^238^284^[REPLACE] Class testClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( lhs  rhs    )  {^252^^^^^238^284^[REPLACE] if  ( lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^}  else {^258^^^^^238^284^[REPLACE] } else if  ( rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^266^^^^^258^267^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhs  rhs    )  {^260^^^^^238^284^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass; ;^262^^^^^238^284^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^262^^^^^238^284^[ADD] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass; ;^259^^^^^238^284^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhs  lhs    )  {^260^^^^^238^284^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^266^^^^^238^284^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !rhs  lhs    )  {^254^^^^^238^284^[REPLACE] if  ( !rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^254^255^256^257^^238^284^[ADD] if  ( !rhsClass.isInstance ( lhs )  )  {  testClass = rhsClass; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass; ;^256^^^^^238^284^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass; ;^253^^^^^238^284^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^}   testClass = rhsClass;testClass = lhsClass;^258^259^260^^262^238^284^[ADD] else if  ( rhsClass.isInstance ( lhs )  )  { testClass = rhsClass; if  ( !lhsClass.isInstance ( rhs )  )  { testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhsClass .isArray (  )   )  {^260^^^^^238^284^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^253^^^^^238^284^[ADD] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^259^^^^^238^284^[ADD] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^268^^^^^238^284^[REPLACE] EqualsBuilder equalsBuilder = new EqualsBuilder (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^while  ( testClass.getSuperclass (  )  != null ;^271^^^^^238^284^[REPLACE] while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass =  rhsClass.getSuperclass (  ) ;^272^^^^^238^284^[REPLACE] testClass = testClass.getSuperclass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;testClass = testClass.getSuperclass (  ) ;reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^269^270^271^272^273^238^284^[ADD] try { reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ; while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  { testClass = testClass.getSuperclass (  ) ; reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^while  ( testClass.isArray (  )  != false ;^271^^^^^238^284^[REPLACE] while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^281^^^^^238^284^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^275^276^277^^^238^284^[ADD] catch  ( IllegalArgumentException e )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return equalsBuilder.EqualsBuilder (  ) ;^283^^^^^238^284^[REPLACE] return equalsBuilder.isEquals (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Field[] fields = clazz .getSuperclass (  )  ;^304^^^^^297^322^[REPLACE] Field[] fields = clazz.getDeclaredFields (  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^304^305^^^^297^322^[ADD] Field[] fields = clazz.getDeclaredFields (  ) ; List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^List excludedFieldList  =  Collections.EMPTY_LIST;^305^^^^^297^322^[REPLACE] List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^AccessibleObject.setAccessible ( fields, false ) ;^306^^^^^297^322^[REPLACE] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( true ) {^309^310^311^312^^297^322^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^309^310^311^312^^297^322^[ADD] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^313^314^315^^317^297^322^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^314^^^^^297^322^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^314^^^^^297^322^[REMOVE] ^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^314^^^^^297^322^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^314^^^^^297^322^[ADD] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f .getName (  )  , f^314^^^^^297^322^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^return ;^318^^^^^297^322^[REPLACE] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0; i < fields.length - 3 && builder.isEquals; i++ )  {^307^^^^^297^322^[REPLACE] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^307^308^309^310^311^297^322^[ADD] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  { Field f = fields[i]; if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  )^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( excludedFieldList.contains ( f .getName (  )  &&  ( f^309^310^311^312^^297^322^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^314^^^^^297^322^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^Field[] fields = clazz.getDeclaredFields (  ) ;^308^^^^^297^322^[REPLACE] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^315^316^317^^^297^322^[ADD] catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.appendSuper ( f.get ( lhs ) , f.get ( rhs )  ) ;^314^^^^^297^322^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0 ; i < fields.length && builder.isEquals; i++ )  {^307^^^^^297^322^[REPLACE] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^308^^^^^297^322^[ADD] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( isEquals  &&  false )  {^334^^^^^333^339^[REPLACE] if  ( isEquals == false )  {^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^335^^^^^333^339^[REPLACE] return this;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  useTransients;^337^^^^^333^339^[REPLACE] isEquals = superEquals;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^337^338^^^^333^339^[ADD] isEquals = superEquals; return this;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^338^^^^^333^339^[REPLACE] return this;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  true )  {^352^^^^^351^397^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^353^^^^^351^397^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^355^^^^^351^397^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^356^^^^^351^397^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ) {^358^^^^^351^397^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^360^^^^^351^397^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^Class rhsClass = lhs.getClass (  ) ;^362^^^^^351^397^[REPLACE] Class lhsClass = lhs.getClass (  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhsClass.isArray (  )  )  {^363^^^^^351^397^[REPLACE] if  ( !lhsClass.isArray (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^370^^^^^351^397^[REPLACE] } else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^376^^^^^351^397^[REPLACE] } else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof int[] )  {^378^^^^^351^397^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof short[] )  {^380^^^^^351^397^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^382^^^^^351^397^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^384^^^^^351^397^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^386^^^^^351^397^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof float[] )  {^388^^^^^351^397^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof boolean[] )  {^390^^^^^351^397^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^390^391^392^^394^351^397^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^394^^^^^390^395^[REPLACE] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^391^^^^^351^397^[REPLACE] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^389^^^^^351^397^[REPLACE] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^389^^^^^351^397^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^390^^^^^351^397^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^394^^^^^390^395^[ADD] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^391^^^^^351^397^[ADD] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^387^^^^^351^397^[REPLACE] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^388^389^390^391^^351^397^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^390^391^392^^394^351^397^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^389^^^^^351^397^[ADD] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^385^^^^^351^397^[REPLACE] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^388^^^^^351^397^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof boolean[] )  {^390^^^^^351^397^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^388^389^390^391^^351^397^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^383^^^^^351^397^[REPLACE] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof byte[] )  {^384^^^^^351^397^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^384^385^386^387^^351^397^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof double[] )  {^386^^^^^351^397^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^387^^^^^351^397^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^381^^^^^351^397^[REPLACE] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof double[] )  {^386^^^^^351^397^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^386^387^388^389^^351^397^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^387^^^^^351^397^[ADD] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^384^385^386^387^^351^397^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^386^387^388^389^^351^397^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^394^^^^^390^395^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof double[] )  {^386^^^^^351^397^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^391^^^^^351^397^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^379^^^^^351^397^[REPLACE] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof short[] )  {^380^^^^^351^397^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^380^381^382^383^^351^397^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof byte[] )  {^384^^^^^351^397^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof boolean[] )  {^390^^^^^351^397^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof char[] )  {^382^^^^^351^397^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof float[] )  {^388^^^^^351^397^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^385^^^^^351^397^[ADD] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^377^^^^^351^397^[REPLACE] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^378^^^^^351^397^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^382^383^384^385^^351^397^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof boolean[] )  {^390^^^^^351^397^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof float[] )  {^388^^^^^351^397^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof float[] )  {^388^^^^^351^397^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof byte[] )  {^384^^^^^351^397^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^380^^^^^351^397^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^this .isEquals (  )  ;^372^^^^^351^397^[REPLACE] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^372^^^^^351^397^[ADD] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof long[] )  {^376^^^^^351^397^[REPLACE] } else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^376^377^378^379^^351^397^[ADD] else if  ( lhs instanceof long[] )  { append (  ( long[] )  lhs,  ( long[] )  rhs ) ; } else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof int[] )  {^378^^^^^351^397^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( int[] )  lhs,  ( int[] )  rhs ) ;append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^378^379^380^381^^351^397^[ADD] else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ; } else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof char[] )  {^382^^^^^351^397^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^381^^^^^351^397^[ADD] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^382^383^384^385^^351^397^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^383^^^^^351^397^[ADD] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^385^^^^^351^397^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof int[] )  {^378^^^^^351^397^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof byte[] )  {^384^^^^^351^397^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^381^^^^^351^397^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( ! rhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^351^397^[REPLACE] if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  rhs.equals ( rhs ) ;^368^^^^^364^369^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )   &&  3 ) ;^365^^^^^351^397^[REPLACE] isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )   ||  4 ) ;^365^^^^^351^397^[REPLACE] isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  null.equals ( rhs ) ;^368^^^^^351^397^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( ! lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^351^397^[REPLACE] if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^364^365^366^^368^351^397^[ADD] if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  { isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ; } else { isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   this.setEquals ( false ) ;^370^371^372^^^351^397^[ADD] else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {  this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof long[] )  {^376^^^^^351^397^[REPLACE] } else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^379^^^^^351^397^[ADD] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof char[] )  {^382^^^^^351^397^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^this.setEquals ( true ) ;^372^^^^^351^397^[REPLACE] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )   !=  0 ) ;^365^^^^^351^397^[REPLACE] isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^365^^^^^351^397^[ADD] isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  rhs.equals ( rhs ) ;^368^^^^^351^397^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^396^^^^^351^397^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^411^^^^^410^416^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^412^^^^^410^416^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  ||  rhs ) ;^414^^^^^410^416^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^415^^^^^410^416^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  || useTransients )  {^426^^^^^425^431^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^427^^^^^425^431^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  &&  rhs ) ;^429^^^^^425^431^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^430^^^^^425^431^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  || useTransients )  {^441^^^^^440^446^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^442^^^^^440^446^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  !=  rhs ) ;^444^^^^^440^446^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^445^^^^^440^446^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( useTransients  &&  useTransients )  {^456^^^^^455^461^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^457^^^^^455^461^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  !=  rhs ) ;^459^^^^^455^461^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^460^^^^^455^461^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  false )  {^471^^^^^470^476^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^471^472^473^^^470^476^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^472^^^^^470^476^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  ||  rhs ) ;^474^^^^^470^476^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^475^^^^^470^476^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  useTransients )  {^492^^^^^491^496^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^493^^^^^491^496^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return append (   lhs   , Double.^495^^^^^491^496^[REPLACE] return append ( Double.doubleToLongBits ( lhs ) , Double.doubleToLongBits ( rhs )  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  || useTransients )  {^512^^^^^511^516^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^513^^^^^511^516^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return append (   lhs   , Float.^515^^^^^511^516^[REPLACE] return append ( Float.floatToIntBits ( lhs ) , Float.floatToIntBits ( rhs )  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^526^^^^^525^531^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^527^^^^^525^531^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  &&  rhs ) ;^529^^^^^525^531^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^530^^^^^525^531^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^544^^^^^543^562^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^545^^^^^543^562^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^547^^^^^543^562^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^548^^^^^543^562^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != false ) {^550^^^^^543^562^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^552^^^^^543^562^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^554^^^^^543^562^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^556^^^^^543^562^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length + 1 && isEquals; ++i )  {^558^^^^^543^562^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^559^^^^^543^562^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^558^^^^^543^562^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^561^^^^^543^562^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  false )  {^575^^^^^574^593^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^576^^^^^574^593^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^578^^^^^574^593^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^579^^^^^574^593^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ) {^581^^^^^574^593^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^581^582^583^584^^574^593^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^583^^^^^574^593^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 4 != rhs.length + 4 )  {^585^^^^^574^593^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^585^586^587^588^^574^593^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^587^^^^^574^593^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length /  0.5  && isEquals; ++i )  {^589^^^^^574^593^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^589^590^591^^^574^593^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^590^^^^^574^593^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^589^^^^^574^593^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^592^^^^^574^593^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  !=  true )  {^606^^^^^605^624^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^607^^^^^605^624^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^609^^^^^605^624^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^610^^^^^605^624^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != true ) {^612^^^^^605^624^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^612^^^^^605^624^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^614^^^^^605^624^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^616^^^^^605^624^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^616^617^618^619^^605^624^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^618^^^^^605^624^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length (  )  && isEquals; ++i )  {^620^^^^^605^624^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^621^^^^^605^624^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^621^^^^^605^624^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^620^^^^^605^624^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^620^621^622^^^605^624^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^623^^^^^605^624^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  true )  {^637^^^^^636^655^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^637^638^639^^^636^655^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^638^^^^^636^655^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^640^^^^^636^655^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^640^641^642^^^636^655^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^641^^^^^636^655^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != this ) {^643^^^^^636^655^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^645^^^^^636^655^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 3 != rhs.length + 3 )  {^647^^^^^636^655^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^649^^^^^636^655^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length - 4 && isEquals; ++i )  {^651^^^^^636^655^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append ( rhs[i], rhs[i] ) ;^652^^^^^636^655^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^652^^^^^636^655^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^651^^^^^636^655^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^654^^^^^636^655^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  false )  {^668^^^^^667^686^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^669^^^^^667^686^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs  ||  rhs )  {^671^^^^^667^686^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^672^^^^^667^686^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( useTransients )  {^674^^^^^667^686^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^674^^^^^667^686^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^676^^^^^667^686^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs.length + 2 != rhs.length + 2 )  {^678^^^^^667^686^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^680^^^^^667^686^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length /  2 && isEquals; ++i )  {^682^^^^^667^686^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^^682^683^684^^^667^686^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^683^^^^^667^686^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^682^^^^^667^686^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^685^^^^^667^686^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( isEquals  && useTransients )  {^699^^^^^698^717^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^700^^^^^698^717^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^702^^^^^698^717^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^702^703^704^^^698^717^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^703^^^^^698^717^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (  rhs == null )  {^705^^^^^698^717^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^705^706^707^708^^698^717^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^707^^^^^698^717^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 5 != rhs.length + 5 )  {^709^^^^^698^717^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^711^^^^^698^717^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length (  )  && isEquals; ++i )  {^713^^^^^698^717^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^713^714^715^^^698^717^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^714^^^^^698^717^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^714^^^^^698^717^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^713^^^^^698^717^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^716^^^^^698^717^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  useTransients )  {^730^^^^^729^748^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^731^^^^^729^748^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^733^^^^^729^748^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^734^^^^^729^748^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ||useTransients )  {^736^^^^^729^748^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^736^737^738^739^^729^748^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^738^^^^^729^748^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length - 4 != rhs.length - 4 )  {^740^^^^^729^748^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^742^^^^^729^748^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length *  0.5  && isEquals; ++i )  {^744^^^^^729^748^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^745^^^^^729^748^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^744^^^^^729^748^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^747^^^^^729^748^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^761^^^^^760^779^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[ADD]^^761^762^763^^^760^779^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^762^^^^^760^779^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs  &&  rhs )  {^764^^^^^760^779^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^765^^^^^760^779^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs != null ) {^767^^^^^760^779^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[ADD]^this.setEquals ( false ) ;return this;^767^768^769^770^^760^779^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^769^^^^^760^779^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^771^^^^^760^779^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[ADD]^this.setEquals ( false ) ;return this;^771^772^773^774^^760^779^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^773^^^^^760^779^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length /  2 && isEquals; ++i )  {^775^^^^^760^779^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^776^^^^^760^779^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^775^^^^^760^779^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[ADD]^^775^776^777^^^760^779^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^778^^^^^760^779^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( isEquals  &&  false )  {^792^^^^^791^810^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^^792^793^794^^^791^810^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^793^^^^^791^810^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs  !=  rhs )  {^795^^^^^791^810^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^^795^796^797^^^791^810^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^796^^^^^791^810^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  (  rhs == null )  {^798^^^^^791^810^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^798^^^^^791^810^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^800^^^^^791^810^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^802^^^^^791^810^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^this.setEquals ( false ) ;return this;^802^803^804^805^^791^810^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^804^^^^^791^810^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length (  )  && isEquals; ++i )  {^806^^^^^791^810^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^^806^807^808^^^791^810^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^append ( rhs[i], rhs[i] ) ;^807^^^^^791^810^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^806^^^^^791^810^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^809^^^^^791^810^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return false;^819^^^^^818^820^[REPLACE] return this.isEquals;^[METHOD] isEquals [TYPE] boolean [PARAMETER] [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^this.isEquals =  useTransients;^829^^^^^828^830^[REPLACE] this.isEquals = isEquals;^[METHOD] setEquals [TYPE] void [PARAMETER] boolean isEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
