[REPLACE]^private  StackTraceElement firstTraceElement;^11^^^^^^^[REPLACE] private final StackTraceElement firstTraceElement;^ [CLASS] Location  
[REPLACE]^StackTraceElement[] stackTrace = Thread .getStackTrace (  )  .getStackTrace (  ) ;^14^^^^^13^17^[REPLACE] StackTraceElement[] stackTrace = Thread.currentThread (  ) .getStackTrace (  ) ;^[METHOD] <init> [TYPE] Location() [PARAMETER] [CLASS] Location   [TYPE]  StackTraceElement firstTraceElement  [TYPE]  boolean false  true  [TYPE]  StackTraceFilter filter  [TYPE]  StackTraceElement[] stackTrace 
[REPLACE]^StackTraceElement[] stackTrace = Thread.currentThread (  ) .getStackTrace (  ) ;^15^^^^^13^17^[REPLACE] StackTraceFilter filter = new StackTraceFilter (  ) ;^[METHOD] <init> [TYPE] Location() [PARAMETER] [CLASS] Location   [TYPE]  StackTraceElement firstTraceElement  [TYPE]  boolean false  true  [TYPE]  StackTraceFilter filter  [TYPE]  StackTraceElement[] stackTrace 
[ADD]^^15^^^^^13^17^[ADD] StackTraceFilter filter = new StackTraceFilter (  ) ;^[METHOD] <init> [TYPE] Location() [PARAMETER] [CLASS] Location   [TYPE]  StackTraceElement firstTraceElement  [TYPE]  boolean false  true  [TYPE]  StackTraceFilter filter  [TYPE]  StackTraceElement[] stackTrace 
[REPLACE]^this.firstTraceElement = filter.filter ( stackTrace, true ) [0];^16^^^^^13^17^[REPLACE] this.firstTraceElement = filter.filter ( stackTrace, false ) [0];^[METHOD] <init> [TYPE] Location() [PARAMETER] [CLASS] Location   [TYPE]  StackTraceElement firstTraceElement  [TYPE]  boolean false  true  [TYPE]  StackTraceFilter filter  [TYPE]  StackTraceElement[] stackTrace 
[REPLACE]^return true ;^21^^^^^20^22^[REPLACE] return "-> at " + this.firstTraceElement.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Location   [TYPE]  StackTraceElement firstTraceElement  [TYPE]  boolean false  true 
