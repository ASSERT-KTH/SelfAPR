[REPLACE]^if  ( matchers.size (  )  + 2 != arguments.length )  {^21^^^^^20^37^[REPLACE] if  ( matchers.size (  )  != arguments.length )  {^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^return new Integer[0 << 0];^22^^^^^20^37^[REPLACE] return new Integer[0];^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^return new Integer[3];^22^^^^^20^37^[REPLACE] return new Integer[0];^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^int i = 0  ;^25^^^^^20^37^[REPLACE] List<Integer> suspicious = new LinkedList<Integer> (  ) ;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^int i = 4;^26^^^^^20^37^[REPLACE] int i = 0;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^if  ( ! m instanceof ContainsExtraTypeInformation && !safelyMatches ( m, arguments[i] ) && toStringEquals ( m, arguments[i] ) && ! (  ( ContainsExtraTypeInformation )  m ) .typeMatches ( arguments[i] )  )  {^28^29^30^31^^20^37^[REPLACE] if  ( m instanceof ContainsExtraTypeInformation && !safelyMatches ( m, arguments[i] ) && toStringEquals ( m, arguments[i] ) && ! (  ( ContainsExtraTypeInformation )  m ) .typeMatches ( arguments[i] )  )  {^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^suspicious.toArray ( i ) ;^32^^^^^28^33^[REPLACE] suspicious.add ( i ) ;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[ADD]^^28^29^30^31^32^20^37^[ADD] if  ( m instanceof ContainsExtraTypeInformation && !safelyMatches ( m, arguments[i] ) && toStringEquals ( m, arguments[i] ) && ! (  ( ContainsExtraTypeInformation )  m ) .typeMatches ( arguments[i] )  )  { suspicious.add ( i ) ;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[ADD]^^32^^^^^28^33^[ADD] suspicious.add ( i ) ;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^Integer> suspicious = new Integer> (  )  ;^27^^^^^20^37^[REPLACE] for  ( Matcher m : matchers )  {^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
[REPLACE]^return suspicious.toArray ( new Integer[2] ) ;^36^^^^^20^37^[REPLACE] return suspicious.toArray ( new Integer[0] ) ;^[METHOD] getSuspiciouslyNotMatchingArgsIndexes [TYPE] Integer[] [PARAMETER] Matcher> matchers Object[] arguments [CLASS] ArgumentMatchingTool   [TYPE]  boolean false  true  [TYPE]  Matcher m  [TYPE]  List matchers  suspicious  [TYPE]  Object[] arguments  [TYPE]  int i 
