[REPLACE]^if  (wantedCount  >  0 )  {^25^^^^^24^29^[REPLACE] if  ( wantedNumberOfInvocations < 0 )  {^[METHOD] <init> [TYPE] Times(int) [PARAMETER] int wantedNumberOfInvocations [CLASS] Times   [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  boolean false  true 
[REPLACE]^return ;^26^^^^^24^29^[REPLACE] throw new MockitoException  (" ")  ;^[METHOD] <init> [TYPE] Times(int) [PARAMETER] int wantedNumberOfInvocations [CLASS] Times   [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  boolean false  true 
[ADD]^^26^^^^^24^29^[ADD] throw new MockitoException  (" ")  ;^[METHOD] <init> [TYPE] Times(int) [PARAMETER] int wantedNumberOfInvocations [CLASS] Times   [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  boolean false  true 
[REPLACE]^this.wantedCount =  wantedCount;^28^^^^^24^29^[REPLACE] this.wantedCount = wantedNumberOfInvocations;^[METHOD] <init> [TYPE] Times(int) [PARAMETER] int wantedNumberOfInvocations [CLASS] Times   [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  boolean false  true 
[REPLACE]^if  (wantedNumberOfInvocations  <=  0 )  {^32^^^^^31^38^[REPLACE] if  ( wantedCount > 0 )  {^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker (  ) ;^33^^^^^31^38^[REPLACE] MissingInvocationChecker missingInvocation = new MissingInvocationChecker (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker (  ) ;^36^^^^^31^38^[REPLACE] NumberOfInvocationsChecker numberOfInvocations = new NumberOfInvocationsChecker (  ) ;^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^numberOfInvocations .check ( null , null , 1 )  , wantedCount ) ;^37^^^^^31^38^[REPLACE] numberOfInvocations.check ( data.getAllInvocations (  ) , data.getWanted (  ) , wantedCount ) ;^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^numberOfInvocations.check ( data.getWanted (  ) , data.getWanted (  ) , wantedCount ) ;^37^^^^^31^38^[REPLACE] numberOfInvocations.check ( data.getAllInvocations (  ) , data.getWanted (  ) , wantedCount ) ;^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^numberOfInvocations.check ( data.getAllInvocations (  ) , data .getAllInvocations (  )  , wantedCount ) ;^37^^^^^31^38^[REPLACE] numberOfInvocations.check ( data.getAllInvocations (  ) , data.getWanted (  ) , wantedCount ) ;^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REMOVE]^InvocationMatcher wanted = data.getWanted (  ) ;^37^^^^^31^38^[REMOVE] ^[METHOD] verify [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  MissingInvocationChecker missingInvocation  [TYPE]  NumberOfInvocationsChecker numberOfInvocations  [TYPE]  boolean false  true  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data 
[REPLACE]^List<Invocation> allInvocations = data.getWanted (  ) ;^41^^^^^40^50^[REPLACE] List<Invocation> allInvocations = data.getAllInvocations (  ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^InvocationMatcher wanted = data.getAllInvocations (  ) ;^42^^^^^40^50^[REPLACE] InvocationMatcher wanted = data.getWanted (  ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[ADD]^^42^^^^^40^50^[ADD] InvocationMatcher wanted = data.getWanted (  ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^if  ( wantedCount  <  0 >>> 1 )  {^44^^^^^40^50^[REPLACE] if  ( wantedCount > 0 )  {^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[ADD]^^44^45^46^47^^40^50^[ADD] if  ( wantedCount > 0 )  { MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker (  ) ; missingInvocation.check ( allInvocations, wanted, this ) ; }^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^MissingInvocationChecker missingInvocation = new MissingInvocationChecker (  ) ;^45^^^^^40^50^[REPLACE] MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker (  ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^NumberOfInvocationsChecker numberOfInvocations = new NumberOfInvocationsChecker (  ) ;^48^^^^^40^50^[REPLACE] NumberOfInvocationsInOrderChecker numberOfCalls = new NumberOfInvocationsInOrderChecker (  ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^numberOfCalls.check ( null, wanted, wantedCount ) ;^49^^^^^40^50^[REPLACE] numberOfCalls.check ( allInvocations, wanted, wantedCount ) ;^[METHOD] verifyInOrder [TYPE] void [PARAMETER] VerificationData data [CLASS] Times   [TYPE]  boolean false  true  [TYPE]  NumberOfInvocationsInOrderChecker numberOfCalls  [TYPE]  InvocationMatcher wanted  [TYPE]  List allInvocations  [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  VerificationData data  [TYPE]  MissingInvocationInOrderChecker missingInvocation 
[REPLACE]^return "Wanted invocations count: " +true;^54^^^^^53^55^[REPLACE] return "Wanted invocations count: " + wantedCount;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Times   [TYPE]  int wantedCount  wantedNumberOfInvocations  [TYPE]  boolean false  true 
