[REPLACE]^Location lastInvocation = finder.getLastLocation ( chunk ) ;^22^^^^^21^23^[REPLACE] this ( new InvocationsFinder (  ) , new Reporter (  )  ) ;^[METHOD] <init> [TYPE] NumberOfInvocationsInOrderChecker() [PARAMETER] [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  boolean false  true 
[REPLACE]^this.finder =  null;^26^^^^^25^28^[REPLACE] this.finder = finder;^[METHOD] <init> [TYPE] Reporter) [PARAMETER] InvocationsFinder finder Reporter reporter [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  boolean false  true 
[REPLACE]^this.reporter =  null;^27^^^^^25^28^[REPLACE] this.reporter = reporter;^[METHOD] <init> [TYPE] Reporter) [PARAMETER] InvocationsFinder finder Reporter reporter [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  boolean false  true 
[ADD]^^27^^^^^25^28^[ADD] this.reporter = reporter;^[METHOD] <init> [TYPE] Reporter) [PARAMETER] InvocationsFinder finder Reporter reporter [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  boolean false  true 
[REPLACE]^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, actualCount ) ;^31^^^^^30^46^[REPLACE] List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^int actualCount = null.size (  ) ;^33^^^^^30^46^[REPLACE] int actualCount = chunk.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^if  ( wantedCount  ==  actualCount )  {^35^^^^^30^46^[REPLACE] if  ( wantedCount > actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^35^36^37^38^39^30^46^[ADD] if  ( wantedCount > actualCount )  { Location lastInvocation = finder.getLastLocation ( chunk ) ; reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ; } else if  ( wantedCount < actualCount )  { Location firstUndesired = chunk.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  ( wantedCount  >  actualCount )  {^38^^^^^30^46^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = chunk.get ( actualCount ) .getLocation (  ) ;^39^^^^^30^46^[REPLACE] Location firstUndesired = chunk.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location lastInvocation = finder .InvocationsFinder (  )  ;^36^^^^^30^46^[REPLACE] Location lastInvocation = finder.getLastLocation ( chunk ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  ( wantedCount  >=  actualCount )  {^38^^^^^30^46^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location lastInvocation = finder.getLastLocation ( null ) ;^36^^^^^30^46^[REPLACE] Location lastInvocation = finder.getLastLocation ( chunk ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location lastInvocation = finder.getLastLocation ( chunk ) ;^43^^^^^30^46^[REPLACE] for  ( Invocation i : chunk )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^43^44^45^^^30^46^[ADD] for  ( Invocation i : chunk )  { i.markVerifiedInOrder (  ) ; }^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
