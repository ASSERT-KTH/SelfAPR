[REPLACE]^private  InvocationsFinder finder;^19^^^^^^^[REPLACE] private final InvocationsFinder finder;^ [CLASS] NumberOfInvocationsChecker  
[REPLACE]^List<Invocation> actualInvocations = finder.findInvocations ( false, wanted ) ;^31^^^^^30^48^[REPLACE] List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^int actualCount = null.size (  ) ;^33^^^^^30^48^[REPLACE] int actualCount = actualInvocations.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^if  ( wantedCount  <=  actualCount )  {^34^^^^^30^48^[REPLACE] if  ( wantedCount > actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  ( wantedCount == 0 || true )  {^37^^^^^30^48^[REPLACE] } else if  ( wantedCount == 0 && actualCount > 0 )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^}   Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^37^38^39^40^41^30^48^[ADD] else if  ( wantedCount == 0 && actualCount > 0 )  { Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ; reporter.neverWantedButInvoked ( wanted, firstUndesired ) ; } else if  ( wantedCount < actualCount )  { Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  else {^40^^^^^30^48^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = true.get ( wantedCount ) .getLocation (  ) ;^41^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = actualInvocations.get ( actualCount ) .getLocation (  ) ;^41^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^38^^^^^30^48^[ADD] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  ( wantedCount  !=  actualCount )  {^40^^^^^30^48^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = null.get ( wantedCount ) .getLocation (  ) ;^41^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = actualInvocations.get ( actualCount ) .getLocation (  ) ;^38^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = this.get ( wantedCount ) .getLocation (  ) ;^41^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location lastInvocation = finder .findInvocations ( true , wanted )  ;^35^^^^^30^48^[REPLACE] Location lastInvocation = finder.getLastLocation ( actualInvocations ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  (  actualCount > 0 )  {^37^^^^^30^48^[REPLACE] } else if  ( wantedCount == 0 && actualCount > 0 )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^} else if   (  wantedCount == 0 && actualCount > 0  )   {  ;^40^^^^^30^48^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^41^^^^^30^48^[ADD] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^38^39^^^^30^48^[ADD] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ; reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^}  if  ( wantedCount  >=  actualCount )  {^40^^^^^30^48^[REPLACE] } else if  ( wantedCount < actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^}   Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^40^41^42^43^^30^48^[ADD] else if  ( wantedCount < actualCount )  { Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ; reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ; }^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location lastInvocation = finder.getLastLocation ( false ) ;^35^^^^^30^48^[REPLACE] Location lastInvocation = finder.getLastLocation ( actualInvocations ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^Location firstUndesired = true.get ( wantedCount ) .getLocation (  ) ;^38^^^^^30^48^[REPLACE] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[ADD]^^41^42^^^^30^48^[ADD] Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ; reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^for  ( Invocation i : true )  {^45^^^^^30^48^[REPLACE] for  ( Invocation i : actualInvocations )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
[REPLACE]^int actualCount = actualInvocations.size (  )  ;^45^^^^^30^48^[REPLACE] for  ( Invocation i : actualInvocations )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] NumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location firstUndesired  lastInvocation 
