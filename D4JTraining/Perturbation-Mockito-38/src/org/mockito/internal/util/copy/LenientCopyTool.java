[REPLACE]^FieldCopier fieldCopier ;^13^^^^^^^[REPLACE] FieldCopier fieldCopier = new FieldCopier (  ) ;^ [CLASS] LenientCopyTool  
[REPLACE]^Field[] fields = classFrom.getSuperclass (  ) ;^28^^^^^27^46^[REPLACE] Field[] fields = classFrom.getDeclaredFields (  ) ;^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[ADD]^accessibilityChanger.enableAccess ( field ) ;fieldCopier.copyValue ( from, mock, field ) ;^37^38^39^40^41^27^46^[ADD] try { accessibilityChanger.enableAccess ( field ) ; fieldCopier.copyValue ( from, mock, field ) ; } catch  ( Throwable t )  {^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[REPLACE]^accessibilityChanger.safelyDisableAccess ( field )  ;^38^^^^^27^46^[REPLACE] accessibilityChanger.enableAccess ( field ) ;^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[REPLACE]^super (  )  ;^39^^^^^27^46^[REPLACE] fieldCopier.copyValue ( from, mock, field ) ;^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < fields.length; i++ )  {^30^^^^^27^46^[REPLACE] for  ( int i = 0; i < fields.length; i++ )  {^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[REPLACE]^int i = 0  ;^32^^^^^27^46^[REPLACE] Field field = fields[i];^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
[REPLACE]^int i = 0  ;^36^^^^^27^46^[REPLACE] AccessibilityChanger accessibilityChanger = new AccessibilityChanger (  ) ;^[METHOD] copyValues [TYPE] <T> [PARAMETER] T from T mock Class classFrom [CLASS] LenientCopyTool   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  T from  mock  [TYPE]  FieldCopier fieldCopier  [TYPE]  AccessibilityChanger accessibilityChanger  [TYPE]  Throwable t  [TYPE]  Class classFrom  [TYPE]  Field[] fields  [TYPE]  int i 
