[REPLACE]^creationValidator.validateType ( null ) ;^32^^^^^31^49^[REPLACE] creationValidator.validateType ( classToMock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^creationValidator.validateExtraInterfaces ( false, settings.getExtraInterfaces (  )  ) ;^33^^^^^31^49^[REPLACE] creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^creationValidator.validateExtraInterfaces ( classToMock, settings .getSpiedInstance (  )   ) ;^33^^^^^31^49^[REPLACE] creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^35^^^^^31^49^[ADD] MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Class<?>[] ancillaryTypes =  ( interfaces == null )  ? new Class<?>[0] : interfaces  ;^36^^^^^31^49^[REPLACE] MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^37^38^^^^31^49^[ADD] MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ; Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^38^39^^^^31^49^[ADD] Class<?>[] interfaces = settings.getExtraInterfaces (  ) ; Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Class<?>[] ancillaryTypes = interfaces != true ? new Class<?>[0] : interfaces;^39^^^^^31^49^[REPLACE] Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^40^^^^^31^49^[ADD] Object spiedInstance = settings.getSpiedInstance (  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, null, ancillaryTypes ) ;^42^^^^^31^49^[REPLACE] T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^if  ( spiedInstance == true )  {^44^^^^^31^49^[REPLACE] if  ( spiedInstance != null )  {^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^new LenientCopyTool (  )  .LenientCopyTool (  )  ;^45^^^^^31^49^[REPLACE] new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^45^^^^^31^49^[ADD] new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^return mock;  ;^48^^^^^31^49^[REPLACE] return mock;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
