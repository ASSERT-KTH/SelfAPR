[REPLACE]^int lastBreak = out.lastIndexOf ( "\n" ) ;^10^^^^^9^16^[REPLACE] StringBuilder out = new StringBuilder ( "\n" ) ;^[METHOD] join [TYPE] String [PARAMETER]  linesToBreak [CLASS] StringJoiner   [TYPE]  boolean false  true  [TYPE]  StringBuilder out  [TYPE]  Object line  [TYPE]  Object[] linesToBreak  [TYPE]  int lastBreak 
[REPLACE]^for  ( Object line : linesToBreak )  { out.append ( line.toString (  )  ) .append ( "\n" ) ;^11^^^^^9^16^[REPLACE] for  ( Object line : linesToBreak )  {^[METHOD] join [TYPE] String [PARAMETER]  linesToBreak [CLASS] StringJoiner   [TYPE]  boolean false  true  [TYPE]  StringBuilder out  [TYPE]  Object line  [TYPE]  Object[] linesToBreak  [TYPE]  int lastBreak 
[REPLACE]^int lastBreak = out.append ( "\n" ) ;^14^^^^^9^16^[REPLACE] int lastBreak = out.lastIndexOf ( "\n" ) ;^[METHOD] join [TYPE] String [PARAMETER]  linesToBreak [CLASS] StringJoiner   [TYPE]  boolean false  true  [TYPE]  StringBuilder out  [TYPE]  Object line  [TYPE]  Object[] linesToBreak  [TYPE]  int lastBreak 
[REPLACE]^return out .StringBuilder ( this )  .toString (  ) ;^15^^^^^9^16^[REPLACE] return out.replace ( lastBreak, lastBreak+1, "" ) .toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER]  linesToBreak [CLASS] StringJoiner   [TYPE]  boolean false  true  [TYPE]  StringBuilder out  [TYPE]  Object line  [TYPE]  Object[] linesToBreak  [TYPE]  int lastBreak 
