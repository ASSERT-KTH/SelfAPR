[REPLACE]^private static final long serialVersionUID  = null ;^50^^^^^^^[REPLACE] private static final long serialVersionUID = 9386874258972L;^ [CLASS] BaseSingleFieldPeriod  
[REPLACE]^private  long  iPeriod;^53^^^^^^^[REPLACE] private int iPeriod;^ [CLASS] BaseSingleFieldPeriod  
[REPLACE]^period.add ( this ) ;^155^^^^^154^157^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] BaseSingleFieldPeriod(int) [PARAMETER] int period [CLASS] BaseSingleFieldPeriod   [TYPE]  long serialVersionUID  [TYPE]  int iPeriod  period  [TYPE]  boolean false  true 
[REPLACE]^iPeriod =  null;^156^^^^^154^157^[REPLACE] iPeriod = period;^[METHOD] <init> [TYPE] BaseSingleFieldPeriod(int) [PARAMETER] int period [CLASS] BaseSingleFieldPeriod   [TYPE]  long serialVersionUID  [TYPE]  int iPeriod  period  [TYPE]  boolean false  true 
[REPLACE]^if  (  end == null )  {^66^^^^^65^72^[REPLACE] if  ( start == null || end == null )  {^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[ADD]^^66^67^68^^^65^72^[ADD] if  ( start == null || end == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^67^^^^^65^72^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[REPLACE]^Chronology chrono = DateTimeUtils.isContiguous ( start ) ;^69^^^^^65^72^[REPLACE] Chronology chrono = DateTimeUtils.getInstantChronology ( start ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[ADD]^^69^^^^^65^72^[ADD] Chronology chrono = DateTimeUtils.getInstantChronology ( start ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[REPLACE]^int amount = field.getField ( chrono ) .getField ( end.getMillis (  ) , start.getMillis (  )  ) ;^70^^^^^65^72^[REPLACE] int amount = field.getField ( chrono ) .getDifference ( end.getMillis (  ) , start.getMillis (  )  ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[REPLACE]^return total;^71^^^^^65^72^[REPLACE] return amount;^[METHOD] between [TYPE] int [PARAMETER] ReadableInstant start ReadableInstant end DurationFieldType field [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadableInstant end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  iPeriod  period  [TYPE]  DurationFieldType field 
[REPLACE]^if  (  end == true )  {^88^^^^^87^105^[REPLACE] if  ( start == null || end == null )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^89^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^return ;^89^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^89^^^^^87^105^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^if  ( start.length (  )  != end.length (  )  )  {^91^^^^^87^105^[REPLACE] if  ( start.size (  )  != end.size (  )  )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^91^92^93^^^87^105^[ADD] if  ( start.size (  )  != end.size (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^return ;^92^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^92^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^92^^^^^87^105^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^if  ( start.getFieldType ( i )   ==  end.getFieldType ( i )  )  {^95^^^^^87^105^[REPLACE] if  ( start.getFieldType ( i )  != end.getFieldType ( i )  )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^96^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^for  ( int i = 0, isize = start.size (  )  *  0.5 ; i < isize; i++ )  {^94^^^^^87^105^[REPLACE] for  ( int i = 0, isize = start.size (  ) ; i < isize; i++ )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^94^95^96^97^^87^105^[ADD] for  ( int i = 0, isize = start.size (  ) ; i < isize; i++ )  { if  ( start.getFieldType ( i )  != end.getFieldType ( i )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^return ;^96^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^96^^^^^87^105^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^for  ( int i = 0 , isize = start.size (  ) ; i < isize; i++ )  {^94^^^^^87^105^[REPLACE] for  ( int i = 0, isize = start.size (  ) ; i < isize; i++ )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^for  ( int i = 0, .getChronology = start.size (  ) ; i < isize; i++ )  {^94^^^^^87^105^[REPLACE] for  ( int i = 0, isize = start.size (  ) ; i < isize; i++ )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^if  ( DateTimeUtils.getInstantChronology ( start )   &&  false )  {^99^^^^^87^105^[REPLACE] if  ( DateTimeUtils.isContiguous ( start )  == false )  {^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^99^100^101^^^87^105^[ADD] if  ( DateTimeUtils.isContiguous ( start )  == false )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^return ;^100^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^100^^^^^87^105^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  )  .getDifference (  )  ;^102^^^^^87^105^[REPLACE] Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) .withUTC (  ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^int[] values = chrono.get ( zeroInstance, chrono.set ( start, 0 ) , chrono.set ( end, 0 )  ) ;^103^^^^^87^105^[REPLACE] int[] values = chrono.get ( zeroInstance, chrono.set ( start, 0L ) , chrono.set ( end, 0L )  ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[ADD]^^103^^^^^87^105^[ADD] int[] values = chrono.get ( zeroInstance, chrono.set ( start, 0L ) , chrono.set ( end, 0L )  ) ;^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^return values[4];^104^^^^^87^105^[REPLACE] return values[0];^[METHOD] between [TYPE] int [PARAMETER] ReadablePartial start ReadablePartial end ReadablePeriod zeroInstance [CLASS] BaseSingleFieldPeriod   [TYPE]  ReadablePartial end  start  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod zeroInstance  [TYPE]  int[] values  [TYPE]  Chronology chrono  [TYPE]  long serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period 
[REPLACE]^if  ( period != true )  {^128^^^^^127^146^[REPLACE] if  ( period == null )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^return 2;^129^^^^^127^146^[REPLACE] return 0;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^return 0 - 3;^129^^^^^127^146^[REPLACE] return 0;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) .withUTC (  ) ;^131^^^^^127^146^[REPLACE] Chronology iso = ISOChronology.getInstanceUTC (  ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^long duration = 0;^132^^^^^127^146^[REPLACE] long duration = 0L;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^if  ( value  ==  2 )  {^135^^^^^127^146^[REPLACE] if  ( value != 0 )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^if  ( field.isPrecise (  )   ||  true )  {^137^^^^^127^146^[REPLACE] if  ( field.isPrecise (  )  == false )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^throw new IllegalArgumentException ( "Cannot convert period to duration as " + field.getName (  )  + ;^138^139^140^^^127^146^[REPLACE] throw new IllegalArgumentException ( "Cannot convert period to duration as " + field.getName (  )  + " is not precise in the period " + period ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^"Cannot convert period to duration as " + field .getUnitMillis (  )   + " is not precise in the period " + period ) ;^139^140^^^^127^146^[REPLACE] "Cannot convert period to duration as " + field.getName (  )  + " is not precise in the period " + period ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^duration =  FieldUtils.safeAdd ( serialVersionUID, FieldUtils.safeMultiply ( field.getUnitMillis (  ) , value )  ) ;^142^^^^^127^146^[REPLACE] duration = FieldUtils.safeAdd ( duration, FieldUtils.safeMultiply ( field.getUnitMillis (  ) , value )  ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^DurationField field = period.getValue ( i ) .getField ( iso ) ;^136^^^^^127^146^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( iso ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^return ;^138^139^140^^^127^146^[REPLACE] throw new IllegalArgumentException ( "Cannot convert period to duration as " + field.getName (  )  + " is not precise in the period " + period ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^if  ( field.isPrecise (  )   !=  false )  {^137^^^^^127^146^[REPLACE] if  ( field.isPrecise (  )  == false )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^for  ( int i = 0; i < period.size (  )  - 1; i++ )  {^133^^^^^127^146^[REPLACE] for  ( int i = 0; i < period.size (  ) ; i++ )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^if  ( value  ==  0 )  {^135^^^^^127^146^[REPLACE] if  ( value != 0 )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[ADD]^^137^138^139^140^141^127^146^[ADD] if  ( field.isPrecise (  )  == false )  { throw new IllegalArgumentException ( "Cannot convert period to duration as " + field.getName (  )  + " is not precise in the period " + period ) ; }^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[ADD]^^138^139^140^^^127^146^[ADD] throw new IllegalArgumentException ( "Cannot convert period to duration as " + field.getName (  )  + " is not precise in the period " + period ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[ADD]^^142^^^^^127^146^[ADD] duration = FieldUtils.safeAdd ( duration, FieldUtils.safeMultiply ( field.getUnitMillis (  ) , value )  ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^MutablePeriod period = new MutablePeriod (  ) ;^136^^^^^127^146^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( iso ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^int value = period.getFieldType ( i ) ;^134^^^^^127^146^[REPLACE] int value = period.getValue ( i ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^for  ( int i = 0 ; i < period.size (  ) ; i++ )  {^133^^^^^127^146^[REPLACE] for  ( int i = 0; i < period.size (  ) ; i++ )  {^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^int value = period.getValue ( isize ) ;^134^^^^^127^146^[REPLACE] int value = period.getValue ( i ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[ADD]^^136^^^^^127^146^[ADD] DurationField field = period.getFieldType ( i ) .getField ( iso ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^return FieldUtils.safeToInt ( serialVersionUID /serialVersionUID ) ;^145^^^^^127^146^[REPLACE] return FieldUtils.safeToInt ( duration / millisPerUnit ) ;^[METHOD] standardPeriodIn [TYPE] int [PARAMETER] ReadablePeriod period long millisPerUnit [CLASS] BaseSingleFieldPeriod   [TYPE]  Chronology iso  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value 
[REPLACE]^return period;^166^^^^^165^167^[REPLACE] return iPeriod;^[METHOD] getValue [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^iPeriod =  null;^176^^^^^175^177^[REPLACE] iPeriod = value;^[METHOD] setValue [TYPE] void [PARAMETER] int value [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^return 0;^201^^^^^200^202^[REPLACE] return 1;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^if  (isize  ==  0 )  {^215^^^^^214^219^[REPLACE] if  ( index != 0 )  {^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^216^^^^^214^219^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[ADD]^^216^^^^^214^219^[ADD] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^throw new ClassCastException  (" ")  ;^216^^^^^214^219^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^216^^^^^214^219^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^return total;^218^^^^^214^219^[REPLACE] return getFieldType (  ) ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  ==  0 )  {^231^^^^^230^235^[REPLACE] if  ( index != 0 )  {^[METHOD] getValue [TYPE] int [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[ADD]^^231^232^233^^^230^235^[ADD] if  ( index != 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[METHOD] getValue [TYPE] int [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^232^^^^^230^235^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getValue [TYPE] int [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^throw new ClassCastException  (" ")  ;^232^^^^^230^235^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] getValue [TYPE] int [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^return total;^234^^^^^230^235^[REPLACE] return getValue (  ) ;^[METHOD] getValue [TYPE] int [PARAMETER] int index [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( type  ||  getFieldType (  )  )  {^247^^^^^246^251^[REPLACE] if  ( type == getFieldType (  )  )  {^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  DurationFieldType type 
[ADD]^return getValue (  ) ;^247^248^249^^^246^251^[ADD] if  ( type == getFieldType (  )  )  { return getValue (  ) ; }^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  DurationFieldType type 
[REPLACE]^return total;^248^^^^^246^251^[REPLACE] return getValue (  ) ;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  DurationFieldType type 
[REPLACE]^return 1;^250^^^^^246^251^[REPLACE] return 0;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  DurationFieldType type 
[REPLACE]^return  ( type  ||  getFieldType (  )  ) ;^260^^^^^259^261^[REPLACE] return  ( type == getFieldType (  )  ) ;^[METHOD] isSupported [TYPE] boolean [PARAMETER] DurationFieldType type [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  DurationFieldType type 
[REPLACE]^return   this   ;^271^^^^^270^272^[REPLACE] return Period.ZERO.withFields ( this ) ;^[METHOD] toPeriod [TYPE] Period [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value  [TYPE]  boolean false  true 
[REPLACE]^DurationField field = period.getFieldType ( i ) .getField ( iso ) ;^283^^^^^282^286^[REPLACE] MutablePeriod period = new MutablePeriod (  ) ;^[METHOD] toMutablePeriod [TYPE] MutablePeriod [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  MutablePeriod period  [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^int value = period.getValue ( i ) ;^284^^^^^282^286^[REPLACE] period.add ( this ) ;^[METHOD] toMutablePeriod [TYPE] MutablePeriod [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  MutablePeriod period  [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[ADD]^^284^^^^^282^286^[ADD] period.add ( this ) ;^[METHOD] toMutablePeriod [TYPE] MutablePeriod [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  MutablePeriod period  [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^return iPeriod;^285^^^^^282^286^[REPLACE] return period;^[METHOD] toMutablePeriod [TYPE] MutablePeriod [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  MutablePeriod period  [TYPE]  boolean false  true  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^if  ( this  ||  period )  {^299^^^^^298^307^[REPLACE] if  ( this == period )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^return false;^300^^^^^298^307^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^if  ( ! period instanceof ReadablePeriod == false )  {^302^^^^^298^307^[REPLACE] if  ( period instanceof ReadablePeriod == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^return true;^303^^^^^298^307^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^MutablePeriod period = new MutablePeriod (  ) ;^305^^^^^298^307^[REPLACE] ReadablePeriod other =  ( ReadablePeriod )  period;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[ADD]^^305^^^^^298^307^[ADD] ReadablePeriod other =  ( ReadablePeriod )  period;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^return  ( other.getFieldType (  )  == getPeriodType (  )  && other.getValue ( 2 )  == getValue (  )  ) ;^306^^^^^298^307^[REPLACE] return  ( other.getPeriodType (  )  == getPeriodType (  )  && other.getValue ( 0 )  == getValue (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] BaseSingleFieldPeriod   [TYPE]  Object period  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  value 
[REPLACE]^int total = 12;^315^^^^^314^319^[REPLACE] int total = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  total  value  [TYPE]  boolean false  true 
[REPLACE]^total = 27 * total +total (  ) ;^316^^^^^314^319^[REPLACE] total = 27 * total + getValue (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  total  value  [TYPE]  boolean false  true 
[REPLACE]^total = 27 * total  <=  getFieldType (  ) .hashCode (  ) ;^317^^^^^314^319^[REPLACE] total = 27 * total + getFieldType (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  total  value  [TYPE]  boolean false  true 
[ADD]^^317^^^^^314^319^[ADD] total = 27 * total + getFieldType (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  total  value  [TYPE]  boolean false  true 
[REPLACE]^return amount;^318^^^^^314^319^[REPLACE] return total;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BaseSingleFieldPeriod   [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  period  total  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( other.getClass (  )   ==  getClass (  )  )  {^330^^^^^329^342^[REPLACE] if  ( other.getClass (  )  != getClass (  )  )  {^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^331^^^^^329^342^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ;^331^^^^^329^342^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REMOVE]^throw new IndexOutOfBoundsException  (" ")  ;^331^^^^^329^342^[REMOVE] ^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[ADD]^^331^^^^^329^342^[ADD] throw new ClassCastException  (" ")  ;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^int otherValue = other.getFieldType (  ) ;^333^^^^^329^342^[REPLACE] int otherValue = other.getValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^int total = 17;^334^^^^^329^342^[REPLACE] int thisValue = getValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^if  ( thisValue  <  otherValue )  {^335^^^^^329^342^[REPLACE] if  ( thisValue > otherValue )  {^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[ADD]^return 1;^335^336^337^^^329^342^[ADD] if  ( thisValue > otherValue )  { return 1; }^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^return 2;^336^^^^^329^342^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^return 1 - 2;^336^^^^^329^342^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^if  (value  >  value )  {^338^^^^^329^342^[REPLACE] if  ( thisValue < otherValue )  {^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^return -0;^339^^^^^329^342^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^return -2;^339^^^^^329^342^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
[REPLACE]^return 4;^341^^^^^329^342^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] BaseSingleFieldPeriod other [CLASS] BaseSingleFieldPeriod   [TYPE]  boolean false  true  [TYPE]  BaseSingleFieldPeriod other  [TYPE]  long duration  millisPerUnit  serialVersionUID  [TYPE]  int amount  i  iPeriod  index  isize  otherValue  period  thisValue  total  value 
