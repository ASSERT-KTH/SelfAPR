[REPLACE]^private static  long serialVersionUID = -4677223814028011723;^33^^^^^^^[REPLACE] private static final long serialVersionUID = -4677223814028011723L;^ [CLASS] BasicDayOfMonthDateTimeField  
[REPLACE]^private  BasicChronology iChronology;^35^^^^^^^[REPLACE] private final BasicChronology iChronology;^ [CLASS] BasicDayOfMonthDateTimeField  
[REPLACE]^super ( DateTimeFieldType.year (  ) , days ) ;^41^^^^^40^43^[REPLACE] super ( DateTimeFieldType.dayOfMonth (  ) , days ) ;^[METHOD] <init> [TYPE] DurationField) [PARAMETER] BasicChronology chronology DurationField days [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  boolean false  true  [TYPE]  DurationField days  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^iChronology =  null;^42^^^^^40^43^[REPLACE] iChronology = chronology;^[METHOD] <init> [TYPE] DurationField) [PARAMETER] BasicChronology chronology DurationField days [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  boolean false  true  [TYPE]  DurationField days  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^return iChronology .dayOfMonth (  )  ;^47^^^^^46^48^[REPLACE] return iChronology.getDayOfMonth ( instant ) ;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.dayOfMonth (  ) ;^51^^^^^50^52^[REPLACE] return iChronology.months (  ) ;^[METHOD] getRangeDurationField [TYPE] DurationField [PARAMETER] [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 3;^55^^^^^54^56^[REPLACE] return 1;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.dayOfMonth (  ) ;^59^^^^^58^60^[REPLACE] return iChronology.getDaysInMonthMax (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.getDayOfMonth ( instant ) ;^63^^^^^62^64^[REPLACE] return iChronology.getDaysInMonthMax ( instant ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] long instant [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^if  ( partial.isSupported ( DateTimeFieldType.year (  )  )  )  {^67^^^^^66^76^[REPLACE] if  ( partial.isSupported ( DateTimeFieldType.monthOfYear (  )  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[ADD]^int month = partial.get ( DateTimeFieldType.monthOfYear (  )  ) ;int year = partial.get ( DateTimeFieldType.year (  )  ) ;return iChronology.getDaysInYearMonth ( year, month ) ;^67^68^69^70^71^66^76^[ADD] if  ( partial.isSupported ( DateTimeFieldType.monthOfYear (  )  )  )  { int month = partial.get ( DateTimeFieldType.monthOfYear (  )  ) ; if  ( partial.isSupported ( DateTimeFieldType.year (  )  )  )  { int year = partial.get ( DateTimeFieldType.year (  )  ) ; return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^if  ( partial.isSupported ( DateTimeFieldType.monthOfYear (  )  )  )  {^69^^^^^66^76^[REPLACE] if  ( partial.isSupported ( DateTimeFieldType.year (  )  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REMOVE]^if  (  ( partial.getFieldType ( i )  )  ==  ( monthOfYear (  )  )  )  {     int month = values[i];     for  ( int j = 0; j < size; j++ )  {         if  (  ( partial.getFieldType ( j )  )  ==  ( year (  )  )  )  {             int year = values[j];             return iChronology.getDaysInYearMonth ( year, month ) ;         }     }     return iChronology.getDaysInMonthMax ( month ) ; }^69^^^^^66^76^[REMOVE] ^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology .getDayOfMonth ( instant )  ;^71^^^^^66^76^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^int year = partial.getFieldType ( DateTimeFieldType.year (  )  ) ;^70^^^^^66^76^[REPLACE] int year = partial.get ( DateTimeFieldType.year (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[ADD]^return iChronology.getDaysInYearMonth ( year, month ) ;^70^71^^^^66^76^[ADD] int year = partial.get ( DateTimeFieldType.year (  )  ) ; return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology.getDaysInMonthMaxForSet ( year, month ) ;^71^^^^^66^76^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology .getDaysInMonthMaxForSet ( serialVersionUID , year )  ;^73^^^^^66^76^[REPLACE] return iChronology.getDaysInMonthMax ( month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^int month = partial .getMaximumValue ( instant )  ;^68^^^^^66^76^[REPLACE] int month = partial.get ( DateTimeFieldType.monthOfYear (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[ADD]^^68^^^^^66^76^[ADD] int month = partial.get ( DateTimeFieldType.monthOfYear (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^int.monthOfYear = partial.get ( DateTimeFieldType.year (  )  ) ;^70^^^^^66^76^[REPLACE] int year = partial.get ( DateTimeFieldType.year (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^if  ( partial .size (  )   )  {^69^^^^^66^76^[REPLACE] if  ( partial.isSupported ( DateTimeFieldType.year (  )  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology .getDayOfMonth ( serialVersionUID )  ;^71^^^^^66^76^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology.getDaysInMonthMax (  ) ;^73^^^^^66^76^[REPLACE] return iChronology.getDaysInMonthMax ( month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^int month = partial.get ( DateTimeFieldType.year (  )  ) ;^68^^^^^66^76^[REPLACE] int month = partial.get ( DateTimeFieldType.monthOfYear (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^return iChronology.getDaysInYearMonth ( year, month ) ;^75^^^^^66^76^[REPLACE] return getMaximumValue (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int month  year 
[REPLACE]^int.get = partial.size (  ) ;^79^^^^^78^93^[REPLACE] int size = partial.size (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^79^^^^^78^93^[ADD] int size = partial.size (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^if  ( partial.getFieldType ( i )   &&  DateTimeFieldType.monthOfYear (  )  )  {^81^^^^^78^93^[REPLACE] if  ( partial.getFieldType ( i )  == DateTimeFieldType.monthOfYear (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^if  ( partial.getFieldType ( j )   !=  DateTimeFieldType.year (  )  )  {^84^^^^^78^93^[REPLACE] if  ( partial.getFieldType ( j )  == DateTimeFieldType.year (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology.getDaysInMonthMaxForSet ( year, month ) ;^86^^^^^78^93^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^int month = values[i];^85^^^^^78^93^[REPLACE] int year = values[j];^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for (int j = 0 ; j  <=  size; j++) {^83^^^^^78^93^[REPLACE] for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^if  ( partial.getFieldType ( j )   &&  DateTimeFieldType.year (  )  )  {^84^^^^^78^93^[REPLACE] if  ( partial.getFieldType ( j )  == DateTimeFieldType.year (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^85^^^^^78^93^[ADD] int year = values[j];^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology .getDaysInMonthMaxForSet ( serialVersionUID , i )  ;^89^^^^^78^93^[REPLACE] return iChronology.getDaysInMonthMax ( month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^int year = values[j];^82^^^^^78^93^[REPLACE] int month = values[i];^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for  ( int j = 0 ; j < size; j++ )  {^83^^^^^78^93^[REPLACE] for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^85^86^^^^78^93^[ADD] int year = values[j]; return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^84^85^86^87^^78^93^[ADD] if  ( partial.getFieldType ( j )  == DateTimeFieldType.year (  )  )  { int year = values[j]; return iChronology.getDaysInYearMonth ( year, month ) ; }^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for (int i = 0; i  >=  size; i++) {^80^^^^^78^93^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^if  ( partial.getFieldType ( i )   ||  DateTimeFieldType.monthOfYear (  )  )  {^81^^^^^78^93^[REPLACE] if  ( partial.getFieldType ( i )  == DateTimeFieldType.monthOfYear (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REMOVE]^if  ( partial.isSupported ( year (  )  )  )  {     int year = partial.get ( year (  )  ) ;     return iChronology.getDaysInYearMonth ( year, month ) ; }^81^^^^^78^93^[REMOVE] ^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^if  ( partial.getFieldType ( j )   ||  DateTimeFieldType.year (  )  )  {^84^^^^^78^93^[REPLACE] if  ( partial.getFieldType ( j )  == DateTimeFieldType.year (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REMOVE]^if  (  ( partial.getFieldType ( i )  )  ==  ( monthOfYear (  )  )  )  {     int month = values[i];     for  ( int j = 0; j < size; j++ )  {         if  (  ( partial.getFieldType ( j )  )  ==  ( year (  )  )  )  {             int year = values[j];             return iChronology.getDaysInYearMonth ( year, month ) ;         }     }     return iChronology.getDaysInMonthMax ( month ) ; }^84^^^^^78^93^[REMOVE] ^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology .getDayOfMonth ( instant )  ;^86^^^^^78^93^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for (int j = 0; j  ==  size; j++) {^83^^^^^78^93^[REPLACE] for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology .getDayOfMonth ( serialVersionUID )  ;^86^^^^^78^93^[REPLACE] return iChronology.getDaysInYearMonth ( year, month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^82^^^^^78^93^[ADD] int month = values[i];^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for (int j = 0; j  !=  size; j++) {^83^^^^^78^93^[REPLACE] for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology.getDaysInMonthMax (  ) ;^89^^^^^78^93^[REPLACE] return iChronology.getDaysInMonthMax ( month ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for (int j = 0; j  <=  size; j++) {^83^^^^^78^93^[REPLACE] for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^80^^^^^78^93^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[ADD]^^80^81^82^83^^78^93^[ADD] for  ( int i = 0; i < size; i++ )  { if  ( partial.getFieldType ( i )  == DateTimeFieldType.monthOfYear (  )  )  { int month = values[i]; for  ( int j = 0; j < size; j++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology.getDaysInYearMonth ( year, month ) ;^92^^^^^78^93^[REPLACE] return getMaximumValue (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  j  month  size  year 
[REPLACE]^return iChronology .getDaysInMonthMax (  )  ;^96^^^^^95^97^[REPLACE] return iChronology.getDaysInMonthMaxForSet ( instant, value ) ;^[METHOD] getMaximumValueForSet [TYPE] int [PARAMETER] long instant int value [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int value 
[REPLACE]^return iChronology.months (  ) ;^103^^^^^102^104^[REPLACE] return iChronology.dayOfMonth (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] BasicDayOfMonthDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
