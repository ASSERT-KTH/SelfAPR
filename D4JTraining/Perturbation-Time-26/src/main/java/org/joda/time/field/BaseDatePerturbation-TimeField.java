[REPLACE]^private  DateTimeFieldType iType;^44^^^^^^^[REPLACE] private final DateTimeFieldType iType;^ [CLASS] BaseDateTimeField  
[REPLACE]^if  ( valueToAdd  !=  0 )  {^298^^^^^297^349^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return false;  ;^299^^^^^297^349^[REPLACE] return values;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^304^^^^^297^349^[ADD] DateTimeField nextField = null;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  ==  max )  {^309^^^^^297^349^[REPLACE] if  ( proposed <= max )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  =  values[fieldIndex] ;^310^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^313^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  2 )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^315^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^319^^^^^297^349^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^320^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( fieldIndex  1 ) ;^317^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalArgumentException ( "Maximum value exceeded for add" )  ;^320^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  (  min )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^315^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^319^320^321^^^297^349^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] ;^310^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( fieldIndex  4 ) ;^317^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^323^^^^^297^349^[ADD] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,  ( fieldIndex - 1 ) , values,  ( -1 )  )  ;^324^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[i] = field.getMinimumValue ( partial, values )  ;^325^^^^^297^349^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int min = getMinimumValue ( instant, values )  ;^307^^^^^297^349^[REPLACE] int max = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^308^^^^^297^349^[ADD] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  <=  min )  {^330^^^^^297^349^[REPLACE] if  ( proposed >= min )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^331^^^^^297^349^[ADD] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^334^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  0 )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^335^336^337^^^297^349^[ADD] if  ( fieldIndex == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalArgumentException ( "The type must not be null" )  ;^336^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^339^^^^^297^349^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^340^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min  1 ) ;^338^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^340^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( min  &&  0 )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^336^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^339^340^341^^^297^349^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalArgumentException ( "Maximum value exceeded for add" )  ;^340^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^331^332^^^^297^349^[ADD] values[fieldIndex] =  ( int )  proposed; break;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min  2 ) ;^338^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 1 )  -  ( values[fieldIndex] )  ;^343^^^^^297^349^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,  ( fieldIndex - 1 ) , values, 1 )  ;^344^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[i] = field.getMaximumValue ( partial, values )  ;^345^^^^^297^349^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^328^329^^^^297^349^[ADD] int min = getMinimumValue ( instant, values ) ; long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex]  max;^329^^^^^297^349^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set  (  instant, fieldIndex, values, value  )  ;  ;^348^^^^^297^349^[REPLACE] return set ( instant, fieldIndex, values, values[fieldIndex] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( max  ) {^379^^^^^378^434^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return false;  ;^380^^^^^378^434^[REPLACE] return values;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^DateTimeField nextField = false;^385^^^^^378^434^[REPLACE] DateTimeField nextField = null;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  >=  max )  {^390^^^^^378^434^[REPLACE] if  ( proposed <= max )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] ;^391^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^394^^^^^378^434^[REPLACE] if  ( nextField == null )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  0 >> 3 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^valueToAdd -=  ( max + 1 )  - values[fieldIndex];values[fieldIndex] = getMinimumValue ( instant, values ) ;continue;^395^396^397^398^399^378^434^[ADD] if  ( fieldIndex == 0 )  { valueToAdd -=  ( max + 1 )  - values[fieldIndex]; values[fieldIndex] = getMinimumValue ( instant, values ) ; continue; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^396^397^^^^378^434^[ADD] valueToAdd -=  ( max + 1 )  - values[fieldIndex]; values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[i] = field.getMinimumValue ( partial, values )  ;^397^^^^^378^434^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^402^^^^^378^434^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^403^^^^^378^434^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd =  ( max + 0 )   values[fieldIndex];^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMaximumValue ( instant, values )  ;^397^^^^^378^434^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^400^^^^^378^434^[ADD] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalArgumentException ( "Maximum value exceeded for add" )  ;^403^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  0 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd =  ( max + 1 )   values[fieldIndex];^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^402^403^404^^^378^434^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^403^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  =  values[fieldIndex] ;^391^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( min  1 ) ;^400^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^406^^^^^378^434^[ADD] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.addWrapPartial ( instant,min  1 * 4, values, 1 * 4 ) ;^407^^^^^378^434^[REPLACE] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMaximumValue ( instant, values )  ;^408^^^^^378^434^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^388^^^^^378^434^[ADD] int max = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex]  valueToAdd;^389^^^^^378^434^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if   (  proposed <= max  )   {  ;^413^^^^^378^434^[REPLACE] if  ( proposed >= min )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  long  )  proposed;^414^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^417^^^^^378^434^[REPLACE] if  ( nextField == null )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^417^418^419^420^421^378^434^[ADD] if  ( nextField == null )  { if  ( fieldIndex == 0 )  { valueToAdd -=  ( min - 1 )  - values[fieldIndex]; values[fieldIndex] = getMaximumValue ( instant, values ) ; continue;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( max  !=  0 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd =  ( min  1 )  min;^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[i] = field.getMaximumValue ( partial, values )  ;^420^^^^^378^434^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^424^^^^^378^434^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^425^^^^^378^434^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 1 )  -  ( values[fieldIndex] )  ;^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMinimumValue ( instant, values )  ;^420^^^^^378^434^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( fieldIndex min ) ;^423^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( min  ||  0 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd =  ( min  1 )   values[fieldIndex];^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^425^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^414^415^^^^378^434^[ADD] values[fieldIndex] =  ( int )  proposed; break;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min  4 ) ;^423^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd =  ( min  1 + 1 )   values[fieldIndex];^428^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^429^^^^^378^434^[ADD] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMinimumValue ( instant, values )  ;^430^^^^^378^434^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int max = getMaximumValue ( instant, values )  ;^411^^^^^378^434^[REPLACE] int min = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^412^^^^^378^434^[ADD] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set ( instant, min, values, values[fieldIndex] ) ;^433^^^^^378^434^[REPLACE] return set ( instant, fieldIndex, values, values[fieldIndex] ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^955^^^^^954^975^[ADD] long floor = roundFloor ( instant ) ;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long ceiling = roundCeiling ( diffToCeiling ) ;^956^^^^^954^975^[REPLACE] long ceiling = roundCeiling ( instant ) ;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffFromFloor = instant  floor;^958^^^^^954^975^[REPLACE] long diffFromFloor = instant - floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffToCeiling = ceiling  instant;^959^^^^^954^975^[REPLACE] long diffToCeiling = ceiling - instant;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  ( diffFromFloor  >  diffToCeiling )  {^961^^^^^954^975^[REPLACE] if  ( diffFromFloor < diffToCeiling )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^}  else {^964^^^^^954^975^[REPLACE] } else if  ( diffToCeiling < diffFromFloor )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^}   return ceiling;^964^965^966^967^^954^975^[ADD] else if  ( diffToCeiling < diffFromFloor )  {  return ceiling; } else {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( instant )  & 1 )   &&  0 )  {^970^^^^^964^974^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;^971^^^^^964^974^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^973^^^^^964^974^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return ceiling;  ;^966^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( ceiling )  & 3 )   !=  0 )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^return ceiling;^970^971^972^^^954^975^[ADD] if  (  ( get ( ceiling )  & 1 )  == 0 )  { return ceiling; }^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return ceiling;  ;^971^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^971^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;  ;^973^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;  ;^963^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( diffToCeiling  >= instant )  {^964^^^^^954^975^[REPLACE] } else if  ( diffToCeiling < diffFromFloor )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( ceiling )  & 1 )   !=  0 )  {^970^^^^^964^974^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^971^^^^^964^974^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( instant )  & 1 )   !=  0 )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^^970^971^972^^^954^975^[ADD] if  (  ( get ( ceiling )  & 1 )  == 0 )  { return ceiling; }^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^963^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^966^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^973^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
