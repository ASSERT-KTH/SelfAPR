[REPLACE]^if   (  this == other  )   {  ;^255^^^^^254^271^[REPLACE] if  ( this == partial )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^return false;^256^^^^^254^271^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^if  ( ! partial instanceof ReadablePartial == true )  {^258^^^^^254^271^[REPLACE] if  ( partial instanceof ReadablePartial == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[ADD]^return false;^258^259^260^^^254^271^[ADD] if  ( partial instanceof ReadablePartial == false )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^return true;^259^^^^^254^271^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^int total = 157  ;^261^^^^^254^271^[REPLACE] ReadablePartial other =  ( ReadablePartial )  partial;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^if  (.getValue (  )  - 1 != other.size (  )  - 1 )  {^262^^^^^254^271^[REPLACE] if  ( size (  )  != other.size (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REMOVE]^if  (  ( getFieldType ( i ) .getDurationType (  )  )  == type )  {     return i; }^262^^^^^254^271^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^return true;^263^^^^^254^271^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^if  (.getFieldType ( i )  != other.getValue ( i )  && getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^[REPLACE] if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^return false;  ;^267^^^^^254^271^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[ADD]^^265^266^267^268^^254^271^[ADD] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  { if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^int total = 157  ;^265^^^^^254^271^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^return FieldUtils.equals (.getType (  ) , other.getChronology (  )  ) ;^270^^^^^254^271^[REPLACE] return FieldUtils.equals ( getChronology (  ) , other.getChronology (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object partial [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  Object partial  [TYPE]  int i  isize 
[REPLACE]^if  (1  !=  other )  {^316^^^^^315^337^[REPLACE] if  ( this == other )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^return 0;^316^317^318^^^315^337^[ADD] if  ( this == other )  { return 0; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return 0 + 4;^317^^^^^315^337^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return 1;^317^^^^^315^337^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^if  ( size (  )  + 4 != other.size (  )  + 4 )  {^319^^^^^315^337^[REPLACE] if  ( size (  )  != other.size (  )  )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^^319^320^321^^^315^337^[ADD] if  ( size (  )  != other.size (  )  )  { throw new ClassCastException  (" ")  ; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return ;^320^^^^^315^337^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^if  ( getFieldType ( i )   ==  other.getFieldType ( i )  )  {^323^^^^^315^337^[REPLACE] if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^^323^324^325^^^315^337^[ADD] if  ( getFieldType ( i )  != other.getFieldType ( i )  )  { throw new ClassCastException  (" ")  ; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return ;^324^^^^^315^337^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0 , isize = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^int total = 157  ;^322^^^^^315^337^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^if  (.getValue ( isize )   <=  other.getValue ( i )  )  {^329^^^^^315^337^[REPLACE] if  ( getValue ( i )  > other.getValue ( i )  )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^return 1;^329^330^331^^^315^337^[ADD] if  ( getValue ( i )  > other.getValue ( i )  )  { return 1; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return 4;^330^^^^^315^337^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^if  ( getValue ( i )   >=  other.getValue ( i )  )  {^332^^^^^315^337^[REPLACE] if  ( getValue ( i )  < other.getValue ( i )  )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^^332^333^334^^^315^337^[ADD] if  ( getValue ( i )  < other.getValue ( i )  )  { return -1; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return -1 * 3;^333^^^^^315^337^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return 0;^330^^^^^315^337^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return i;  ;^333^^^^^315^337^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0 , isize = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[ADD]^^328^329^330^331^^315^337^[ADD] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  { if  ( getValue ( i )  > other.getValue ( i )  )  { return 1; }^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
[REPLACE]^return i;  ;^336^^^^^315^337^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] ReadablePartial other [CLASS] AbstractPartial   [TYPE]  ReadablePartial other  [TYPE]  boolean false  true  [TYPE]  int i  isize 
