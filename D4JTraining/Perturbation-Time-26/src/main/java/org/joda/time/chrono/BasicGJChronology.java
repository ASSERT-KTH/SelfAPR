[REPLACE]^private  final  short  serialVersionUID = 538276888268;^37^^^^^^^[REPLACE] private static final long serialVersionUID = 538276888268L;^ [CLASS] BasicGJChronology  
[REPLACE]^private static final int[] MIN_DAYS_PER_MONTH_ARRAY  = null ;^42^^^^^42^44^[REPLACE] private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {^ [CLASS] BasicGJChronology  
[REPLACE]^private static final int[] MAX_DAYS_PER_MONTH_ARRAY  = null ;^45^^^^^45^47^[REPLACE] private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {^ [CLASS] BasicGJChronology  
[REPLACE]^private static  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY;^49^^^^^^^[REPLACE] private static final long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY;^ [CLASS] BasicGJChronology  
[REPLACE]^private static final  short  FEB_29 =  ( 31 + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^^^[REPLACE] private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^ [CLASS] BasicGJChronology  
[REPLACE]^int i =  ( int )  (  ( millis - getYearMillis ( year )  )   ==  10 - 2 ) ;^88^^^^^79^109^[REPLACE] int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[METHOD] getMonthOfYear [TYPE] int [PARAMETER] long millis int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  millis  serialVersionUID  [TYPE]  int i  year 
[REPLACE]^return ( isLeapYear ( year )  ) ?  (  ( i  ;^93^94^95^96^^79^109^[REPLACE] return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[METHOD] getMonthOfYear [TYPE] int [PARAMETER] long millis int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  millis  serialVersionUID  [TYPE]  int i  year 
[REPLACE]^int minuendYear = getYear ( subtrahendRem ) ;^148^^^^^147^171^[REPLACE] int minuendYear = getYear ( minuendInstant ) ;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^149^^^^^147^171^[ADD] int subtrahendYear = getYear ( subtrahendInstant ) ;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^long subtrahendRem = subtrahendInstant -  ( getYearMillis ( subtrahendYear )  )  ;^152^^^^^147^171^[REPLACE] long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^153^^^^^147^171^[ADD] long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^if  ( subtrahendRem  <= subtrahendInstant )  {^156^^^^^147^171^[REPLACE] if  ( subtrahendRem >= FEB_29 )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REMOVE]^if  ( isLeapYear ( subtrahendYear )  )  {     if  ( ! ( isLeapYear ( minuendYear )  )  )  {         subtrahendRem -= MILLIS_PER_DAY;     } }else     if  (  ( minuendRem >=  ( FEB_29 )  )  &&  ( isLeapYear ( minuendYear )  )  )  {         minuendRem -= MILLIS_PER_DAY;     }^156^^^^^147^171^[REMOVE] ^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^if   (  isLeapYear  (  thisYear  )    )   {  ;^157^^^^^147^171^[REPLACE] if  ( isLeapYear ( subtrahendYear )  )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^}  else {^161^^^^^147^171^[REPLACE] } else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^subtrahendRem -= MILLIS_PER_DAY  ;^162^^^^^147^171^[REPLACE] minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^if  ( !isLeapYear ( subtrahendYear )  )  {^158^^^^^147^171^[REPLACE] if  ( !isLeapYear ( minuendYear )  )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^159^^^^^147^171^[ADD] subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^minuendRem -= MILLIS_PER_DAY  ;^159^^^^^147^171^[REPLACE] subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^}  if  (  isLeapYear ( subtrahendYear )  )  {^161^^^^^147^171^[REPLACE] } else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^}^161^162^163^^^147^171^[ADD] else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  { minuendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^157^158^159^160^^147^171^[ADD] if  ( isLeapYear ( subtrahendYear )  )  { if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^162^^^^^147^171^[ADD] minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^158^159^160^^^147^171^[ADD] if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^}  if  ( minuendRem >= false || isLeapYear ( minuendYear )  )  {^161^^^^^147^171^[REPLACE] } else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^166^167^168^169^^147^171^[ADD] int difference = minuendYear - subtrahendYear; if  ( minuendRem < subtrahendRem )  { difference--; }^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^if  ( minuendRem  ==  subtrahendRem )  {^167^^^^^147^171^[REPLACE] if  ( minuendRem < subtrahendRem )  {^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^difference--;^167^168^169^^^147^171^[ADD] if  ( minuendRem < subtrahendRem )  { difference--; }^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[REPLACE]^return difference;  ;^170^^^^^147^171^[REPLACE] return difference;^[METHOD] getYearDifference [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int difference  minuendYear  subtrahendYear 
[ADD]^^175^^^^^174^199^[ADD] int thisYear = getYear ( instant ) ;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^int dayOfYear = getDayOfYear ( instant, year ) ;^176^^^^^174^199^[REPLACE] int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^int millisOfDay = getMillisOfDay ( subtrahendRem ) ;^177^^^^^174^199^[REPLACE] int millisOfDay = getMillisOfDay ( instant ) ;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if  (year  ==   ( 31L + 28 )  )  {^179^^^^^174^199^[REPLACE] if  ( dayOfYear >  ( 31 + 28 )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if   (  !isLeapYear  (  year  )    )   {  ;^180^^^^^174^199^[REPLACE] if  ( isLeapYear ( thisYear )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[ADD]^^180^181^182^^184^174^199^[ADD] if  ( isLeapYear ( thisYear )  )  {  if  ( !isLeapYear ( year )  )  { dayOfYear--;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if  ( isLeapYear ( thisYear )  )  {^188^^^^^180^192^[REPLACE] if  ( isLeapYear ( year )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[ADD]^^188^189^190^191^^180^192^[ADD] if  ( isLeapYear ( year )  )  {  dayOfYear++; }^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if  ( !isLeapYear ( thisYear )  )  {^182^^^^^174^199^[REPLACE] if  ( !isLeapYear ( year )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if   (  !isLeapYear  (  year  )    )   {  ;^188^^^^^174^199^[REPLACE] if  ( isLeapYear ( year )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if  ( isLeapYear ( millisOfDay )  )  {^180^^^^^174^199^[REPLACE] if  ( isLeapYear ( thisYear )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^if   (  !isLeapYear  (  year  )    )   {  ;^188^^^^^180^192^[REPLACE] if  ( isLeapYear ( year )  )  {^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[ADD]^^182^183^184^185^^174^199^[ADD] if  ( !isLeapYear ( year )  )  {  dayOfYear--; }^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REMOVE]^if  ( isLeapYear ( year )  )  {     dayOfYear++; }^182^^^^^174^199^[REMOVE] ^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[ADD]^^188^189^190^191^^174^199^[ADD] if  ( isLeapYear ( year )  )  {  dayOfYear++; }^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[ADD]^^195^196^^^^174^199^[ADD] instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ; instant += millisOfDay;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^instant +=  year;^196^^^^^174^199^[REPLACE] instant += millisOfDay;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
[REPLACE]^return subtrahendRem;^198^^^^^174^199^[REPLACE] return instant;^[METHOD] setYear [TYPE] long [PARAMETER] long instant int year [CLASS] BasicGJChronology   [TYPE]  int[] MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  [TYPE]  boolean false  true  [TYPE]  long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  [TYPE]  long FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  [TYPE]  int dayOfYear  millisOfDay  thisYear  year 
