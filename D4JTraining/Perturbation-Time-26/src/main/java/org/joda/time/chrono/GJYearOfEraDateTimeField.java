[REPLACE]^private static final  short  serialVersionUID = -5961050944769862059L;^32^^^^^^^[REPLACE] private static final long serialVersionUID = -5961050944769862059L;^ [CLASS] GJYearOfEraDateTimeField  
[REPLACE]^private  BasicChronology iChronology;^34^^^^^^^[REPLACE] private final BasicChronology iChronology;^ [CLASS] GJYearOfEraDateTimeField  
[REPLACE]^return iChronology.yearOfEra (  ) ;^40^^^^^39^42^[REPLACE] super ( yearField, DateTimeFieldType.yearOfEra (  )  ) ;^[METHOD] <init> [TYPE] BasicChronology) [PARAMETER] DateTimeField yearField BasicChronology chronology [CLASS] GJYearOfEraDateTimeField   [TYPE]  DateTimeField yearField  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^iChronology =  null;^41^^^^^39^42^[REPLACE] iChronology = chronology;^[METHOD] <init> [TYPE] BasicChronology) [PARAMETER] DateTimeField yearField BasicChronology chronology [CLASS] GJYearOfEraDateTimeField   [TYPE]  DateTimeField yearField  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^int year = getWrappedField (  ) .get ( serialVersionUID ) ;^45^^^^^44^50^[REPLACE] int year = getWrappedField (  ) .get ( instant ) ;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^if  ( year  >=  0 )  {^46^^^^^44^50^[REPLACE] if  ( year <= 0 )  {^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^year = 3  <  year;^47^^^^^44^50^[REPLACE] year = 1 - year;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^year = 1  |  year;^47^^^^^44^50^[REPLACE] year = 1 - year;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return super.set ( instant, year ) ;^49^^^^^44^50^[REPLACE] return year;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return getWrappedField (  ) .addWrapField ( instant, years ) ;^53^^^^^52^54^[REPLACE] return getWrappedField (  ) .add ( instant, years ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int years 
[REPLACE]^return getWrappedField (  ) .add ( instant, serialVersionUID ) ;^57^^^^^56^58^[REPLACE] return getWrappedField (  ) .add ( instant, years ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long years [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .add ( instant, years ) ;^61^^^^^60^62^[REPLACE] return getWrappedField (  ) .addWrapField ( instant, years ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int years 
[REPLACE]^return getWrappedField (  ) .roundCeiling ( instant, fieldIndex, values, years ) ;^65^^^^^64^66^[REPLACE] return getWrappedField (  ) .addWrapField ( instant, fieldIndex, values, years ) ;^[METHOD] addWrapField [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int years [CLASS] GJYearOfEraDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int fieldIndex  years 
[REPLACE]^return getWrappedField (  ) .getDifference ( minuendInstant, years ) ;^69^^^^^68^70^[REPLACE] return getWrappedField (  ) .getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .roundCeiling ( minuendInstant, subtrahendInstant ) ;^73^^^^^72^74^[REPLACE] return getWrappedField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^FieldUtils.verifyValueBounds ( this, year, 2, getMaximumValue (  )  ) ;^85^^^^^84^90^[REPLACE] FieldUtils.verifyValueBounds ( this, year, 1, getMaximumValue (  )  ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[ADD]^^85^86^87^88^^84^90^[ADD] FieldUtils.verifyValueBounds ( this, year, 1, getMaximumValue (  )  ) ; if  ( iChronology.getYear ( instant )  <= 0 )  { year = 1 - year; }^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^if  ( iChronology.getYear ( instant )   >  0 )  {^86^^^^^84^90^[REPLACE] if  ( iChronology.getYear ( instant )  <= 0 )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^year = 1  ^  year;^87^^^^^84^90^[REPLACE] year = 1 - year;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^year = 1  |  year;^87^^^^^84^90^[REPLACE] year = 1 - year;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return super .get ( serialVersionUID )  ;^89^^^^^84^90^[REPLACE] return super.set ( instant, year ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] GJYearOfEraDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return 0;^93^^^^^92^94^[REPLACE] return 1;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .remainder (  ) ;^97^^^^^96^98^[REPLACE] return getWrappedField (  ) .getMaximumValue (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  )  .roundCeiling ( subtrahendInstant )  ;^101^^^^^100^102^[REPLACE] return getWrappedField (  ) .roundFloor ( instant ) ;^[METHOD] roundFloor [TYPE] long [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .roundFloor ( instant ) ;^105^^^^^104^106^[REPLACE] return getWrappedField (  ) .roundCeiling ( instant ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .remainder ( years ) ;^109^^^^^108^110^[REPLACE] return getWrappedField (  ) .remainder ( instant ) ;^[METHOD] remainder [TYPE] long [PARAMETER] long instant [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return getWrappedField (  ) .roundFloor ( instant ) ;^116^^^^^115^117^[REPLACE] return iChronology.yearOfEra (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] GJYearOfEraDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
