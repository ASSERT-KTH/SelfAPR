[REPLACE]^private static  long serialVersionUID = -6821236822336841037L;^33^^^^^^^[REPLACE] private static final long serialVersionUID = -6821236822336841037L;^ [CLASS] BasicDayOfYearDateTimeField  
[REPLACE]^private  BasicChronology iChronology;^35^^^^^^^[REPLACE] private final BasicChronology iChronology;^ [CLASS] BasicDayOfYearDateTimeField  
[REPLACE]^super ( DateTimeFieldType.year (  ) , days ) ;^41^^^^^40^43^[REPLACE] super ( DateTimeFieldType.dayOfYear (  ) , days ) ;^[METHOD] <init> [TYPE] DurationField) [PARAMETER] BasicChronology chronology DurationField days [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  DurationField days  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^iChronology =  null;^42^^^^^40^43^[REPLACE] iChronology = chronology;^[METHOD] <init> [TYPE] DurationField) [PARAMETER] BasicChronology chronology DurationField days [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  DurationField days  [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology 
[REPLACE]^return iChronology .getDaysInYear ( null )  ;^52^^^^^51^53^[REPLACE] return iChronology.getDayOfYear ( instant ) ;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] BasicDayOfYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.dayOfYear (  ) ;^56^^^^^55^57^[REPLACE] return iChronology.years (  ) ;^[METHOD] getRangeDurationField [TYPE] DurationField [PARAMETER] [CLASS] BasicDayOfYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 0;^60^^^^^59^61^[REPLACE] return 1;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] [CLASS] BasicDayOfYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.dayOfYear (  ) ;^64^^^^^63^65^[REPLACE] return iChronology.getDaysInYearMax (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] [CLASS] BasicDayOfYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^int year = iChronology.getYear ( serialVersionUID ) ;^68^^^^^67^70^[REPLACE] int year = iChronology.getYear ( instant ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] long instant [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return iChronology.getYear ( year ) ;^69^^^^^67^70^[REPLACE] return iChronology.getDaysInYear ( year ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] long instant [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^if  ( partial.isSupported ( DateTimeFieldType.dayOfYear (  )  )  )  {^73^^^^^72^78^[REPLACE] if  ( partial.isSupported ( DateTimeFieldType.year (  )  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return iChronology .getDaysInYearMax (  )  ;^75^^^^^72^78^[REPLACE] return iChronology.getDaysInYear ( year ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^int year = partial.get ( DateTimeFieldType .dayOfYear (  )   ) ;^74^^^^^72^78^[REPLACE] int year = partial.get ( DateTimeFieldType.year (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[ADD]^^74^^^^^72^78^[ADD] int year = partial.get ( DateTimeFieldType.year (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return iChronology.getYear ( year ) ;^75^^^^^72^78^[REPLACE] return iChronology.getDaysInYear ( year ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^int.dayOfYear = partial.get ( DateTimeFieldType.year (  )  ) ;^74^^^^^72^78^[REPLACE] int year = partial.get ( DateTimeFieldType.year (  )  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return iChronology.dayOfYear (  ) ;^77^^^^^72^78^[REPLACE] return iChronology.getDaysInYearMax (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial [CLASS] BasicDayOfYearDateTimeField   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^int.get = partial.size (  ) ;^81^^^^^80^89^[REPLACE] int size = partial.size (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^if  ( partial.getFieldType ( i )   ||  DateTimeFieldType.year (  )  )  {^83^^^^^80^89^[REPLACE] if  ( partial.getFieldType ( i )  == DateTimeFieldType.year (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[ADD]^int year = values[i];return iChronology.getDaysInYear ( year ) ;^83^84^85^86^^80^89^[ADD] if  ( partial.getFieldType ( i )  == DateTimeFieldType.year (  )  )  { int year = values[i]; return iChronology.getDaysInYear ( year ) ; }^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^return iChronology .getDaysInYearMax (  )  ;^85^^^^^80^89^[REPLACE] return iChronology.getDaysInYear ( year ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^int size = partial.size (  ) ;^84^^^^^80^89^[REPLACE] int year = values[i];^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^for (int i = 0; i  >=  i; i++) {^82^^^^^80^89^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^if  ( partial.getFieldType ( i )   &&  DateTimeFieldType.year (  )  )  {^83^^^^^80^89^[REPLACE] if  ( partial.getFieldType ( i )  == DateTimeFieldType.year (  )  )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REMOVE]^if  ( partial.isSupported ( year (  )  )  )  {     int year = partial.get ( year (  )  ) ;     return iChronology.getDaysInYear ( year ) ; }^83^^^^^80^89^[REMOVE] ^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^return iChronology.getYear ( year ) ;^85^^^^^80^89^[REPLACE] return iChronology.getDaysInYear ( year ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^82^^^^^80^89^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[ADD]^^82^83^84^85^86^80^89^[ADD] for  ( int i = 0; i < size; i++ )  { if  ( partial.getFieldType ( i )  == DateTimeFieldType.year (  )  )  { int year = values[i]; return iChronology.getDaysInYear ( year ) ; }^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^return iChronology.getDaysInYear ( year ) ;^88^^^^^80^89^[REPLACE] return iChronology.getDaysInYearMax (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial partial int[] values [CLASS] BasicDayOfYearDateTimeField   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int i  size  year 
[REPLACE]^int maxLessOne = iChronology.getDaysInYearMax (  )   >  1;^92^^^^^91^94^[REPLACE] int maxLessOne = iChronology.getDaysInYearMax (  )  - 1;^[METHOD] getMaximumValueForSet [TYPE] int [PARAMETER] long instant int value [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int maxLessOne  value 
[REPLACE]^return  ( value ;^93^^^^^91^94^[REPLACE] return  ( value > maxLessOne || value < 1 )  ? getMaximumValue ( instant )  : maxLessOne;^[METHOD] getMaximumValueForSet [TYPE] int [PARAMETER] long instant int value [CLASS] BasicDayOfYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int maxLessOne  value 
[REPLACE]^return iChronology .year (  )  ;^100^^^^^99^101^[REPLACE] return iChronology.dayOfYear (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] BasicDayOfYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
