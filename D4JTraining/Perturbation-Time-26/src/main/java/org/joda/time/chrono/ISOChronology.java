[REPLACE]^private static final long serialVersionUID ;^52^^^^^^^[REPLACE] private static final long serialVersionUID = -6212696554273812441L;^ [CLASS] ISOChronology Stub  
[REPLACE]^private static  ISOChronology INSTANCE_UTC;^55^^^^^^^[REPLACE] private static final ISOChronology INSTANCE_UTC;^ [CLASS] ISOChronology Stub  
[REPLACE]^private static final int FAST_CACHE_SIZE  = null ;^57^^^^^^^[REPLACE] private static final int FAST_CACHE_SIZE = 64;^ [CLASS] ISOChronology Stub  
[REPLACE]^private static  ISOChronology[] cFastCache;^60^^^^^^^[REPLACE] private static final ISOChronology[] cFastCache;^ [CLASS] ISOChronology Stub  
[REPLACE]^private  final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology> (  ) ;^63^^^^^^^[REPLACE] private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology> (  ) ;^ [CLASS] ISOChronology Stub  
[REPLACE]^private static final long serialVersionUID  = null ;^212^^^^^^^[REPLACE] private static final long serialVersionUID = -6212696554273812441L;^ [CLASS] ISOChronology Stub  
[REPLACE]^if  ( zone != this )  {^96^^^^^95^113^[REPLACE] if  ( zone == null )  {^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[ADD]^^97^^^^^95^113^[ADD] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^zone  =  zone ;^97^^^^^95^113^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^int index = System.identityHashCode ( iZone )  |  ( FAST_CACHE_SIZE - 1 ) ;^99^^^^^95^113^[REPLACE] int index = System.identityHashCode ( zone )  &  ( FAST_CACHE_SIZE - 1 ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[ADD]^^100^^^^^95^113^[ADD] ISOChronology chrono = cFastCache[index];^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^if  (  chrono.getZone (  )  != zone )  {^101^^^^^95^113^[REPLACE] if  ( chrono != null && chrono.getZone (  )  == zone )  {^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^return INSTANCE_UTC;^102^^^^^95^113^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^return chrono;  ;^102^^^^^95^113^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^if  ( chrono != this )  {^106^^^^^95^113^[REPLACE] if  ( chrono == null )  {^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^chrono =  new ISOChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, iZone )  ) ;^107^^^^^95^113^[REPLACE] chrono = new ISOChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone )  ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^chrono =  cCache.get ( iZone ) ;^105^^^^^95^113^[REPLACE] chrono = cCache.get ( zone ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^chrono =  new ISOChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, null )  ) ;^107^^^^^95^113^[REPLACE] chrono = new ISOChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone )  ) ;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^cFastCache[index]  = null ;^111^^^^^95^113^[REPLACE] cFastCache[index] = chrono;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^return chrono;  ;^112^^^^^95^113^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] ISOChronology [PARAMETER] DateTimeZone zone [CLASS] ISOChronology Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone 
[REPLACE]^private static final long serialVersionUID  = null ;^212^^^^^^^[REPLACE] private static final long serialVersionUID = -6212696554273812441L;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream in [CLASS] Stub   [TYPE]  ISOChronology INSTANCE_UTC  chrono  [TYPE]  ISOChronology[] cFastCache  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int FAST_CACHE_SIZE  index  [TYPE]  DateTimeZone iZone  zone  [TYPE]  ObjectInputStream in 
