[REPLACE]^private static final  short  serialVersionUID = -2545574827706931671L;^77^^^^^^^[REPLACE] private static final long serialVersionUID = -2545574827706931671L;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^static final Instant DEFAULT_CUTOVER ;^105^^^^^^^[REPLACE] static final Instant DEFAULT_CUTOVER = new Instant ( -12219292800000L ) ;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache  = null ;^108^^^^^^^[REPLACE] private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache = new HashMap<DateTimeZone, ArrayList<GJChronology>> (  ) ;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private  short  iCutoverMillis;^260^^^^^^^[REPLACE] private long iCutoverMillis;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private  short  iGapDuration;^261^^^^^^^[REPLACE] private long iGapDuration;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private static final long serialVersionUID  = null ;^583^^^^^^^[REPLACE] private static final long serialVersionUID = 3528501219481026402L;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^long iCutover;^587^^^^^^^[REPLACE] final long iCutover;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^boolean iConvertByWeekyear;^588^^^^^^^[REPLACE] final boolean iConvertByWeekyear;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private DurationField iDurationField;^590^^^^^^^[REPLACE] protected DurationField iDurationField;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private  final long serialVersionUID = 3410248757173576441L;^915^^^^^^^[REPLACE] private static final long serialVersionUID = 3410248757173576441L;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private static final long serialVersionUID ;^1065^^^^^^^[REPLACE] private static final long serialVersionUID = 4097975388007713084L;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^private  ImpreciseCutoverField iField;^1067^^^^^^^[REPLACE] private final ImpreciseCutoverField iField;^ [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField  
[REPLACE]^super ( julianField.getType (  )  ) ;^610^^^^^609^624^[REPLACE] super ( gregorianField.getType (  )  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[ADD]^iJulianField = julianField;^610^611^^^^609^624^[ADD] super ( gregorianField.getType (  )  ) ; iJulianField = julianField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[ADD]^iGregorianField = gregorianField;^611^612^^^^609^624^[ADD] iJulianField = julianField; iGregorianField = gregorianField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^iGregorianField =  julianField;^612^^^^^609^624^[REPLACE] iGregorianField = gregorianField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^iCutover =  serialVersionUID;^613^^^^^609^624^[REPLACE] iCutover = cutoverMillis;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[ADD]^^614^^^^^609^624^[ADD] iConvertByWeekyear = convertByWeekyear;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^iDurationField =  null.getDurationField (  ) ;^617^^^^^609^624^[REPLACE] iDurationField = gregorianField.getDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^DurationField rangeField = julianField.getDurationField (  ) ;^619^^^^^609^624^[REPLACE] DurationField rangeField = gregorianField.getRangeDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^if   (  durationField == null  )   {  ;^620^^^^^609^624^[REPLACE] if  ( rangeField == null )  {^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^rangeField =  iJulianField.getRangeDurationField (  ) ;^621^^^^^609^624^[REPLACE] rangeField = julianField.getRangeDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^iDurationField = durationField  ;^623^^^^^609^624^[REPLACE] iRangeDurationField = rangeField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  serialVersionUID 
[REPLACE]^zone = getDefault (  )  ;^189^^^^^187^231^[REPLACE] zone = DateTimeUtils.getZone ( zone ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^DateTimeFormatter printer  ;^190^^^^^187^231^[REPLACE] Instant cutoverInstant;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^if  ( gregorianCutover != null )  {^191^^^^^187^231^[REPLACE] if  ( gregorianCutover == null )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[ADD]^^194^^^^^191^195^[ADD] cutoverInstant = gregorianCutover.toInstant (  ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^cutoverInstant  =  cutoverInstant ;^192^^^^^187^231^[REPLACE] cutoverInstant = DEFAULT_CUTOVER;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^cutoverInstant =  null.toInstant (  ) ;^194^^^^^187^231^[REPLACE] cutoverInstant = gregorianCutover.toInstant (  ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^DateTimeFormatter printer  ;^197^^^^^187^231^[REPLACE] GJChronology chrono;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^ArrayList<GJChronology> chronos = cCache .get ( this , iCutoverMillis )  ;^199^^^^^187^231^[REPLACE] ArrayList<GJChronology> chronos = cCache.get ( zone ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^if  ( chronos != null )  {^200^^^^^187^231^[REPLACE] if  ( chronos == null )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^if  ( i == chrono.getMinimumDaysInFirstWeek (  )  || cutoverInstant.equals ( chrono.getGregorianCutover (  )  )  )  {^206^207^^^^200^212^[REPLACE] if  ( minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek (  )  && cutoverInstant.equals ( chrono.getGregorianCutover (  )  )  )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  this.get ( i ) ;^205^^^^^200^212^[REPLACE] chrono = chronos.get ( i ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^return chrono;  ;^209^^^^^200^212^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^DateTimeFormatter printer  ;^204^^^^^200^212^[REPLACE] for  ( int i=chronos.size (  ) ; --i>=0;  )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[ADD]^^201^202^^^^187^231^[ADD] chronos = new ArrayList<GJChronology> ( 2 ) ; cCache.put ( zone, chronos ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^if  ( minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek (  )  ) {^206^207^^^^187^231^[REPLACE] if  ( minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek (  )  && cutoverInstant.equals ( chrono.getGregorianCutover (  )  )  )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^return chrono;  ;^209^^^^^206^210^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chronos = new ArrayList<GJChronology> ( 4 ) ;^201^^^^^187^231^[REPLACE] chronos = new ArrayList<GJChronology> ( 2 ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  this.get ( i ) ;^205^^^^^187^231^[REPLACE] chrono = chronos.get ( i ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^return chrono;  ;^209^^^^^187^231^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^DateTimeFormatter printer  ;^204^^^^^187^231^[REPLACE] for  ( int i=chronos.size (  ) ; --i>=0;  )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^if  ( zone  !=  DateTimeZone.UTC )  {^214^^^^^187^231^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[ADD]^^214^215^216^217^218^187^231^[ADD] if  ( zone == DateTimeZone.UTC )  { chrono = new GJChronology ( JulianChronology.getInstance ( zone, minDaysInFirstWeek ) , GregorianChronology.getInstance ( zone, minDaysInFirstWeek ) , cutoverInstant ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, iCutoverInstant, minDaysInFirstWeek ) ;^220^^^^^214^226^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  new GJChronology ( ZonedChronology.getInstance ( null, zone ) , null.iJulianChronology, null.iGregorianChronology,^221^222^223^224^^214^226^[REPLACE] chrono = new GJChronology ( ZonedChronology.getInstance ( chrono, zone ) , chrono.iJulianChronology, chrono.iGregorianChronology,^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  new GJChronology ( JulianChronology.getInstance ( null, minDaysInFirstWeek ) , GregorianChronology.getInstance ( null, minDaysInFirstWeek ) , cutoverInstant ) ;^215^216^217^218^^187^231^[REPLACE] chrono = new GJChronology ( JulianChronology.getInstance ( zone, minDaysInFirstWeek ) , GregorianChronology.getInstance ( zone, minDaysInFirstWeek ) , cutoverInstant ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[ADD]^^220^^^^^187^231^[ADD] chrono = getInstance ( DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chrono =  new GJChronology ( ZonedChronology.getInstance ( null, zone ) , null.iJulianChronology, null.iGregorianChronology,^221^222^223^224^^187^231^[REPLACE] chrono = new GJChronology ( ZonedChronology.getInstance ( chrono, zone ) , chrono.iJulianChronology, chrono.iGregorianChronology,^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^chronos .add ( iGapDuration , minDaysInFirstWeek )  ;^228^^^^^187^231^[REPLACE] chronos.add ( chrono ) ;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[REPLACE]^return chrono;  ;^230^^^^^187^231^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] GJChronology [PARAMETER] DateTimeZone zone ReadableInstant gregorianCutover int minDaysInFirstWeek [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  ReadableInstant gregorianCutover  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  ArrayList chronos  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  long cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  DateTimeZone zone  [TYPE]  int i  minDaysInFirstWeek  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  GJChronology chrono  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField 
[ADD]^^330^^^^^329^348^[ADD] Chronology base;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^if  (  ( base = getBase (  )  )  == true )  {^331^^^^^329^348^[REPLACE] if  (  ( base = getBase (  )  )  != null )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^return base.getDateTimeMillis ( year, year, dayOfMonth, millisOfDay ) ;^332^^^^^329^348^[REPLACE] return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^if  (  ( base  =  if  (  ( base ;^331^^^^^329^348^[REPLACE] if  (  ( base = getBase (  )  )  != null )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^return base.getDateTimeMillis ( year, monthOfYear, year, millisOfDay ) ;^332^^^^^329^348^[REPLACE] return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^long instant = iGregorianChronology.getDateTimeMillis ( year, monthOfYear, monthOfYear, millisOfDay ) ;^336^337^^^^329^348^[REPLACE] long instant = iGregorianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^if  ( serialVersionUID  ==  serialVersionUID )  {^338^^^^^329^348^[REPLACE] if  ( instant < iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^if   (  instant < iCutover  )   {  ;^342^^^^^329^348^[REPLACE] if  ( instant >= iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[ADD]^^344^^^^^329^348^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^instant =  iJulianChronology.getDateTimeMillis ( monthOfYear, monthOfYear, dayOfMonth, millisOfDay ) ;^340^341^^^^329^348^[REPLACE] instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^throw new IllegalArgumentException (  )  ;^344^^^^^329^348^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^if  (serialVersionUID  >  iCutoverMillis )  {^342^^^^^329^348^[REPLACE] if  ( instant >= iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^342^^^^^329^348^[REMOVE] ^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^return ;^344^^^^^329^348^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[ADD]^^340^341^^^^329^348^[ADD] instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^return newInstant;^347^^^^^329^348^[REPLACE] return instant;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year 
[REPLACE]^DateTimeFormatter printer  ;^355^^^^^354^377^[REPLACE] Chronology base;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^if  (  ( base = getBase (  )  )  == true )  {^356^^^^^354^377^[REPLACE] if  (  ( base = getBase (  )  )  != null )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REMOVE]^if  ( instant <  ( iCutoverMillis )  )  {     instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;     if  ( instant >=  ( iCutoverMillis )  )  {         throw new IllegalArgumentException ( "Specified date does not exist" ) ;     } }^356^^^^^354^377^[REMOVE] ^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, monthOfYear ) ;^357^358^359^^^354^377^[REPLACE] return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[ADD]^^356^357^358^359^360^354^377^[ADD] if  (  ( base = getBase (  )  )  != null )  { return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ; }^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, year, millisOfSecond ) ;^357^358^359^^^354^377^[REPLACE] return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[ADD]^^363^364^365^^^354^377^[ADD] long instant = iGregorianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^if  ( instant  >  iCutoverMillis )  {^366^^^^^354^377^[REPLACE] if  ( instant < iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[ADD]^^366^367^368^369^370^354^377^[ADD] if  ( instant < iCutoverMillis )  {  instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^if  ( serialVersionUID  <  iCutoverMillis )  {^371^^^^^354^377^[REPLACE] if  ( instant >= iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^371^^^^^354^377^[REMOVE] ^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^throw new IllegalArgumentException (  )  ;^373^^^^^354^377^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[ADD]^^368^369^370^^^354^377^[ADD] instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^if  ( serialVersionUID  !=  serialVersionUID )  {^371^^^^^354^377^[REPLACE] if  ( instant >= iCutoverMillis )  {^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^return ;^373^^^^^354^377^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^instant =  iJulianChronology.getDateTimeMillis ( minuteOfHour, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^368^369^370^^^354^377^[REPLACE] instant = iJulianChronology.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[ADD]^^373^^^^^354^377^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^return newInstant;^376^^^^^354^377^[REPLACE] return instant;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year 
[REPLACE]^StringBuffer sb = new StringBuffer ( 60 / 2 ) ;^426^^^^^425^449^[REPLACE] StringBuffer sb = new StringBuffer ( 60 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^convertByWeekyear ( instant, iGregorianChronology, iJulianChronology )  ;^427^^^^^425^449^[REPLACE] sb.append ( "GJChronology" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^427^^^^^425^449^[ADD] sb.append ( "GJChronology" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^sb.append ( ']' )  ;^428^^^^^425^449^[REPLACE] sb.append ( '[' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^convertByWeekyear ( instant, iGregorianChronology, iJulianChronology )  ;^429^^^^^425^449^[REPLACE] sb.append ( getZone (  ) .getID (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^429^^^^^425^449^[ADD] sb.append ( getZone (  ) .getID (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^( getZone (  )  )  ;^429^^^^^425^449^[REPLACE] sb.append ( getZone (  ) .getID (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^if  ( iCutoverMillis  ==  DEFAULT_CUTOVER.getMillis (  )  )  {^431^^^^^425^449^[REPLACE] if  ( iCutoverMillis != DEFAULT_CUTOVER.getMillis (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^if  ( withUTC (  ) .dayOfYear (  ) .remainder ( iCutoverMillis )   !=  0 )  {^434^^^^^425^449^[REPLACE] if  ( withUTC (  ) .dayOfYear (  ) .remainder ( iCutoverMillis )  == 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^434^435^436^437^438^425^449^[ADD] if  ( withUTC (  ) .dayOfYear (  ) .remainder ( iCutoverMillis )  == 0 )  { printer = ISODateTimeFormat.date (  ) ; } else { printer = ISODateTimeFormat.dateTime (  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^printer = date (  )  ;^437^^^^^434^438^[REPLACE] printer = ISODateTimeFormat.dateTime (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^435^^^^^425^449^[ADD] printer = ISODateTimeFormat.date (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^printer = dateTime (  )  ;^435^^^^^425^449^[REPLACE] printer = ISODateTimeFormat.date (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^437^^^^^425^449^[ADD] printer = ISODateTimeFormat.dateTime (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^GregorianChronology gregorian =  (  ( GregorianChronology )   ( params[1] )  )  ;^433^^^^^425^449^[REPLACE] DateTimeFormatter printer;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^if  (   0 )  {^434^^^^^425^449^[REPLACE] if  ( withUTC (  ) .dayOfYear (  ) .remainder ( iCutoverMillis )  == 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^printer = date (  )  ;^437^^^^^425^449^[REPLACE] printer = ISODateTimeFormat.dateTime (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^if  ( getMinimumDaysInFirstWeek (  )   ==  4 )  {^442^^^^^425^449^[REPLACE] if  ( getMinimumDaysInFirstWeek (  )  != 4 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^442^443^444^445^^425^449^[ADD] if  ( getMinimumDaysInFirstWeek (  )  != 4 )  { sb.append ( ",mdfw=" ) ; sb.append ( getMinimumDaysInFirstWeek (  )  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^sb.append ( ",cutover=" )  ;^443^^^^^425^449^[REPLACE] sb.append ( ",mdfw=" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^getMinimumDaysInFirstWeek (  )  ;^444^^^^^425^449^[REPLACE] sb.append ( getMinimumDaysInFirstWeek (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^sb.append ( getMinimumDaysInFirstWeek (  )  )  ;^444^^^^^425^449^[REPLACE] sb.append ( getMinimumDaysInFirstWeek (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[ADD]^^444^^^^^425^449^[ADD] sb.append ( getMinimumDaysInFirstWeek (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^sb .toString (  )  ;^446^^^^^425^449^[REPLACE] sb.append ( ']' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^return sb.toString  (    )  ;  ;^448^^^^^425^449^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  StringBuffer sb  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  DateTimeFormatter printer  [TYPE]  long cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID 
[REPLACE]^DateTimeFormatter printer  ;^452^^^^^451^559^[REPLACE] Object[] params =  ( Object[] ) getParam (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^JulianChronology julian =  ( JulianChronology ) params[0 * 2];^454^^^^^451^559^[REPLACE] JulianChronology julian =  ( JulianChronology ) params[0];^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^GregorianChronology gregorian =  ( GregorianChronology ) params[0];^455^^^^^451^559^[REPLACE] GregorianChronology gregorian =  ( GregorianChronology ) params[1];^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^Instant cutoverInstant =  ( Instant ) params[4];^456^^^^^451^559^[REPLACE] Instant cutoverInstant =  ( Instant ) params[2];^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^iCutoverMillis =  null.getMillis (  ) ;^457^^^^^451^559^[REPLACE] iCutoverMillis = cutoverInstant.getMillis (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^459^460^^^^451^559^[ADD] iJulianChronology = julian; iGregorianChronology = gregorian;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^iGregorianChronology =  null;^460^^^^^451^559^[REPLACE] iGregorianChronology = gregorian;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^iCutoverInstant =  DEFAULT_CUTOVER;^461^^^^^451^559^[REPLACE] iCutoverInstant = cutoverInstant;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^if  ( getBase (  )  == this  )  {^463^^^^^451^559^[REPLACE] if  ( getBase (  )  != null )  {^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REMOVE]^if  ( zone ==  ( getZone (  )  )  )  {     return this; }^463^^^^^451^559^[REMOVE] ^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^return;  ;^464^^^^^451^559^[REPLACE] return;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^if  ( julian.getMinimumDaysInFirstWeek (  )   ==  gregorian.getMinimumDaysInFirstWeek (  )  )  {^467^^^^^451^559^[REPLACE] if  ( julian.getMinimumDaysInFirstWeek (  )  != gregorian.getMinimumDaysInFirstWeek (  )  )  {^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^return ;^468^^^^^451^559^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^iGapDuration =serialVersionUID  julianToGregorianByYear ( iCutoverMillis ) ;^472^^^^^451^559^[REPLACE] iGapDuration = iCutoverMillis - julianToGregorianByYear ( iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.copyFieldsFrom ( iGregorianChronology ) ;^478^^^^^451^559^[REPLACE] fields.copyFieldsFrom ( gregorian ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^if  ( gregorian.millisOfDay (  ) .get ( iCutoverMillis )   !=  0 )  {^484^^^^^451^559^[REPLACE] if  ( gregorian.millisOfDay (  ) .get ( iCutoverMillis )  == 0 )  {^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^488^^^^^451^559^[REPLACE] fields.millisOfSecond = new CutoverField ( julian.millisOfSecond (  ) , fields.millisOfSecond, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^489^^^^^451^559^[REPLACE] fields.millisOfDay = new CutoverField ( julian.millisOfDay (  ) , fields.millisOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^490^491^^^^451^559^[ADD] fields.secondOfMinute = new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis ) ; fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^491^^^^^451^559^[ADD] fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^492^^^^^451^559^[REPLACE] fields.minuteOfHour = new CutoverField ( julian.minuteOfHour (  ) , fields.minuteOfHour, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay =  new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.secondOfDay, iCutoverMillis )  ;^493^^^^^451^559^[REPLACE] fields.minuteOfDay = new CutoverField ( julian.minuteOfDay (  ) , fields.minuteOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^494^495^^^^451^559^[ADD] fields.hourOfDay = new CutoverField ( julian.hourOfDay (  ) , fields.hourOfDay, iCutoverMillis ) ; fields.hourOfHalfday = new CutoverField ( julian.hourOfHalfday (  ) , fields.hourOfHalfday, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^495^^^^^451^559^[REPLACE] fields.hourOfHalfday = new CutoverField ( julian.hourOfHalfday (  ) , fields.hourOfHalfday, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^496^^^^^451^559^[REPLACE] fields.clockhourOfDay = new CutoverField ( julian.clockhourOfDay (  ) , fields.clockhourOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^497^498^^^^451^559^[ADD] fields.clockhourOfHalfday = new CutoverField ( julian.clockhourOfHalfday (  ) , fields.clockhourOfHalfday, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^499^^^^^451^559^[REPLACE] fields.halfdayOfDay = new CutoverField ( julian.halfdayOfDay (  ) , fields.halfdayOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^489^^^^^451^559^[ADD] fields.millisOfDay = new CutoverField ( julian.millisOfDay (  ) , fields.millisOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^490^^^^^451^559^[REPLACE] fields.secondOfMinute = new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.millisOfDay = new CutoverField ( julian.millisOfDay (  ) , fields.millisOfDay, iCutoverMillis )  ;^491^^^^^451^559^[REPLACE] fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^492^^^^^451^559^[ADD] fields.minuteOfHour = new CutoverField ( julian.minuteOfHour (  ) , fields.minuteOfHour, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay = new CutoverField ( julian.secondOfDay (  ) , fields.secondOfDay, iCutoverMillis )  ;^494^^^^^451^559^[REPLACE] fields.hourOfDay = new CutoverField ( julian.hourOfDay (  ) , fields.hourOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^fields.clockhourOfDay = new CutoverField ( julian.clockhourOfDay (  ) , fields.clockhourOfDay, iCutoverMillis ) ;^495^496^^^^451^559^[ADD] fields.hourOfHalfday = new CutoverField ( julian.hourOfHalfday (  ) , fields.hourOfHalfday, iCutoverMillis ) ; fields.clockhourOfDay = new CutoverField ( julian.clockhourOfDay (  ) , fields.clockhourOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^496^^^^^451^559^[ADD] fields.clockhourOfDay = new CutoverField ( julian.clockhourOfDay (  ) , fields.clockhourOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.clockhourOfHalfday =  new CutoverField ( null.clockhourOfHalfday (  ) , fields.clockhourOfHalfday, iCutoverMillis ) ;^497^498^^^^451^559^[REPLACE] fields.clockhourOfHalfday = new CutoverField ( julian.clockhourOfHalfday (  ) , fields.clockhourOfHalfday, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.secondOfDay =  new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.secondOfDay, iCutoverMillis )  ;^499^^^^^451^559^[REPLACE] fields.halfdayOfDay = new CutoverField ( julian.halfdayOfDay (  ) , fields.halfdayOfDay, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^504^^^^^451^559^[ADD] fields.era = new CutoverField ( julian.era (  ) , fields.era, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.dayOfYear =  new CutoverField ( null.dayOfYear (  ) , fields.dayOfYear, cutover ) ;^514^515^^^^451^559^[REPLACE] fields.dayOfYear = new CutoverField ( julian.dayOfYear (  ) , fields.dayOfYear, cutover ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^513^^^^^451^559^[ADD] long cutover = gregorian.year (  ) .roundCeiling ( iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.weekOfWeekyear = new CutoverField ( julian.weekOfWeekyear (  ) , fields.weekOfWeekyear, cutover, false ) ;^520^521^^^^451^559^[REPLACE] fields.weekOfWeekyear = new CutoverField ( julian.weekOfWeekyear (  ) , fields.weekOfWeekyear, cutover, true ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^long cutover = gregorian.year (  ) .roundCeiling ( iCutoverMillis ) ;^519^^^^^451^559^[REPLACE] long cutover = gregorian.weekyear (  ) .roundCeiling ( iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.year =   new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.year, iCutoverMillis ) ;^528^529^^^^451^559^[REPLACE] fields.year = new ImpreciseCutoverField ( julian.year (  ) , fields.year, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.centuries = getDurationField (  )  ;^530^^^^^451^559^[REPLACE] fields.years = fields.year.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.yearOfEra =   new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.yearOfEra, fields.years, iCutoverMillis ) ;^531^532^^^^451^559^[REPLACE] fields.yearOfEra = new ImpreciseCutoverField ( julian.yearOfEra (  ) , fields.yearOfEra, fields.years, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^533^534^^^^451^559^[ADD] fields.yearOfCentury = new ImpreciseCutoverField ( julian.yearOfCentury (  ) , fields.yearOfCentury, fields.years, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.centuryOfEra =   new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.centuryOfEra, iCutoverMillis ) ;^536^537^^^^451^559^[REPLACE] fields.centuryOfEra = new ImpreciseCutoverField ( julian.centuryOfEra (  ) , fields.centuryOfEra, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.years = getDurationField (  )  ;^538^^^^^451^559^[REPLACE] fields.centuries = fields.centuryOfEra.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.monthOfYear =  new ImpreciseCutoverField ( iJulianChronology.monthOfYear (  ) , fields.monthOfYear, iCutoverMillis ) ;^540^541^^^^451^559^[REPLACE] fields.monthOfYear = new ImpreciseCutoverField ( julian.monthOfYear (  ) , fields.monthOfYear, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^542^^^^^451^559^[ADD] fields.months = fields.monthOfYear.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.weekyear =  new CutoverField ( julian.secondOfMinute (  ) , fields.secondOfMinute, iCutoverMillis )  , fields.weekyear, true, iCutoverMillis, true ) ;^544^545^^^^451^559^[REPLACE] fields.weekyear = new ImpreciseCutoverField ( julian.weekyear (  ) , fields.weekyear, null, iCutoverMillis, true ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^546^547^^^^451^559^[ADD] fields.weekyearOfCentury = new ImpreciseCutoverField ( julian.weekyearOfCentury (  ) , fields.weekyearOfCentury, fields.weekyears, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.centuries = getDurationField (  )  ;^548^^^^^451^559^[REPLACE] fields.weekyears = fields.weekyear.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[ADD]^^556^557^^^^451^559^[ADD] cf.iRangeDurationField = fields.months; fields.dayOfMonth = cf;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^fields.dayOfMonth =  null;^557^^^^^451^559^[REPLACE] fields.dayOfMonth = cf;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^CutoverField cf = new CutoverField ( julian .dayOfWeek (  )  , fields^554^555^^^^451^559^[REPLACE] CutoverField cf = new CutoverField ( julian.dayOfMonth (  ) , fields.dayOfMonth, iCutoverMillis ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  Fields fields  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  [TYPE]  Object[] params  [TYPE]  CutoverField cf 
[REPLACE]^if  (isize  ||  0 )  {^673^^^^^670^686^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return false;  ;^674^^^^^670^686^[REPLACE] return values;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^if   (  durationField == null  )   {  ;^676^^^^^670^686^[REPLACE] if  ( DateTimeUtils.isContiguous ( partial )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return super.add  (  partial, fieldIndex, values, valueToAdd  )  ;  ;^684^^^^^676^685^[REPLACE] return super.add ( partial, fieldIndex, values, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^instant =  null.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^679^^^^^670^686^[REPLACE] instant = partial.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[ADD]^^681^^^^^670^686^[ADD] instant = add ( instant, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return GJChronology.this.set ( partial, serialVersionUID ) ;^682^^^^^670^686^[REPLACE] return GJChronology.this.get ( partial, instant ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[ADD]^^677^^^^^670^686^[ADD] long instant = 0L;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^for  ( int i = 0 , isize = partial.size (  ) ; i < isize; i++ )  {^678^^^^^670^686^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^DateTimeFormatter printer  ;^678^^^^^670^686^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[ADD]^^679^^^^^670^686^[ADD] instant = partial.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^instant =  add ( serialVersionUID, valueToAdd ) ;^681^^^^^670^686^[REPLACE] instant = add ( instant, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return GJChronology.this.get ( partial, serialVersionUID ) ;^682^^^^^670^686^[REPLACE] return GJChronology.this.get ( partial, instant ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return super.add  (  partial, fieldIndex, values, valueToAdd  )  ;  ;^684^^^^^670^686^[REPLACE] return super.add ( partial, fieldIndex, values, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^long instant = 0;^677^^^^^670^686^[REPLACE] long instant = 0L;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^if  ( instant  > subtrahendInstant )  {^697^^^^^696^725^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = iGregorianField.set ( instant, value ) ;^697^698^699^^^696^725^[ADD] if  ( instant >= iCutover )  { instant = iGregorianField.set ( instant, value ) ; if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant  >  iCutover )  {^712^^^^^697^723^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^712^713^714^715^716^697^723^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant - iGapDuration  <=  iCutover )  {^714^^^^^697^723^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = julianToGregorian ( instant ) ;^714^715^716^^^697^723^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^715^^^^^697^723^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( serialVersionUID )   ==  value )  {^718^^^^^697^723^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null )  ;^719^720^^^^697^723^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^gregorianField.getType (  )  ;^720^^^^^697^723^[REPLACE] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return ;^719^720^^^^697^723^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant - iGapDuration  >  iCutover )  {^714^^^^^697^723^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^718^^^^^697^723^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^711^^^^^697^723^[ADD] instant = iJulianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^715^^^^^697^723^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant  >=  iCutover )  {^699^^^^^696^725^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant - iGapDuration >= iCutover  )   {  ;^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^701^702^703^^^696^725^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^702^^^^^696^725^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^705^^^^^696^725^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return ;^706^707^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^( iGregorianField.get (  ) , new Integer ( value ) , null, null ) ;^707^^^^^696^725^[REPLACE] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^707^^^^^696^725^[ADD] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^702^^^^^696^725^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = gregorianToJulian ( instant ) ;^701^702^703^^^696^725^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null )  ;^706^707^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REMOVE]^iGregorianField.getLeapDurationField (  )  ;^707^^^^^696^725^[REMOVE] ^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^698^^^^^696^725^[ADD] instant = iGregorianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^699^^^^^696^725^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant + iGapDuration  !=  iCutover )  {^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^705^706^707^708^^696^725^[ADD] if  ( get ( instant )  != value )  { throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^706^707^^^^696^725^[ADD] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( serialVersionUID + iGapDuration  <= serialVersionUID )  {^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^712^^^^^696^725^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( minuendInstant  <=  value )  {^714^^^^^696^725^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^715^^^^^696^725^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^718^^^^^696^725^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null )  ;^719^720^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^( iJulianField.get (  ) , new Integer ( value ) , null, null ) ;^720^^^^^696^725^[REPLACE] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^720^^^^^696^725^[ADD] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^715^^^^^696^725^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return ;^719^720^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant - iGapDuration  !=  iCutover )  {^714^^^^^696^725^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^711^^^^^696^725^[ADD] instant = iJulianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return instant;  ;^724^^^^^696^725^[REPLACE] return instant;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (subtrahendInstant  >  iCutover )  {^728^^^^^727^748^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^739^^^^^728^746^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  <=  iCutover )  {^741^^^^^728^746^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^742^^^^^728^746^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  !=  iCutover )  {^741^^^^^728^746^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^741^^^^^728^746^[REMOVE] ^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^742^^^^^728^746^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^738^^^^^728^746^[REPLACE] instant = iJulianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  !=  iCutover )  {^730^^^^^727^748^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  >  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^733^^^^^727^748^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( serialVersionUID + iGapDuration  !=  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iGregorianField.set ( instant, min )  ;^733^^^^^727^748^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iGregorianField.add ( instant, value )  ;^729^^^^^727^748^[REPLACE] instant = iGregorianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^730^^^^^727^748^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant - iGapDuration >= iCutover  )   {  ;^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^733^^^^^727^748^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  >=  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^732^733^734^^^727^748^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  >  iCutover )  {^739^^^^^727^748^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^739^740^741^742^743^727^748^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  ==  iCutover )  {^741^^^^^727^748^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^742^^^^^727^748^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^742^^^^^727^748^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  <  iCutover )  {^741^^^^^727^748^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^738^^^^^727^748^[ADD] instant = iJulianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return subtrahendInstant;^747^^^^^727^748^[REPLACE] return instant;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^952^^^^^951^970^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^952^953^954^^^951^970^[ADD] if  ( instant >= iCutover )  { instant = iGregorianField.add ( instant, value ) ; if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant  <=  iCutover )  {^962^^^^^952^968^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (value  <  iCutover )  {^964^^^^^952^968^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^965^^^^^952^968^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant - iGapDuration  <  serialVersionUID )  {^964^^^^^952^968^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^964^^^^^952^968^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^961^^^^^952^968^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant  >  minuendInstant )  {^954^^^^^951^970^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REMOVE]^if  ( instant >=  ( iCutover )  )  {     return iGregorianField.getLeapAmount ( instant ) ; }else {     return iJulianField.getLeapAmount ( instant ) ; }^954^^^^^951^970^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant + iGapDuration  >  iCutover )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iGregorianField.set ( instant, min )  ;^957^^^^^951^970^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^957^^^^^951^970^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant + iGapDuration  <=  iCutover )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^953^^^^^951^970^[REPLACE] instant = iGregorianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant  > subtrahendInstant )  {^954^^^^^951^970^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant + iGapDuration  !=  iCutover )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^956^^^^^951^970^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^957^^^^^951^970^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (subtrahendInstant  ==  iCutover )  {^962^^^^^951^970^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^962^963^964^965^966^951^970^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant - iGapDuration  <  iCutover )  {^964^^^^^951^970^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^965^^^^^951^970^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (value  ==  iCutover )  {^964^^^^^951^970^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = julianToGregorian ( instant ) ;^964^965^966^^^951^970^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^961^^^^^951^970^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^965^^^^^951^970^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return instant;  ;^969^^^^^951^970^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant  >  iCutover )  {^973^^^^^972^991^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  ==  iCutover )  {^983^^^^^973^989^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^983^984^985^986^987^973^989^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  (value  <  iCutover )  {^985^^^^^973^989^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^985^986^987^^^973^989^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^986^^^^^973^989^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  (value  >  iCutover )  {^985^^^^^973^989^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^982^^^^^973^989^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^986^^^^^973^989^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant >= iCutoverMillis  )   {  ;^975^^^^^972^991^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REMOVE]^if  ( instant >=  ( iCutover )  )  {     return iGregorianField.getLeapAmount ( instant ) ; }else {     return iJulianField.getLeapAmount ( instant ) ; }^975^^^^^972^991^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant - iGapDuration >= iCutover  )   {  ;^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^978^^^^^972^991^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  ==  iCutover )  {^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     return iJulianField.getMinimumValue ( instant ) ; }^977^^^^^972^991^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^974^^^^^972^991^[REPLACE] instant = iGregorianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  !=  iCutover )  {^975^^^^^972^991^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  >  iCutover )  {^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  >=  iCutover )  {^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iGregorianField.set ( instant, min )  ;^978^^^^^972^991^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  <=  value )  {^983^^^^^972^991^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^983^984^985^986^987^972^991^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant - iGapDuration  == serialVersionUID )  {^985^^^^^972^991^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^985^986^987^^^972^991^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^986^^^^^972^991^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^986^^^^^972^991^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  <  iCutover )  {^985^^^^^972^991^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^982^^^^^972^991^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return subtrahendInstant;^990^^^^^972^991^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant < iCutover  )   {  ;^994^^^^^993^1011^[REPLACE] if  ( minuendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( minuendInstant  >  minuendInstant )  {^1003^^^^^994^1010^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^1004^^^^^994^1010^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1008^^^^^994^1010^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference ( minuendInstant, instant ) ;^1004^^^^^994^1010^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifference ( value, subtrahendInstant ) ;^1009^^^^^994^1010^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  minuendInstant >= iCutover  )   {  ;^995^^^^^993^1011^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifference ( minuendInstant, value ) ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^1000^^^^^993^1011^[REPLACE] minuendInstant = gregorianToJulian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifference ( serialVersionUID, subtrahendInstant ) ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference ( value, subtrahendInstant ) ;^1001^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( value  <  iCutover )  {^995^^^^^993^1011^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^995^996^997^^^993^1011^[ADD] if  ( subtrahendInstant >= iCutover )  { return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ; }^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifferenceAsLong ( minuendInstant, value ) ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  >  iCutover )  {^1003^^^^^993^1011^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference ( minuendInstant, serialVersionUID ) ;^1004^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1008^^^^^993^1011^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference  (  minuendInstant, subtrahendInstant  )  ;  ;^1001^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField .getDifferenceAsLong ( gregorianCutover , newInstant )  ;^1004^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifference ( value, subtrahendInstant ) ;^1009^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( minuendInstant  !=  iCutover )  {^1014^^^^^1013^1031^[REPLACE] if  ( minuendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  subtrahendInstant >= iCutover  )   {  ;^1023^^^^^1014^1030^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1024^^^^^1014^1030^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^1028^1029^^^^1014^1030^[ADD] minuendInstant = julianToGregorian ( minuendInstant ) ; return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifferenceAsLong ( minuendInstant, instant ) ;^1024^^^^^1014^1030^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField .getDifference ( gregorianCutover , instant )  ;^1029^^^^^1014^1030^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  != minuendInstant )  {^1015^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^1015^1016^1017^^^1013^1031^[ADD] if  ( subtrahendInstant >= iCutover )  { return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ; }^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifferenceAsLong ( minuendInstant, value ) ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^1020^^^^^1013^1031^[REPLACE] minuendInstant = gregorianToJulian ( minuendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifferenceAsLong ( minuendInstant, instant ) ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference ( value, subtrahendInstant ) ;^1021^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  >  iCutover )  {^1015^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iGregorianField.getDifference ( value, subtrahendInstant ) ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  ==  serialVersionUID )  {^1023^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1024^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1028^^^^^1013^1031^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference ( minuendInstant, value ) ;^1021^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifferenceAsLong ( minuendInstant, value ) ;^1024^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return iJulianField.getDifference  (  minuendInstant, subtrahendInstant  )  ;  ;^1029^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] GJChronology CutoverField ImpreciseCutoverField LinkedDurationField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^private static final long serialVersionUID ;^583^^^^^^^[REPLACE] private static final long serialVersionUID = 3528501219481026402L;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^DateTimeField iGregorianField;^586^^^^^^^[REPLACE] final DateTimeField iGregorianField;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^short  iCutover;^587^^^^^^^[REPLACE] final long iCutover;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^private DurationField iRangeDurationField;^591^^^^^^^[REPLACE] protected DurationField iRangeDurationField;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  JulianChronology iJulianChronology  julian  [TYPE]  Instant DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  [TYPE]  GregorianChronology gregorian  iGregorianChronology  [TYPE]  ImpreciseCutoverField dateTimeField  iField  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  Map cCache  [TYPE]  DurationField durationField  iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  minuendInstant  newInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^super ( julianField.getType (  )  ) ;^610^^^^^609^624^[REPLACE] super ( gregorianField.getType (  )  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[ADD]^^610^^^^^609^624^[ADD] super ( gregorianField.getType (  )  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[ADD]^^611^^^^^609^624^[ADD] iJulianField = julianField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^iGregorianField =  julianField;^612^^^^^609^624^[REPLACE] iGregorianField = gregorianField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^iCutover =  serialVersionUID;^613^^^^^609^624^[REPLACE] iCutover = cutoverMillis;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[ADD]^^614^^^^^609^624^[ADD] iConvertByWeekyear = convertByWeekyear;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^iDurationField =  julianField.getDurationField (  ) ;^617^^^^^609^624^[REPLACE] iDurationField = gregorianField.getDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^DurationField rangeField = gregorianField.getDurationField (  ) ;^619^^^^^609^624^[REPLACE] DurationField rangeField = gregorianField.getRangeDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^if  ( rangeField !=iRangeDurationField )  {^620^^^^^609^624^[REPLACE] if  ( rangeField == null )  {^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[ADD]^^621^^^^^609^624^[ADD] rangeField = julianField.getRangeDurationField (  ) ;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[ADD]^^623^^^^^609^624^[ADD] iRangeDurationField = rangeField;^[METHOD] <init> [TYPE] DateTimeField,long,boolean) [PARAMETER] DateTimeField julianField DateTimeField gregorianField long cutoverMillis boolean convertByWeekyear [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  serialVersionUID 
[REPLACE]^if  ( valueToAdd  ||  0 - 4 )  {^673^^^^^670^686^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return false;  ;^674^^^^^670^686^[REPLACE] return values;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^if   (  instant < iCutover  )   {  ;^676^^^^^670^686^[REPLACE] if  ( DateTimeUtils.isContiguous ( partial )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return super.add  (  partial, fieldIndex, values, valueToAdd  )  ;  ;^684^^^^^676^685^[REPLACE] return super.add ( partial, fieldIndex, values, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^instant =  null.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^679^^^^^670^686^[REPLACE] instant = partial.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^instant =  add ( serialVersionUID, valueToAdd ) ;^681^^^^^670^686^[REPLACE] instant = add ( instant, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return GJChronology.this.set ( partial, instant ) ;^682^^^^^670^686^[REPLACE] return GJChronology.this.get ( partial, instant ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[ADD]^^677^^^^^670^686^[ADD] long instant = 0L;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^for  ( int i = 0 , isize = partial.size (  ) ; i < isize; i++ )  {^678^^^^^670^686^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^Chronology chrono = getInstanceUTC (  )  ;^678^^^^^670^686^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[ADD]^^679^^^^^670^686^[ADD] instant = partial.getFieldType ( i ) .getField ( GJChronology.this ) .set ( instant, values[i] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^instant = field.set ( instant, values[i] )  ;^681^^^^^670^686^[REPLACE] instant = add ( instant, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^return super.add  (  partial, fieldIndex, values, valueToAdd  )  ;  ;^684^^^^^670^686^[REPLACE] return super.add ( partial, fieldIndex, values, valueToAdd ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int valueToAdd [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  ReadablePartial partial  [TYPE]  int[] values  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  serialVersionUID  value  [TYPE]  int fieldIndex  i  isize  valueToAdd 
[REPLACE]^if   (  instant < iCutover  )   {  ;^697^^^^^696^725^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant < iCutover  )   {  ;^712^^^^^697^723^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant - iGapDuration  <  value )  {^714^^^^^697^723^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant =  julianToGregorian ( null ) ;^715^^^^^697^723^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^718^^^^^697^723^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^719^720^^^^697^723^[ADD] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^gregorianField.getType (  )  ;^720^^^^^697^723^[REPLACE] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant =  julianToGregorian ( subtrahendInstant ) ;^715^^^^^697^723^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null )  ;^719^720^^^^697^723^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (value  !=  iCutover )  {^714^^^^^697^723^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^714^715^716^^^697^723^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^718^719^720^721^^697^723^[ADD] if  ( get ( instant )  != value )  { throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, max )  ;^711^^^^^697^723^[REPLACE] instant = iJulianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return ;^719^720^^^^697^723^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (subtrahendInstant  >=  iCutover )  {^699^^^^^696^725^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant - iGapDuration >= iCutover  )   {  ;^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^702^^^^^696^725^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^705^^^^^696^725^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^705^706^707^708^^696^725^[ADD] if  ( get ( instant )  != value )  { throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^706^707^^^^696^725^[ADD] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^( iGregorianField .getAsText ( iCutover , null )  , new Integer ( value ) , null, null ) ;^707^^^^^696^725^[REPLACE] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant =  gregorianToJulian ( subtrahendInstant ) ;^702^^^^^696^725^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null )  ;^706^707^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = gregorianToJulian ( instant ) ;^701^702^703^^^696^725^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^iJulianField.getType (  )  ;^707^^^^^696^725^[REPLACE] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^707^^^^^696^725^[ADD] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^698^^^^^696^725^[REPLACE] instant = iGregorianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant >= iCutover  )   {  ;^699^^^^^696^725^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant + iGapDuration  >  iCutover )  {^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^( iGregorianField.get (  ) , new Integer ( value ) , null, null ) ;^707^^^^^696^725^[REPLACE] ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant =  gregorianToJulian ( null ) ;^702^^^^^696^725^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return ;^706^707^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant + iGapDuration  > subtrahendInstant )  {^701^^^^^696^725^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  (subtrahendInstant  <=  iCutover )  {^712^^^^^696^725^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^712^713^714^715^716^696^725^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if   (  instant + iGapDuration < iCutover  )   {  ;^714^^^^^696^725^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^instant = julianToGregorian ( instant ) ;^714^715^716^^^696^725^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant =  julianToGregorian ( subtrahendInstant ) ;^715^^^^^696^725^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( get ( instant )   ==  value )  {^718^^^^^696^725^[REPLACE] if  ( get ( instant )  != value )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^718^719^720^721^^696^725^[ADD] if  ( get ( instant )  != value )  { throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^719^720^^^^696^725^[ADD] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^gregorianField.getType (  )  ;^720^^^^^696^725^[REPLACE] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^715^^^^^696^725^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( subtrahendInstant - iGapDuration  != value )  {^714^^^^^696^725^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[ADD]^^720^^^^^696^725^[ADD] ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^instant = iJulianField.set ( instant, max )  ;^711^^^^^696^725^[REPLACE] instant = iJulianField.set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^throw new IllegalFieldValueException ( iGregorianField.getType (  ) , new Integer ( value ) , null, null )  ;^719^720^^^^696^725^[REPLACE] throw new IllegalFieldValueException ( iJulianField.getType (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^return subtrahendInstant;^724^^^^^696^725^[REPLACE] return instant;^[METHOD] set [TYPE] long [PARAMETER] long instant int value [CLASS] CutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  int value 
[REPLACE]^if  ( instant  <=  iCutover )  {^728^^^^^727^748^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^instant = iGregorianField.set ( instant, text, locale ) ;^728^729^730^^^727^748^[ADD] if  ( instant >= iCutover )  { instant = iGregorianField.set ( instant, text, locale ) ; if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant  >  value )  {^739^^^^^728^746^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if   (  instant + iGapDuration < iCutover  )   {  ;^741^^^^^728^746^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^741^742^743^^^728^746^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant =  julianToGregorian ( subtrahendInstant ) ;^742^^^^^728^746^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^742^^^^^728^746^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  <= value )  {^741^^^^^728^746^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^instant = julianToGregorian ( instant ) ;^741^742^743^^^728^746^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iJulianField.set ( instant, value )  ;^738^^^^^728^746^[REPLACE] instant = iJulianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  (subtrahendInstant  >  iCutover )  {^730^^^^^727^748^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^730^731^732^733^734^727^748^[ADD] if  ( instant < iCutover )  {  if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  <=  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^instant = gregorianToJulian ( instant ) ;^732^733^734^^^727^748^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant =  gregorianToJulian ( subtrahendInstant ) ;^733^^^^^727^748^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( subtrahendInstant + iGapDuration  !=  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^729^^^^^727^748^[ADD] instant = iGregorianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  (subtrahendInstant  <=  iCutover )  {^730^^^^^727^748^[REPLACE] if  ( instant < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  >=  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^733^^^^^727^748^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant + iGapDuration  ==  iCutover )  {^732^^^^^727^748^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iGregorianField.roundCeiling ( instant )  ;^733^^^^^727^748^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  <=  iCutover )  {^739^^^^^727^748^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^739^740^741^742^743^727^748^[ADD] if  ( instant >= iCutover )  {  if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  (value  <  iCutover )  {^741^^^^^727^748^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^instant = julianToGregorian ( instant ) ;^741^742^743^^^727^748^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant =  julianToGregorian ( subtrahendInstant ) ;^742^^^^^727^748^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^742^^^^^727^748^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant - iGapDuration  < subtrahendInstant )  {^741^^^^^727^748^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^741^742^743^^^727^748^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^instant = iGregorianField.set ( instant, value )  ;^729^^^^^727^748^[REPLACE] instant = iGregorianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[ADD]^^738^^^^^727^748^[ADD] instant = iJulianField.set ( instant, text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^return subtrahendInstant;^747^^^^^727^748^[REPLACE] return instant;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] CutoverField   [TYPE]  Locale locale  [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  String text  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^private static final long serialVersionUID  = null ;^915^^^^^^^[REPLACE] private static final long serialVersionUID = 3410248757173576441L;^[METHOD] gregorianToJulian [TYPE] long [PARAMETER] long instant [CLASS] ImpreciseCutoverField   [TYPE]  boolean convertByWeekyear  false  iConvertByWeekyear  true  [TYPE]  DateTimeField field  gregorianField  iGregorianField  iJulianField  julianField  [TYPE]  DurationField iDurationField  iRangeDurationField  rangeField  [TYPE]  long cutoverMillis  iCutover  instant  minuendInstant  serialVersionUID  subtrahendInstant  value 
[REPLACE]^if  ( instant  <  iCutover )  {^952^^^^^951^970^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if   (  instant < iCutover  )   {  ;^962^^^^^952^968^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  (serialVersionUID  <  iCutover )  {^964^^^^^952^968^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^965^^^^^952^968^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^965^^^^^952^968^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant - iGapDuration  ==  serialVersionUID )  {^964^^^^^952^968^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^instant = julianToGregorian ( instant ) ;^964^965^966^^^952^968^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^instant = iGregorianField.add ( instant, value )  ;^961^^^^^952^968^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if   (  minuendInstant >= iCutover  )   {  ;^954^^^^^951^970^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^954^955^956^957^958^951^970^[ADD] if  ( instant < iCutover )  {  if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant + iGapDuration  >  iCutover )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^957^^^^^951^970^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant + iGapDuration  !=  iCutover )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^956^957^958^^^951^970^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^instant = julianToGregorian ( instant )  ;^957^^^^^951^970^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^instant = iJulianField.add ( instant, value )  ;^953^^^^^951^970^[REPLACE] instant = iGregorianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  (serialVersionUID  <=  iCutover )  {^954^^^^^951^970^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant + iGapDuration  >  serialVersionUID )  {^956^^^^^951^970^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( serialVersionUID  !=  iCutover )  {^962^^^^^951^970^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant - iGapDuration  >  iCutover )  {^964^^^^^951^970^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^965^^^^^951^970^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant - iGapDuration  !=  iCutover )  {^964^^^^^951^970^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^965^^^^^951^970^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^957^^^^^951^970^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[ADD]^^961^^^^^951^970^[ADD] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^return instant;  ;^969^^^^^951^970^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  [TYPE]  int value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant  >  iCutover )  {^973^^^^^972^991^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant  !=  iCutover )  {^983^^^^^973^989^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant - iGapDuration  >  iCutover )  {^985^^^^^973^989^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^instant = julianToGregorian ( instant ) ;^985^986^987^^^973^989^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^986^^^^^973^989^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  (value  !=  iCutover )  {^985^^^^^973^989^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^^985^986^987^^^973^989^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^^986^^^^^973^989^[ADD] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^instant = iGregorianField.add ( instant, value )  ;^982^^^^^973^989^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant  <=  iCutover )  {^975^^^^^972^991^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant + iGapDuration  !=  iCutover )  {^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^instant = gregorianToJulian ( instant ) ;^977^978^979^^^972^991^[ADD] if  ( instant + iGapDuration < iCutover )  { instant = gregorianToJulian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = gregorianToJulian ( minuendInstant )  ;^978^^^^^972^991^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^^978^^^^^972^991^[ADD] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if   (  instant - iGapDuration >= iCutover  )   {  ;^977^^^^^972^991^[REPLACE] if  ( instant + iGapDuration < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^^974^^^^^972^991^[ADD] instant = iGregorianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant  !=  iCutover )  {^975^^^^^972^991^[REPLACE] if  ( instant < iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^instant = julianToGregorian ( instant )  ;^978^^^^^972^991^[REPLACE] instant = gregorianToJulian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( serialVersionUID  !=  iCutover )  {^983^^^^^972^991^[REPLACE] if  ( instant >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REMOVE]^if  ( instant <  ( iCutover )  )  {     if  (  ( instant +  ( iGapDuration )  )  <  ( iCutover )  )  {         instant = gregorianToJulian ( instant ) ;     } }^983^^^^^972^991^[REMOVE] ^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( instant - iGapDuration  >  iCutover )  {^985^^^^^972^991^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[ADD]^instant = julianToGregorian ( instant ) ;^985^986^987^^^972^991^[ADD] if  ( instant - iGapDuration >= iCutover )  { instant = julianToGregorian ( instant ) ; }^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^986^^^^^972^991^[REPLACE] instant = julianToGregorian ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( serialVersionUID - iGapDuration  > value )  {^985^^^^^972^991^[REPLACE] if  ( instant - iGapDuration >= iCutover )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^instant = iJulianField.add ( instant, value )  ;^974^^^^^972^991^[REPLACE] instant = iGregorianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^instant = iGregorianField.add ( instant, value )  ;^982^^^^^972^991^[REPLACE] instant = iJulianField.add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^return instant;  ;^990^^^^^972^991^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  serialVersionUID  value  [TYPE]  boolean false  true 
[REPLACE]^if   (  instant < iCutover  )   {  ;^994^^^^^993^1011^[REPLACE] if  ( minuendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( subtrahendInstant  >=  iCutover )  {^1003^^^^^994^1010^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REMOVE]^if  ( subtrahendInstant <  ( iCutover )  )  {     return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ; }^1003^^^^^994^1010^[REMOVE] ^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField .getDifferenceAsLong ( minuendInstant , subtrahendInstant )  ;^1004^^^^^994^1010^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1008^^^^^994^1010^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference  (  minuendInstant, subtrahendInstant  )  ;  ;^1004^^^^^994^1010^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifference ( minuendInstant, value ) ;^1009^^^^^994^1010^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( value  == value )  {^995^^^^^993^1011^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifference ( value, subtrahendInstant ) ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^1000^^^^^993^1011^[REPLACE] minuendInstant = gregorianToJulian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifference ( minuendInstant, value ) ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1001^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( subtrahendInstant  != value )  {^995^^^^^993^1011^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[ADD]^return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^995^996^997^^^993^1011^[ADD] if  ( subtrahendInstant >= iCutover )  { return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ; }^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField .getDifferenceAsLong ( minuendInstant , value )  ;^996^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( value  <=  iCutover )  {^1003^^^^^993^1011^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[ADD]^^1003^1004^1005^^^993^1011^[ADD] if  ( subtrahendInstant < iCutover )  { return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ; }^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference ( minuendInstant, value ) ;^1004^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1008^^^^^993^1011^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference ( value, subtrahendInstant ) ;^1001^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference ( value, subtrahendInstant ) ;^1004^^^^^993^1011^[REPLACE] return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference  (  minuendInstant, subtrahendInstant  )  ;  ;^1009^^^^^993^1011^[REPLACE] return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  (value  ==  iCutover )  {^1014^^^^^1013^1031^[REPLACE] if  ( minuendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[ADD]^^1014^1015^1016^1017^^1013^1031^[ADD] if  ( minuendInstant >= iCutover )  { if  ( subtrahendInstant >= iCutover )  { return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ; }^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if   (  minuendInstant >= iCutover  )   {  ;^1023^^^^^1014^1030^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1024^^^^^1014^1030^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[ADD]^^1028^1029^^^^1014^1030^[ADD] minuendInstant = julianToGregorian ( minuendInstant ) ; return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference  (  minuendInstant, subtrahendInstant  )  ;  ;^1024^^^^^1014^1030^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifferenceAsLong ( minuendInstant, value ) ;^1029^^^^^1014^1030^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( subtrahendInstant  <= value )  {^1015^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifferenceAsLong ( minuendInstant, value ) ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^minuendInstant = julianToGregorian ( minuendInstant )  ;^1020^^^^^1013^1031^[REPLACE] minuendInstant = gregorianToJulian ( minuendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField.getDifference ( minuendInstant, subtrahendInstant ) ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1021^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( subtrahendInstant  <=  iCutover )  {^1015^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant >= iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^if  (value  >  iCutover )  {^1023^^^^^1013^1031^[REPLACE] if  ( subtrahendInstant < iCutover )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifference ( minuendInstant, subtrahendInstant ) ;^1024^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^instant = julianToGregorian ( instant )  ;^1028^^^^^1013^1031^[REPLACE] minuendInstant = julianToGregorian ( minuendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField .getDifference ( subtrahendInstant , subtrahendInstant )  ;^1016^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifferenceAsLong ( minuendInstant, value ) ;^1021^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iJulianField.getDifferenceAsLong ( value, subtrahendInstant ) ;^1024^^^^^1013^1031^[REPLACE] return iJulianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return iGregorianField .getDifference ( instant , serialVersionUID )  ;^1029^^^^^1013^1031^[REPLACE] return iGregorianField.getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] ImpreciseCutoverField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
[REPLACE]^private static final long serialVersionUID  = null ;^1065^^^^^^^[REPLACE] private static final long serialVersionUID = 4097975388007713084L;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] long instant [CLASS] LinkedDurationField   [TYPE]  long cutoverMillis  instant  minuendInstant  serialVersionUID  subtrahendInstant  value  [TYPE]  boolean false  true 
