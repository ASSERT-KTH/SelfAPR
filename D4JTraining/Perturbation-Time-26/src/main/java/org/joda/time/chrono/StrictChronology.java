[REPLACE]^private static final long serialVersionUID ;^36^^^^^^^[REPLACE] private static final long serialVersionUID = 6633006628097111960L;^ [CLASS] StrictChronology  
[REPLACE]^super ( base, false ) ;^59^^^^^58^60^[REPLACE] super ( base, null ) ;^[METHOD] <init> [TYPE] Chronology) [PARAMETER] Chronology base [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^if  ( base != null )  {^45^^^^^44^49^[REPLACE] if  ( base == null )  {^[METHOD] getInstance [TYPE] StrictChronology [PARAMETER] Chronology base [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^return ;^46^^^^^44^49^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getInstance [TYPE] StrictChronology [PARAMETER] Chronology base [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^return StrictDateTimeField.getInstance ( field ) ;^48^^^^^44^49^[REPLACE] return new StrictChronology ( base ) ;^[METHOD] getInstance [TYPE] StrictChronology [PARAMETER] Chronology base [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^if  ( iWithUTC != null )  {^63^^^^^62^71^[REPLACE] if  ( iWithUTC == null )  {^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^if  ( getZone (  )   ||  DateTimeZone.UTC )  {^64^^^^^62^71^[REPLACE] if  ( getZone (  )  == DateTimeZone.UTC )  {^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC  =  iWithUTC ;^67^^^^^62^71^[REPLACE] iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC  =  iWithUTC ;^65^^^^^62^71^[REPLACE] iWithUTC = this;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC  = null ;^65^^^^^62^71^[REPLACE] iWithUTC = this;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[ADD]^^67^^^^^62^71^[ADD] iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^if  ( getZone (  )   !=  DateTimeZone.UTC )  {^64^^^^^62^71^[REPLACE] if  ( getZone (  )  == DateTimeZone.UTC )  {^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC  = null ;^67^^^^^62^71^[REPLACE] iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC ;^65^^^^^62^71^[REPLACE] iWithUTC = this;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^iWithUTC ;^67^^^^^62^71^[REPLACE] iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^return false;^70^^^^^62^71^[REPLACE] return iWithUTC;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^if  ( zone != null )  {^74^^^^^73^84^[REPLACE] if  ( zone == null )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[ADD]^^74^75^76^^^73^84^[ADD] if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^zone  = null ;^75^^^^^73^84^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^zone  =  zone ;^75^^^^^73^84^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone  &&  DateTimeZone.UTC )  {^77^^^^^73^84^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^return StrictDateTimeField.getInstance ( field ) ;^78^^^^^73^84^[REPLACE] return withUTC (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone  &&  getZone (  )  )  {^80^^^^^73^84^[REPLACE] if  ( zone == getZone (  )  )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^return null;^81^^^^^73^84^[REPLACE] return this;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^return StrictChronology.StrictChronology ( getBase (  ) .withZone ( zone )  ) ;^83^^^^^73^84^[REPLACE] return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone zone 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^87^^^^^86^111^[REPLACE] fields.year = convertField ( fields.year ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^88^^^^^86^111^[REPLACE] fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ; ;^89^^^^^86^111^[REPLACE] fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.hourOfDay = convertField ( fields.hourOfDay ) ; ;^90^^^^^86^111^[REPLACE] fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^90^91^^^^86^111^[ADD] fields.centuryOfEra = convertField ( fields.centuryOfEra ) ; fields.era = convertField ( fields.era ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^91^^^^^86^111^[REPLACE] fields.era = convertField ( fields.era ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^91^^^^^86^111^[ADD] fields.era = convertField ( fields.era ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^92^^^^^86^111^[REPLACE] fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.dayOfYear = convertField ( fields.dayOfYear ) ; ;^93^^^^^86^111^[REPLACE] fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^94^^^^^86^111^[REPLACE] fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^94^^^^^86^111^[ADD] fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^95^^^^^86^111^[REPLACE] fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^96^^^^^86^111^[REPLACE] fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ; ;^97^^^^^86^111^[REPLACE] fields.weekyear = convertField ( fields.weekyear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.weekyear = convertField ( fields.weekyear ) ; ;^98^^^^^86^111^[REPLACE] fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.millisOfDay = convertField ( fields.millisOfDay ) ; ;^100^^^^^86^111^[REPLACE] fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ; ;^101^^^^^86^111^[REPLACE] fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ; ;^102^^^^^86^111^[REPLACE] fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.hourOfDay = convertField ( fields.hourOfDay ) ; ;^103^^^^^86^111^[REPLACE] fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ; ;^104^^^^^86^111^[REPLACE] fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^104^105^^^^86^111^[ADD] fields.minuteOfHour = convertField ( fields.minuteOfHour ) ; fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.secondOfDay = convertField ( fields.secondOfDay ) ; ;^105^^^^^86^111^[REPLACE] fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^105^^^^^86^111^[ADD] fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ; ;^106^^^^^86^111^[REPLACE] fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ; ;^107^^^^^86^111^[REPLACE] fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ; ;^108^^^^^86^111^[REPLACE] fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.hourOfDay = convertField ( fields.hourOfDay ) ; ;^109^^^^^86^111^[REPLACE] fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^fields.dayOfYear = convertField ( fields.dayOfYear ) ; ;^110^^^^^86^111^[REPLACE] fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^110^^^^^86^111^[ADD] fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return   field   ;^114^^^^^113^115^[REPLACE] return StrictDateTimeField.getInstance ( field ) ;^[METHOD] convertField [TYPE] DateTimeField [PARAMETER] DateTimeField field [CLASS] StrictChronology   [TYPE]  Chronology base  iWithUTC  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( this  ||  obj )  {^127^^^^^126^135^[REPLACE] if  ( this == obj )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[REPLACE]^return false;^128^^^^^126^135^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[REPLACE]^if  ( ! obj instanceof StrictChronology == false )  {^130^^^^^126^135^[REPLACE] if  ( obj instanceof StrictChronology == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[ADD]^^130^131^132^^^126^135^[ADD] if  ( obj instanceof StrictChronology == false )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[REPLACE]^return true;^131^^^^^126^135^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[ADD]^^133^^^^^126^135^[ADD] StrictChronology chrono =  ( StrictChronology )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[REPLACE]^return getBase (  ) .withZone ( chrono.getBase (  )  ) ;^134^^^^^126^135^[REPLACE] return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrictChronology   [TYPE]  Object obj  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  StrictChronology chrono 
[REPLACE]^return 352831696  ;^144^^^^^143^145^[REPLACE] return 352831696 + getBase (  ) .hashCode (  )  * 7;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
[REPLACE]^return "StrictChronology["  ^  getBase (  ) .toString (  )   ^  ']';^153^^^^^152^154^[REPLACE] return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] StrictChronology   [TYPE]  long serialVersionUID  [TYPE]  Chronology base  iWithUTC  [TYPE]  boolean false  true 
