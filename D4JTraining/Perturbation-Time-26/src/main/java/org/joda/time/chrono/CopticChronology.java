[REPLACE]^private static final long serialVersionUID  = null ;^54^^^^^^^[REPLACE] private static final long serialVersionUID = -5972804258688333942L;^ [CLASS] CopticChronology  
[REPLACE]^public static   short  AM = DateTimeConstants.CE;^60^^^^^^^[REPLACE] public static final int AM = DateTimeConstants.CE;^ [CLASS] CopticChronology  
[REPLACE]^private static final DateTimeField ERA_FIELD ;^63^^^^^^^[REPLACE] private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "AM" ) ;^ [CLASS] CopticChronology  
[REPLACE]^private static final int MIN_YEAR ;^66^^^^^^^[REPLACE] private static final int MIN_YEAR = -292269337;^ [CLASS] CopticChronology  
[REPLACE]^private static final  long  MAX_YEAR = 0;^69^^^^^^^[REPLACE] private static final int MAX_YEAR = 292272708;^ [CLASS] CopticChronology  
[REPLACE]^private static final Map<DateTimeZone, CopticChronology[]> cCache  = null ;^72^^^^^^^[REPLACE] private static final Map<DateTimeZone, CopticChronology[]> cCache = new HashMap<DateTimeZone, CopticChronology[]> (  ) ;^ [CLASS] CopticChronology  
[REPLACE]^if  ( zone != null )  {^119^^^^^118^153^[REPLACE] if  ( zone == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^zone  =  zone ;^120^^^^^118^153^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^122^^^^^118^153^[ADD] CopticChronology chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if   (  zone == null  )   {  ;^125^^^^^118^153^[REPLACE] if  ( chronos == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^126^^^^^118^153^[ADD] chronos = new CopticChronology[7];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( chrono != this  )  {^135^^^^^118^153^[REPLACE] if  ( chrono == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^135^136^^138^^118^153^[ADD] if  ( chrono == null )  { if  ( zone == DateTimeZone.UTC )  { chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( zone  &&  DateTimeZone.UTC )  {^136^^^^^118^153^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^145^^^^^136^148^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^146^147^^^^136^148^[ADD] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( false, false, minDaysInFirstWeek ) ;^138^^^^^118^153^[REPLACE] chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, this ) , this, minDaysInFirstWeek ) ;^141^142^143^^^118^153^[REPLACE] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 4, 4, 4, 0, 0, 0, 0, chrono ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  new CopticChronology ( getInstance ( chrono, zone ) , null, minDaysInFirstWeek )  , true, minDaysInFirstWeek ) ;^141^142^143^^^118^153^[REPLACE] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( null, null, minDaysInFirstWeek )  ;^145^^^^^118^153^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^146^147^^^^118^153^[ADD] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chronos[minDaysInFirstWeek  1] = chrono;^149^^^^^118^153^[REPLACE] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1 / 2, 1 / 2, 1 / 2, 0, 0, 0, 0, chrono ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( zone  ||  DateTimeZone.UTC )  {^136^^^^^118^153^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, null ) ;^145^^^^^136^148^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , false, minDaysInFirstWeek ) ;^146^147^^^^136^148^[REPLACE] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( true, true, minDaysInFirstWeek ) ;^138^^^^^118^153^[REPLACE] chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^140^^^^^118^153^[ADD] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^chrono = chronos[minDaysInFirstWeek - 1];( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^129^130^131^132^133^118^153^[ADD] try { chrono = chronos[minDaysInFirstWeek - 1]; } catch  ( ArrayIndexOutOfBoundsException e )  { throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = chronos[minDaysInFirstWeek  3];^130^^^^^118^153^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^126^127^^^^118^153^[ADD] chronos = new CopticChronology[7]; cCache.put ( zone, chronos ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = chronos[minDaysInFirstWeek  1];^130^^^^^118^153^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^138^^^^^118^153^[ADD] chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^145^^^^^118^153^[ADD] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^149^^^^^118^153^[ADD] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^CopticChronology chrono  ;^124^^^^^118^153^[REPLACE] CopticChronology[] chronos = cCache.get ( zone ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1 + 0, 1 + 0, 1 + 0, 0, 0, 0, 0, chrono ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^return ;^132^133^^^^118^153^[REPLACE] throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^return INSTANCE_UTC;^152^^^^^118^153^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^209^210^^^^204^229^[ADD] int relativeYear = year - 1687; int leapYears;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^CopticChronology chrono  ;^210^^^^^204^229^[REPLACE] int leapYears;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( relativeYear  !=  2 )  {^211^^^^^204^229^[REPLACE] if  ( relativeYear <= 0 )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[ADD]^^211^212^^214^^204^229^[ADD] if  ( relativeYear <= 0 )  {  leapYears =  ( relativeYear + 3 )  >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( !isLeapYear ( minDaysInFirstWeek )  )  {^218^^^^^211^221^[REPLACE] if  ( !isLeapYear ( year )  )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears = minDays  !=  2;^216^^^^^211^221^[REPLACE] leapYears = relativeYear >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears = relativeYear >> 2  ;^214^^^^^204^229^[REPLACE] leapYears =  ( relativeYear + 3 )  >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( !isLeapYear ( relativeYear )  )  {^218^^^^^204^229^[REPLACE] if  ( !isLeapYear ( year )  )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[ADD]^leapYears++;^218^219^220^^^204^229^[ADD] if  ( !isLeapYear ( year )  )  { leapYears++; }^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears = year  ==  2;^216^^^^^204^229^[REPLACE] leapYears = relativeYear >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[ADD]^^223^224^225^^^204^229^[ADD] long millis =  ( relativeYear * 365L + leapYears )^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^returnserialVersionUID   ( 365L - 112 )  * DateTimeConstants.MILLIS_PER_DAY;^228^^^^^204^229^[REPLACE] return millis +  ( 365L - 112 )  * DateTimeConstants.MILLIS_PER_DAY;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
