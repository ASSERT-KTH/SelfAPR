[REPLACE]^println ( "" )  ;^46^^^^^45^70^[REPLACE] System.out.println ( "Instant" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "" )  ;^47^^^^^45^70^[REPLACE] System.out.println ( "=======" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally" )  ;^48^^^^^45^70^[REPLACE] System.out.println ( "Instant stores a point in the datetime continuum as millisecs from 1970-01-01T00:00:00Z" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "DateTime is immutable and thread-safe" )  ;^49^^^^^45^70^[REPLACE] System.out.println ( "Instant is immutable and thread-safe" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^49^^^^^45^70^[ADD] System.out.println ( "Instant is immutable and thread-safe" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "                      in2 = new DateTime ( in.getMillis (  )  + 10 ) " )  ;^50^^^^^45^70^[REPLACE] System.out.println ( "                      in = new Instant (  ) " ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^Instant in2 = new Instant (  (  ( in.getMillis (  )  )  + 10 )  )  ;^51^^^^^45^70^[REPLACE] Instant in = new Instant (  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Millisecond time:     in2 .withMillis ( null )  :           "  in^52^^^^^45^70^[REPLACE] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^52^53^^^^45^70^[ADD] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ; System.out.println ( "ISO string version:   in.toString (  ) :            " + in.toString (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Millisecond time:     in2.getMillis (  ) :           " + in.getMillis (  )  ) ;^52^^^^^45^70^[REPLACE] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^52^^^^^45^70^[ADD] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "ISO string version:   in.toString (  ) :            "  in.toString (  )  ) ;^53^^^^^45^70^[REPLACE] System.out.println ( "ISO string version:   in.toString (  ) :            " + in.toString (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "ISO string version:   in2.toString (  ) :            " + in.toString (  )  ) ;^53^^^^^45^70^[REPLACE] System.out.println ( "ISO string version:   in.toString (  ) :            " + in.toString (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "ISO chronology:       in.getChronology (  ) :       "  in.getChronology (  )  ) ;^54^^^^^45^70^[REPLACE] System.out.println ( "ISO chronology:       in.getChronology (  ) :       " + in.getChronology (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "ISO chronology:       in2.getChronology (  ) :       " + in.getChronology (  )  ) ;^54^^^^^45^70^[REPLACE] System.out.println ( "ISO chronology:       in.getChronology (  ) :       " + in.getChronology (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "UTC time zone:        in.getDateTimeZone (  ) :     "  in.getZone (  )  ) ;^55^^^^^45^70^[REPLACE] System.out.println ( "UTC time zone:        in.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "UTC time zone:        in2.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^55^^^^^45^70^[REPLACE] System.out.println ( "UTC time zone:        in.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out .println (  )   ) ;^56^^^^^45^70^[REPLACE] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^56^57^^^^45^70^[ADD] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ; System.out.println ( "" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Change millis:        in2.withMillis ( 0 ) :         " + in.withMillis ( 0 )  ) ;^56^^^^^45^70^[REPLACE] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( " )  ;^57^^^^^45^70^[REPLACE] System.out.println ( "" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Get year:             in.getYear (  ) :             " +  ( in.getYear (  )  )  )  )  ;^58^^^^^45^70^[REPLACE] System.out.println ( "Convert to Instant:   in.toInstant (  ) :           " + in.toInstant (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Convert to Instant:   in2.toInstant (  ) :           " + in.toInstant (  )  ) ;^58^^^^^45^70^[REPLACE] System.out.println ( "Convert to Instant:   in.toInstant (  ) :           " + in.toInstant (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          "  in.toDateTime (  )  ) ;^59^^^^^45^70^[REPLACE] System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          " + in.toDateTime (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Convert to DateTime:  in.withMillis (  ) :          " + in.toDateTime (  )  ) ;^59^^^^^45^70^[REPLACE] System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          " + in.toDateTime (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Convert to Date:      in.toDate (  ) :              " +  ( in.toDate (  )  )  )  )  ;^60^^^^^45^70^[REPLACE] System.out.println ( "Convert to MutableDT: in.toMutableDateTime (  ) :   " + in.toMutableDateTime (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Convert to MutableDT: in2.toMutableDateTime (  ) :   " + in.toMutableDateTime (  )  ) ;^60^^^^^45^70^[REPLACE] System.out.println ( "Convert to MutableDT: in.toMutableDateTime (  ) :   " + in.toMutableDateTime (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REMOVE]^( in.getChronology (  )  )  ;^60^^^^^45^70^[REMOVE] ^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Your time zone:       in.getDateTimeZone (  ) :     " +  ( in.getZone (  )  )  )  )  ;^61^^^^^45^70^[REPLACE] System.out.println ( "Convert to Date:      in.toDate (  ) :              " + in.toDate (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Convert to Date:      in2.withMillis (  ) :              " + in.toDate (  )  ) ;^61^^^^^45^70^[REPLACE] System.out.println ( "Convert to Date:      in.toDate (  ) :              " + in.toDate (  )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( " )  ;^62^^^^^45^70^[REPLACE] System.out.println ( "" ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "                      in2 = new DateTime ( in.getMillis (  )  + 10 ) " )  ;^63^^^^^45^70^[REPLACE] System.out.println ( "                      in2 = new Instant ( in.getMillis (  )  + 10 ) " ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^DateTime in2 = new DateTime (  (  ( in.getMillis (  )  )  + 10 )  )  ;^64^^^^^45^70^[REPLACE] Instant in2 = new Instant ( in.getMillis (  )  + 10 ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           "  in.equals ( in2 )  ) ;^65^^^^^45^70^[REPLACE] System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           " + in.equals ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Equals ms and chrono: in .isEqual ( in )  :           " + in^65^^^^^45^70^[REPLACE] System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           " + in.equals ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        "  in.compareTo ( in2 )  ) ;^66^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^66^^^^^45^70^[ADD] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in .toDate (  )  :        " + in^66^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^67^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^67^^^^^45^70^[ADD] System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^( in.isBefore ( in2 )  )  ;^67^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REMOVE]^( in.getChronology (  )  )  ;^67^^^^^45^70^[REMOVE] ^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^68^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isAfter ( in2 ) :          " + in.isAfter ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in .isBefore ( in )  :          " + in^68^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isAfter ( in2 ) :          " + in.isAfter ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^69^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[ADD]^^69^70^^^^45^70^[ADD] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ; }^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :         " + in.isBefore ( in2 )  ) ;^69^^^^^45^70^[REPLACE] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ;^[METHOD] runInstant [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  Instant in  in2 
[REPLACE]^println ( "" )  ;^73^^^^^72^113^[REPLACE] System.out.println ( "DateTime" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "" )  ;^74^^^^^72^113^[REPLACE] System.out.println ( "=======" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^74^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "Instant stores a point in the datetime continuum as millisecs from 1970-01-01T00:00:00Z" )  ;^75^^^^^72^113^[REPLACE] System.out.println ( "DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "Instant is immutable and thread-safe" )  ;^76^^^^^72^113^[REPLACE] System.out.println ( "DateTime is immutable and thread-safe" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "                      in2 = new DateTime ( in.getMillis (  )  + 10 ) " )  ;^77^^^^^72^113^[REPLACE] System.out.println ( "                      in = new DateTime (  ) " ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^DateTime in2 = new DateTime (  (  ( in.getMillis (  )  )  + 10 )  )  ;^78^^^^^72^113^[REPLACE] DateTime in = new DateTime (  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^79^^^^^72^113^[REPLACE] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.withMillis ( 0L )  )  ;^79^^^^^72^113^[REPLACE] System.out.println ( "Millisecond time:     in.getMillis (  ) :           " + in.getMillis (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Convert to Instant:   in.toInstant (  ) :           " +  ( in.toInstant (  )  )  )  )  ;^80^^^^^72^113^[REPLACE] System.out.println ( "ISO string version:   in.toString (  ) :            " + in.toString (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.toInstant (  )  )  ;^80^^^^^72^113^[REPLACE] System.out.println ( "ISO string version:   in.toString (  ) :            " + in.toString (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "ISO chronology:       in.getChronology (  ) :       "  in.getChronology (  )  ) ;^81^^^^^72^113^[REPLACE] System.out.println ( "ISO chronology:       in.getChronology (  ) :       " + in.getChronology (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^81^^^^^72^113^[ADD] System.out.println ( "ISO chronology:       in.getChronology (  ) :       " + in.getChronology (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "ISO chronology:       in2.getChronology (  ) :       " + in.getChronology (  )  ) ;^81^^^^^72^113^[REPLACE] System.out.println ( "ISO chronology:       in.getChronology (  ) :       " + in.getChronology (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^( in.getMonthOfYear (  )  )  ;^81^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Your time zone:       in.getDateTimeZone (  ) :     "  in.getZone (  )  ) ;^82^^^^^72^113^[REPLACE] System.out.println ( "Your time zone:       in.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Your time zone:       in2.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^82^^^^^72^113^[REPLACE] System.out.println ( "Your time zone:       in.getDateTimeZone (  ) :     " + in.getZone (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Change millis:        in2.withMillis ( 0 ) :         "  in.withMillis ( 0L )  ) ;^83^^^^^72^113^[REPLACE] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^83^84^^^^72^113^[ADD] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ; System.out.println ( "" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.getMillis (  )  )  ;^83^^^^^72^113^[REPLACE] System.out.println ( "Change millis:        in.withMillis ( 0 ) :         " + in.withMillis ( 0L )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( " )  ;^84^^^^^72^113^[REPLACE] System.out.println ( "" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Your time zone:       in.getDateTimeZone (  ) :     " +  ( in.getZone (  )  )  )  )  ;^85^^^^^72^113^[REPLACE] System.out.println ( "Get year:             in.getYear (  ) :             " + in.getYear (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^85^86^^^^72^113^[ADD] System.out.println ( "Get year:             in.getYear (  ) :             " + in.getYear (  )  ) ; System.out.println ( "Get monthOfYear:      in.getMonthOfYear (  ) :      " + in.getMonthOfYear (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.getMonthOfYear (  )  )  ;^85^^^^^72^113^[REPLACE] System.out.println ( "Get year:             in.getYear (  ) :             " + in.getYear (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^( in.getChronology (  )  )  ;^85^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Your time zone:       in.getDateTimeZone (  ) :     " +  ( in.getZone (  )  )  )  )  ;^86^^^^^72^113^[REPLACE] System.out.println ( "Get monthOfYear:      in.getMonthOfYear (  ) :      " + in.getMonthOfYear (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Get monthOfYear:      in2.getMonthOfYear (  ) :      " + in.getMonthOfYear (  )  ) ;^86^^^^^72^113^[REPLACE] System.out.println ( "Get monthOfYear:      in.getMonthOfYear (  ) :      " + in.getMonthOfYear (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Your time zone:       in.getDateTimeZone (  ) :     " +  ( in.getZone (  )  )  )  )  ;^87^^^^^72^113^[REPLACE] System.out.println ( "Get dayOfMonth:       in.getDayOfMonth (  ) :       " + in.getDayOfMonth (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^87^88^^^^72^113^[ADD] System.out.println ( "Get dayOfMonth:       in.getDayOfMonth (  ) :       " + in.getDayOfMonth (  )  ) ; System.out.println ( "..." ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Get dayOfMonth:       in2.withMillis (  ) :       " + in.getDayOfMonth (  )  ) ;^87^^^^^72^113^[REPLACE] System.out.println ( "Get dayOfMonth:       in.getDayOfMonth (  ) :       " + in.getDayOfMonth (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "" )  ;^88^^^^^72^113^[REPLACE] System.out.println ( "..." ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Property access:      in.dayOfWeek (  ) .setCopy (  ) :                   "  in.dayOfWeek (  ) .get (  )  ) ;^89^^^^^72^113^[REPLACE] System.out.println ( "Property access:      in.dayOfWeek (  ) .get (  ) :                   " + in.dayOfWeek (  ) .get (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.dayOfWeek (  ) .getAsText (  )  )  ;^89^^^^^72^113^[REPLACE] System.out.println ( "Property access:      in.dayOfWeek (  ) .get (  ) :                   " + in.dayOfWeek (  ) .get (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Property access:      in2.dayOfWeek (  ) .get (  ) :                   " + in.dayOfWeek (  ) .get (  )  ) ;^89^^^^^72^113^[REPLACE] System.out.println ( "Property access:      in.dayOfWeek (  ) .get (  ) :                   " + in.dayOfWeek (  ) .get (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day of week as text:  in.dayOfWeek (  ) .getAsText (  ) :             "  in.dayOfWeek (  ) .getAsText (  )  ) ;^90^^^^^72^113^[REPLACE] System.out.println ( "Day of week as text:  in.dayOfWeek (  ) .getAsText (  ) :             " + in.dayOfWeek (  ) .getAsText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day of week as text:  in2.dayOfWeek (  ) .getAsText (  ) :             " + in.dayOfWeek (  ) .getAsText (  )  ) ;^90^^^^^72^113^[REPLACE] System.out.println ( "Day of week as text:  in.dayOfWeek (  ) .getAsText (  ) :             " + in.dayOfWeek (  ) .getAsText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day of week as text:  in2.DateTime (  ) .getAsText (  ) :             " + in.dayOfWeek (  ) .getAsText (  )  ) ;^90^^^^^72^113^[REPLACE] System.out.println ( "Day of week as text:  in.dayOfWeek (  ) .getAsText (  ) :             " + in.dayOfWeek (  ) .getAsText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day as short text:    in.DateTime (  ) .getAsShortText (  ) :        "  in.dayOfWeek (  ) .getAsShortText (  )  ) ;^91^^^^^72^113^[REPLACE] System.out.println ( "Day as short text:    in.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^91^92^^^^72^113^[ADD] System.out.println ( "Day as short text:    in.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ; System.out.println ( "Day in french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :" + in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day as short text:    in2.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^91^^^^^72^113^[REPLACE] System.out.println ( "Day as short text:    in.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^91^^^^^72^113^[ADD] System.out.println ( "Day as short text:    in.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day as short text:    in.DateTime (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^91^^^^^72^113^[REPLACE] System.out.println ( "Day as short text:    in.dayOfWeek (  ) .getAsShortText (  ) :        " + in.dayOfWeek (  ) .getAsShortText (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day in french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :"  in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ;^92^^^^^72^113^[REPLACE] System.out.println ( "Day in french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :" + in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^92^93^^^^72^113^[ADD] System.out.println ( "Day in french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :" + in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ; System.out.println ( "Max allowed value:    in.dayOfWeek (  ) .getMaximumValue (  ) :       " + in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Day in2 french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :" + in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ;^92^^^^^72^113^[REPLACE] System.out.println ( "Day in french:        in.dayOfWeek (  ) .getAsText ( Locale.FRENCH ) :" + in.dayOfWeek (  ) .getAsText ( Locale.FRENCH )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^in.toCalendar ( UK ) .toString (  )  ;^92^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out .println (  )  :       "  in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^93^^^^^72^113^[REPLACE] System.out.println ( "Max allowed value:    in.dayOfWeek (  ) .getMaximumValue (  ) :       " + in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Max allowed value:    in2.dayOfWeek (  ) .getMaximumValue (  ) :       " + in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^93^^^^^72^113^[REPLACE] System.out.println ( "Max allowed value:    in.dayOfWeek (  ) .getMaximumValue (  ) :       " + in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Max allowed value:    in2 .getDayOfMonth (  )  .getMaximumValue (  ) :       " + in^93^^^^^72^113^[REPLACE] System.out.println ( "Max allowed value:    in.dayOfWeek (  ) .getMaximumValue (  ) :       " + in.dayOfWeek (  ) .getMaximumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Min allowed value:    in2.dayOfWeek (  ) .getMinimumValue (  ) :       "  in.dayOfWeek (  ) .getMinimumValue (  )  ) ;^94^^^^^72^113^[REPLACE] System.out.println ( "Min allowed value:    in.dayOfWeek (  ) .getMinimumValue (  ) :       " + in.dayOfWeek (  ) .getMinimumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Min allowed value:    in2.dayOfWeek (  ) .getMinimumValue (  ) :       " + in.dayOfWeek (  ) .getMinimumValue (  )  ) ;^94^^^^^72^113^[REPLACE] System.out.println ( "Min allowed value:    in.dayOfWeek (  ) .getMinimumValue (  ) :       " + in.dayOfWeek (  ) .getMinimumValue (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^94^95^^^^72^113^[ADD] System.out.println ( "Min allowed value:    in.dayOfWeek (  ) .getMinimumValue (  ) :       " + in.dayOfWeek (  ) .getMinimumValue (  )  ) ; System.out.println ( "Copy & set to Jan:    in.monthOfYear (  ) .setCopy ( 1 ) :            " + in.monthOfYear (  ) .setCopy ( 1 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^( in.getMonthOfYear (  )  )  ;^94^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & set to Jan:    in.monthOfYear (  )  .addToCopy ( this )  :            "  in.monthOfYear (  )^95^^^^^72^113^[REPLACE] System.out.println ( "Copy & set to Jan:    in.monthOfYear (  ) .setCopy ( 1 ) :            " + in.monthOfYear (  ) .setCopy ( 1 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^println (  ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " +  ( in.toCalendar ( UK ) .toString (  ) .substring ( 0, 46 )  )  )  )  ;^95^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & set to Jan:    in.monthOfYear (  )  .addToCopy ( null )  :            " + in.monthOfYear (  )^95^^^^^72^113^[REPLACE] System.out.println ( "Copy & set to Jan:    in.monthOfYear (  ) .setCopy ( 1 ) :            " + in.monthOfYear (  ) .setCopy ( 1 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & set to Jan:    in2.monthOfYear (  ) .setCopy ( 1 ) :            " + in.monthOfYear (  ) .setCopy ( 1 )  ) ;^95^^^^^72^113^[REPLACE] System.out.println ( "Copy & set to Jan:    in.monthOfYear (  ) .setCopy ( 1 ) :            " + in.monthOfYear (  ) .setCopy ( 1 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & add 14 months: in2.monthOfYear (  ) .addCopy ( 14 ) :           "  in.monthOfYear (  ) .addToCopy ( 14 )  ) ;^96^^^^^72^113^[REPLACE] System.out.println ( "Copy & add 14 months: in.monthOfYear (  ) .addCopy ( 14 ) :           " + in.monthOfYear (  ) .addToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & add 0 months: in.monthOfYear (  ) .addCopy ( 0 ) :           " + in.monthOfYear (  ) .setCopy ( 0 )  ) ;^96^^^^^72^113^[REPLACE] System.out.println ( "Copy & add 14 months: in.monthOfYear (  ) .addCopy ( 14 ) :           " + in.monthOfYear (  ) .addToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Copy & add 14 months: in.getMonthOfYear (  ) .addCopy ( 14 ) :           " + in.monthOfYear (  ) .addToCopy ( 14 )  ) ;^96^^^^^72^113^[REPLACE] System.out.println ( "Copy & add 14 months: in.monthOfYear (  ) .addCopy ( 14 ) :           " + in.monthOfYear (  ) .addToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^in.dayOfWeek (  )  ;^96^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Add 14 mnths in field:in.monthOfYear (  ) .addWrapFieldCopy ( 14 ) :  "  in.monthOfYear (  ) .addWrapFieldToCopy ( 14 )  ) ;^97^^^^^72^113^[REPLACE] System.out.println ( "Add 14 mnths in field:in.monthOfYear (  ) .addWrapFieldCopy ( 14 ) :  " + in.monthOfYear (  ) .addWrapFieldToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Add 4 mnths in field:in.monthOfYear (  ) .addWrapFieldCopy ( 4 ) :  " + in.monthOfYear (  ) .addWrapFieldToCopy ( 4 )  ) ;^97^^^^^72^113^[REPLACE] System.out.println ( "Add 14 mnths in field:in.monthOfYear (  ) .addWrapFieldCopy ( 14 ) :  " + in.monthOfYear (  ) .addWrapFieldToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^( in.getMonthOfYear (  )  )  ;^97^^^^^72^113^[REPLACE] System.out.println ( "Add 14 mnths in field:in.monthOfYear (  ) .addWrapFieldCopy ( 14 ) :  " + in.monthOfYear (  ) .addWrapFieldToCopy ( 14 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "" )  ;^98^^^^^72^113^[REPLACE] System.out.println ( "..." ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Instant:   in2.toInstant (  ) :           "  in.toInstant (  )  ) ;^99^^^^^72^113^[REPLACE] System.out.println ( "Convert to Instant:   in.toInstant (  ) :           " + in.toInstant (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Instant:   in2.toInstant (  ) :           " + in.toInstant (  )  ) ;^99^^^^^72^113^[REPLACE] System.out.println ( "Convert to Instant:   in.toInstant (  ) :           " + in.toInstant (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          "  in.toDateTime (  )  ) ;^100^^^^^72^113^[REPLACE] System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          " + in.toDateTime (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^println (  ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " +  ( in.toCalendar ( UK ) .toString (  ) .substring ( 0, 46 )  )  )  )  ;^100^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to DateTime:  in2.toDateTime (  ) :          " + in.toDateTime (  )  ) ;^100^^^^^72^113^[REPLACE] System.out.println ( "Convert to DateTime:  in.toDateTime (  ) :          " + in.toDateTime (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to MutableDT: in.isAfter (  ) :   "  in.toMutableDateTime (  )  ) ;^101^^^^^72^113^[REPLACE] System.out.println ( "Convert to MutableDT: in.toMutableDateTime (  ) :   " + in.toMutableDateTime (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to MutableDT: in.isAfter (  ) :   " + in.toMutableDateTime (  )  ) ;^101^^^^^72^113^[REPLACE] System.out.println ( "Convert to MutableDT: in.toMutableDateTime (  ) :   " + in.toMutableDateTime (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out .println (  )   ) ;^102^^^^^72^113^[REPLACE] System.out.println ( "Convert to Date:      in.toDate (  ) :              " + in.toDate (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Date:      in2.toDate (  ) :              " + in.toDate (  )  ) ;^102^^^^^72^113^[REPLACE] System.out.println ( "Convert to Date:      in.toDate (  ) :              " + in.toDate (  )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : "  in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^103^^^^^72^113^[REPLACE] System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^in.toCalendar ( UK ) .toString (  )  ;^103^^^^^72^113^[REPLACE] System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Calendar:  in2.compareTo ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^103^^^^^72^113^[REPLACE] System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to Calendar:  in2.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^103^^^^^72^113^[REPLACE] System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^103^104^^^^72^113^[ADD] System.out.println ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " + in.toCalendar ( Locale.UK ) .toString (  ) .substring ( 0, 46 )  ) ; System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : "  in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^104^^^^^72^113^[REPLACE] System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^System.out.println ( "" ) ;^104^105^^^^72^113^[ADD] System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ; System.out.println ( "" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to GregCal:   in2.toString (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0L, 46 )  ) ;^104^^^^^72^113^[REPLACE] System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to GregCal:   in.toString (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^104^^^^^72^113^[REPLACE] System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Convert to GregCal:   in2.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^104^^^^^72^113^[REPLACE] System.out.println ( "Convert to GregCal:   in.toGregorianCalendar (  ) : " + in.toGregorianCalendar (  ) .toString (  ) .substring ( 0, 46 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( " )  ;^105^^^^^72^113^[REPLACE] System.out.println ( "" ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println ( "                      in = new Instant (  ) " )  ;^106^^^^^72^113^[REPLACE] System.out.println ( "                      in2 = new DateTime ( in.getMillis (  )  + 10 ) " ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REMOVE]^println (  ( "Convert to Calendar:  in.toCalendar ( Locale.UK ) : " +  ( in.toCalendar ( UK ) .toString (  ) .substring ( 0, 46 )  )  )  )  ;^106^^^^^72^113^[REMOVE] ^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^DateTime in22 = new DateTime ( in.getMillis (  )   10 ) ;^107^^^^^72^113^[REPLACE] DateTime in2 = new DateTime ( in.getMillis (  )  + 10 ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           "  in.equals ( in2 )  ) ;^108^^^^^72^113^[REPLACE] System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           " + in.equals ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Equals ms and chrono: in.isEqual ( in2 ) :           " + in.equals ( in2 )  ) ;^108^^^^^72^113^[REPLACE] System.out.println ( "Equals ms and chrono: in.equals ( in2 ) :           " + in.equals ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Equals ms and chrono: in.equals ( in2 ) :           " +  ( in.equals ( in2 )  )  )  )  ;^109^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^109^110^^^^72^113^[ADD] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ; System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.equals ( in2 ) :        " + in.compareTo ( in2 )  ) ;^109^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.compareTo ( in2 ) :        " + in.compareTo ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          "  in.isEqual ( in2 )  ) ;^110^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in .equals ( null )  :          " + in^110^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :          " + in.isEqual ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^println (  ( "Change millis:        in.withMillis ( 0 ) :         " +  ( in.withMillis ( 0L )  )  )  )  ;^111^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isAfter ( in2 ) :          " + in.isAfter ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :          " + in.isAfter ( in2 )  ) ;^111^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isAfter ( in2 ) :          " + in.isAfter ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         "  in.isBefore ( in2 )  ) ;^112^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[REPLACE]^System.out.println ( "Compare millisecond:  in.isEqual ( in2 ) :         " + in.isBefore ( in2 )  ) ;^112^^^^^72^113^[REPLACE] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ;^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
[ADD]^^112^113^^^^72^113^[ADD] System.out.println ( "Compare millisecond:  in.isBefore ( in2 ) :         " + in.isBefore ( in2 )  ) ; }^[METHOD] runDateTime [TYPE] void [PARAMETER] [CLASS] Examples   [TYPE]  boolean false  true  [TYPE]  DateTime in  in2 
