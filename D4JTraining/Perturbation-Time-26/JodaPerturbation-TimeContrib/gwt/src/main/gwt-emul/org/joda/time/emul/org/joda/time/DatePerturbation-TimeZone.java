[REPLACE]^private static   short  serialVersionUID = 5546345482340108586L;^91^^^^^^^[REPLACE] private static final long serialVersionUID = 5546345482340108586L;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^public static  DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^94^^^^^^^[REPLACE] public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  NameProvider cNameProvider;^99^^^^^^^[REPLACE] private static NameProvider cNameProvider;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  DateTimeFormatter cOffsetFormatter;^105^^^^^^^[REPLACE] private static DateTimeFormatter cOffsetFormatter;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  Map iFixedOffsetCache;^108^^^^^^^[REPLACE] private static Map iFixedOffsetCache;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  Map cZoneIdConversion;^111^^^^^^^[REPLACE] private static Map cZoneIdConversion;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private final  byte  iID;^668^^^^^^^[REPLACE] private final String iID;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private static  long serialVersionUID = -6471952376487863581L;^1176^^^^^^^[REPLACE] private static final long serialVersionUID = -6471952376487863581L;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^if  (iID != null )  {^180^^^^^179^200^[REPLACE] if  ( id == null )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^return getDefault (  ) ;^180^181^182^^^179^200^[ADD] if  ( id == null )  { return getDefault (  ) ; }^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^181^^^^^179^200^[REPLACE] return getDefault (  ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if   (  !ids.contains  (  "UTC"  )    )   {  ;^183^^^^^179^200^[REPLACE] if  ( id.equals ( "UTC" )  )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^184^^^^^179^200^[REPLACE] return DateTimeZone.UTC;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^DateTimeZone zone = cProvider.getZone ( iID ) ;^186^^^^^179^200^[REPLACE] DateTimeZone zone = cProvider.getZone ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone == null )  {^187^^^^^179^200^[REPLACE] if  ( zone != null )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return zone;  ;^188^^^^^179^200^[REPLACE] return zone;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( id.startsWith ( "+" )  && id.startsWith ( "-" )  )  {^190^^^^^179^200^[REPLACE] if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  &&  0L )  {^192^^^^^179^200^[REPLACE] if  ( offset == 0L )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = printOffset ( offset )  ;^195^^^^^192^197^[REPLACE] id = printOffset ( offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( iID, offset ) ;^196^^^^^192^197^[REPLACE] return fixedOffsetZone ( id, offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^193^^^^^179^200^[REPLACE] return DateTimeZone.UTC;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^195^196^^^^179^200^[ADD] id = printOffset ( offset ) ; return fixedOffsetZone ( id, offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^196^^^^^179^200^[REPLACE] return fixedOffsetZone ( id, offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = parseOffset ( convId )  ;^191^^^^^179^200^[REPLACE] int offset = parseOffset ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  !=  0 )  {^192^^^^^179^200^[REPLACE] if  ( offset == 0L )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = printOffset ( offset )  ;^195^^^^^179^200^[REPLACE] id = printOffset ( offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^throw new IllegalArgumentException ( "Offset is too large" )  ;^199^^^^^179^200^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( true || true )  {^230^^^^^229^249^[REPLACE] if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^231^^^^^229^249^[REPLACE] return DateTimeZone.UTC;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  (true && minutesOffset > 59 )  {^233^^^^^229^249^[REPLACE] if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^234^^^^^229^249^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = 4;^236^^^^^229^249^[REPLACE] int offset = 0;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( hoursInMinutes  >  1 )  {^239^^^^^229^249^[REPLACE] if  ( hoursInMinutes < 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^minutesOffset = safeAdd ( hoursInMinutes,  ( -minutesOffset )  )  ;^242^^^^^239^243^[REPLACE] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^minutesOffset = safeAdd ( hoursInMinutes, minutesOffset )  ;^240^^^^^229^249^[REPLACE] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^237^238^239^240^241^229^249^[ADD] try { int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ; if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( hoursInMinutes  >=  0 + 2 )  {^239^^^^^229^249^[REPLACE] if  ( hoursInMinutes < 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^239^240^241^242^243^229^249^[ADD] if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ; }^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^minutesOffset = safeAdd ( hoursInMinutes,  ( -minutesOffset )  )  ;^242^^^^^229^249^[REPLACE] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^offset =  FieldUtils.safeMultiply ( null, DateTimeConstants.MILLIS_PER_MINUTE ) ;^244^^^^^229^249^[REPLACE] offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int hoursInMinutes = FieldUtils .safeMultiply ( hoursOffset )  ;^238^^^^^229^249^[REPLACE] int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^244^^^^^229^249^[ADD] offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int hoursInMinutes = FieldUtils.safeMultiply ( offset, 60 / 3 ) ;^238^^^^^229^249^[REPLACE] int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return ;^246^^^^^229^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^245^246^^^^229^249^[ADD] catch  ( ArithmeticException ex )  { throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return forOffsetMillis ( minutesOffset ) ;^248^^^^^229^249^[REPLACE] return forOffsetMillis ( offset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone != null )  {^278^^^^^277^315^[REPLACE] if  ( zone == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^279^^^^^277^315^[REPLACE] return getDefault (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^final String id = zone.getDisplayName (  ) ;^281^^^^^277^315^[REPLACE] final String id = zone.getID (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( iID.equals ( "UTC" )  )  {^282^^^^^277^315^[REPLACE] if  ( id.equals ( "UTC" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^282^283^284^^^277^315^[ADD] if  ( id.equals ( "UTC" )  )  { return DateTimeZone.UTC; }^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^283^^^^^277^315^[REPLACE] return DateTimeZone.UTC;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^287^288^^^^277^315^[ADD] DateTimeZone dtz = null; String convId = getConvertedId ( id ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^String convId = getConvertedId ( iID ) ;^288^^^^^277^315^[REPLACE] String convId = getConvertedId ( id ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if   (  convId == null  )   {  ;^289^^^^^277^315^[REPLACE] if  ( convId != null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^290^^^^^277^315^[ADD] dtz = cProvider.getZone ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^dtz = getZone ( id )  ;^290^^^^^277^315^[REPLACE] dtz = cProvider.getZone ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( dtz != null )  {^292^^^^^277^315^[REPLACE] if  ( dtz == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^dtz = cProvider.getZone ( id ) ;^292^293^294^^^277^315^[ADD] if  ( dtz == null )  { dtz = cProvider.getZone ( id ) ; }^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^dtz = getZone ( convId )  ;^293^^^^^277^315^[REPLACE] dtz = cProvider.getZone ( id ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if   (  id == null  )   {  ;^295^^^^^277^315^[REPLACE] if  ( dtz != null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^296^^^^^277^315^[REPLACE] return dtz;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if   (  id == null  )   {  ;^300^^^^^277^315^[REPLACE] if  ( convId == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( convId.startsWith ( "GMT+" )  && convId.startsWith ( "GMT-" )  )  {^302^^^^^277^315^[REPLACE] if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  &&  0L )  {^305^^^^^277^315^[REPLACE] if  ( offset == 0L )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^id = printOffset ( offset )  ;^308^^^^^305^310^[REPLACE] convId = printOffset ( offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^309^^^^^305^310^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^306^^^^^277^315^[REPLACE] return DateTimeZone.UTC;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = convId.substring ( 3 >>> 1 ) ;^303^^^^^277^315^[REPLACE] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^id = printOffset ( offset )  ;^308^^^^^277^315^[REPLACE] convId = printOffset ( offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( id, offset ) ;^309^^^^^277^315^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^304^^^^^277^315^[ADD] int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  ||  0L )  {^305^^^^^277^315^[REPLACE] if  ( offset == 0L )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( id, offset ) ;^309^^^^^305^310^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^301^^^^^277^315^[ADD] convId = zone.getDisplayName (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^303^304^^^^277^315^[ADD] convId = convId.substring ( 3 ) ; int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = parseOffset ( id )  ;^304^^^^^277^315^[REPLACE] int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  (  convId.startsWith ( "GMT-" )  )  {^302^^^^^277^315^[REPLACE] if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^convId = convId.substring ( 3 ) ;int offset = parseOffset ( convId ) ;return DateTimeZone.UTC;^302^303^304^305^306^277^315^[ADD] if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  { convId = convId.substring ( 3 ) ; int offset = parseOffset ( convId ) ; if  ( offset == 0L )  { return DateTimeZone.UTC;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = convId.substring ( 6 ) ;^303^^^^^277^315^[REPLACE] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = parseOffset ( id ) ;^304^^^^^277^315^[REPLACE] int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  ) {^305^^^^^277^315^[REPLACE] if  ( offset == 0L )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = convId.substring ( 2 ) ;^303^^^^^277^315^[REPLACE] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^309^^^^^277^315^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^throw new IllegalArgumentException ( "Offset is too large" )  ;^314^^^^^277^315^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  ) {^326^^^^^325^348^[REPLACE] if  ( offset == 0 )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;  ;^327^^^^^325^348^[REPLACE] return DateTimeZone.UTC;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( iFixedOffsetCache != null )  {^329^^^^^325^348^[REPLACE] if  ( iFixedOffsetCache == null )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^iFixedOffsetCache ;^330^^^^^325^348^[REPLACE] iFixedOffsetCache = new HashMap (  ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^330^^^^^325^348^[ADD] iFixedOffsetCache = new HashMap (  ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^DateTimeZone zone =  ( DateTimeZone )  iFixedOffsetCache.get ( iID ) ;^342^^^^^325^348^[REPLACE] DateTimeZone zone =  ( DateTimeZone )  iFixedOffsetCache.get ( id ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone != this )  {^343^^^^^325^348^[REPLACE] if  ( zone == null )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^zone = new FixedDateTimeZone ( id, false, offset, offset ) ;^344^^^^^325^348^[REPLACE] zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^344^^^^^325^348^[ADD] zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return zone;  ;^347^^^^^325^348^[REPLACE] return zone;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( provider != true )  {^397^^^^^396^413^[REPLACE] if  ( provider == null )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^nameProvider = getDefaultNameProvider (  )  ;^398^^^^^396^413^[REPLACE] provider = getDefaultProvider (  ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^Set ids = cProvider.getAvailableIDs (  ) ;^400^^^^^396^413^[REPLACE] Set ids = provider.getAvailableIDs (  ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( ids == null || ids.size (  )  *  2 == 0 )  {^401^^^^^396^413^[REPLACE] if  ( ids == null || ids.size (  )  == 0 )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^402^403^^^^396^413^[REPLACE] throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new IllegalArgumentException ( "Offset is too large" )  ;^402^403^^^^396^413^[REPLACE] throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if   (  id.equals  (  "UTC"  )    )   {  ;^405^^^^^396^413^[REPLACE] if  ( !ids.contains ( "UTC" )  )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^405^406^407^^^396^413^[ADD] if  ( !ids.contains ( "UTC" )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^406^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new IllegalArgumentException ( "Offset is too large" )  ;^406^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( !UTC.equals ( cProvider.getZone ( "UTC" )  )  )  {^408^^^^^396^413^[REPLACE] if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^408^409^410^^^396^413^[ADD] if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^409^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^409^^^^^396^413^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^411^412^^^^396^413^[ADD] cProvider = provider; cAvailableIDs = ids;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^412^^^^^396^413^[ADD] cAvailableIDs = ids;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^425^^^^^424^456^[ADD] Provider provider = null;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if   (  convId == null  )   {  ;^451^^^^^424^456^[REPLACE] if  ( provider == null )  {^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^nameProvider = new DefaultNameProvider (  )  ;^452^^^^^424^456^[REPLACE] provider = new UTCProvider (  ) ;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cProvider;^455^^^^^424^456^[REPLACE] return provider;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^NameProvider nameProvider = this;^511^^^^^510^531^[REPLACE] NameProvider nameProvider = null;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( cNameProvider != this  )  {^526^^^^^510^531^[REPLACE] if  ( nameProvider == null )  {^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^provider = new UTCProvider (  )  ;^527^^^^^510^531^[REPLACE] nameProvider = new DefaultNameProvider (  ) ;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cNameProvider;^530^^^^^510^531^[REPLACE] return nameProvider;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^541^^^^^540^580^[ADD] Map map = cZoneIdConversion;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( map != null )  {^542^^^^^540^580^[REPLACE] if  ( map == null )  {^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^542^543^544^545^546^540^580^[ADD] if  ( map == null )  {  map = new HashMap (  ) ; map.put ( "GMT", "UTC" ) ; map.put ( "MIT", "Pacific/Apia" ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^map  =  map ;^544^^^^^540^580^[REPLACE] map = new HashMap (  ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cZoneIdConversion =  iFixedOffsetCache;^577^^^^^540^580^[REPLACE] cZoneIdConversion = map;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cAvailableIDs = ids  ;^577^^^^^540^580^[REPLACE] cZoneIdConversion = map;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return  ( String )  map.get ( iID ) ;^579^^^^^540^580^[REPLACE] return  ( String )  map.get ( id ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^583^^^^^582^606^[ADD] Chronology chrono;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( cDefault == null )  {^584^^^^^582^606^[REPLACE] if  ( cDefault != null )  {^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono  =  chrono ;^589^^^^^584^603^[REPLACE] chrono = new BaseChronology (  )  {^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return true;^591^^^^^584^603^[REPLACE] return null;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^594^^^^^584^603^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^597^^^^^584^603^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getClass  (    )  .getName  (    )  ;  ;^600^^^^^584^603^[REPLACE] return getClass (  ) .getName (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono  =  chrono ;^585^^^^^582^606^[REPLACE] chrono = ISOChronology.getInstanceUTC (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^585^^^^^582^606^[ADD] chrono = ISOChronology.getInstanceUTC (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono  =  chrono ;^589^^^^^582^606^[REPLACE] chrono = new BaseChronology (  )  {^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return false;^591^^^^^582^606^[REPLACE] return null;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^594^^^^^582^606^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return this;  ;^597^^^^^582^606^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getClass  (    )  .getName  (    )  ;  ;^600^^^^^582^606^[REPLACE] return getClass (  ) .getName (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .toFormatter ( str ) ;^605^^^^^582^606^[REPLACE] return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^618^^^^^617^649^[ADD] StringBuffer buf = new StringBuffer (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offset  >  0 )  {^619^^^^^617^649^[REPLACE] if  ( offset >= 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^623^^^^^619^624^[ADD] offset = -offset;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '-' )  ;^620^^^^^617^649^[REPLACE] buf.append ( '+' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset =  -minutes;^623^^^^^617^649^[REPLACE] offset = -offset;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^626^627^^^^617^649^[ADD] int hours = offset / DateTimeConstants.MILLIS_PER_HOUR; FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, hours, 4 ) ;^627^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= minutes *  ( DateTimeConstants.MILLIS_PER_MINUTE )  ;^628^^^^^617^649^[REPLACE] offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^int minutes = offset  DateTimeConstants.MILLIS_PER_MINUTE;^630^^^^^617^649^[REPLACE] int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '-' )  ;^631^^^^^617^649^[REPLACE] buf.append ( ':' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^appendPaddedInteger ( buf, seconds, 2 )  ;^632^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= hours *  (  ( int )   ( DateTimeConstants.MILLIS_PER_HOUR )  )  ;^633^^^^^617^649^[REPLACE] offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offset  &&  1 )  {^634^^^^^617^649^[REPLACE] if  ( offset == 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.StringBuffer (  ) ;^635^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^638^639^^^^617^649^[ADD] int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND; buf.append ( ':' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf .toString (  )  ;^639^^^^^617^649^[REPLACE] buf.append ( ':' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^639^640^^^^617^649^[ADD] buf.append ( ':' ) ; FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, seconds, 3 ) ;^640^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^640^^^^^617^649^[ADD] FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= seconds minutes;^641^^^^^617^649^[REPLACE] offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if   (  offset >= 0  )   {  ;^642^^^^^617^649^[REPLACE] if  ( offset == 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^642^643^644^^^617^649^[ADD] if  ( offset == 0 )  { return buf.toString (  ) ; }^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.StringBuffer (  ) ;^643^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf .toString (  )  ;^646^^^^^617^649^[REPLACE] buf.append ( '.' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, offset, 5 ) ;^647^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.StringBuffer (  ) ;^648^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offset = getOffset ( instantUTC )  ;^865^^^^^863^884^[REPLACE] int offsetLocal = getOffset ( instantLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offset = getOffset (  ( instantLocal - offsetLocal )  )  ;^867^^^^^863^884^[REPLACE] int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offsetAdjusted  ==  offsetLocal )  {^869^^^^^863^884^[REPLACE] if  ( offsetLocal != offsetAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  (offsetLocal )   !=  3 )  {^872^^^^^863^884^[REPLACE] if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  ==  nextAdjusted )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return offsetAdjusted;^879^^^^^863^884^[REPLACE] return offsetLocal;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return offsetLocal;  ;^879^^^^^863^884^[REPLACE] return offsetLocal;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  offsetLocal ) ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition ( instantLocal  offsetAdjusted ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  == serialVersionUID )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (  ( instantLocal - offset )  )  ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (serialVersionUID  offsetAdjusted ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  (offsetLocal )   >  0 )  {^872^^^^^863^884^[REPLACE] if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( serialVersionUID  ==  nextLocal )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^876^^^^^863^884^[ADD] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition (  ( instantLocal - offsetLocal )  )  ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return offsetLocal;^883^^^^^863^884^[REPLACE] return offsetAdjusted;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^920^^^^^918^955^[ADD] int offsetLocal = getOffset ( instantLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offset = getOffset ( serialVersionUID  offsetLocal ) ;^922^^^^^918^955^[REPLACE] int offset = getOffset ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offsetLocal  ==  offset )  {^924^^^^^918^955^[REPLACE] if  ( offsetLocal != offset )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  offsetLocal < 0 )  {^928^^^^^918^955^[REPLACE] if  ( strict || offsetLocal < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^928^929^930^931^^918^955^[ADD] if  ( strict || offsetLocal < 0 )  {  long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  ==  nextAdjusted )  {^932^^^^^918^955^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if   (  newZone == this  )   {  ;^934^^^^^918^955^[REPLACE] if  ( strict )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^934^935^936^937^938^918^955^[ADD] if  ( strict )  {  throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset =  null;^943^^^^^934^944^[REPLACE] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^936^937^938^^^918^955^[REPLACE] throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( iID )   + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^getID (  )  ;^938^^^^^918^955^[REPLACE] "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset =  null;^943^^^^^918^955^[REPLACE] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^936^937^938^^^918^955^[ADD] throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .parseMillis ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^937^938^939^^^918^955^[ADD] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ; } else {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^930^^^^^918^955^[ADD] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^931^^^^^918^955^[ADD] long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^943^^^^^918^955^[ADD] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  offsetLocal ) ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (true && offsetLocal < 0 )  {^928^^^^^918^955^[REPLACE] if  ( strict || offsetLocal < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^932^933^934^^936^918^955^[ADD] if  ( nextLocal != nextAdjusted )  {  if  ( strict )  { throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " +^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^943^^^^^934^944^[ADD] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .parseMillis ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (  ( instantLocal - offset )  )  ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^949^^^^^918^955^[ADD] long instantUTC = instantLocal - offset;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  ( instantLocal ^ instantUTC )  < 0 ||  ( instantLocal ^ offset )  < 0 )  {^951^^^^^918^955^[REPLACE] if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^951^952^953^^^918^955^[ADD] if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^952^^^^^918^955^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return serialVersionUID;^954^^^^^918^955^[REPLACE] return instantUTC;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^private static final long serialVersionUID  = null ;^1176^^^^^^^[REPLACE] private static final long serialVersionUID = -6471952376487863581L;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Stub   [TYPE]  boolean false  true 
