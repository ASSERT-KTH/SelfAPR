[REPLACE]^protected  boolean  pattern;^47^^^^^^^[REPLACE] protected String pattern;^ [CLASS] ParseDateTimeSupport  
[REPLACE]^protected  int  style;^49^^^^^^^[REPLACE] protected String style;^ [CLASS] ParseDateTimeSupport  
[REPLACE]^private  long  scope;^57^^^^^^^[REPLACE] private int scope;^ [CLASS] ParseDateTimeSupport  
[REPLACE]^String input = this;^86^^^^^85^155^[REPLACE] String input = null;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if   (  tz != null  )   {  ;^89^^^^^85^155^[REPLACE] if  ( valueSpecified )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( bodyContent == this && bodyContent.getString (  )  != this )  {^94^^^^^89^97^[REPLACE] if  ( bodyContent != null && bodyContent.getString (  )  != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^95^^^^^89^97^[ADD] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input  = null ;^91^^^^^85^155^[REPLACE] input = value;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( bodyContent == false && bodyContent.getString (  )  != false )  {^94^^^^^85^155^[REPLACE] if  ( bodyContent != null && bodyContent.getString (  )  != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^input = bodyContent.getString (  ) .trim (  ) ;^94^95^96^^^85^155^[ADD] if  ( bodyContent != null && bodyContent.getString (  )  != null )  { input = bodyContent.getString (  ) .trim (  ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^95^^^^^85^155^[ADD] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  (  ( value != this )  || input.equals ( "" )  )  {^99^^^^^85^155^[REPLACE] if  (  ( input == null )  || input.equals ( "" )  )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^99^100^101^102^^85^155^[ADD] if  (  ( input == null )  || input.equals ( "" )  )  { if  ( var != null )  { pageContext.removeAttribute ( var, scope ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == null )  {^100^^^^^85^155^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext.setAttribute ( var, parsed, scope )  ;^101^^^^^85^155^[REPLACE] pageContext.removeAttribute ( var, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return EVAL_PAGE;  ;^103^^^^^85^155^[REPLACE] return EVAL_PAGE;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^107^108^109^110^111^85^155^[ADD] DateTimeFormatter formatter; if  ( pattern != null )  { formatter = DateTimeFormat.forPattern ( pattern ) ; } else if  ( style != null )  { formatter = DateTimeFormat.forStyle ( style ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( pattern == null )  {^108^^^^^85^155^[REPLACE] if  ( pattern != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^formatter = DateTimeFormat.forPattern ( pattern ) ;^108^109^110^111^^85^155^[ADD] if  ( pattern != null )  { formatter = DateTimeFormat.forPattern ( pattern ) ; } else if  ( style != null )  { formatter = DateTimeFormat.forStyle ( style ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^110^^^^^85^155^[REPLACE] } else if  ( style != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^113^114^^^^110^114^[ADD] formatter = DateTimeFormat.fullDateTime (  ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = forPattern ( pattern )  ;^111^^^^^85^155^[REPLACE] formatter = DateTimeFormat.forStyle ( style ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^113^114^^^^85^155^[ADD] formatter = DateTimeFormat.fullDateTime (  ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^109^110^111^112^113^85^155^[ADD] formatter = DateTimeFormat.forPattern ( pattern ) ; } else if  ( style != null )  { formatter = DateTimeFormat.forStyle ( style ) ; } else { formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( style == null )  {^110^^^^^85^155^[REPLACE] } else if  ( style != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = forPattern ( pattern )  ;^113^^^^^110^114^[REPLACE] formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = forStyle ( style )  ;^109^^^^^85^155^[REPLACE] formatter = DateTimeFormat.forPattern ( pattern ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = forPattern ( pattern )  ;^113^^^^^85^155^[REPLACE] formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTimeZone tz = this.dateTimeZone  ;^117^^^^^85^155^[REPLACE] Locale locale = this.locale;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( locale != null )  {^118^^^^^85^155^[REPLACE] if  ( locale == null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^locale = Util.getFormattingLocale ( pageContext, this, false, DateFormat.getAvailableLocales (  )  ) ;^119^120^^^^85^155^[REPLACE] locale = Util.getFormattingLocale ( pageContext, this, true, DateFormat.getAvailableLocales (  )  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( locale == this  )  {^122^^^^^85^155^[REPLACE] if  ( locale != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = formatter.withZone ( tz )  ;^123^^^^^85^155^[REPLACE] formatter = formatter.withLocale ( locale ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String input = null  ;^127^^^^^85^155^[REPLACE] DateTimeZone tz = this.dateTimeZone;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( tz != null )  {^128^^^^^85^155^[REPLACE] if  ( tz == null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^129^^^^^85^155^[ADD] tz = DateTimeZoneSupport.getDateTimeZone ( pageContext, this ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz ;^129^^^^^85^155^[REPLACE] tz = DateTimeZoneSupport.getDateTimeZone ( pageContext, this ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( tz == null )  {^131^^^^^85^155^[REPLACE] if  ( tz != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^132^133^^^^85^155^[ADD] formatter = formatter.withZone ( tz ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = formatter.withLocale ( locale )  ;^132^^^^^85^155^[REPLACE] formatter = formatter.withZone ( tz ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTime parsed = false;^136^^^^^85^155^[REPLACE] DateTime parsed = null;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^parsed = formatter.parseDateTime ( input ) ;"PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^137^138^139^140^141^85^155^[ADD] try { parsed = formatter.parseDateTime ( input ) ; } catch  ( IllegalArgumentException iae )  { throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^parsed =  null.parseDateTime ( input ) ;^138^^^^^85^155^[REPLACE] parsed = formatter.parseDateTime ( input ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^140^141^^^^85^155^[ADD] throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^139^140^141^^^85^155^[ADD] catch  ( IllegalArgumentException iae )  { throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == null )  {^144^^^^^85^155^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^pageContext.getOut (  ) .print ( parsed ) ;^147^148^149^150^151^144^152^[ADD] try { pageContext.getOut (  ) .print ( parsed ) ; } catch  ( IOException ioe )  { throw new JspTagException  (" ")  ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^150^^^^^144^152^[REPLACE] throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext.removeAttribute ( var, scope )  ;^145^^^^^85^155^[REPLACE] pageContext.setAttribute ( var, parsed, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^pageContext.getOut (  ) .print ( parsed ) ;^147^148^149^150^151^85^155^[ADD] try { pageContext.getOut (  ) .print ( parsed ) ; } catch  ( IOException ioe )  { throw new JspTagException  (" ")  ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext.getOut (  )  .trim (  )  ;^148^^^^^85^155^[REPLACE] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext .setAttribute ( var , parsed , scope )  .print ( parsed ) ;^148^^^^^85^155^[REPLACE] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^150^^^^^85^155^[REPLACE] throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return EVAL_PAGE;  ;^154^^^^^85^155^[REPLACE] return EVAL_PAGE;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
