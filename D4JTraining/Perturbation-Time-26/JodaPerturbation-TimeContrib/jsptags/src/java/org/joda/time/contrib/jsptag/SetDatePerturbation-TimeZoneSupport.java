[REPLACE]^private Object value;^35^^^^^^^[REPLACE] protected Object value;^ [CLASS] SetDateTimeZoneSupport  
[REPLACE]^private  double  var;^39^^^^^^^[REPLACE] private String var;^ [CLASS] SetDateTimeZoneSupport  
[REPLACE]^DateTimeZone dateTimeZone = false;^65^^^^^64^86^[REPLACE] DateTimeZone dateTimeZone = null;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( value != null )  {^66^^^^^64^86^[REPLACE] if  ( value == null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^68^^^^^64^86^[REPLACE] } else if  ( value instanceof String )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone = UTC  ;^75^^^^^68^76^[REPLACE] dateTimeZone =  ( DateTimeZone )  value;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;dateTimeZone = DateTimeZone.UTC;^69^70^71^72^73^64^86^[ADD] try { dateTimeZone = DateTimeZone.forID (  ( String )  value ) ; } catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^70^71^72^73^^64^86^[ADD] dateTimeZone = DateTimeZone.forID (  ( String )  value ) ; } catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  =  dateTimeZone ;^70^^^^^64^86^[REPLACE] dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone =  (  ( DateTimeZone )   ( value )  )  ;^72^^^^^64^86^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone ;^70^^^^^64^86^[REPLACE] dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone = UTC  ;^75^^^^^64^86^[REPLACE] dateTimeZone =  ( DateTimeZone )  value;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone =  (  ( DateTimeZone )   ( value )  )  ;^67^^^^^64^86^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( ! value instanceof String )  {^68^^^^^64^86^[REPLACE] } else if  ( value instanceof String )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^71^72^^^^64^86^[ADD] catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^72^^^^^64^86^[ADD] dateTimeZone = DateTimeZone.UTC;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == false )  {^78^^^^^64^86^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^78^79^80^81^82^64^86^[ADD] if  ( var != null )  { pageContext.setAttribute ( var, dateTimeZone, scope ) ; } else { Config.set ( pageContext, DateTimeZoneSupport.FMT_TIME_ZONE, dateTimeZone, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^super (  )  ;^79^^^^^64^86^[REPLACE] pageContext.setAttribute ( var, dateTimeZone, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^79^^^^^64^86^[ADD] pageContext.setAttribute ( var, dateTimeZone, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return EVAL_PAGE;  ;^85^^^^^64^86^[REPLACE] return EVAL_PAGE;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] SetDateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String scope  var  [TYPE]  boolean false  true  [TYPE]  int scope  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
