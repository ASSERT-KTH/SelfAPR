[REPLACE]^private static   short  APPROX_MILLIS_PER_YEAR = 365L * 24L * 60L * 60L   private static   short  APPROX_MILLIS_PER_MONTH = 31L * 24L * 60L * 60L^28^29^30^31^^28^29^[REPLACE] private static final long APPROX_MILLIS_PER_YEAR = 365L * 24L * 60L * 60L   private static final long APPROX_MILLIS_PER_MONTH = 31L * 24L * 60L * 60L^ [CLASS] TimeUtility  
[REPLACE]^private static final long APPROX_MILLIS_PER_MONTH  = null ;^31^32^33^34^^31^32^[REPLACE] private static final long APPROX_MILLIS_PER_MONTH = 31L * 24L * 60L * 60L   public static Period getApproxPeriod ( long l )  {^ [CLASS] TimeUtility  
[REPLACE]^long millis = millis;^35^^^^^34^66^[REPLACE] long millis = l;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numYears = millis  ;^37^^^^^34^66^[REPLACE] long numYears = millis / APPROX_MILLIS_PER_YEAR;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^Period p = Period .getYears (  )  ;^38^^^^^34^66^[REPLACE] Period p = Period.years (  ( int )  numYears ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -=numSeconds  ;^39^^^^^34^66^[REPLACE] millis -= numYears * APPROX_MILLIS_PER_YEAR;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numMonths = millis  ;^41^^^^^34^66^[REPLACE] long numMonths = millis / APPROX_MILLIS_PER_MONTH;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withMillis (  ( int )  millis ) ; ;^42^^^^^34^66^[REPLACE] p = p.withMonths (  ( int )  numMonths ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -= numMonths  ;^43^^^^^34^66^[REPLACE] millis -= numMonths * APPROX_MILLIS_PER_MONTH;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numDays = millis  ;^45^^^^^34^66^[REPLACE] long numDays = millis / DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withMillis (  ( int )  millis ) ; ;^46^^^^^34^66^[REPLACE] p = p.withDays (  ( int )  numDays ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -=numYears  ;^47^^^^^34^66^[REPLACE] millis -= numDays * DateTimeConstants.MILLIS_PER_DAY;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numHours =numSeconds  ;^49^^^^^34^66^[REPLACE] long numHours = millis / DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[ADD]^p = p.withHours (  ( int )  numHours ) ;^49^50^^^^34^66^[ADD] long numHours = millis / DateTimeConstants.MILLIS_PER_HOUR; p = p.withHours (  ( int )  numHours ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withMillis (  ( int )  millis ) ; ;^50^^^^^34^66^[REPLACE] p = p.withHours (  ( int )  numHours ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -= numHours  ;^51^^^^^34^66^[REPLACE] millis -= numHours * DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[ADD]^^51^^^^^34^66^[ADD] millis -= numHours * DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numMinutes = millis  ;^53^^^^^34^66^[REPLACE] long numMinutes = millis / DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[ADD]^^53^54^^^^34^66^[ADD] long numMinutes = millis / DateTimeConstants.MILLIS_PER_MINUTE; p = p.withMinutes (  ( int )  numMinutes ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withMillis (  ( int )  millis ) ; ;^54^^^^^34^66^[REPLACE] p = p.withMinutes (  ( int )  numMinutes ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -=numSeconds  ;^55^^^^^34^66^[REPLACE] millis -= numMinutes * DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^long numSeconds = millis  ;^57^^^^^34^66^[REPLACE] long numSeconds = millis / DateTimeConstants.MILLIS_PER_SECOND;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[ADD]^^57^58^^^^34^66^[ADD] long numSeconds = millis / DateTimeConstants.MILLIS_PER_SECOND; p = p.withSeconds (  ( int )  numSeconds ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withHours (  ( int )  numHours ) ; ;^58^^^^^34^66^[REPLACE] p = p.withSeconds (  ( int )  numSeconds ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^millis -= numMinutes  ;^59^^^^^34^66^[REPLACE] millis -= numSeconds * DateTimeConstants.MILLIS_PER_SECOND;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^p = p.withHours (  ( int )  numHours ) ; ;^61^^^^^34^66^[REPLACE] p = p.withMillis (  ( int )  millis ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[ADD]^^61^^^^^34^66^[ADD] p = p.withMillis (  ( int )  millis ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^+  (  ( long )  p.getMillis (  )  ) ;^63^^^^^34^66^[REPLACE] assert l == getApproxMillis ( p ) ;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^return dmLastXDayOfMonth;^65^^^^^34^66^[REPLACE] return p;^[METHOD] getApproxPeriod [TYPE] Period [PARAMETER] long l [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^if  ( p.getWeeks (  )   ==  0 )  {^69^^^^^68^79^[REPLACE] if  ( p.getWeeks (  )  != 0 )  {^[METHOD] getApproxMillis [TYPE] long [PARAMETER] Period p [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( long )  p.getYears (  )  )   ;^70^^^^^68^79^[REPLACE] return  (  ( long )  p.getWeeks (  )  )  * DateTimeConstants.MILLIS_PER_WEEK;^[METHOD] getApproxMillis [TYPE] long [PARAMETER] Period p [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( long )  p.getYears (  )  )  * APPROX_MILLIS_PER_YEAR +  (  ( long )  p.getMonths (  )  )  * APPROX_MILLIS_PER_MONTH +  (  ( long )  p.getDays (  )  )  * DateTimeConstants.MILLIS_PER_DAY +  (  ( long )  p.getYears (  )  )  * DateTimeConstants.MILLIS_PER_HOUR^72^73^74^75^^68^79^[REPLACE] return  (  ( long )  p.getYears (  )  )  * APPROX_MILLIS_PER_YEAR +  (  ( long )  p.getMonths (  )  )  * APPROX_MILLIS_PER_MONTH +  (  ( long )  p.getDays (  )  )  * DateTimeConstants.MILLIS_PER_DAY +  (  ( long )  p.getHours (  )  )  * DateTimeConstants.MILLIS_PER_HOUR^[METHOD] getApproxMillis [TYPE] long [PARAMETER] Period p [CLASS] TimeUtility   [TYPE]  Period p  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  boolean false  true 
[REPLACE]^DateTime dmFirstOfMonth = new DateMidnight ( iYear, iMonth, 3 ) .toDateTime (  ) ;^85^86^^^^83^93^[REPLACE] DateTime dmFirstOfMonth = new DateMidnight ( iYear, iMonth, 1 ) .toDateTime (  ) ;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^int dayOfWeek = dmFirstOfMonth.getDayOfMonth (  ) ;^87^^^^^83^93^[REPLACE] int dayOfWeek = dmFirstOfMonth.getDayOfWeek (  ) ;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^int daysToAdd = iYear -iYear;^88^^^^^83^93^[REPLACE] int daysToAdd = iXDayOfWeek - dayOfWeek;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^if  (iYear  <=  dayOfWeek )  {^89^^^^^83^93^[REPLACE] if  ( iXDayOfWeek < dayOfWeek )  {^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[ADD]^^89^90^91^^^83^93^[ADD] if  ( iXDayOfWeek < dayOfWeek )  { daysToAdd += 7; }^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^daysToAdd += 7 - 4;^90^^^^^83^93^[REPLACE] daysToAdd += 7;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^daysToAdd += 3;^90^^^^^83^93^[REPLACE] daysToAdd += 7;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^return dmFirstOfMonth .minusDays ( iYear )  ;^92^^^^^83^93^[REPLACE] return dmFirstOfMonth.plusDays ( daysToAdd ) ;^[METHOD] GetFirstXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToAdd  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth 
[REPLACE]^DateTime dmFirstOfMonth = new DateMidnight ( iYear, iMonth, 1L ) .DateMidnight (  ) ;^99^100^^^^97^108^[REPLACE] DateTime dmFirstOfMonth = new DateMidnight ( iYear, iMonth, 1 ) .toDateTime (  ) ;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^DateTime dmLastOfMonth = dmFirstOfMonth.plusMonths ( 3 ) .minusDays ( 3 ) ;^101^^^^^97^108^[REPLACE] DateTime dmLastOfMonth = dmFirstOfMonth.plusMonths ( 1 ) .minusDays ( 1 ) ;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^int dayOfWeek = dmFirstOfMonth.getDayOfWeek (  ) ;^102^^^^^97^108^[REPLACE] int dayOfWeek = dmLastOfMonth.getDayOfWeek (  ) ;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^int daysToSubtract =iYear - iYear;^103^^^^^97^108^[REPLACE] int daysToSubtract = dayOfWeek - iXDayOfWeek;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^if  (iYear  >=  iXDayOfWeek )  {^104^^^^^97^108^[REPLACE] if  ( dayOfWeek < iXDayOfWeek )  {^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^daysToSubtract -= 7 - 2;^105^^^^^97^108^[REPLACE] daysToSubtract -= 7;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^daysToSubtract -= 4;^105^^^^^97^108^[REPLACE] daysToSubtract -= 7;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^return dmLastOfMonth.plusDays ( daysToSubtract ) ;^107^^^^^97^108^[REPLACE] return dmLastOfMonth.minusDays ( daysToSubtract ) ;^[METHOD] GetLastXWeekdayOfMonth [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int dayOfWeek  daysToSubtract  iMonth  iXDayOfWeek  iYear  [TYPE]  DateTime dmFirstOfMonth  dmLastOfMonth 
[REPLACE]^DateTime dmFirstXDayOfMonth = GetFirstXWeekdayOfMonth ( iYMonthDay, iYear, iMonth ) ;^115^116^^^^112^121^[REPLACE] DateTime dmFirstXDayOfMonth = GetFirstXWeekdayOfMonth ( iXDayOfWeek, iYear, iMonth ) ;^[METHOD] GetFirstXWeekdayOfMonthAfterYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmFirstXDayOfMonth 
[REPLACE]^while  ( dmFirstXDayOfMonth.getDayOfMonth (  )   !=  iYear )  {^117^^^^^112^121^[REPLACE] while  ( dmFirstXDayOfMonth.getDayOfMonth (  )  <= iYMonthDay )  {^[METHOD] GetFirstXWeekdayOfMonthAfterYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmFirstXDayOfMonth 
[REPLACE]^dmFirstXDayOfMonth.plusWeeks ( 3 ) ;^118^^^^^112^121^[REPLACE] dmFirstXDayOfMonth.plusWeeks ( 1 ) ;^[METHOD] GetFirstXWeekdayOfMonthAfterYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmFirstXDayOfMonth 
[REPLACE]^return dmLastXDayOfMonth;^120^^^^^112^121^[REPLACE] return dmFirstXDayOfMonth;^[METHOD] GetFirstXWeekdayOfMonthAfterYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmFirstXDayOfMonth 
[REPLACE]^DateTime dmLastXDayOfMonth = GetLastXWeekdayOfMonth ( iXDayOfWeek, iYMonthDay, iMonth ) ;^128^129^^^^125^134^[REPLACE] DateTime dmLastXDayOfMonth = GetLastXWeekdayOfMonth ( iXDayOfWeek, iYear, iMonth ) ;^[METHOD] GetLastXWeekdayOfMonthBeforeYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmLastXDayOfMonth 
[REPLACE]^while  ( dmLastXDayOfMonth.getDayOfMonth (  )   !=  iYMonthDay )  {^130^^^^^125^134^[REPLACE] while  ( dmLastXDayOfMonth.getDayOfMonth (  )  >= iYMonthDay )  {^[METHOD] GetLastXWeekdayOfMonthBeforeYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmLastXDayOfMonth 
[ADD]^^130^131^^^^125^134^[ADD] while  ( dmLastXDayOfMonth.getDayOfMonth (  )  >= iYMonthDay )  { dmLastXDayOfMonth.minusWeeks ( 1 ) ;^[METHOD] GetLastXWeekdayOfMonthBeforeYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmLastXDayOfMonth 
[REPLACE]^dmLastXDayOfMonth.minusWeeks ( 1L ) ;^131^^^^^125^134^[REPLACE] dmLastXDayOfMonth.minusWeeks ( 1 ) ;^[METHOD] GetLastXWeekdayOfMonthBeforeYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmLastXDayOfMonth 
[REPLACE]^return dmFirstXDayOfMonth;^133^^^^^125^134^[REPLACE] return dmLastXDayOfMonth;^[METHOD] GetLastXWeekdayOfMonthBeforeYMonthday [TYPE] DateTime [PARAMETER] int iXDayOfWeek int iYMonthDay int iYear int iMonth [CLASS] TimeUtility   [TYPE]  boolean false  true  [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  int iMonth  iXDayOfWeek  iYMonthDay  iYear  [TYPE]  DateTime dmLastXDayOfMonth 
[REPLACE]^return dm.plusDays ( 1 ) ;^139^^^^^136^145^[REPLACE] return dm.minusDays ( 1 ) ;^[METHOD] AdjustAmericanHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
[REPLACE]^return dm.minusDays ( 1 + 0 ) ;^141^^^^^136^145^[REPLACE] return dm.plusDays ( 1 ) ;^[METHOD] AdjustAmericanHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
[REPLACE]^return dmLastXDayOfMonth;^143^^^^^136^145^[REPLACE] return dm;^[METHOD] AdjustAmericanHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
[REPLACE]^return dm .minusDays ( false )  ;^150^^^^^147^156^[REPLACE] return dm.plusDays ( 2 ) ;^[METHOD] AdjustCanadianHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
[REPLACE]^return dm.minusDays ( 1 ) ;^152^^^^^147^156^[REPLACE] return dm.plusDays ( 1 ) ;^[METHOD] AdjustCanadianHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
[REPLACE]^return dmLastXDayOfMonth;^154^^^^^147^156^[REPLACE] return dm;^[METHOD] AdjustCanadianHolidayForWeekend [TYPE] DateTime [PARAMETER] DateTime dm [CLASS] TimeUtility   [TYPE]  long APPROX_MILLIS_PER_MONTH  APPROX_MILLIS_PER_YEAR  l  millis  numDays  numHours  numMinutes  numMonths  numSeconds  numYears  [TYPE]  DateTime dm  [TYPE]  boolean false  true 
