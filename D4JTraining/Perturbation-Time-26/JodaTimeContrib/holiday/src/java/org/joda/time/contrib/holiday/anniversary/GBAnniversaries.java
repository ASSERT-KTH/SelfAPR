[REPLACE]^public static final AnniversaryFactory MAY_DAY_BANK_HOLIDAY ;^26^27^^^^26^33^[REPLACE] public static final AnniversaryFactory MAY_DAY_BANK_HOLIDAY = new AnniversaryFactory ( "MayDayBankHoliday" )  {^ [CLASS] GBAnniversaries 1 2 3 4 5  
[REPLACE]^public static final AnniversaryFactory SPRING_BANK_HOLIDAY ;^35^36^^^^35^42^[REPLACE] public static final AnniversaryFactory SPRING_BANK_HOLIDAY = new AnniversaryFactory ( "SpringBankHoliday" )  {^ [CLASS] GBAnniversaries 1 2 3 4 5  
[REPLACE]^public static  AnniversaryFactory JULY_12 = new AnniversaryFactory ( "July12" )  {^44^45^^^^44^50^[REPLACE] public static final AnniversaryFactory JULY_12 = new AnniversaryFactory ( "July12" )  {^ [CLASS] GBAnniversaries 1 2 3 4 5  
[REPLACE]^public static  AnniversaryFactory SUMMER_BANK_HOLIDAY = new AnniversaryFactory ( "SummerBankHoliday" )  {^52^53^^^^52^59^[REPLACE] public static final AnniversaryFactory SUMMER_BANK_HOLIDAY = new AnniversaryFactory ( "SummerBankHoliday" )  {^ [CLASS] GBAnniversaries 1 2 3 4 5  
[REPLACE]^private static final AnniversaryFactory SCOTTISH_SUMMER_BANK_HOLIDAY = new AnniversaryFactory ( "MayDayBankHoliday" )  {^61^62^^^^61^68^[REPLACE] public static final AnniversaryFactory SCOTTISH_SUMMER_BANK_HOLIDAY = new AnniversaryFactory ( "MayDayBankHoliday" )  {^ [CLASS] GBAnniversaries 1 2 3 4 5  
[REPLACE]^return TimeUtility.GetLastXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST ) ;^30^31^^^^28^32^[REPLACE] return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.MAY ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] GBAnniversaries 1 2 3 4 5   [TYPE]  AnniversaryFactory JULY_12  MAY_DAY_BANK_HOLIDAY  SCOTTISH_SUMMER_BANK_HOLIDAY  SPRING_BANK_HOLIDAY  SUMMER_BANK_HOLIDAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return TimeUtility.GetLastXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST ) ;^39^40^^^^37^41^[REPLACE] return TimeUtility.GetLastXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.MAY ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] GBAnniversaries 1 2 3 4 5   [TYPE]  AnniversaryFactory JULY_12  MAY_DAY_BANK_HOLIDAY  SCOTTISH_SUMMER_BANK_HOLIDAY  SPRING_BANK_HOLIDAY  SUMMER_BANK_HOLIDAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.JULY, 4 ) .toDateTime (  ) ;^47^48^^^^46^49^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.JULY, 12 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] GBAnniversaries 1 2 3 4 5   [TYPE]  AnniversaryFactory JULY_12  MAY_DAY_BANK_HOLIDAY  SCOTTISH_SUMMER_BANK_HOLIDAY  SPRING_BANK_HOLIDAY  SUMMER_BANK_HOLIDAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST ) ;^56^57^^^^54^58^[REPLACE] return TimeUtility.GetLastXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] GBAnniversaries 1 2 3 4 5   [TYPE]  AnniversaryFactory JULY_12  MAY_DAY_BANK_HOLIDAY  SCOTTISH_SUMMER_BANK_HOLIDAY  SPRING_BANK_HOLIDAY  SUMMER_BANK_HOLIDAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return TimeUtility .GetLastXWeekdayOfMonth ( iYear )  ;^65^66^^^^63^67^[REPLACE] return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] GBAnniversaries 1 2 3 4 5   [TYPE]  AnniversaryFactory JULY_12  MAY_DAY_BANK_HOLIDAY  SCOTTISH_SUMMER_BANK_HOLIDAY  SPRING_BANK_HOLIDAY  SUMMER_BANK_HOLIDAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.JULY, 12 - 4 ) .toDateTime (  ) ;^47^48^^^^46^49^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.JULY, 12 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 3   [TYPE]  boolean false  true  [TYPE]  int iYear 
