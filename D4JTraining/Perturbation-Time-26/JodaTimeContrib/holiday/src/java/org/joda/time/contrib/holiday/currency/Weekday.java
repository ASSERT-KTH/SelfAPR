[REPLACE]^private static Weekday[]            _weekdays  = null ;^37^^^^^^^[REPLACE] private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^ [CLASS] Weekday  
[REPLACE]^private  Map<String, Weekday> _names = new HashMap<String, Weekday> ( 7 ) ;^38^^^^^^^[REPLACE] private static Map<String, Weekday> _names = new HashMap<String, Weekday> ( 7 ) ;^ [CLASS] Weekday  
[REPLACE]^private static int DAYS_PER_WEEK = 7;^43^^^^^^^[REPLACE] public static int DAYS_PER_WEEK = 7;^ [CLASS] Weekday  
[REPLACE]^private static final String[] FULL_NAME ;^48^^^^^48^51^[REPLACE] private static final String[] FULL_NAME = {^ [CLASS] Weekday  
[REPLACE]^private  int                   _weekday;^96^^^^^^^[REPLACE] private final int                   _weekday;^ [CLASS] Weekday  
[REPLACE]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 0, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^^^[REPLACE] SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^ [CLASS] Weekday  
[REPLACE]^_weekday =  DAYS_PER_WEEK;^104^^^^^103^106^[REPLACE] _weekday = weekday;^[METHOD] <init> [TYPE] Weekday(int,boolean) [PARAMETER] int weekday boolean isWeekend [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  weekday 
[REPLACE]^_isWeekend =  true;^105^^^^^103^106^[REPLACE] _isWeekend = isWeekend;^[METHOD] <init> [TYPE] Weekday(int,boolean) [PARAMETER] int weekday boolean isWeekend [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  weekday 
[REPLACE]^return weekday;^69^^^^^68^70^[REPLACE] return _weekdays[index];^[METHOD] weekday [TYPE] Weekday [PARAMETER] int index [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^if  ( str.size (  )  == 3 )  {^79^^^^^77^89^[REPLACE] if  ( str.length (  )  == 3 )  {^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^weekday =  _names.get ( null.toLowerCase (  )  ) ;^86^^^^^77^89^[REPLACE] weekday = _names.get ( str.toLowerCase (  )  ) ;^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[ADD]^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;weekday = null;^80^81^82^83^84^77^89^[ADD] try { weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ; } catch  ( IllegalArgumentException iae )  { weekday = null; }^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^weekday =  Enum.valueOf ( Weekday.class, null.toUpperCase (  )  ) ;^81^^^^^77^89^[REPLACE] weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^weekday = this;^83^^^^^77^89^[REPLACE] weekday = null;^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^weekday = false;^83^^^^^77^89^[REPLACE] weekday = null;^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return WED;^88^^^^^77^89^[REPLACE] return weekday;^[METHOD] weekday [TYPE] Weekday [PARAMETER] String str [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  String str  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return _isWeekend;^116^^^^^115^117^[REPLACE] return ! _isWeekend;^[METHOD] isWeekday [TYPE] boolean [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^return ! _isWeekend;^124^^^^^123^125^[REPLACE] return _isWeekend;^[METHOD] isWeekend [TYPE] boolean [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^return weekday;^132^^^^^131^133^[REPLACE] return name (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^return weekday;^143^^^^^142^144^[REPLACE] return name (  ) ;^[METHOD] getAbbrev [TYPE] String [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^return weekday;^151^^^^^150^152^[REPLACE] return FULL_NAME[_weekday];^[METHOD] getFullName [TYPE] String [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
[REPLACE]^return weekday;^159^^^^^158^160^[REPLACE] return _weekday;^[METHOD] getValue [TYPE] int [PARAMETER] [CLASS] Weekday   [TYPE]  Weekday FRI  MON  SAT  SUN  THU  TUE  WED  weekday  [TYPE]  boolean _isWeekend  false  isWeekend  true  [TYPE]  Weekday[] _weekdays  [TYPE]  String[] FULL_NAME  [TYPE]  Map _names  [TYPE]  int DAYS_PER_WEEK  _weekday  index  weekday 
