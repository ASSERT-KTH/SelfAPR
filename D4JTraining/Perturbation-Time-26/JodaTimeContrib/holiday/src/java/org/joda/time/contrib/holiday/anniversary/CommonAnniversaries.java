[REPLACE]^public static final AnniversaryFactory NEW_YEAR ;^24^25^^^^24^30^[REPLACE] public static final AnniversaryFactory NEW_YEAR = new AnniversaryFactory ( "NewYear" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^private static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory ( "ValentinesDay" )  {^32^33^^^^32^38^[REPLACE] public static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory ( "ValentinesDay" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static final AnniversaryFactory ST_PATRICKS_DAY ;^40^41^^^^40^46^[REPLACE] public static final AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory ( "StPatricksDay" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public  final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory ( "GoodFriday" )  {^48^49^^^^48^53^[REPLACE] public static final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory ( "GoodFriday" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static final AnniversaryFactory EASTER_SUNDAY  = null ;^59^60^^^^59^72^[REPLACE] public static final AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory ( "EasterSunday" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static final AnniversaryFactory EASTER_MONDAY ;^74^75^^^^74^79^[REPLACE] public static final AnniversaryFactory EASTER_MONDAY = new AnniversaryFactory ( "EasterMonday" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public  final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDay" )  {^84^85^^^^84^90^[REPLACE] public static final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDay" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static  AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Christmas" )  {^92^93^^^^92^98^[REPLACE] public static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Christmas" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static  AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "BoxingDay" )  {^100^101^^^^100^106^[REPLACE] public static final AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "BoxingDay" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^public static  AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "LaborDay" )  {^108^109^^^^108^116^[REPLACE] public static final AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "LaborDay" )  {^ [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 0 ) .toDateTime (  ) ;^27^28^^^^26^29^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 2 ) .toDateTime (  ) ;^35^36^^^^34^37^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 << 2 ) .toDateTime (  ) ;^43^44^^^^42^45^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return EASTER_SUNDAY .create ( iYear )  .minusDays ( 4 ) ;^51^^^^^50^52^[REPLACE] return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^int iG =iMonth % 15;^62^^^^^61^71^[REPLACE] int iG = iYear % 19;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iC = iYear  ;^63^^^^^61^71^[REPLACE] int iC = iYear / 100;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iH =  ( iYear - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  %iYear;^64^^^^^61^71^[REPLACE] int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[ADD]^^64^65^^^^61^71^[ADD] int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30; int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iI =iYear -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^[REPLACE] int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  %iYear;^66^^^^^61^71^[REPLACE] int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[ADD]^^66^^^^^61^71^[ADD] int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iL = iI -iYear;^67^^^^^61^71^[REPLACE] int iL = iI - iJ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iMonth = 3  |   ( iL  |  40 )  / 44;^68^^^^^61^71^[REPLACE] int iMonth = 3 +  ( iL + 40 )  / 44;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^int iDay = iL + 6  !=  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^[REPLACE] int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^[REPLACE] return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  [TYPE]  boolean false  true 
[REPLACE]^return EASTER_SUNDAY.create ( iYear )  .minusDays ( iYear )  ;^77^^^^^76^78^[REPLACE] return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 9 ) .toDateTime (  ) ;^87^88^^^^86^89^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 5 ) .toDateTime (  ) ;^95^96^^^^94^97^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^103^104^^^^102^105^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [TYPE]  AnniversaryFactory ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  [TYPE]  int iYear  [TYPE]  boolean false  true 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 2 ) .toDateTime (  ) ;^27^28^^^^26^29^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 7 ) .toDateTime (  ) ;^35^36^^^^34^37^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 2   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 - 4 ) .toDateTime (  ) ;^43^44^^^^42^45^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 3   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 3 ) ;^51^^^^^50^52^[REPLACE] return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^int iG =iMonth % 19;^62^^^^^61^71^[REPLACE] int iG = iYear % 19;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[ADD]^^62^63^^^^61^71^[ADD] int iG = iYear % 19; int iC = iYear / 100;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iC = iYear  ;^63^^^^^61^71^[REPLACE] int iC = iYear / 100;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )   &  30;^64^^^^^61^71^[REPLACE] int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iI = iYear -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^[REPLACE] int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[ADD]^^65^66^^^^61^71^[ADD] int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ; int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^[REPLACE] int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[ADD]^^66^67^^^^61^71^[ADD] int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7; int iL = iI - iJ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iL = iYear  &&  iJ;^67^^^^^61^71^[REPLACE] int iL = iI - iJ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iMonth = 3  <   ( iL  <  40 )  / 44;^68^^^^^61^71^[REPLACE] int iMonth = 3 +  ( iL + 40 )  / 44;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^int iDay = iL + 28  >  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^[REPLACE] int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^return new DateMidnight ( iYear, iMonth, iL ) .toDateTime (  ) ;^70^^^^^61^71^[REPLACE] return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  int iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear 
[REPLACE]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 2 ) ;^77^^^^^76^78^[REPLACE] return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 6   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 6 ) .toDateTime (  ) ;^87^88^^^^86^89^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 7   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 + 2 ) .toDateTime (  ) ;^95^96^^^^94^97^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 8   [TYPE]  boolean false  true  [TYPE]  int iYear 
[REPLACE]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26L ) .toDateTime (  ) ;^103^104^^^^102^105^[REPLACE] return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[METHOD] create [TYPE] DateTime [PARAMETER] int iYear [CLASS] 9   [TYPE]  boolean false  true  [TYPE]  int iYear 
