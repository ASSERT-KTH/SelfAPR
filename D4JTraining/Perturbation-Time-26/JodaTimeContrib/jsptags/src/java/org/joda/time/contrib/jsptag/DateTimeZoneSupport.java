[REPLACE]^public static final String FMT_TIME_ZONE  = null ;^39^^^^^^^[REPLACE] public static final String FMT_TIME_ZONE = "org.joda.time.dateTimeZone";^ [CLASS] DateTimeZoneSupport  
[REPLACE]^private Object value;^42^^^^^^^[REPLACE] protected Object value;^ [CLASS] DateTimeZoneSupport  
[REPLACE]^init (  ) ;^51^^^^^50^53^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] DateTimeZoneSupport() [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^super (  ) ;^52^^^^^50^53^[REPLACE] init (  ) ;^[METHOD] <init> [TYPE] DateTimeZoneSupport() [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[ADD]^^52^^^^^50^53^[ADD] init (  ) ;^[METHOD] <init> [TYPE] DateTimeZoneSupport() [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^value = this;^56^^^^^55^57^[REPLACE] value = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^return EVAL_BODY_BUFFERED;^60^^^^^59^61^[REPLACE] return dateTimeZone;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^if  ( value != this )  {^64^^^^^63^76^[REPLACE] if  ( value == null )  {^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^dateTimeZone = DateTimeZone.UTC;dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^64^65^66^67^68^63^76^[ADD] if  ( value == null )  { dateTimeZone = DateTimeZone.UTC; } else if  ( value instanceof String )  { try { dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( ! value instanceof String )  {^66^^^^^63^76^[REPLACE] } else if  ( value instanceof String )  {^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^}   dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^66^67^68^69^70^63^76^[ADD] else if  ( value instanceof String )  { try { dateTimeZone = DateTimeZone.forID (  ( String )  value ) ; } catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  =  dateTimeZone ;^73^^^^^63^76^[REPLACE] dateTimeZone =  ( DateTimeZone )  value;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;dateTimeZone = DateTimeZone.UTC;^67^68^69^70^71^63^76^[ADD] try { dateTimeZone = DateTimeZone.forID (  ( String )  value ) ; } catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC; }^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz = DateTimeZone.forID (  ( String )  obj ) ; ;^68^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.forID (  ( String )  value ) ;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  =  dateTimeZone ;^70^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^70^^^^^63^76^[ADD] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^69^70^^^^63^76^[ADD] catch  ( IllegalArgumentException iae )  { dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  = null ;^70^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  = null ;^73^^^^^63^76^[REPLACE] dateTimeZone =  ( DateTimeZone )  value;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  =  dateTimeZone ;^65^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( ! value instanceof String )  {^66^^^^^63^76^[REPLACE] } else if  ( value instanceof String )  {^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^^73^^^^^63^76^[ADD] dateTimeZone =  ( DateTimeZone )  value;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone  = null ;^65^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone ;^70^^^^^63^76^[REPLACE] dateTimeZone = DateTimeZone.UTC;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return EVAL_PAGE;^75^^^^^63^76^[REPLACE] return EVAL_BODY_BUFFERED;^[METHOD] doStartTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  IllegalArgumentException iae 
[ADD]^pageContext.getOut (  ) .print ( bodyContent.getString (  )  ) ;^79^80^81^82^83^78^85^[ADD] try { pageContext.getOut (  ) .print ( bodyContent.getString (  )  ) ; } catch  ( IOException ioe )  { throw new JspTagException  (" ")  ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  IOException ioe  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^pageContext.getOut (  )  .findAncestorWithClass ( false , null )  ;^80^^^^^78^85^[REPLACE] pageContext.getOut (  ) .print ( bodyContent.getString (  )  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  IOException ioe  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^super (  ) ;^80^^^^^78^85^[REPLACE] pageContext.getOut (  ) .print ( bodyContent.getString (  )  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  IOException ioe  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^return ;^82^^^^^78^85^[REPLACE] throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  IOException ioe  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^return EVAL_BODY_BUFFERED;^84^^^^^78^85^[REPLACE] return EVAL_PAGE;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  IOException ioe  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^super (  ) ;^89^^^^^88^90^[REPLACE] init (  ) ;^[METHOD] release [TYPE] void [PARAMETER] [CLASS] DateTimeZoneSupport   [TYPE]  Object value  [TYPE]  String FMT_TIME_ZONE  [TYPE]  boolean false  true  [TYPE]  DateTimeZone dateTimeZone 
[REPLACE]^DateTimeZone tz = true;^110^^^^^109^134^[REPLACE] DateTimeZone tz = null;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^110^^^^^109^134^[ADD] DateTimeZone tz = null;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Tag t = findAncestorWithClass ( t, DateTimeZoneSupport.class ) ;^112^^^^^109^134^[REPLACE] Tag t = findAncestorWithClass ( fromTag, DateTimeZoneSupport.class ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( t ==fromTag )  {^113^^^^^109^134^[REPLACE] if  ( t != null )  {^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( obj == null )  {^120^^^^^109^134^[REPLACE] if  ( obj != null )  {^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( ! obj instanceof DateTimeZone )  {^121^^^^^109^134^[REPLACE] if  ( obj instanceof DateTimeZone )  {^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^121^122^123^124^125^109^134^[ADD] if  ( obj instanceof DateTimeZone )  { tz =  ( DateTimeZone )  obj; } else { try { tz = DateTimeZone.forID (  ( String )  obj ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^tz = DateTimeZone.forID (  ( String )  obj ) ;tz = DateTimeZone.UTC;^124^125^126^127^128^109^134^[ADD] try { tz = DateTimeZone.forID (  ( String )  obj ) ; } catch  ( IllegalArgumentException iae )  { tz = DateTimeZone.UTC; }^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^dateTimeZone = DateTimeZone.forID (  ( String )  value ) ; ;^125^^^^^109^134^[REPLACE] tz = DateTimeZone.forID (  ( String )  obj ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^125^126^127^128^^109^134^[ADD] tz = DateTimeZone.forID (  ( String )  obj ) ; } catch  ( IllegalArgumentException iae )  { tz = DateTimeZone.UTC; }^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz ;^127^^^^^109^134^[REPLACE] tz = DateTimeZone.UTC;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz =   ( DateTimeZone )  obj;^122^^^^^109^134^[REPLACE] tz =  ( DateTimeZone )  obj;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz  =  tz ;^127^^^^^109^134^[REPLACE] tz = DateTimeZone.UTC;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^127^^^^^109^134^[ADD] tz = DateTimeZone.UTC;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^122^^^^^109^134^[ADD] tz =  ( DateTimeZone )  obj;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz  = null ;^127^^^^^109^134^[REPLACE] tz = DateTimeZone.UTC;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTimeZoneSupport parent =  ( DateTimeZoneSupport )  t;^119^^^^^109^134^[REPLACE] Object obj = Config.find ( pc, FMT_TIME_ZONE ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz =  null.getDateTimeZone (  ) ;^116^^^^^109^134^[REPLACE] tz = parent.getDateTimeZone (  ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^116^^^^^109^134^[ADD] tz = parent.getDateTimeZone (  ) ;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Tag t = findAncestorWithClass ( fromTag, DateTimeZoneSupport.class ) ;^115^^^^^109^134^[REPLACE] DateTimeZoneSupport parent =  ( DateTimeZoneSupport )  t;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[ADD]^^126^127^^^^109^134^[ADD] catch  ( IllegalArgumentException iae )  { tz = DateTimeZone.UTC;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REMOVE]^if  (  ( value )  instanceof String )  {     try {         dateTimeZone = forID (  (  ( String )   ( value )  )  ) ;     } catch  ( IllegalArgumentException iae )  {         dateTimeZone = UTC;     } }else {     dateTimeZone =  (  ( DateTimeZone )   ( value )  ) ; }^121^^^^^109^134^[REMOVE] ^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return dateTimeZone;^133^^^^^109^134^[REPLACE] return tz;^[METHOD] getDateTimeZone [TYPE] DateTimeZone [PARAMETER] PageContext pc Tag fromTag [CLASS] DateTimeZoneSupport   [TYPE]  boolean false  true  [TYPE]  DateTimeZoneSupport parent  [TYPE]  Object obj  value  [TYPE]  PageContext pc  [TYPE]  String FMT_TIME_ZONE  [TYPE]  Tag fromTag  t  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  IllegalArgumentException iae 
