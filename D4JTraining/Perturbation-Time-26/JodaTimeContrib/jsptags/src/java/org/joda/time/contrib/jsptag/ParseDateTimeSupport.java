[REPLACE]^protected  long  value;^43^^^^^^^[REPLACE] protected String value;^ [CLASS] ParseDateTimeSupport  
[REPLACE]^protected  double  pattern;^47^^^^^^^[REPLACE] protected String pattern;^ [CLASS] ParseDateTimeSupport  
[REPLACE]^init (  ) ;^63^^^^^62^65^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] ParseDateTimeSupport() [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^super (  ) ;^64^^^^^62^65^[REPLACE] init (  ) ;^[METHOD] <init> [TYPE] ParseDateTimeSupport() [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^locale = null; ;^68^^^^^67^75^[REPLACE] value = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[ADD]^^68^^^^^67^75^[ADD] value = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^valueSpecified = true;^69^^^^^67^75^[REPLACE] valueSpecified = false;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^pattern = this;^70^^^^^67^75^[REPLACE] pattern = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^style = this;^71^^^^^67^75^[REPLACE] style = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^dateTimeZone = false;^72^^^^^67^75^[REPLACE] dateTimeZone = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^locale = false;^73^^^^^67^75^[REPLACE] locale = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[ADD]^^73^^^^^67^75^[ADD] locale = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^scope  =  scope ;^74^^^^^67^75^[REPLACE] scope = PageContext.PAGE_SCOPE;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^this.var =  null;^78^^^^^77^79^[REPLACE] this.var = var;^[METHOD] setVar [TYPE] void [PARAMETER] String var [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^this.scope =  Util.getScope ( value ) ;^82^^^^^81^83^[REPLACE] this.scope = Util.getScope ( scope ) ;^[METHOD] setScope [TYPE] void [PARAMETER] String scope [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  scope  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[ADD]^^82^^^^^81^83^[ADD] this.scope = Util.getScope ( scope ) ;^[METHOD] setScope [TYPE] void [PARAMETER] String scope [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String pattern  scope  style  value  var  [TYPE]  DateTimeZone dateTimeZone  [TYPE]  int scope 
[REPLACE]^String input = false;^86^^^^^85^155^[REPLACE] String input = null;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( tz != null )  {^89^^^^^85^155^[REPLACE] if  ( valueSpecified )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^89^90^91^92^^85^155^[ADD] if  ( valueSpecified )  {  input = value; } else {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( bodyContent == false ) {^94^^^^^89^97^[REPLACE] if  ( bodyContent != null && bodyContent.getString (  )  != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^94^95^96^^^89^97^[ADD] if  ( bodyContent != null && bodyContent.getString (  )  != null )  { input = bodyContent.getString (  ) .trim (  ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input ;^95^^^^^89^97^[REPLACE] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^95^^^^^89^97^[ADD] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input = bodyContent.get char  (  ) .trim (  ) ;^95^^^^^89^97^[REPLACE] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input ;^91^^^^^85^155^[REPLACE] input = value;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  (  bodyContent.getString (  )  != null )  {^94^^^^^85^155^[REPLACE] if  ( bodyContent != null && bodyContent.getString (  )  != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input = bodyContent.get boolean  (  ) .trim (  ) ;^95^^^^^85^155^[REPLACE] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^95^^^^^85^155^[ADD] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input  =  input ;^91^^^^^85^155^[REPLACE] input = value;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input ;^95^^^^^85^155^[REPLACE] input = bodyContent.getString (  ) .trim (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  (  input.equals ( "" )  )  {^99^^^^^85^155^[REPLACE] if  (  ( input == null )  || input.equals ( "" )  )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == null )  {^100^^^^^85^155^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext .setAttribute ( value , parsed , scope )  ;^101^^^^^85^155^[REPLACE] pageContext.removeAttribute ( var, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var ==value )  {^100^^^^^85^155^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext .setAttribute ( scope , parsed , scope )  ;^101^^^^^85^155^[REPLACE] pageContext.removeAttribute ( var, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTimeZone tz = this.dateTimeZone;^107^^^^^85^155^[REPLACE] DateTimeFormatter formatter;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == null )  {^108^^^^^85^155^[REPLACE] if  ( pattern != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( style == null )  {^110^^^^^85^155^[REPLACE] } else if  ( style != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = DateTimeFormat.forPattern ( pattern ) ; ;^113^^^^^110^114^[REPLACE] formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = DateTimeFormat.forPattern ( pattern ) ; ;^111^^^^^85^155^[REPLACE] formatter = DateTimeFormat.forStyle ( style ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = DateTimeFormat.forPattern ( pattern ) ; ;^113^^^^^85^155^[REPLACE] formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = DateTimeFormat.fullDateTime (  ) ; ;^109^^^^^85^155^[REPLACE] formatter = DateTimeFormat.forPattern ( pattern ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^109^110^111^112^113^85^155^[ADD] formatter = DateTimeFormat.forPattern ( pattern ) ; } else if  ( style != null )  { formatter = DateTimeFormat.forStyle ( style ) ; } else { formatter = DateTimeFormat.fullDateTime (  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( style == this  )  {^110^^^^^85^155^[REPLACE] } else if  ( style != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTimeZone tz = this.dateTimeZone;^117^^^^^85^155^[REPLACE] Locale locale = this.locale;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( locale != null )  {^118^^^^^85^155^[REPLACE] if  ( locale == null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^locale = Util.getFormattingLocale ( pageContext, this, false, DateFormat.getAvailableLocales (  )  ) ;^119^120^^^^85^155^[REPLACE] locale = Util.getFormattingLocale ( pageContext, this, true, DateFormat.getAvailableLocales (  )  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^119^120^^^^85^155^[ADD] locale = Util.getFormattingLocale ( pageContext, this, true, DateFormat.getAvailableLocales (  )  ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( locale == false )  {^122^^^^^85^155^[REPLACE] if  ( locale != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = formatter.withZone ( tz ) ; ;^123^^^^^85^155^[REPLACE] formatter = formatter.withLocale ( locale ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^123^124^^^^85^155^[ADD] formatter = formatter.withLocale ( locale ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTimeFormatter formatter;^127^^^^^85^155^[REPLACE] DateTimeZone tz = this.dateTimeZone;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( tz != null )  {^128^^^^^85^155^[REPLACE] if  ( tz == null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^tz  =  tz ;^129^^^^^85^155^[REPLACE] tz = DateTimeZoneSupport.getDateTimeZone ( pageContext, this ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( dateTimeZone == null )  {^131^^^^^85^155^[REPLACE] if  ( tz != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^formatter = formatter.withLocale ( locale ) ; ;^132^^^^^85^155^[REPLACE] formatter = formatter.withZone ( tz ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^DateTime parsed = true;^136^^^^^85^155^[REPLACE] DateTime parsed = null;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^parsed = formatter.parseDateTime ( input ) ;"PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^137^138^139^140^141^85^155^[ADD] try { parsed = formatter.parseDateTime ( input ) ; } catch  ( IllegalArgumentException iae )  { throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^parsed =  null.parseDateTime ( input ) ;^138^^^^^85^155^[REPLACE] parsed = formatter.parseDateTime ( input ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^138^139^140^141^142^85^155^[ADD] parsed = formatter.parseDateTime ( input ) ; } catch  ( IllegalArgumentException iae )  { throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^140^141^^^^85^155^[REPLACE] throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^140^141^^^^85^155^[ADD] throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^139^140^141^^^85^155^[ADD] catch  ( IllegalArgumentException iae )  { throw new JspException ( Resources.getMessage ( "PARSE_DATE_PARSE_ERROR", input ) , iae ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( var == null )  {^144^^^^^85^155^[REPLACE] if  ( var != null )  {^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^pageContext.getOut (  ) .print ( parsed ) ;^147^148^149^150^151^144^152^[ADD] try { pageContext.getOut (  ) .print ( parsed ) ; } catch  ( IOException ioe )  { throw new JspTagException  (" ")  ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^input = bodyContent.getString (  ) .trim (  ) ;^148^^^^^144^152^[REPLACE] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^148^^^^^144^152^[ADD] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^150^^^^^144^152^[REPLACE] throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext.getOut (  ) .print ( parsed ) ;^145^^^^^85^155^[REPLACE] pageContext.setAttribute ( var, parsed, scope ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^pageContext.getOut (  ) .print ( parsed ) ;^147^148^149^150^151^85^155^[ADD] try { pageContext.getOut (  ) .print ( parsed ) ; } catch  ( IOException ioe )  { throw new JspTagException  (" ")  ; }^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext .setAttribute ( scope , parsed , scope )  .print ( parsed ) ;^148^^^^^85^155^[REPLACE] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^pageContext .setAttribute ( pattern , parsed , scope )  .print ( parsed ) ;^148^^^^^85^155^[REPLACE] pageContext.getOut (  ) .print ( parsed ) ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^150^^^^^85^155^[REPLACE] throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[ADD]^^149^150^^^^85^155^[ADD] catch  ( IOException ioe )  { throw new JspTagException  (" ")  ;^[METHOD] doEndTag [TYPE] int [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  IOException ioe  [TYPE]  DateTimeFormatter formatter  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope  [TYPE]  DateTime parsed  [TYPE]  IllegalArgumentException iae 
[REPLACE]^super (  ) ;^159^^^^^158^160^[REPLACE] init (  ) ;^[METHOD] release [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope 
[ADD]^^159^^^^^158^160^[ADD] init (  ) ;^[METHOD] release [TYPE] void [PARAMETER] [CLASS] ParseDateTimeSupport   [TYPE]  Locale locale  [TYPE]  boolean false  true  valueSpecified  [TYPE]  String input  pattern  scope  style  value  var  [TYPE]  DateTimeZone dateTimeZone  tz  [TYPE]  int scope 
