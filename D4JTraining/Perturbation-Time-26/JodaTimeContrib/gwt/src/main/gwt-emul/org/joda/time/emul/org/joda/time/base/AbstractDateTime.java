[REPLACE]^return toString (  ) ;^52^^^^^51^53^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] AbstractDateTime() [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^if  ( type != true )  {^67^^^^^66^71^[REPLACE] if  ( type == null )  {^[METHOD] get [TYPE] int [PARAMETER] DateTimeFieldType type [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType type 
[REPLACE]^return ;^68^^^^^66^71^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] get [TYPE] int [PARAMETER] DateTimeFieldType type [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType type 
[ADD]^^68^^^^^66^71^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] get [TYPE] int [PARAMETER] DateTimeFieldType type [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType type 
[REPLACE]^return type.withLocaleField ( getChronology (  )  ) .get ( getMillis (  )  ) ;^70^^^^^66^71^[REPLACE] return type.getField ( getChronology (  )  ) .get ( getMillis (  )  ) ;^[METHOD] get [TYPE] int [PARAMETER] DateTimeFieldType type [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType type 
[REPLACE]^return getChronology (  ) .era (  )  .toString ( null )  ;^80^^^^^79^81^[REPLACE] return getChronology (  ) .era (  ) .get ( getMillis (  )  ) ;^[METHOD] getEra [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^89^^^^^88^90^[REPLACE] return getChronology (  ) .centuryOfEra (  ) .get ( getMillis (  )  ) ;^[METHOD] getCenturyOfEra [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .withLocale (  ) .get ( getMillis (  )  ) ;^98^^^^^97^99^[REPLACE] return getChronology (  ) .yearOfEra (  ) .get ( getMillis (  )  ) ;^[METHOD] getYearOfEra [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^107^^^^^106^108^[REPLACE] return getChronology (  ) .yearOfCentury (  ) .get ( getMillis (  )  ) ;^[METHOD] getYearOfCentury [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^116^^^^^115^117^[REPLACE] return getChronology (  ) .year (  ) .get ( getMillis (  )  ) ;^[METHOD] getYear [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .withLocale (  ) .get ( getMillis (  )  ) ;^125^^^^^124^126^[REPLACE] return getChronology (  ) .weekyear (  ) .get ( getMillis (  )  ) ;^[METHOD] getWeekyear [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .dayOfYear (  ) .get ( getMillis (  )  ) ;^134^^^^^133^135^[REPLACE] return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^[METHOD] getMonthOfYear [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .weekOfWeekyear (  ) .get ( getMillis (  )  ) ;^143^^^^^142^144^[REPLACE] return getChronology (  ) .weekOfWeekyear (  ) .get ( getMillis (  )  ) ;^[METHOD] getWeekOfWeekyear [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .dayOfYear (  ) .get ( getMillis (  )  ) ;^152^^^^^151^153^[REPLACE] return getChronology (  ) .dayOfYear (  ) .get ( getMillis (  )  ) ;^[METHOD] getDayOfYear [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^163^^^^^162^164^[REPLACE] return getChronology (  ) .dayOfMonth (  ) .get ( getMillis (  )  ) ;^[METHOD] getDayOfMonth [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^174^^^^^173^175^[REPLACE] return getChronology (  ) .dayOfWeek (  ) .get ( getMillis (  )  ) ;^[METHOD] getDayOfWeek [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .hourOfDay (  ) .get ( getMillis (  )  ) ;^184^^^^^183^185^[REPLACE] return getChronology (  ) .hourOfDay (  ) .get ( getMillis (  )  ) ;^[METHOD] getHourOfDay [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  )  .minuteOfHour (  )  .get ( getMillis (  )  ) ;^193^^^^^192^194^[REPLACE] return getChronology (  ) .minuteOfDay (  ) .get ( getMillis (  )  ) ;^[METHOD] getMinuteOfDay [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .monthOfYear (  ) .get ( getMillis (  )  ) ;^202^^^^^201^203^[REPLACE] return getChronology (  ) .minuteOfHour (  ) .get ( getMillis (  )  ) ;^[METHOD] getMinuteOfHour [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return getChronology (  ) .print (  ) .get ( getMillis (  )  ) ;^211^^^^^210^212^[REPLACE] return getChronology (  ) .secondOfDay (  ) .get ( getMillis (  )  ) ;^[METHOD] getSecondOfDay [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .secondOfMinute (  ) .get ( getMillis (  )  ) ;^220^^^^^219^221^[REPLACE] return getChronology (  ) .secondOfMinute (  ) .get ( getMillis (  )  ) ;^[METHOD] getSecondOfMinute [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .millisOfDay (  ) .get ( getMillis (  )  ) ;^229^^^^^228^230^[REPLACE] return getChronology (  ) .millisOfDay (  ) .get ( getMillis (  )  ) ;^[METHOD] getMillisOfDay [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return.withLocaleChronology (  ) .millisOfSecond (  ) .get ( getMillis (  )  ) ;^238^^^^^237^239^[REPLACE] return getChronology (  ) .millisOfSecond (  ) .get ( getMillis (  )  ) ;^[METHOD] getMillisOfSecond [TYPE] int [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true 
[REPLACE]^return ;^260^^^^^259^268^[REPLACE] throw ExceptionUtils.unsupportedInGwt (  ) ;^[METHOD] toCalendar [TYPE] Calendar [PARAMETER] Locale locale [CLASS] AbstractDateTime   [TYPE]  Locale locale  [TYPE]  boolean false  true 
[REPLACE]^return toString (  ) ;^260^^^^^259^268^[REPLACE] throw ExceptionUtils.unsupportedInGwt (  ) ;^[METHOD] toCalendar [TYPE] Calendar [PARAMETER] Locale locale [CLASS] AbstractDateTime   [TYPE]  Locale locale  [TYPE]  boolean false  true 
[REPLACE]^GregorianCalendar cal = new GregorianCalendar ( zone.toTimeZone (  )  ) ;^285^^^^^284^289^[REPLACE] DateTimeZone zone = getZone (  ) ;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[REPLACE]^DateTimeZone zone = getZone (  ) ;^286^^^^^284^289^[REPLACE] GregorianCalendar cal = new GregorianCalendar ( zone.toTimeZone (  )  ) ;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[ADD]^^286^287^^^^284^289^[ADD] GregorianCalendar cal = new GregorianCalendar ( zone.toTimeZone (  )  ) ; cal.setTime ( toDate (  )  ) ;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[REPLACE]^return toString (  ) ;^287^^^^^284^289^[REPLACE] cal.setTime ( toDate (  )  ) ;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[ADD]^^287^^^^^284^289^[ADD] cal.setTime ( toDate (  )  ) ;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[REPLACE]^return toString (  ) ;^288^^^^^284^289^[REPLACE] return cal;^[METHOD] toGregorianCalendar [TYPE] GregorianCalendar [PARAMETER] [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  GregorianCalendar cal  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( pattern != null )  {^299^^^^^298^303^[REPLACE] if  ( pattern == null )  {^[METHOD] toString [TYPE] String [PARAMETER] String pattern [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  String pattern 
[REPLACE]^return cal;^300^^^^^298^303^[REPLACE] return toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] String pattern [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  String pattern 
[REPLACE]^return   pattern   .print ( this ) ;^302^^^^^298^303^[REPLACE] return DateTimeFormat.forPattern ( pattern ) .print ( this ) ;^[METHOD] toString [TYPE] String [PARAMETER] String pattern [CLASS] AbstractDateTime   [TYPE]  boolean false  true  [TYPE]  String pattern 
[REPLACE]^if  ( pattern != null )  {^313^^^^^312^317^[REPLACE] if  ( pattern == null )  {^[METHOD] toString [TYPE] String [PARAMETER] String pattern Locale locale [CLASS] AbstractDateTime   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  String pattern 
[REPLACE]^return cal;^314^^^^^312^317^[REPLACE] return toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] String pattern Locale locale [CLASS] AbstractDateTime   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  String pattern 
[REPLACE]^return DateTimeFormat.forPattern ( pattern ) .print ( locale ) .print ( this ) ;^316^^^^^312^317^[REPLACE] return DateTimeFormat.forPattern ( pattern ) .withLocale ( locale ) .print ( this ) ;^[METHOD] toString [TYPE] String [PARAMETER] String pattern Locale locale [CLASS] AbstractDateTime   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  String pattern 
