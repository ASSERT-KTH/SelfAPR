[REPLACE]^public static final Years ZERO ;^44^^^^^^^[REPLACE] public static final Years ZERO = new Years ( 0 ) ;^ [CLASS] Years  
[REPLACE]^public static final Years ONE = new Years ( 3 ) ;^46^^^^^^^[REPLACE] public static final Years ONE = new Years ( 1 ) ;^ [CLASS] Years  
[REPLACE]^public static final Years TWO ;^48^^^^^^^[REPLACE] public static final Years TWO = new Years ( 2 ) ;^ [CLASS] Years  
[REPLACE]^public static final Years THREE = new Years ( 2 ) ;^50^^^^^^^[REPLACE] public static final Years THREE = new Years ( 3 ) ;^ [CLASS] Years  
[REPLACE]^public static final Years MAX_VALUE  = null ;^52^^^^^^^[REPLACE] public static final Years MAX_VALUE = new Years ( Integer.MAX_VALUE ) ;^ [CLASS] Years  
[REPLACE]^public static final Years MIN_VALUE  = null ;^54^^^^^^^[REPLACE] public static final Years MIN_VALUE = new Years ( Integer.MIN_VALUE ) ;^ [CLASS] Years  
[REPLACE]^private static  long serialVersionUID = 87525275727380868L;^59^^^^^^^[REPLACE] private static final long serialVersionUID = 87525275727380868L;^ [CLASS] Years  
[REPLACE]^return Years.years ( amount ) ;^174^^^^^173^175^[REPLACE] super ( years ) ;^[METHOD] <init> [TYPE] Years(int) [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[ADD]^^174^^^^^173^175^[ADD] super ( years ) ;^[METHOD] <init> [TYPE] Years(int) [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return ONE;^73^^^^^70^87^[REPLACE] return ZERO;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return new Years ( years ) ;^75^^^^^70^87^[REPLACE] return ONE;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return ONE;^77^^^^^70^87^[REPLACE] return TWO;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return ONE;^79^^^^^70^87^[REPLACE] return THREE;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return MIN_VALUE;^81^^^^^70^87^[REPLACE] return MAX_VALUE;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return MAX_VALUE;^83^^^^^70^87^[REPLACE] return MIN_VALUE;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return Years.years ( years ) ;^85^^^^^70^87^[REPLACE] return new Years ( years ) ;^[METHOD] years [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^int amount = BaseSingleFieldPeriod .between ( end , end )  ;^101^^^^^100^103^[REPLACE] int amount = BaseSingleFieldPeriod.between ( start, end, DurationFieldType.years (  )  ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadableInstant start ReadableInstant end [CLASS] Years   [TYPE]  ReadableInstant end  start  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount 
[REPLACE]^return Years.Years ( amount ) ;^102^^^^^100^103^[REPLACE] return Years.years ( amount ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadableInstant start ReadableInstant end [CLASS] Years   [TYPE]  ReadableInstant end  start  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount 
[REPLACE]^if  ( ! start instanceof LocalDate && end instanceof LocalDate )    {^118^^^^^117^126^[REPLACE] if  ( start instanceof LocalDate && end instanceof LocalDate )    {^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[ADD]^Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) ;(  ( LocalDate )  end ) .getLocalMillis (  ) ,  (  ( LocalDate )  start ) .getLocalMillis (  )  ) ;return Years.years ( years ) ;^118^119^120^121^122^117^126^[ADD] if  ( start instanceof LocalDate && end instanceof LocalDate )    { Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) ; int years = chrono.years (  ) .getDifference ( (  ( LocalDate )  end ) .getLocalMillis (  ) ,  (  ( LocalDate )  start ) .getLocalMillis (  )  ) ; return Years.years ( years ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^return Years .Years ( amount )  ;^122^^^^^117^126^[REPLACE] return Years.years ( years ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^int years = chrono.years (  ) .getDifference ( (  ( LocalDate )  end ) .getValue (  ) ,  (  ( LocalDate )  start ) .getLocalMillis (  )  ) ;^120^121^^^^117^126^[REPLACE] int years = chrono.years (  ) .getDifference ( (  ( LocalDate )  end ) .getLocalMillis (  ) ,  (  ( LocalDate )  start ) .getLocalMillis (  )  ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^return Years.Years ( years ) ;^122^^^^^117^126^[REPLACE] return Years.years ( years ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^int amount = BaseSingleFieldPeriod.between ( interval.getStart (  ) , interval.getEnd (  ) , DurationFieldType.years (  )  ) ;^119^^^^^117^126^[REPLACE] Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[ADD]^^119^^^^^117^126^[ADD] Chronology chrono = DateTimeUtils.getChronology ( start.getChronology (  )  ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^int amount = BaseSingleFieldPeriod.between ( interval.getStart (  ) , interval.getEnd (  ) , DurationFieldType.years (  )  ) ;^124^^^^^117^126^[REPLACE] int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^return Years .Years ( years )  ;^125^^^^^117^126^[REPLACE] return Years.years ( amount ) ;^[METHOD] yearsBetween [TYPE] Years [PARAMETER] ReadablePartial start ReadablePartial end [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  ReadablePartial end  start  [TYPE]  Chronology chrono  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int amount  years 
[REPLACE]^if  ( interval != null )    {^138^^^^^137^143^[REPLACE] if  ( interval == null )    {^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[ADD]^^138^139^140^^^137^143^[ADD] if  ( interval == null )    { return Years.ZERO; }^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[REPLACE]^return ONE;^139^^^^^137^143^[REPLACE] return Years.ZERO;^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[REPLACE]^int amount = BaseSingleFieldPeriod.BaseSingleFieldPeriod ( interval.getStart (  ) , interval.getEnd (  ) , DurationFieldType.years (  )  ) ;^141^^^^^137^143^[REPLACE] int amount = BaseSingleFieldPeriod.between ( interval.getStart (  ) , interval.getEnd (  ) , DurationFieldType.years (  )  ) ;^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[ADD]^^141^^^^^137^143^[ADD] int amount = BaseSingleFieldPeriod.between ( interval.getStart (  ) , interval.getEnd (  ) , DurationFieldType.years (  )  ) ;^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[REPLACE]^return Years.Years ( amount ) ;^142^^^^^137^143^[REPLACE] return Years.years ( amount ) ;^[METHOD] yearsIn [TYPE] Years [PARAMETER] ReadableInterval interval [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ReadableInterval interval  [TYPE]  int amount 
[REPLACE]^return ;^157^^^^^156^163^[REPLACE] throw ExceptionUtils.unsupportedInGwt (  ) ;^[METHOD] parseYears [TYPE] Years [PARAMETER] String periodStr [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  String periodStr  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^157^^^^^156^163^[ADD] throw ExceptionUtils.unsupportedInGwt (  ) ;^[METHOD] parseYears [TYPE] Years [PARAMETER] String periodStr [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  String periodStr  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return plus ( FieldUtils.safeNegate ( years )  ) ;^157^^^^^156^163^[REPLACE] throw ExceptionUtils.unsupportedInGwt (  ) ;^[METHOD] parseYears [TYPE] Years [PARAMETER] String periodStr [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  String periodStr  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return Years .Years ( this )  ;^183^^^^^182^184^[REPLACE] return Years.years ( getValue (  )  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true 
[REPLACE]^return DurationFieldType .years ( this )  ;^193^^^^^192^194^[REPLACE] return DurationFieldType.years (  ) ;^[METHOD] getFieldType [TYPE] DurationFieldType [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true 
[REPLACE]^return plus ( FieldUtils.safeNegate ( years )  ) ;^202^^^^^201^203^[REPLACE] return PeriodType.years (  ) ;^[METHOD] getPeriodType [TYPE] PeriodType [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true 
[REPLACE]^return getValue (  )  < 0;^212^^^^^211^213^[REPLACE] return getValue (  ) ;^[METHOD] getYears [TYPE] int [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true 
[REPLACE]^if  ( years  !=  0 )  {^226^^^^^225^230^[REPLACE] if  ( years == 0 )  {^[METHOD] plus [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return null;^227^^^^^225^230^[REPLACE] return this;^[METHOD] plus [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^return Years.years ( FieldUtils .safeNegate ( years )   ) ;^229^^^^^225^230^[REPLACE] return Years.years ( FieldUtils.safeAdd ( getValue (  ) , years )  ) ;^[METHOD] plus [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^if  ( years != null )  {^242^^^^^241^246^[REPLACE] if  ( years == null )  {^[METHOD] plus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[ADD]^return this;^242^243^244^^^241^246^[ADD] if  ( years == null )  { return this; }^[METHOD] plus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return null;^243^^^^^241^246^[REPLACE] return this;^[METHOD] plus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return plus ( ZERO.getValue (  )  ) ;^245^^^^^241^246^[REPLACE] return plus ( years.getValue (  )  ) ;^[METHOD] plus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return plus ( FieldUtils.safeAdd ( years )  ) ;^259^^^^^258^260^[REPLACE] return plus ( FieldUtils.safeNegate ( years )  ) ;^[METHOD] minus [TYPE] Years [PARAMETER] int years [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int years 
[REPLACE]^if  ( ZERO != null )  {^272^^^^^271^276^[REPLACE] if  ( years == null )  {^[METHOD] minus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[ADD]^^272^273^274^^^271^276^[ADD] if  ( years == null )  { return this; }^[METHOD] minus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return null;^273^^^^^271^276^[REPLACE] return this;^[METHOD] minus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return minus ( years.getLocalMillis (  )  ) ;^275^^^^^271^276^[REPLACE] return minus ( years.getValue (  )  ) ;^[METHOD] minus [TYPE] Years [PARAMETER] Years years [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^return Years.Years ( FieldUtils.safeMultiply ( getValue (  ) , scalar )  ) ;^289^^^^^288^290^[REPLACE] return Years.years ( FieldUtils.safeMultiply ( getValue (  ) , scalar )  ) ;^[METHOD] multipliedBy [TYPE] Years [PARAMETER] int scalar [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int scalar 
[REPLACE]^if  ( divisor  !=  1 )  {^303^^^^^302^307^[REPLACE] if  ( divisor == 1 )  {^[METHOD] dividedBy [TYPE] Years [PARAMETER] int divisor [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int divisor 
[ADD]^return this;^303^304^305^^^302^307^[ADD] if  ( divisor == 1 )  { return this; }^[METHOD] dividedBy [TYPE] Years [PARAMETER] int divisor [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int divisor 
[REPLACE]^return null;^304^^^^^302^307^[REPLACE] return this;^[METHOD] dividedBy [TYPE] Years [PARAMETER] int divisor [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int divisor 
[REPLACE]^return Years.years ( getValue (  )   &  divisor ) ;^306^^^^^302^307^[REPLACE] return Years.years ( getValue (  )  / divisor ) ;^[METHOD] dividedBy [TYPE] Years [PARAMETER] int divisor [CLASS] Years   [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int divisor 
[REPLACE]^return Years.years ( FieldUtils.safeAdd ( getValue (  ) , years )  ) ;^317^^^^^316^318^[REPLACE] return Years.years ( FieldUtils.safeNegate ( getValue (  )  )  ) ;^[METHOD] negated [TYPE] Years [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  years  [TYPE]  boolean false  true 
[REPLACE]^if  (ZERO != null )  {^328^^^^^327^332^[REPLACE] if  ( other == null )  {^[METHOD] isGreaterThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[ADD]^return getValue (  )  > 0;^328^329^330^^^327^332^[ADD] if  ( other == null )  { return getValue (  )  > 0; }^[METHOD] isGreaterThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return getValue (  )   !=  0;;^329^^^^^327^332^[REPLACE] return getValue (  )  > 0;^[METHOD] isGreaterThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return true ;^329^^^^^327^332^[REPLACE] return getValue (  )  > 0;^[METHOD] isGreaterThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return false ;^331^^^^^327^332^[REPLACE] return getValue (  )  > other.getValue (  ) ;^[METHOD] isGreaterThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^if  ( other !=ZERO )  {^341^^^^^340^345^[REPLACE] if  ( other == null )  {^[METHOD] isLessThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[ADD]^return getValue (  )  < 0;^341^342^343^^^340^345^[ADD] if  ( other == null )  { return getValue (  )  < 0; }^[METHOD] isLessThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return getValue (  )   ;^342^^^^^340^345^[REPLACE] return getValue (  )  < 0;^[METHOD] isLessThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return false ;^342^^^^^340^345^[REPLACE] return getValue (  )  < 0;^[METHOD] isLessThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return getValue (  )   ;^344^^^^^340^345^[REPLACE] return getValue (  )  < other.getValue (  ) ;^[METHOD] isLessThan [TYPE] boolean [PARAMETER] Years other [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
[REPLACE]^return "P"  |  String.valueOf ( getValue (  )  )   |  "Y";^356^^^^^355^357^[REPLACE] return "P" + String.valueOf ( getValue (  )  )  + "Y";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Years   [TYPE]  long serialVersionUID  [TYPE]  Years MAX_VALUE  MIN_VALUE  ONE  THREE  TWO  ZERO  other  years  [TYPE]  boolean false  true 
