[REPLACE]^private static final long serialVersionUID ;^91^^^^^^^[REPLACE] private static final long serialVersionUID = 5546345482340108586L;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^public static final DateTimeZone UTC  = null ;^94^^^^^^^[REPLACE] public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  Set cAvailableIDs;^101^^^^^^^[REPLACE] private static Set cAvailableIDs;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private  DateTimeZone cDefault;^103^^^^^^^[REPLACE] private static DateTimeZone cDefault;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private final  char  iID;^668^^^^^^^[REPLACE] private final String iID;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private static final  short  serialVersionUID = -6471952376487863581L;^1176^^^^^^^[REPLACE] private static final long serialVersionUID = -6471952376487863581L;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^private transient  int  iID;^1178^^^^^^^[REPLACE] private transient String iID;^ [CLASS] DateTimeZone 1 Stub  
[REPLACE]^if  ( id != null )  {^677^^^^^676^681^[REPLACE] if  ( id == null )  {^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[REPLACE]^return ;^678^^^^^676^681^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[ADD]^^678^^^^^676^681^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[REPLACE]^iID =  null;^680^^^^^676^681^[REPLACE] iID = id;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[ADD]^^680^^^^^676^681^[ADD] iID = id;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[REPLACE]^iID =  null;^1185^^^^^1184^1186^[REPLACE] iID = id;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[REPLACE]^return buf.toString (  ) ;^142^^^^^141^143^[REPLACE] return cDefault;^[METHOD] getDefault [TYPE] DateTimeZone [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone != this )  {^157^^^^^152^161^[REPLACE] if  ( zone == null )  {^[METHOD] setDefault [TYPE] void [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  Provider cProvider 
[REPLACE]^return ;^158^^^^^152^161^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setDefault [TYPE] void [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  Provider cProvider 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^158^^^^^152^161^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setDefault [TYPE] void [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  Provider cProvider 
[ADD]^^158^^^^^152^161^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setDefault [TYPE] void [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  Provider cProvider 
[REPLACE]^cDefault =  null;^160^^^^^152^161^[REPLACE] cDefault = zone;^[METHOD] setDefault [TYPE] void [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  Provider cProvider 
[REPLACE]^if  ( id != null )  {^180^^^^^179^200^[REPLACE] if  ( id == null )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^181^^^^^179^200^[REPLACE] return getDefault (  ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( id.startsWith ( "UTC" )  )  {^183^^^^^179^200^[REPLACE] if  ( id.equals ( "UTC" )  )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^184^^^^^179^200^[REPLACE] return DateTimeZone.UTC;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^DateTimeZone zone = cProvider.getZone ( iID ) ;^186^^^^^179^200^[REPLACE] DateTimeZone zone = cProvider.getZone ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^186^^^^^179^200^[ADD] DateTimeZone zone = cProvider.getZone ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone == null )  {^187^^^^^179^200^[REPLACE] if  ( zone != null )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^return zone;^187^188^189^^^179^200^[ADD] if  ( zone != null )  { return zone; }^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^188^^^^^179^200^[REPLACE] return zone;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( id.startsWith ( "+" )  ) {^190^^^^^179^200^[REPLACE] if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  !=  0L )  {^192^^^^^179^200^[REPLACE] if  ( offset == 0L )  {^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = printOffset ( offset ) ; ;^195^^^^^179^200^[REPLACE] id = printOffset ( offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( iID, offset ) ;^196^^^^^179^200^[REPLACE] return fixedOffsetZone ( id, offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^193^^^^^179^200^[REPLACE] return DateTimeZone.UTC;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^195^^^^^179^200^[ADD] id = printOffset ( offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( id, millisOffset ) ;^196^^^^^179^200^[REPLACE] return fixedOffsetZone ( id, offset ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = parseOffset ( iID ) ;^191^^^^^179^200^[REPLACE] int offset = parseOffset ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^191^^^^^179^200^[ADD] int offset = parseOffset ( id ) ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return ;^199^^^^^179^200^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^199^^^^^179^200^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] forID [TYPE] DateTimeZone [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return forOffsetHoursMinutes ( hoursOffset, 0 << 1 ) ;^213^^^^^212^214^[REPLACE] return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[METHOD] forOffsetHours [TYPE] DateTimeZone [PARAMETER] int hoursOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursOffset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset == 0 ||true )  {^230^^^^^229^249^[REPLACE] if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^230^231^232^^^229^249^[ADD] if  ( hoursOffset == 0 && minutesOffset == 0 )  { return DateTimeZone.UTC; }^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^231^^^^^229^249^[REPLACE] return DateTimeZone.UTC;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( minutesOffset < 0 && minutesOffset > 59 )  {^233^^^^^229^249^[REPLACE] if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^233^234^235^^^229^249^[ADD] if  ( minutesOffset < 0 || minutesOffset > 59 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return ;^234^^^^^229^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^234^^^^^229^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^234^^^^^229^249^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = 3;^236^^^^^229^249^[REPLACE] int offset = 0;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^236^^^^^229^249^[ADD] int offset = 0;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  >=  4 )  {^239^^^^^229^249^[REPLACE] if  ( hoursInMinutes < 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; ;^242^^^^^229^249^[REPLACE] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ; ;^240^^^^^229^249^[REPLACE] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^237^238^239^240^241^229^249^[ADD] try { int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ; if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( hoursInMinutes  >  0 )  {^239^^^^^229^249^[REPLACE] if  ( hoursInMinutes < 0 )  {^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^239^240^241^242^243^229^249^[ADD] if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ; }^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^240^^^^^229^249^[ADD] minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^offset =  FieldUtils.safeMultiply ( hoursOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^244^^^^^229^249^[REPLACE] offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int hoursInMinutes = FieldUtils.safeAdd ( hoursOffset, 59 ) ;^238^^^^^229^249^[REPLACE] int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[ADD]^^238^^^^^229^249^[ADD] int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^int hoursInMinutes = FieldUtils.safeAdd ( hoursOffset, 14 ) ;^238^^^^^229^249^[REPLACE] int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return ;^246^^^^^229^249^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^return forOffsetMillis ( minutesOffset ) ;^248^^^^^229^249^[REPLACE] return forOffsetMillis ( offset ) ;^[METHOD] forOffsetHoursMinutes [TYPE] DateTimeZone [PARAMETER] int hoursOffset int minutesOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  ArithmeticException ex  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int hoursInMinutes  hoursOffset  minutesOffset  offset  [TYPE]  Provider cProvider 
[REPLACE]^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^258^^^^^257^260^[REPLACE] String id = printOffset ( millisOffset ) ;^[METHOD] forOffsetMillis [TYPE] DateTimeZone [PARAMETER] int millisOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int millisOffset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( iID, millisOffset ) ;^259^^^^^257^260^[REPLACE] return fixedOffsetZone ( id, millisOffset ) ;^[METHOD] forOffsetMillis [TYPE] DateTimeZone [PARAMETER] int millisOffset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  zone  [TYPE]  int millisOffset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone != null )  {^278^^^^^277^315^[REPLACE] if  ( zone == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^279^^^^^277^315^[REPLACE] return getDefault (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^final String id = zone.getDisplayName (  ) ;^281^^^^^277^315^[REPLACE] final String id = zone.getID (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( !ids.contains ( "UTC" )  )  {^282^^^^^277^315^[REPLACE] if  ( id.equals ( "UTC" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^283^^^^^277^315^[REPLACE] return DateTimeZone.UTC;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^DateTimeZone dtz = this;^287^^^^^277^315^[REPLACE] DateTimeZone dtz = null;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^String convId = getConvertedId ( iID ) ;^288^^^^^277^315^[REPLACE] String convId = getConvertedId ( id ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( convId == false )  {^289^^^^^277^315^[REPLACE] if  ( convId != null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^289^290^291^^^277^315^[ADD] if  ( convId != null )  { dtz = cProvider.getZone ( convId ) ; }^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^dtz = cProvider.getZone ( id ) ; ;^290^^^^^277^315^[REPLACE] dtz = cProvider.getZone ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^290^^^^^277^315^[ADD] dtz = cProvider.getZone ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( dtz != null )  {^292^^^^^277^315^[REPLACE] if  ( dtz == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^dtz = cProvider.getZone ( convId ) ; ;^293^^^^^277^315^[REPLACE] dtz = cProvider.getZone ( id ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( dtz == null )  {^295^^^^^277^315^[REPLACE] if  ( dtz != null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^296^^^^^277^315^[REPLACE] return dtz;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( convId != this )  {^300^^^^^277^315^[REPLACE] if  ( convId == null )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( convId.startsWith ( "GMT+" )  ) {^302^^^^^277^315^[REPLACE] if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  ||  0 )  {^305^^^^^277^315^[REPLACE] if  ( offset == 0L )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^id = printOffset ( offset ) ; ;^308^^^^^305^310^[REPLACE] convId = printOffset ( offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^return fixedOffsetZone ( convId, offset ) ;^308^309^^^^305^310^[ADD] convId = printOffset ( offset ) ; return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( id, offset ) ;^309^^^^^305^310^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^306^^^^^277^315^[REPLACE] return DateTimeZone.UTC;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = convId.substring ( 4 ) ;^303^^^^^277^315^[REPLACE] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^int offset = parseOffset ( convId ) ;^303^304^^^^277^315^[ADD] convId = convId.substring ( 3 ) ; int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^id = printOffset ( offset ) ; ;^308^^^^^277^315^[REPLACE] convId = printOffset ( offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return fixedOffsetZone ( id, offset ) ;^309^^^^^277^315^[REPLACE] return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^int offset = parseOffset ( id ) ;^304^^^^^277^315^[REPLACE] int offset = parseOffset ( convId ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId =  null.getDisplayName (  ) ;^301^^^^^277^315^[REPLACE] convId = zone.getDisplayName (  ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( convId.equals ( "GMT+" )  && convId.startsWith ( "GMT-" )  )  {^302^^^^^277^315^[REPLACE] if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  &&  0L )  {^305^^^^^277^315^[REPLACE] if  ( offset == 0L )  {^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^return DateTimeZone.UTC;convId = printOffset ( offset ) ;return fixedOffsetZone ( convId, offset ) ;^305^306^307^308^309^277^315^[ADD] if  ( offset == 0L )  { return DateTimeZone.UTC; } else { convId = printOffset ( offset ) ; return fixedOffsetZone ( convId, offset ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^303^^^^^277^315^[ADD] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^convId = convId.substring ( 3 * 1 ) ;^303^^^^^277^315^[REPLACE] convId = convId.substring ( 3 ) ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return ;^314^^^^^277^315^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] forTimeZone [TYPE] DateTimeZone [PARAMETER] TimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  TimeZone zone  [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( offset  !=  2 )  {^326^^^^^325^348^[REPLACE] if  ( offset == 0 )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^327^^^^^325^348^[REPLACE] return DateTimeZone.UTC;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( iFixedOffsetCache != null )  {^329^^^^^325^348^[REPLACE] if  ( iFixedOffsetCache == null )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^iFixedOffsetCache  =  iFixedOffsetCache ;^330^^^^^325^348^[REPLACE] iFixedOffsetCache = new HashMap (  ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^iFixedOffsetCache  = null ;^330^^^^^325^348^[REPLACE] iFixedOffsetCache = new HashMap (  ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^DateTimeZone zone =  ( DateTimeZone )  iFixedOffsetCache.get ( iID ) ;^342^^^^^325^348^[REPLACE] DateTimeZone zone =  ( DateTimeZone )  iFixedOffsetCache.get ( id ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^^342^^^^^325^348^[ADD] DateTimeZone zone =  ( DateTimeZone )  iFixedOffsetCache.get ( id ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^if  ( zone != null )  {^343^^^^^325^348^[REPLACE] if  ( zone == null )  {^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^zone = new FixedDateTimeZone ( id, false, offset, offset ) ;^344^^^^^325^348^[REPLACE] zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^zone = new FixedDateTimeZone ( id, true, offset, offset ) ;^344^^^^^325^348^[REPLACE] zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[ADD]^iFixedOffsetCache.put ( id, zone ) ;^344^345^^^^325^348^[ADD] zone = new FixedDateTimeZone ( id, null, offset, offset ) ; iFixedOffsetCache.put ( id, zone ) ;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^347^^^^^325^348^[REPLACE] return zone;^[METHOD] fixedOffsetZone [TYPE] DateTimeZone [PARAMETER] String id int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider 
[REPLACE]^return cDefault;^356^^^^^355^357^[REPLACE] return cAvailableIDs;^[METHOD] getAvailableIDs [TYPE] Set [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider 
[REPLACE]^return provider;^369^^^^^368^370^[REPLACE] return cProvider;^[METHOD] getProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider 
[REPLACE]^setProvider0 ( cProvider ) ;^387^^^^^382^388^[REPLACE] setProvider0 ( provider ) ;^[METHOD] setProvider [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( cProvider != null )  {^397^^^^^396^413^[REPLACE] if  ( provider == null )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^nameProvider = getDefaultNameProvider (  ) ; ;^398^^^^^396^413^[REPLACE] provider = getDefaultProvider (  ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^398^^^^^396^413^[ADD] provider = getDefaultProvider (  ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^Set ids = cProvider.getAvailableIDs (  ) ;^400^^^^^396^413^[REPLACE] Set ids = provider.getAvailableIDs (  ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( ids == null || ids.size (  )  /  0.5  == 0 )  {^401^^^^^396^413^[REPLACE] if  ( ids == null || ids.size (  )  == 0 )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^402^403^^^^396^413^[REPLACE] throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^402^403^^^^396^413^[ADD] throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( !ids .size (  )   )  {^405^^^^^396^413^[REPLACE] if  ( !ids.contains ( "UTC" )  )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^406^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^406^^^^^396^413^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^406^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( !UTC.equals ( cProvider.getZone ( "UTC" )  )  )  {^408^^^^^396^413^[REPLACE] if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^409^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^409^^^^^396^413^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^409^^^^^396^413^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cNameProvider = nameProvider; ;^411^^^^^396^413^[REPLACE] cProvider = provider;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cAvailableIDs =  null;^412^^^^^396^413^[REPLACE] cAvailableIDs = ids;^[METHOD] setProvider0 [TYPE] void [PARAMETER] Provider provider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^Provider provider = true;^425^^^^^424^456^[REPLACE] Provider provider = null;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( provider != null )  {^451^^^^^424^456^[REPLACE] if  ( provider == null )  {^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^provider = getDefaultProvider (  ) ; ;^452^^^^^424^456^[REPLACE] provider = new UTCProvider (  ) ;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^452^^^^^424^456^[ADD] provider = new UTCProvider (  ) ;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cProvider;^455^^^^^424^456^[REPLACE] return provider;^[METHOD] getDefaultProvider [TYPE] Provider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cProvider;^468^^^^^467^469^[REPLACE] return cNameProvider;^[METHOD] getNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^setNameProvider0 ( cNameProvider ) ;^486^^^^^481^487^[REPLACE] setNameProvider0 ( nameProvider ) ;^[METHOD] setNameProvider [TYPE] void [PARAMETER] NameProvider nameProvider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nameProvider != null )  {^496^^^^^495^500^[REPLACE] if  ( nameProvider == null )  {^[METHOD] setNameProvider0 [TYPE] void [PARAMETER] NameProvider nameProvider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^provider = getDefaultProvider (  ) ; ;^497^^^^^495^500^[REPLACE] nameProvider = getDefaultNameProvider (  ) ;^[METHOD] setNameProvider0 [TYPE] void [PARAMETER] NameProvider nameProvider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cProvider = provider; ;^499^^^^^495^500^[REPLACE] cNameProvider = nameProvider;^[METHOD] setNameProvider0 [TYPE] void [PARAMETER] NameProvider nameProvider [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^NameProvider nameProvider = this;^511^^^^^510^531^[REPLACE] NameProvider nameProvider = null;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (cNameProvider != true )  {^526^^^^^510^531^[REPLACE] if  ( nameProvider == null )  {^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^nameProvider = getDefaultNameProvider (  ) ; ;^527^^^^^510^531^[REPLACE] nameProvider = new DefaultNameProvider (  ) ;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^527^^^^^510^531^[ADD] nameProvider = new DefaultNameProvider (  ) ;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cNameProvider;^530^^^^^510^531^[REPLACE] return nameProvider;^[METHOD] getDefaultNameProvider [TYPE] NameProvider [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^541^^^^^540^580^[REPLACE] Map map = cZoneIdConversion;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( map != null )  {^542^^^^^540^580^[REPLACE] if  ( map == null )  {^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^542^543^544^545^546^540^580^[ADD] if  ( map == null )  {  map = new HashMap (  ) ; map.put ( "GMT", "UTC" ) ; map.put ( "MIT", "Pacific/Apia" ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^map ;^544^^^^^540^580^[REPLACE] map = new HashMap (  ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cZoneIdConversion =  null;^577^^^^^540^580^[REPLACE] cZoneIdConversion = map;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cZoneIdConversion =  iFixedOffsetCache;^577^^^^^540^580^[REPLACE] cZoneIdConversion = map;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return  ( String )  map.get ( iID ) ;^579^^^^^540^580^[REPLACE] return  ( String )  map.get ( id ) ;^[METHOD] getConvertedId [TYPE] String [PARAMETER] String id [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^583^^^^^582^606^[REPLACE] Chronology chrono;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^583^^^^^582^606^[ADD] Chronology chrono;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (dtz == null )  {^584^^^^^582^606^[REPLACE] if  ( cDefault != null )  {^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono ;^589^^^^^582^606^[REPLACE] chrono = new BaseChronology (  )  {^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return false;^591^^^^^582^606^[REPLACE] return null;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^594^^^^^582^606^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^597^^^^^582^606^[REPLACE] return this;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^600^^^^^582^606^[REPLACE] return getClass (  ) .getName (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono ;^585^^^^^582^606^[REPLACE] chrono = ISOChronology.getInstanceUTC (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^chrono  =  chrono ;^585^^^^^582^606^[REPLACE] chrono = ISOChronology.getInstanceUTC (  ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^589^590^591^^^582^606^[ADD] chrono = new BaseChronology (  )  { public DateTimeZone getZone (  )  { return null;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .toFormatter ( str ) ;^605^^^^^582^606^[REPLACE] return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[METHOD] parseOffset [TYPE] int [PARAMETER] String str [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  Chronology chrono  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return this;^591^^^^^590^592^[REPLACE] return null;^[METHOD] getZone [TYPE] DateTimeZone [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^594^^^^^593^595^[REPLACE] return this;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return null;^597^^^^^596^598^[REPLACE] return this;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getClass (  )  .getName ( serialVersionUID , true )  ;^600^^^^^599^601^[REPLACE] return getClass (  ) .getName (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^String convId = getConvertedId ( id ) ;^618^^^^^617^649^[REPLACE] StringBuffer buf = new StringBuffer (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^618^^^^^617^649^[ADD] StringBuffer buf = new StringBuffer (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( minutes  <  0 )  {^619^^^^^617^649^[REPLACE] if  ( offset >= 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset = offsetLocal; ;^623^^^^^619^624^[REPLACE] offset = -offset;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '-' ) ;^620^^^^^617^649^[REPLACE] buf.append ( '+' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REMOVE]^buf.append ( '-' ) ;^620^^^^^617^649^[REMOVE] ^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset = offsetLocal; ;^623^^^^^617^649^[REPLACE] offset = -offset;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^int hours = offset  ;^626^^^^^617^649^[REPLACE] int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^626^^^^^617^649^[ADD] int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, hours, 4 ) ;^627^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= hours  ;^628^^^^^617^649^[REPLACE] offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^int minutes = offset  ;^630^^^^^617^649^[REPLACE] int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^630^^^^^617^649^[ADD] int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '+' ) ;^631^^^^^617^649^[REPLACE] buf.append ( ':' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, minutes, 1 ) ;^632^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND; ;^633^^^^^617^649^[REPLACE] offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[ADD]^^633^^^^^617^649^[ADD] offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offset  &&  0 )  {^634^^^^^617^649^[REPLACE] if  ( offset == 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf .StringBuffer (  )  ;^635^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^int seconds = minutes  ;^638^^^^^617^649^[REPLACE] int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '+' ) ;^639^^^^^617^649^[REPLACE] buf.append ( ':' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, minutes, 2 / 4 ) ;^640^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset -= seconds  ;^641^^^^^617^649^[REPLACE] offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offset  ||  0 )  {^642^^^^^617^649^[REPLACE] if  ( offset == 0 )  {^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.StringBuffer (  ) ;^643^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf .StringBuffer (  )  ;^643^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '+' ) ;^646^^^^^617^649^[REPLACE] buf.append ( '.' ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^FormatUtils.appendPaddedInteger ( buf, offset, 3 * 0 ) ;^647^^^^^617^649^[REPLACE] FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.StringBuffer (  ) ;^648^^^^^617^649^[REPLACE] return buf.toString (  ) ;^[METHOD] printOffset [TYPE] String [PARAMETER] int offset [CLASS] DateTimeZone 1 Stub   [TYPE]  StringBuffer buf  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int hours  minutes  offset  seconds  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( cOffsetFormatter != true )  {^657^^^^^656^663^[REPLACE] if  ( cOffsetFormatter == null )  {^[METHOD] offsetFormatter [TYPE] DateTimeFormatter [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( this, true, 2, 4 ) .toFormatter (  ) ;^658^659^660^^^656^663^[REPLACE] cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[METHOD] offsetFormatter [TYPE] DateTimeFormatter [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^662^^^^^656^663^[REPLACE] return cOffsetFormatter;^[METHOD] offsetFormatter [TYPE] DateTimeFormatter [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^692^^^^^691^693^[REPLACE] return iID;^[METHOD] getID [TYPE] String [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getShortName ( serialVersionUID, false ) ;^715^^^^^714^716^[REPLACE] return getShortName ( instant, null ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( locale != null )  {^730^^^^^729^742^[REPLACE] if  ( locale == null )  {^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^locale  =  locale ;^731^^^^^729^742^[REPLACE] locale = Locale.getDefault (  ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^locale ;^731^^^^^729^742^[REPLACE] locale = Locale.getDefault (  ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^String nameKey = getNameKey ( serialVersionUID ) ;^733^^^^^729^742^[REPLACE] String nameKey = getNameKey ( instant ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nameKey != false )  {^734^^^^^729^742^[REPLACE] if  ( nameKey == null )  {^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^735^^^^^729^742^[REPLACE] return iID;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^String name = cNameProvider .getShortName ( serialVersionUID , locale )  ;^737^^^^^729^742^[REPLACE] String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^737^^^^^729^742^[ADD] String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( name == null )  {^738^^^^^729^742^[REPLACE] if  ( name != null )  {^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^739^^^^^729^742^[REPLACE] return name;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return nameKey;^739^^^^^729^742^[REPLACE] return name;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.toString (  ) ;^741^^^^^729^742^[REPLACE] return printOffset ( getOffset ( instant )  ) ;^[METHOD] getShortName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getName ( serialVersionUID, this ) ;^755^^^^^754^756^[REPLACE] return getName ( instant, null ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( locale != this  )  {^770^^^^^769^782^[REPLACE] if  ( locale == null )  {^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^locale ;^771^^^^^769^782^[REPLACE] locale = Locale.getDefault (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^locale  =  locale ;^771^^^^^769^782^[REPLACE] locale = Locale.getDefault (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^String nameKey = getNameKey ( serialVersionUID ) ;^773^^^^^769^782^[REPLACE] String nameKey = getNameKey ( instant ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^773^^^^^769^782^[ADD] String nameKey = getNameKey ( instant ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( name != null )  {^774^^^^^769^782^[REPLACE] if  ( nameKey == null )  {^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^775^^^^^769^782^[REPLACE] return iID;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^777^^^^^769^782^[REPLACE] String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nameKey ==nameKey )  {^778^^^^^769^782^[REPLACE] if  ( name != null )  {^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^778^779^780^^^769^782^[ADD] if  ( name != null )  { return name; }^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return nameKey;^779^^^^^769^782^[REPLACE] return name;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return printOffset ( getOffset ( serialVersionUID )  ) ;^781^^^^^769^782^[REPLACE] return printOffset ( getOffset ( instant )  ) ;^[METHOD] getName [TYPE] String [PARAMETER] long instant Locale locale [CLASS] DateTimeZone 1 Stub   [TYPE]  Locale locale  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( instant != null )  {^799^^^^^798^803^[REPLACE] if  ( instant == null )  {^[METHOD] getOffset [TYPE] int [PARAMETER] ReadableInstant instant [CLASS] DateTimeZone 1 Stub   [TYPE]  ReadableInstant instant  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[ADD]^return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ;^799^800^801^^^798^803^[ADD] if  ( instant == null )  { return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ; }^[METHOD] getOffset [TYPE] int [PARAMETER] ReadableInstant instant [CLASS] DateTimeZone 1 Stub   [TYPE]  ReadableInstant instant  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.toString (  ) ;^800^^^^^798^803^[REPLACE] return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ;^[METHOD] getOffset [TYPE] int [PARAMETER] ReadableInstant instant [CLASS] DateTimeZone 1 Stub   [TYPE]  ReadableInstant instant  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return buf.toString (  ) ;^802^^^^^798^803^[REPLACE] return getOffset ( instant.getMillis (  )  ) ;^[METHOD] getOffset [TYPE] int [PARAMETER] ReadableInstant instant [CLASS] DateTimeZone 1 Stub   [TYPE]  ReadableInstant instant  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return getOffset ( instant )   !=  getStandardOffset ( instant ) ;;^830^^^^^829^831^[REPLACE] return getOffset ( instant )  == getStandardOffset ( instant ) ;^[METHOD] isStandardOffset [TYPE] boolean [PARAMETER] long instant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offsetLocal = getOffset ( serialVersionUID ) ;^865^^^^^863^884^[REPLACE] int offsetLocal = getOffset ( instantLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offsetAdjusted = getOffset (nextLocal - offsetLocal ) ;^867^^^^^863^884^[REPLACE] int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offsetLocal  ==  offsetAdjusted )  {^869^^^^^863^884^[REPLACE] if  ( offsetLocal != offsetAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  ( offsetLocal - offsetAdjusted )   >  1 )  {^872^^^^^863^884^[REPLACE] if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  ==  nextAdjusted )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^879^^^^^863^884^[REPLACE] return offsetLocal;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  ==  offsetAdjusted ) ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition ( instantLocal -serialVersionUID ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( serialVersionUID  ==  serialVersionUID )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return offsetAdjusted;^879^^^^^863^884^[REPLACE] return offsetLocal;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition (serialVersionUID - offsetLocal ) ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (serialVersionUID - offsetAdjusted ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  ( offsetLocal - offsetLocal )   > offsetLocal )  {^872^^^^^863^884^[REPLACE] if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( serialVersionUID - offsetAdjusted ) ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^876^877^^^^863^884^[ADD] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition ( serialVersionUID - offsetLocal ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( serialVersionUID  ==  nextAdjusted )  {^878^^^^^863^884^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  <=  offsetLocal ) ;^876^^^^^863^884^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition ( instantLocal  !=  offsetLocal ) ;^877^^^^^863^884^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return offsetLocal;^883^^^^^863^884^[REPLACE] return offsetAdjusted;^[METHOD] getOffsetFromLocal [TYPE] int [PARAMETER] long instantLocal [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offsetAdjusted  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offset = getOffset ( serialVersionUID ) ;^897^^^^^896^904^[REPLACE] int offset = getOffset ( instantUTC ) ;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[ADD]^long instantLocal = instantUTC + offset;^897^898^^^^896^904^[ADD] int offset = getOffset ( instantUTC ) ; long instantLocal = instantUTC + offset;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[REPLACE]^long instantLocal = serialVersionUID + offset;^898^^^^^896^904^[REPLACE] long instantLocal = instantUTC + offset;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[ADD]^^898^^^^^896^904^[ADD] long instantLocal = instantUTC + offset;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  ( instantUTC ^ instantLocal )  < 0 ||  ( instantUTC ^ offset )  >= 0 )  {^900^^^^^896^904^[REPLACE] if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[ADD]^^900^901^902^^^896^904^[ADD] if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^901^^^^^896^904^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[REPLACE]^return serialVersionUID;^903^^^^^896^904^[REPLACE] return instantLocal;^[METHOD] convertUTCToLocal [TYPE] long [PARAMETER] long instantUTC [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offsetLocal = getOffset ( serialVersionUID ) ;^920^^^^^918^955^[REPLACE] int offsetLocal = getOffset ( instantLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^920^^^^^918^955^[ADD] int offsetLocal = getOffset ( instantLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^int offset = getOffset (serialVersionUID - offsetLocal ) ;^922^^^^^918^955^[REPLACE] int offset = getOffset ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( offsetLocal  ==  offset )  {^924^^^^^918^955^[REPLACE] if  ( offsetLocal != offset )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( true )  {^928^^^^^918^955^[REPLACE] if  ( strict || offsetLocal < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  ==  nextAdjusted )  {^932^^^^^918^955^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( newZone == this )  {^934^^^^^918^955^[REPLACE] if  ( strict )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset = -offset; ;^943^^^^^934^944^[REPLACE] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + ;^936^937^938^^^918^955^[REPLACE] throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( convId )   + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^937^938^939^^^918^955^[ADD] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ; } else {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^"yyyy-MM-dd'T'HH:mm:ss.SSS"   .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return 57 + getID (  ) .hashCode (  ) ;^938^^^^^918^955^[REPLACE] "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^offset = -offset; ;^943^^^^^918^955^[REPLACE] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^936^937^938^^^918^955^[REPLACE] throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^934^935^936^937^938^918^955^[ADD] if  ( strict )  {  throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^943^^^^^934^944^[ADD] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^943^^^^^918^955^[ADD] offset = offsetLocal;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  ||  offsetLocal ) ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (serialVersionUID - offset ) ;^931^^^^^918^955^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^936^937^938^^^918^955^[ADD] throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( nextLocal  == serialVersionUID )  {^932^^^^^918^955^[REPLACE] if  ( nextLocal != nextAdjusted )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^932^933^934^^936^918^955^[ADD] if  ( nextLocal != nextAdjusted )  {  if  ( strict )  { throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " +^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .parseMillis ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^"yyyy-MM-dd'T'HH:mm:ss.SSS"   .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^938^^^^^918^955^[ADD] "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal  ==  offsetLocal ) ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^930^931^^^^918^955^[ADD] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition ( instantLocal  ^  offset ) ;^931^^^^^918^955^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( strict && offsetLocal < 0L )  {^928^^^^^918^955^[REPLACE] if  ( strict || offsetLocal < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[ADD]^^928^929^930^931^^918^955^[ADD] if  ( strict || offsetLocal < 0 )  {  long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( true )  {^934^^^^^918^955^[REPLACE] if  ( strict )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^937^938^^^^918^955^[REPLACE] DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition ( instantLocal -serialVersionUID ) ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextLocal = nextTransition (serialVersionUID - offsetLocal ) ;^930^^^^^918^955^[REPLACE] long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long nextAdjusted = nextTransition (serialVersionUID - offsetLocal ) ;^931^^^^^918^955^[REPLACE] long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^long instantUTC = instantLocal -serialVersionUID;^949^^^^^918^955^[REPLACE] long instantUTC = instantLocal - offset;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (  ( instantLocal ^ instantUTC )  < 3 ||  ( instantLocal ^ offset )  < 3 )  {^951^^^^^918^955^[REPLACE] if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return ;^952^^^^^918^955^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^952^^^^^918^955^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^return serialVersionUID;^954^^^^^918^955^[REPLACE] return instantUTC;^[METHOD] convertLocalToUTC [TYPE] long [PARAMETER] long instantLocal boolean strict [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  strict  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  zone  [TYPE]  int offset  offsetLocal  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( newZone != null )  {^968^^^^^967^976^[REPLACE] if  ( newZone == null )  {^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^newZone ;^969^^^^^967^976^[REPLACE] newZone = DateTimeZone.getDefault (  ) ;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^969^^^^^967^976^[ADD] newZone = DateTimeZone.getDefault (  ) ;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^newZone  =  newZone ;^969^^^^^967^976^[REPLACE] newZone = DateTimeZone.getDefault (  ) ;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  (zone  &&  this )  {^971^^^^^967^976^[REPLACE] if  ( newZone == this )  {^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return nextAdjusted;^972^^^^^967^976^[REPLACE] return oldInstant;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return nextLocal;^972^^^^^967^976^[REPLACE] return oldInstant;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^long instantLocal = oldInstant  <  getOffset ( oldInstant ) ;^974^^^^^967^976^[REPLACE] long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return instantLocal - newZone .getOffset ( instantLocal )  ;^975^^^^^967^976^[REPLACE] return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[METHOD] getMillisKeepLocal [TYPE] long [PARAMETER] DateTimeZone newZone long oldInstant [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^if  ( newZone == this )  {^1085^^^^^1084^1094^[REPLACE] if  ( isFixed (  )  )  {^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[ADD]^^1085^1086^1087^^^1084^1094^[ADD] if  ( isFixed (  )  )  { return false; }^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[REPLACE]^return true;^1086^^^^^1084^1094^[REPLACE] return false;^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[ADD]^localDateTime.toDateTime ( this ) ;return false;return true;^1088^1089^1090^1091^1092^1084^1094^[ADD] try { localDateTime.toDateTime ( this ) ; return false; } catch  ( IllegalArgumentException ex )  { return true;^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[REPLACE]^return true;^1090^^^^^1084^1094^[REPLACE] return false;^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[REPLACE]^return false;^1092^^^^^1084^1094^[REPLACE] return true;^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[ADD]^^1091^1092^^^^1084^1094^[ADD] catch  ( IllegalArgumentException ex )  { return true;^[METHOD] isLocalDateTimeGap [TYPE] boolean [PARAMETER] LocalDateTime localDateTime [CLASS] DateTimeZone 1 Stub   [TYPE]  LocalDateTime localDateTime  [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  IllegalArgumentException ex  [TYPE]  Provider cProvider  provider 
[REPLACE]^return java.util.TimeZone .getDisplayName (  )  ;^1133^^^^^1132^1134^[REPLACE] return java.util.TimeZone.getTimeZone ( iID ) ;^[METHOD] toTimeZone [TYPE] TimeZone [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return0 + getID (  ) .hashCode (  ) ;^1150^^^^^1149^1151^[REPLACE] return 57 + getID (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^1158^^^^^1157^1159^[REPLACE] return getID (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return cDefault;^1168^^^^^1167^1169^[REPLACE] return new Stub ( iID ) ;^[METHOD] writeReplace [TYPE] Object [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^buf.append ( '+' ) ;^1189^^^^^1188^1190^[REPLACE] out.writeUTF ( iID ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream out [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  ObjectOutputStream out  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[ADD]^^1189^^^^^1188^1190^[ADD] out.writeUTF ( iID ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream out [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  ObjectOutputStream out  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^iID =  null.readUTF (  ) ;^1193^^^^^1192^1194^[REPLACE] iID = in.readUTF (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream in [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider  [TYPE]  ObjectInputStream in 
[REPLACE]^return cDefault;^1197^^^^^1196^1198^[REPLACE] return forID ( iID ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] DateTimeZone 1 Stub   [TYPE]  Set cAvailableIDs  ids  [TYPE]  boolean false  true  [TYPE]  NameProvider cNameProvider  nameProvider  [TYPE]  String convId  iID  id  name  nameKey  str  [TYPE]  DateTimeFormatter cOffsetFormatter  [TYPE]  Map cZoneIdConversion  iFixedOffsetCache  map  [TYPE]  long instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  serialVersionUID  [TYPE]  DateTimeZone UTC  cDefault  dtz  newZone  zone  [TYPE]  Provider cProvider  provider 
[REPLACE]^return false;^591^^^^^590^592^[REPLACE] return null;^[METHOD] getZone [TYPE] DateTimeZone [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return null;^594^^^^^593^595^[REPLACE] return this;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return null;^597^^^^^596^598^[REPLACE] return this;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  DateTimeZone zone 
[REPLACE]^private static final long serialVersionUID ;^1176^^^^^^^[REPLACE] private static final long serialVersionUID = -6471952376487863581L;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Stub   [TYPE]  boolean false  true 
[REPLACE]^private transient  long  iID;^1178^^^^^^^[REPLACE] private transient String iID;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Stub   [TYPE]  boolean false  true 
[REPLACE]^iID =  null;^1185^^^^^1184^1186^[REPLACE] iID = id;^[METHOD] <init> [TYPE] String) [PARAMETER] String id [CLASS] Stub   [TYPE]  long serialVersionUID  [TYPE]  String iID  id  [TYPE]  boolean false  true 
[REPLACE]^iID = in.readUTF (  ) ;^1189^^^^^1188^1190^[REPLACE] out.writeUTF ( iID ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream out [CLASS] Stub   [TYPE]  String iID  id  [TYPE]  boolean false  true  [TYPE]  ObjectOutputStream out  [TYPE]  long serialVersionUID 
[REMOVE]^iID = in.readUTF (  ) ;^1189^^^^^1188^1190^[REMOVE] ^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream out [CLASS] Stub   [TYPE]  String iID  id  [TYPE]  boolean false  true  [TYPE]  ObjectOutputStream out  [TYPE]  long serialVersionUID 
[REPLACE]^iID =  null.readUTF (  ) ;^1193^^^^^1192^1194^[REPLACE] iID = in.readUTF (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream in [CLASS] Stub   [TYPE]  String iID  id  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  ObjectInputStream in 
