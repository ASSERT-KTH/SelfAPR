[REPLACE]^private  static String Az = "ABCpqr";^68^^^^^^^[REPLACE] private final static String Az = "ABCpqr";^ [CLASS] SWTUtils  
[REPLACE]^protected static final JPanel DUMMY_PANEL  = null ;^71^^^^^^^[REPLACE] protected static final JPanel DUMMY_PANEL = new JPanel (  ) ;^ [CLASS] SWTUtils  
[REPLACE]^Font tmpFont = new Font ( device, fontData ) ;^96^^^^^95^150^[REPLACE] FontData fontData = new FontData (  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^fontData .getName (  )  ;^97^^^^^95^150^[REPLACE] fontData.setName ( font.getFamily (  )  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^fontData.setName ( tmpFont.getFamily (  )  ) ;^97^^^^^95^150^[REPLACE] fontData.setName ( font.getFamily (  )  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^97^^^^^95^150^[ADD] fontData.setName ( font.getFamily (  )  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^int style;^98^^^^^95^150^[REPLACE] int style = SWT.NORMAL;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^98^^^^^95^150^[ADD] int style = SWT.NORMAL;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^style |= SWT.BOLD; ;^101^^^^^95^150^[REPLACE] style |= SWT.NORMAL;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^101^102^^^^95^150^[ADD] style |= SWT.NORMAL; break;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^style |= SWT.ITALIC; ;^104^^^^^95^150^[REPLACE] style |= SWT.BOLD;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^style |= SWT.BOLD; ;^107^^^^^95^150^[REPLACE] style |= SWT.ITALIC;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^style &= SWT.ITALIC & SWT.BOLD;^110^^^^^95^150^[REPLACE] style |= SWT.ITALIC | SWT.BOLD;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^110^111^^^^95^150^[ADD] style |= SWT.ITALIC | SWT.BOLD; break;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^fontData.setHeight ( style ) ;^113^^^^^95^150^[REPLACE] fontData.setStyle ( style ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^int height =  ( int )  Math.round ( font.getSize (  )  * 72.0D  <  device.getDPI (  ) .y ) ;^115^116^^^^95^150^[REPLACE] int height =  ( int )  Math.round ( font.getSize (  )  * 72.0 / device.getDPI (  ) .y ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^fontData.setStyle ( height ) ;^117^^^^^95^150^[REPLACE] fontData.setHeight ( height ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  <=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^95^150^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^126^127^128^^^95^150^[ADD] while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  { tmpFont.dispose (  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^131^^^^^126^133^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  >=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^95^150^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^142^^^^^137^144^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( true )  {^120^^^^^95^150^[REPLACE] if  ( ensureSameSize )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  <  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^95^150^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^131^^^^^126^133^[ADD] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  !=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^95^150^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( tmpGC.textExtent ( Az ) .x  <  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^124^125^^^^95^150^[REPLACE] if  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REMOVE]^if  ( ensureSameSize )  {     GC tmpGC = new GC ( device ) ;     Font tmpFont = new Font ( device, fontData ) ;     tmpGC.setFont ( tmpFont ) ;     if  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {         while  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {             tmpFont.dispose (  ) ;             height--;             fontData.setHeight ( height ) ;             tmpFont = new Font ( device, fontData ) ;             tmpGC.setFont ( tmpFont ) ;         }      }else         if  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {             while  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {                 tmpFont.dispose (  ) ;                 height++;                 fontData.setHeight ( height ) ;                 tmpFont = new Font ( device, fontData ) ;                 tmpGC.setFont ( tmpFont ) ;             }          }          tmpFont.dispose (  ) ;     tmpGC.dispose (  ) ; }^124^^^^^95^150^[REMOVE] ^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( tmpGC.textExtent ( Az ) .x  <=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^135^136^^^^95^150^[REPLACE] else if  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  >=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^135^145^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^142^^^^^135^145^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^142^^^^^135^145^[ADD] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^142^^^^^95^150^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  !=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^124^145^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^131^^^^^124^145^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^131^132^^^^124^145^[ADD] tmpFont = new Font ( device, fontData ) ; tmpGC.setFont ( tmpFont ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( tmpGC.textExtent ( Az ) .x  >  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^135^136^^^^95^150^[REPLACE] else if  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^137^138^139^^^135^145^[ADD] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  { tmpFont.dispose (  ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^tmpFont =  new Font ( null, fontData ) ;^131^^^^^95^150^[REPLACE] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^131^132^^^^95^150^[ADD] tmpFont = new Font ( device, fontData ) ; tmpGC.setFont ( tmpFont ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^Font tmpFont = new Font ( device, fontData ) ;^121^^^^^95^150^[REPLACE] GC tmpGC = new GC ( device ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^121^122^^^^95^150^[ADD] GC tmpGC = new GC ( device ) ; Font tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^122^^^^^95^150^[REPLACE] Font tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( tmpGC.textExtent ( Az ) .x  <=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^124^125^^^^95^150^[REPLACE] if  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^if  ( tmpGC.textExtent ( Az ) .x  !=  DUMMY_PANEL.getFontMetrics ( tmpFont ) .stringWidth ( Az )  )  {^135^136^^^^95^150^[REPLACE] else if  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  ==  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^135^145^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^142^143^^^^135^145^[ADD] tmpFont = new Font ( device, fontData ) ; tmpGC.setFont ( tmpFont ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^142^143^^^^95^150^[ADD] tmpFont = new Font ( device, fontData ) ; tmpGC.setFont ( tmpFont ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  <=  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^124^145^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^else if  ( tmpGC.setFont ( Az ) .x  ==  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^135^136^^^^95^150^[REPLACE] else if  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REMOVE]^if  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {     while  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {         tmpFont.dispose (  ) ;         height--;         fontData.setHeight ( height ) ;         tmpFont = new Font ( device, fontData ) ;         tmpGC.setFont ( tmpFont ) ;     }  }else     if  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {         while  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {             tmpFont.dispose (  ) ;             height++;             fontData.setHeight ( height ) ;             tmpFont = new Font ( device, fontData ) ;             tmpGC.setFont ( tmpFont ) ;         }      }^135^^^^^95^150^[REMOVE] ^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^while  ( tmpGC.textExtent ( Az ) .x  >  DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^135^145^[REPLACE] while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[ADD]^^131^^^^^95^150^[ADD] tmpFont = new Font ( device, fontData ) ;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^return rect2d;^149^^^^^95^150^[REPLACE] return fontData;^[METHOD] toSwtFontData [TYPE] FontData [PARAMETER] Device device Font font boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  Font font  tmpFont  [TYPE]  int height  style 
[REPLACE]^int style = SWT.NORMAL;^170^^^^^169^218^[REPLACE] int style;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^170^^^^^169^218^[ADD] int style;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^style = java.awt.Font.BOLD; ;^173^^^^^169^218^[REPLACE] style = java.awt.Font.PLAIN;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^style = java.awt.Font.PLAIN; ;^176^^^^^169^218^[REPLACE] style = java.awt.Font.ITALIC;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^style = java.awt.Font.PLAIN; ;^179^^^^^169^218^[REPLACE] style = java.awt.Font.BOLD;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^style = java.awt.Font.BOLD; ;^182^^^^^169^218^[REPLACE] style = java.awt.Font.PLAIN;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^int height =  ( int )  Math.round ( fontData.getHeight (  )  * device.getDPI (  ) .y  ||  72.0 ) ;^185^186^^^^169^218^[REPLACE] int height =  ( int )  Math.round ( fontData.getHeight (  )  * device.getDPI (  ) .y / 72.0 ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  !=  tmpGC.textExtent ( Az ) .x )  {^198^199^^^^169^218^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^201^202^^^^198^203^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  ==  tmpGC.textExtent ( Az ) .x )  {^207^208^^^^169^218^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^210^211^^^^207^212^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^210^211^^^^207^212^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^else if  ( tmpGC.textExtent ( Az ) .x^189^^^^^169^218^[REPLACE] if  ( ensureSameSize )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^201^202^^^^198^203^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >  tmpGC.textExtent ( Az ) .x )  {^207^208^^^^169^218^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >=  tmpGC.textExtent ( Az ) .x )  {^196^197^^^^169^218^[REPLACE] if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >  tmpGC.textExtent ( Az ) .x )  {^205^206^^^^169^218^[REPLACE] else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >=  tmpGC.textExtent ( Az ) .x )  {^207^208^^^^205^213^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^210^211^^^^205^213^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^210^211^^^^205^213^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^210^211^^^^169^218^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  !=  tmpGC.textExtent ( Az ) .x )  {^198^199^^^^196^213^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^201^202^^^^196^213^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^201^202^^^^196^213^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  <=  tmpGC.textExtent ( Az ) .x )  {^205^206^^^^169^218^[REPLACE] else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^tmpAwtFont =  new java.awt.Font ( null.getName (  ) , style, height ) ;^201^202^^^^169^218^[REPLACE] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^210^211^^^^169^218^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^Font tmpFont = new Font ( device, fontData ) ;^190^^^^^169^218^[REPLACE] GC tmpGC = new GC ( device ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^191^^^^^169^218^[REPLACE] Font tmpFont = new Font ( device, fontData ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^Rectangle2D rect2d = new Rectangle2D.Double (  ) ;^193^^^^^169^218^[REPLACE] JPanel DUMMY_PANEL = new JPanel (  ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getStyle (  ) , style, height ) ;^194^195^^^^169^218^[REPLACE] java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  <  tmpGC.textExtent ( Az ) .x )  {^196^197^^^^169^218^[REPLACE] if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REMOVE]^if  ( ensureSameSize )  {     GC tmpGC = new GC ( device ) ;     Font tmpFont = new Font ( device, fontData ) ;     tmpGC.setFont ( tmpFont ) ;     if  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {         while  (  ( tmpGC.textExtent ( Az ) .x )  >  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {             tmpFont.dispose (  ) ;             height--;             fontData.setHeight ( height ) ;             tmpFont = new Font ( device, fontData ) ;             tmpGC.setFont ( tmpFont ) ;         }      }else         if  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {             while  (  ( tmpGC.textExtent ( Az ) .x )  <  ( getFontMetrics ( font ) .stringWidth ( Az )  )  )  {                 tmpFont.dispose (  ) ;                 height++;                 fontData.setHeight ( height ) ;                 tmpFont = new Font ( device, fontData ) ;                 tmpGC.setFont ( tmpFont ) ;             }          }          tmpFont.dispose (  ) ;     tmpGC.dispose (  ) ; }^196^^^^^169^218^[REMOVE] ^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  !=  tmpGC.textExtent ( Az ) .x )  {^207^208^^^^169^218^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^207^208^209^^^169^218^[ADD] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  { height++;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >=  tmpGC.textExtent ( Az ) .x )  {^205^206^^^^169^218^[REPLACE] else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REMOVE]^if  (  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  )  >  ( tmpGC.textExtent ( Az ) .x )  )  {     while  (  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  )  >  ( tmpGC.textExtent ( Az ) .x )  )  {         height--;         tmpAwtFont = new Font ( fontData.getName (  ) , style, height ) ;     }  }else     if  (  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  )  <  ( tmpGC.textExtent ( Az ) .x )  )  {         while  (  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  )  <  ( tmpGC.textExtent ( Az ) .x )  )  {             height++;             tmpAwtFont = new Font ( fontData.getName (  ) , style, height ) ;         }      }^205^^^^^169^218^[REMOVE] ^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  >=  tmpGC.textExtent ( Az ) .x )  {^198^199^^^^196^213^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  !=  tmpGC.textExtent ( Az ) .x )  {^205^206^^^^169^218^[REPLACE] else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^205^206^207^208^209^169^218^[ADD] else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  { while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  { height++;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az )  !=  tmpGC.textExtent ( Az ) .x )  {^207^208^^^^205^213^[REPLACE] while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^201^202^^^^169^218^[ADD] tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[ADD]^^193^^^^^169^218^[ADD] JPanel DUMMY_PANEL = new JPanel (  ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^return new java.awt.Font ( fontData .setName ( Az )  , style, height ) ;^217^^^^^169^218^[REPLACE] return new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device FontData fontData boolean ensureSameSize [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean ensureSameSize  false  true  [TYPE]  Device device  [TYPE]  FontData fontData  [TYPE]  String Az  [TYPE]  GC tmpGC  [TYPE]  int height  style  [TYPE]  Font tmpAwtFont  tmpFont 
[REPLACE]^FontData fontData = font.getFontData (  ) [1];^229^^^^^228^231^[REPLACE] FontData fontData = font.getFontData (  ) [0];^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device Font font [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Font font  [TYPE]  FontData fontData 
[REPLACE]^return toAwtFont ( device, fontData, false ) ;^230^^^^^228^231^[REPLACE] return toAwtFont ( device, fontData, true ) ;^[METHOD] toAwtFont [TYPE] Font [PARAMETER] Device device Font font [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Font font  [TYPE]  FontData fontData 
[REPLACE]^return new java.awt.Color ( color.getRed (  ) , color.getGreen (  ) , color.getGreen (  )  ) ;^241^242^^^^240^243^[REPLACE] return new java.awt.Color ( color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[METHOD] toAwtColor [TYPE] Color [PARAMETER] Color color [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true  [TYPE]  Color color 
[REPLACE]^Font tmpFont = new Font ( device, fontData ) ;^256^^^^^255^272^[REPLACE] java.awt.Color color;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[ADD]^^256^^^^^255^272^[ADD] java.awt.Color color;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^if  ( ! paint instanceof java.awt.Color )  {^257^^^^^255^272^[REPLACE] if  ( paint instanceof java.awt.Color )  {^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[ADD]^+ "setting paint to uniform black color"  ) ;^261^262^263^264^^255^272^[ADD] try { throw new Exception ( "only color is supported at present... " + "setting paint to uniform black color"  ) ; }^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^return ;^262^263^^^^255^272^[REPLACE] throw new Exception ( "only color is supported at present... " + "setting paint to uniform black color"  ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^color = new java.awt.Color ( 0 + 4, 0 + 4, 0 + 4 ) ;^267^^^^^255^272^[REPLACE] color = new java.awt.Color ( 0, 0, 0 ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[ADD]^^262^263^^^^255^272^[ADD] throw new Exception ( "only color is supported at present... " + "setting paint to uniform black color"  ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[ADD]^^265^266^^^^255^272^[ADD] catch  ( Exception e )  { e.printStackTrace (  ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^color =   ( java.awt.Color )  paint;^258^^^^^255^272^[REPLACE] color =  ( java.awt.Color )  paint;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[ADD]^^258^^^^^255^272^[ADD] color =  ( java.awt.Color )  paint;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^color = new java.awt.Color ( 0 - 1, 0 - 1, 0 - 1 ) ;^267^^^^^255^272^[REPLACE] color = new java.awt.Color ( 0, 0, 0 ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getRed (  ) , color.getBlue (  )  ) ;^270^271^^^^255^272^[REPLACE] return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Paint paint [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color  [TYPE]  String Az  [TYPE]  Paint paint  [TYPE]  Exception e 
[REPLACE]^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getGreen (  )  ) ;^285^286^^^^284^287^[REPLACE] return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[METHOD] toSwtColor [TYPE] Color [PARAMETER] Device device Color color [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true  [TYPE]  Device device  [TYPE]  Color color 
[REPLACE]^return new Rectangle ( ( int )  Math.round ( rect2d.getMinX (  )  ) , ( int )  Math.round ( rect2d.getMinX (  )  ) , ( int )  Math.round ( rect2d.getWidth (  )  ) ,^296^297^298^299^^295^302^[REPLACE] return new Rectangle ( ( int )  Math.round ( rect2d.getMinX (  )  ) , ( int )  Math.round ( rect2d.getMinY (  )  ) , ( int )  Math.round ( rect2d.getWidth (  )  ) ,^[METHOD] toSwtRectangle [TYPE] Rectangle [PARAMETER] Rectangle2D rect2d [CLASS] SWTUtils   [TYPE]  Rectangle2D rect2d  [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true 
[REPLACE]^FontData fontData = new FontData (  ) ;^311^^^^^310^314^[REPLACE] Rectangle2D rect2d = new Rectangle2D.Double (  ) ;^[METHOD] toAwtRectangle [TYPE] Rectangle2D [PARAMETER] Rectangle rect [CLASS] SWTUtils   [TYPE]  Rectangle rect  [TYPE]  Rectangle2D rect2d  [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true 
[REPLACE]^( int )  Math.round ( rect2d.getWidth (  )  ) , ( int )  Math.round ( rect2d.getHeight (  )  )^312^^^^^310^314^[REPLACE] rect2d.setRect ( rect.x, rect.y, rect.width, rect.height ) ;^[METHOD] toAwtRectangle [TYPE] Rectangle2D [PARAMETER] Rectangle rect [CLASS] SWTUtils   [TYPE]  Rectangle rect  [TYPE]  Rectangle2D rect2d  [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true 
[REPLACE]^return awtMouseEvent;^313^^^^^310^314^[REPLACE] return rect2d;^[METHOD] toAwtRectangle [TYPE] Rectangle2D [PARAMETER] Rectangle rect [CLASS] SWTUtils   [TYPE]  Rectangle rect  [TYPE]  Rectangle2D rect2d  [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true 
[REPLACE]^return new Point ( p.x, p.y ) ;^327^^^^^326^328^[REPLACE] return new java.awt.Point ( p.x, p.y ) ;^[METHOD] toAwtPoint [TYPE] Point2D [PARAMETER] Point p [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  Point p  [TYPE]  boolean false  true 
[REPLACE]^return  new FontData (  )  ;^341^^^^^340^342^[REPLACE] return new Point ( p.x, p.y ) ;^[METHOD] toSwtPoint [TYPE] Point [PARAMETER] Point p [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  Point p  [TYPE]  boolean false  true 
[REPLACE]^return new Point (  ( int )  Math.round ( p.getY (  )  ) , ( int )  Math.round ( p.getY (  )  )  ) ;^355^356^^^^354^357^[REPLACE] return new Point (  ( int )  Math.round ( p.getX (  )  ) , ( int )  Math.round ( p.getY (  )  )  ) ;^[METHOD] toSwtPoint [TYPE] Point [PARAMETER] Point2D p [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  String Az  [TYPE]  boolean false  true  [TYPE]  Point2D p 
[REPLACE]^MouseEvent awtMouseEvent = new MouseEvent ( DUMMY_PANEL, event.hashCode (  ) , ( long )  event.time, SWT.NONE, event.x, event.y, 1 << 2, false ) ;^366^367^^^^365^369^[REPLACE] MouseEvent awtMouseEvent = new MouseEvent ( DUMMY_PANEL, event.hashCode (  ) , ( long )  event.time, SWT.NONE, event.x, event.y, 1, false ) ;^[METHOD] toAwtMouseEvent [TYPE] MouseEvent [PARAMETER] Event event [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  Event event  [TYPE]  String Az  [TYPE]  MouseEvent awtMouseEvent  [TYPE]  boolean false  true 
[REPLACE]^return rect2d;^368^^^^^365^369^[REPLACE] return awtMouseEvent;^[METHOD] toAwtMouseEvent [TYPE] MouseEvent [PARAMETER] Event event [CLASS] SWTUtils   [TYPE]  JPanel DUMMY_PANEL  [TYPE]  Event event  [TYPE]  String Az  [TYPE]  MouseEvent awtMouseEvent  [TYPE]  boolean false  true 
