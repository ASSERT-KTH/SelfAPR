[REPLACE]^private float minimumValue;^69^^^^^^^[REPLACE] private double minimumValue;^ [CLASS] SWTNumberAxisEditor 1  
[REPLACE]^super.setAxisProperties ( axis ) ;^93^^^^^92^136^[REPLACE] super ( parent, style, axis ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.autoRange =  null.isAutoRange (  ) ;^94^^^^^92^136^[REPLACE] this.autoRange = axis.isAutoRange (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumValue = axis.getUpperBound (  ) ; ;^95^^^^^92^136^[REPLACE] this.minimumValue = axis.getLowerBound (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[ADD]^^95^96^^^^92^136^[ADD] this.minimumValue = axis.getLowerBound (  ) ; this.maximumValue = axis.getUpperBound (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumValue = axis.getLowerBound (  ) ; ;^96^^^^^92^136^[REPLACE] this.maximumValue = axis.getUpperBound (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^Composite range = new Composite ( getOtherTabs (  ) , SWT.NONE ) ;^98^^^^^92^136^[REPLACE] TabItem item2 = new TabItem ( getOtherTabs (  ) , SWT.NONE ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^item2.setText ( " "  <=    "Range"     <=  " " ) ;^99^^^^^92^136^[REPLACE] item2.setText ( " " + localizationResources.getString ( "Range" )  + " " ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^item2.setText ( " " +   "Range"    + " " ) ;^99^^^^^92^136^[REPLACE] item2.setText ( " " + localizationResources.getString ( "Range" )  + " " ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[ADD]^^99^^^^^92^136^[ADD] item2.setText ( " " + localizationResources.getString ( "Range" )  + " " ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^TabItem item2 = new TabItem ( getOtherTabs (  ) , SWT.NONE ) ;^100^^^^^92^136^[REPLACE] Composite range = new Composite ( getOtherTabs (  ) , SWT.NONE ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^range.setLayout ( new GridLayout ( 0, true )  ) ;^101^^^^^92^136^[REPLACE] range.setLayout ( new GridLayout ( 2, true )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[ADD]^^101^102^^^^92^136^[ADD] range.setLayout ( new GridLayout ( 2, true )  ) ; item2.setControl ( range ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^super.setAxisProperties ( axis ) ;^102^^^^^92^136^[REPLACE] item2.setControl ( range ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^autoRangeCheckBox =  new Button ( parent, SWT.CHECK ) ;^104^^^^^92^136^[REPLACE] autoRangeCheckBox = new Button ( range, SWT.CHECK ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^autoRangeCheckBox.setText (   "Auto-adjust_range"    ) ;^105^106^^^^92^136^[REPLACE] autoRangeCheckBox.setText ( localizationResources.getString ( "Auto-adjust_range" )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^autoRangeCheckBox.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, false, false, 2, 1 )  ) ;^107^108^^^^92^136^[REPLACE] autoRangeCheckBox.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, true, false, 2, 1 )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[ADD]^^107^108^^^^92^136^[ADD] autoRangeCheckBox.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, true, false, 2, 1 )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^autoRangeCheckBox.setLayoutData ( this.autoRange ) ;^109^^^^^92^136^[REPLACE] autoRangeCheckBox.setSelection ( this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^numberAxis.setAutoRange ( this.autoRange ) ;^113^^^^^92^136^[REPLACE] toggleAutoRange (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^new Label ( parent, SWT.NONE ) .setText ( localizationResources.getString ( "Minimum_range_value" )  ) ;^116^117^^^^92^136^[REPLACE] new Label ( range, SWT.NONE ) .setText ( localizationResources.getString ( "Minimum_range_value" )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^new Label ( range, SWT.NONE ) .setText (   "Minimum_range_value"    ) ;^116^117^^^^92^136^[REPLACE] new Label ( range, SWT.NONE ) .setText ( localizationResources.getString ( "Minimum_range_value" )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumRangeValue = new Text ( range, SWT.BORDER ) ; ;^118^^^^^92^136^[REPLACE] this.minimumRangeValue = new Text ( range, SWT.BORDER ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue.setEnabled ( String.valueOf ( this.minimumValue )  ) ;^119^^^^^92^136^[REPLACE] this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue.setText (   this.minimumValue    ) ;^119^^^^^92^136^[REPLACE] this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, false, false )  ) ;^120^121^^^^92^136^[REPLACE] this.minimumRangeValue.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, true, false )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue.getText ( !this.autoRange ) ;^122^^^^^92^136^[REPLACE] this.minimumRangeValue.setEnabled ( !this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue.setLayoutData ( this ) ;^125^^^^^92^136^[REPLACE] this.minimumRangeValue.addFocusListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^new Label ( parent, SWT.NONE )  .setText (  )  ;^126^127^^^^92^136^[REPLACE] new Label ( range, SWT.NONE ) .setText ( localizationResources.getString ( "Maximum_range_value" )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^new Label ( range, SWT.NONE ) .setText (   "Maximum_range_value"    ) ;^126^127^^^^92^136^[REPLACE] new Label ( range, SWT.NONE ) .setText ( localizationResources.getString ( "Maximum_range_value" )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.minimumRangeValue = new Text ( range, SWT.BORDER ) ; ;^128^^^^^92^136^[REPLACE] this.maximumRangeValue = new Text ( range, SWT.BORDER ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumRangeValue.setText (   this.maximumValue    ) ;^129^^^^^92^136^[REPLACE] this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[ADD]^^129^^^^^92^136^[ADD] this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumRangeValue.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, false, false )  ) ;^130^131^^^^92^136^[REPLACE] this.maximumRangeValue.setLayoutData ( new GridData ( SWT.FILL, SWT.CENTER, true, false )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumRangeValue .setLayoutData ( null )  ;^132^^^^^92^136^[REPLACE] this.maximumRangeValue.setEnabled ( !this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^this.maximumRangeValue .setText (  )  ;^135^^^^^92^136^[REPLACE] this.maximumRangeValue.addFocusListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] Composite parent int style NumberAxis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  TabItem item2  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  Composite parent  range  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  int style 
[REPLACE]^numberAxis.setAutoRange ( this.autoRange ) ;^113^^^^^112^114^[REPLACE] toggleAutoRange (  ) ;^[METHOD] widgetSelected [TYPE] void [PARAMETER] SelectionEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^113^^^^^112^114^[ADD] toggleAutoRange (  ) ;^[METHOD] widgetSelected [TYPE] void [PARAMETER] SelectionEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  SelectionEvent e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.autoRange  =  this.autoRange ;^142^^^^^141^153^[REPLACE] this.autoRange = this.autoRangeCheckBox.getSelection (  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( ! this.autoRange ) numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^143^^^^^141^153^[REPLACE] if  ( this.autoRange )  {^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^143^144^145^146^147^141^153^[ADD] if  ( this.autoRange )  { this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ; this.minimumRangeValue.setEnabled ( false ) ; this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ; this.maximumRangeValue.setEnabled ( false ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumRangeValue.setEnabled ( false ) ;^150^^^^^141^153^[REPLACE] this.minimumRangeValue.setEnabled ( true ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue.setEnabled ( false ) ;^151^^^^^141^153^[REPLACE] this.maximumRangeValue.setEnabled ( true ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^151^^^^^141^153^[ADD] this.maximumRangeValue.setEnabled ( true ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumRangeValue.setText ( Double .parseDouble ( null )   ) ;^144^^^^^141^153^[REPLACE] this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumRangeValue.setEnabled ( true ) ;^145^^^^^141^153^[REPLACE] this.minimumRangeValue.setEnabled ( false ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue.setEnabled ( Double.toString ( this.maximumValue )  ) ;^146^^^^^141^153^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue.setText ( Double .parseDouble ( this )   ) ;^146^^^^^141^153^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue .setLayoutData ( false )  ;^147^^^^^141^153^[REPLACE] this.maximumRangeValue.setEnabled ( false ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^boolean valid = false;^165^^^^^163^175^[REPLACE] boolean valid = true;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^165^^^^^163^175^[ADD] boolean valid = true;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( Double.parseDouble ( candidate )   ==  this.maximumValue )  {^167^^^^^163^175^[REPLACE] if  ( Double.parseDouble ( candidate )  >= this.maximumValue )  {^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^valid = true;^168^^^^^163^175^[REPLACE] valid = false;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^168^^^^^163^175^[ADD] valid = false;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^valid = false;^166^167^168^169^^163^175^[ADD] try { if  ( Double.parseDouble ( candidate )  >= this.maximumValue )  { valid = false; }^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( Double.parseDouble ( candidate )   < minimumValue )  {^167^^^^^163^175^[REPLACE] if  ( Double.parseDouble ( candidate )  >= this.maximumValue )  {^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^valid = false;^167^168^169^^^163^175^[ADD] if  ( Double.parseDouble ( candidate )  >= this.maximumValue )  { valid = false; }^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^valid = true;^172^^^^^163^175^[REPLACE] valid = false;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^return false;^174^^^^^163^175^[REPLACE] return valid;^[METHOD] validateMinimum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^boolean valid = false;^187^^^^^185^197^[REPLACE] boolean valid = true;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( Double.parseDouble ( candidate )   >  this.minimumValue )  {^189^^^^^185^197^[REPLACE] if  ( Double.parseDouble ( candidate )  <= this.minimumValue )  {^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^valid = false;^189^190^191^^^185^197^[ADD] if  ( Double.parseDouble ( candidate )  <= this.minimumValue )  { valid = false; }^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^valid = true;^190^^^^^185^197^[REPLACE] valid = false;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^190^^^^^185^197^[ADD] valid = false;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^valid = false;^188^189^190^191^^185^197^[ADD] try { if  ( Double.parseDouble ( candidate )  <= this.minimumValue )  { valid = false; }^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( Double.toString ( candidate )   ==  this.minimumValue )  {^189^^^^^185^197^[REPLACE] if  ( Double.parseDouble ( candidate )  <= this.minimumValue )  {^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^valid = true;^194^^^^^185^197^[REPLACE] valid = false;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[ADD]^^193^194^^^^185^197^[ADD] catch  ( NumberFormatException e )  { valid = false;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^return false;^196^^^^^185^197^[REPLACE] return valid;^[METHOD] validateMaximum [TYPE] boolean [PARAMETER] String candidate [CLASS] SWTNumberAxisEditor 1   [TYPE]  NumberFormatException e  [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  String candidate  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( e.getSource (  )   &&  this.minimumRangeValue )  {^212^^^^^211^230^[REPLACE] if  ( e.getSource (  )  == this.minimumRangeValue )  {^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[ADD]^^212^213^214^215^216^211^230^[ADD] if  ( e.getSource (  )  == this.minimumRangeValue )  {  if  ( ! validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( e.getSource (  )   !=  this.maximumRangeValue )  {^221^^^^^211^230^[REPLACE] else if  ( e.getSource (  )  == this.maximumRangeValue )  {^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( ! validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue.setText (   this.maximumValue    ) ;^223^224^225^^^211^230^[REPLACE] if  ( ! validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumValue  =  this.maximumValue ;^227^228^^^^211^230^[REPLACE] this.maximumValue = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue .setControl ( false )  ;^224^225^^^^211^230^[REPLACE] this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue.setText (   this.maximumValue    ) ;^224^225^^^^211^230^[REPLACE] this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumRangeValue.setEnabled ( String.valueOf ( this.maximumValue )  ) ;^224^225^^^^211^230^[REPLACE] this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( ! validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText (   this.minimumValue    ) ;^214^215^216^^^211^230^[REPLACE] if  ( ! validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumValue  =  this.minimumValue ;^218^219^^^^211^230^[REPLACE] this.minimumValue = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumRangeValue.setEnabled ( String.valueOf ( this.minimumValue )  ) ;^215^216^^^^211^230^[REPLACE] this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[ADD]^^215^216^^^^211^230^[ADD] this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumRangeValue.setText (   this.minimumValue    ) ;^215^216^^^^211^230^[REPLACE] this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.minimumValue ;^218^219^^^^211^230^[REPLACE] this.minimumValue = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  (  validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^214^215^216^^^211^230^[REPLACE] if  ( ! validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[ADD]^^214^215^216^217^218^211^230^[ADD] if  ( ! validateMinimum (  this.minimumRangeValue.getText (  )  )  ) this.minimumRangeValue.setText ( String.valueOf ( this.minimumValue )  ) ; else this.minimumValue = Double.parseDouble (^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  ( ! validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue .setControl ( 0 )  ;^223^224^225^^^211^230^[REPLACE] if  ( ! validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[ADD]^^227^228^^^^211^230^[ADD] this.maximumValue = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^if  (  validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^223^224^225^^^211^230^[REPLACE] if  ( ! validateMaximum ( this.maximumRangeValue.getText (  )  )  ) this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^this.maximumValue  = null ;^227^228^^^^211^230^[REPLACE] this.maximumValue = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent e [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  Button autoRangeCheckBox  [TYPE]  FocusEvent e  [TYPE]  double maximumValue  minimumValue 
[REPLACE]^super .setAxisProperties ( axis )  ;^239^^^^^238^244^[REPLACE] super.setAxisProperties ( axis ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[REPLACE]^Composite range = new Composite ( getOtherTabs (  ) , SWT.NONE ) ;^240^^^^^238^244^[REPLACE] NumberAxis numberAxis =  ( NumberAxis )  axis;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[REPLACE]^this.maximumRangeValue.setText ( String.valueOf ( this.maximumValue )  ) ;^241^^^^^238^244^[REPLACE] numberAxis.setAutoRange ( this.autoRange ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[ADD]^^241^^^^^238^244^[ADD] numberAxis.setAutoRange ( this.autoRange ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[REPLACE]^if  (  this.autoRange ) numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^242^243^^^^238^244^[REPLACE] if  ( ! this.autoRange ) numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[REPLACE]^numberAxis .setAutoRange ( false )  ;^243^^^^^238^244^[REPLACE] numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
[ADD]^^243^^^^^238^244^[ADD] numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] SWTNumberAxisEditor 1   [TYPE]  Text maximumRangeValue  minimumRangeValue  [TYPE]  boolean autoRange  false  true  valid  [TYPE]  NumberAxis numberAxis  [TYPE]  Button autoRangeCheckBox  [TYPE]  double maximumValue  minimumValue  [TYPE]  Axis axis 
