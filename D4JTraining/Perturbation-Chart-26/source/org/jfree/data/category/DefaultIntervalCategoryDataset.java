[REPLACE]^this (   starts   , DataUtilities.^88^89^^^^87^90^[REPLACE] this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[METHOD] <init> [TYPE] DefaultIntervalCategoryDataset(double[][],double[][]) [PARAMETER] double[][] starts double[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  double[][] ends  starts  [TYPE]  Number[][] endData  startData  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this ( DataUtilities.createNumberArray2D ( ends ) , DataUtilities.createNumberArray2D ( ends )  ) ;^88^89^^^^87^90^[REPLACE] this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[METHOD] <init> [TYPE] DefaultIntervalCategoryDataset(double[][],double[][]) [PARAMETER] double[][] starts double[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  double[][] ends  starts  [TYPE]  Number[][] endData  startData  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^starts    ) ;^89^^^^^87^90^[REPLACE] DataUtilities.createNumberArray2D ( ends )  ) ;^[METHOD] <init> [TYPE] DefaultIntervalCategoryDataset(double[][],double[][]) [PARAMETER] double[][] starts double[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  double[][] ends  starts  [TYPE]  Number[][] endData  startData  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this ( true, true, starts, ends ) ;^104^^^^^103^105^[REPLACE] this ( null, null, starts, ends ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^this ( seriesNames, false, starts, ends ) ;^122^^^^^118^124^[REPLACE] this ( seriesNames, null, starts, ends ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] String[] seriesNames Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String[] seriesNames  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.startData =  null;^141^^^^^139^206^[REPLACE] this.startData = starts;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^141^^^^^139^206^[ADD] this.startData = starts;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.endData =  starts;^142^^^^^139^206^[REPLACE] this.endData = ends;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( starts == false ) {^144^^^^^139^206^[REPLACE] if  ( starts != null && ends != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesCount != ends.length %  0.5  )  {^150^^^^^139^206^[REPLACE] if  ( seriesCount != ends.length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg = prefix + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^155^^^^^139^206^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (categoryCount  <=  0 >>> 4 )  {^157^^^^^139^206^[REPLACE] if  ( seriesCount > 0 )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys = this;^201^^^^^157^203^[REPLACE] this.seriesKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^201^^^^^157^203^[ADD] this.seriesKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = true;^202^^^^^157^203^[REPLACE] this.categoryKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^202^^^^^157^203^[ADD] this.categoryKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (categoryKeys == true )  {^160^^^^^139^206^[REPLACE] if  ( seriesKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = generateKeys ( categoryCount, prefix ) ; ;^173^^^^^160^174^[REPLACE] this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^173^^^^^160^174^[ADD] this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )   >=  " ";^171^172^^^^160^174^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^171^172^^^^160^174^[ADD] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length + 4 != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^163^164^165^^^139^206^[REPLACE] throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^163^164^165^^^139^206^[ADD] throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys =  null;^168^^^^^139^206^[REPLACE] this.seriesKeys = seriesKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^168^^^^^139^206^[ADD] this.seriesKeys = seriesKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length + 3 != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^163^164^165^^^139^206^[REPLACE] throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryCount != ends[0].length /  0.5  )  {^178^^^^^139^206^[REPLACE] if  ( categoryCount != ends[0].length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg =prefix + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^183^^^^^139^206^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys == null )  {^185^^^^^139^206^[REPLACE] if  ( categoryKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys = generateKeys ( seriesCount, prefix ) ; ;^196^^^^^185^197^[REPLACE] this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getBundle ( "categories.default-prefix" )  +prefix;^194^195^^^^185^197^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length (  )  != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^187^188^189^^^139^206^[REPLACE] throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys =  seriesKeys;^191^^^^^139^206^[REPLACE] this.categoryKeys = categoryKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length *  0.5  != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REMOVE]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^186^^^^^139^206^[REMOVE] ^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^187^188^189^^^139^206^[REPLACE] throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = generateKeys ( categoryCount, prefix ) ; ;^173^^^^^139^206^[REPLACE] this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^173^^^^^139^206^[ADD] this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys = generateKeys ( seriesCount, prefix ) ; ;^196^^^^^139^206^[REPLACE] this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getBundle ( "series.default-prefix" )   &  " ";^171^172^^^^139^206^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int categoryCount = startData[0 ].length;^177^^^^^139^206^[REPLACE] int categoryCount = starts[0].length;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg = prefix + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getBundle ( "categories.default-prefix" )  +prefix;^194^195^^^^139^206^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^183^^^^^139^206^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^183^^^^^139^206^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys == false )  {^160^^^^^139^206^[REPLACE] if  ( seriesKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )   |  " ";^171^172^^^^160^174^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length + 5 != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys =  categoryKeys;^168^^^^^139^206^[REPLACE] this.seriesKeys = seriesKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length + 1 != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryCount != ends[0 ].length - 2 )  {^178^^^^^139^206^[REPLACE] if  ( categoryCount != ends[0].length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^178^179^180^181^182^139^206^[ADD] if  ( categoryCount != ends[0].length )  { String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg = "DefaultIntervalCategoryDataset: the " +errMsg;^179^180^181^182^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getBundle ( "categories.default-prefix" )   ==  " ";^194^195^^^^185^197^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length (  )  != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^186^187^188^189^190^139^206^[ADD] if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ; }^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length + 4 != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys = false;^201^^^^^139^206^[REPLACE] this.seriesKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = false;^202^^^^^139^206^[REPLACE] this.categoryKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^Number[][] result = new Number[array.length][];^146^^^^^139^206^[REPLACE] String baseName = "org.jfree.data.resources.DataPackageResources";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^ResourceBundle resources = ResourceBundle.getBundle ( prefix ) ;^147^^^^^139^206^[REPLACE] ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int seriesCount = startData.length;^149^^^^^139^206^[REPLACE] int seriesCount = starts.length;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg =errMsg + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )   <  " ";^171^172^^^^139^206^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int categoryCount = starts[0 ].length;^177^^^^^139^206^[REPLACE] int categoryCount = starts[0].length;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg = "DefaultIntervalCategoryDataset: the " +prefix;^179^180^181^182^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^179^180^181^^^139^206^[ADD] String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of "^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "categories.default-prefix" )   >=  " ";^194^195^^^^139^206^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesCount != ends.length %  2 )  {^150^^^^^139^206^[REPLACE] if  ( seriesCount != ends.length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String errMsg = "DefaultIntervalCategoryDataset: the number " +errMsg;^151^152^153^154^^139^206^[REPLACE] String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^155^^^^^139^206^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesCount  !=  0 )  {^157^^^^^139^206^[REPLACE] if  ( seriesCount > 0 )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^157^158^^160^^139^206^[ADD] if  ( seriesCount > 0 )  {  if  ( seriesKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.seriesKeys = null; ;^202^^^^^157^203^[REPLACE] this.categoryKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )  +prefix;^171^172^^^^160^174^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length - 5 != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryCount != ends[0].length - 2 )  {^178^^^^^139^206^[REPLACE] if  ( categoryCount != ends[0].length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getBundle ( "categories.default-prefix" )   >=  " ";^194^195^^^^185^197^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^187^188^189^^^139^206^[ADD] throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys =  null;^191^^^^^139^206^[REPLACE] this.categoryKeys = categoryKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length - 4 != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^191^^^^^139^206^[ADD] this.categoryKeys = categoryKeys;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )   <=  " ";^171^172^^^^139^206^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^171^172^^^^139^206^[ADD] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "categories.default-prefix" )   ||  " ";^194^195^^^^139^206^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys == true )  {^160^^^^^139^206^[REPLACE] if  ( seriesKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys.length (  )  != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length *  0.5  != seriesCount )  {^162^^^^^139^206^[REPLACE] if  ( seriesKeys.length != seriesCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^162^163^164^165^166^139^206^[ADD] if  ( seriesKeys.length != seriesCount )  { throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ; }^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryCount != ends[0].length %  2 )  {^178^^^^^139^206^[REPLACE] if  ( categoryCount != ends[0].length )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys == true )  {^185^^^^^139^206^[REPLACE] if  ( categoryKeys != null )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^185^186^187^188^189^139^206^[ADD] if  ( categoryKeys != null )  { if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "categories.default-prefix" )   ||  " ";^194^195^^^^185^197^[REPLACE] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length - 3 != categoryCount )  {^186^^^^^139^206^[REPLACE] if  ( categoryKeys.length != categoryCount )  {^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = null; ;^201^^^^^139^206^[REPLACE] this.seriesKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys = true;^202^^^^^139^206^[REPLACE] this.categoryKeys = null;^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^146^^^^^139^206^[ADD] String baseName = "org.jfree.data.resources.DataPackageResources";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^151^152^153^^^139^206^[ADD] String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end "^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^String prefix = resources.getString ( "series.default-prefix" )   >  " ";^171^172^^^^139^206^[REPLACE] String prefix = resources.getString ( "series.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^194^195^^^^139^206^[ADD] String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[METHOD] <init> [TYPE] Number[][]) [PARAMETER] Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  ResourceBundle resources  [TYPE]  String baseName  errMsg  prefix  [TYPE]  boolean false  true  [TYPE]  int categoryCount  seriesCount  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int result = 3;^217^^^^^216^222^[REPLACE] int result = 0;^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( this.startData == null )  {^218^^^^^216^222^[REPLACE] if  ( this.startData != null )  {^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^result = this.startData.length;^218^219^220^^^216^222^[ADD] if  ( this.startData != null )  { result = this.startData.length; }^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^result = this.startData[0].length; ;^219^^^^^216^222^[REPLACE] result = this.startData.length;^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return new java.util.ArrayList (  ) ;^221^^^^^216^222^[REPLACE] return result;^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int result = -0;^235^^^^^234^243^[REPLACE] int result = -1;^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^235^^^^^234^243^[ADD] int result = -1;^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length != categoryCount )  {^237^^^^^234^243^[REPLACE] if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^result =  null;^238^^^^^234^243^[REPLACE] result = i;^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0; i < this.seriesKeys.length (  ) ; i++ )  {^236^^^^^234^243^[REPLACE] for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^[REPLACE] for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return new java.util.ArrayList (  ) ;^242^^^^^234^243^[REPLACE] return result;^[METHOD] getSeriesIndex [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (   ( series < 0 * 0 )  )  {^255^^^^^254^259^[REPLACE] if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^256^^^^^254^259^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return this.seriesKeys[row];^258^^^^^254^259^[REPLACE] return this.seriesKeys[series];^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys != null )  {^271^^^^^270^280^[REPLACE] if  ( seriesKeys == null )  {^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^272^^^^^270^280^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[ADD]^^272^^^^^270^280^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^if  ( categoryKeys.length + 1 != getSeriesCount (  )  )  {^274^^^^^270^280^[REPLACE] if  ( seriesKeys.length != getSeriesCount (  )  )  {^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^274^^^^^270^280^[REMOVE] ^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^275^276^^^^270^280^[REPLACE] throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[ADD]^^275^276^^^^270^280^[ADD] throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^this.seriesKeys =  categoryKeys;^278^^^^^270^280^[REPLACE] this.seriesKeys = seriesKeys;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[ADD]^^278^^^^^270^280^[ADD] this.seriesKeys = seriesKeys;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return getSeriesIndex ( rowKey ) ;^279^^^^^270^280^[REPLACE] fireDatasetChanged (  ) ;^[METHOD] setSeriesKeys [TYPE] void [PARAMETER] Comparable[] seriesKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^int result = 2;^290^^^^^289^297^[REPLACE] int result = 0;^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^290^^^^^289^297^[ADD] int result = 0;^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (startData == null )  {^291^^^^^289^297^[REPLACE] if  ( this.startData != null )  {^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( getSeriesCount (  )   <=  0 )  {^292^^^^^289^297^[REPLACE] if  ( getSeriesCount (  )  > 0 )  {^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^result = this.startData.length; ;^293^^^^^289^297^[REPLACE] result = this.startData[0].length;^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^result = this.startData[0 ].length;^293^^^^^289^297^[REPLACE] result = this.startData[0].length;^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( getSeriesCount (  )   <  0 )  {^292^^^^^289^297^[REPLACE] if  ( getSeriesCount (  )  > 0 )  {^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return new java.util.ArrayList (  ) ;^296^^^^^289^297^[REPLACE] return result;^[METHOD] getCategoryCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys != false )  {^310^^^^^307^317^[REPLACE] if  ( this.categoryKeys == null )  {^[METHOD] getColumnKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[ADD]^return new ArrayList (  ) ;^310^311^312^^^307^317^[ADD] if  ( this.categoryKeys == null )  { return new ArrayList (  ) ; }^[METHOD] getColumnKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableList (   this.categoryKeys    ) ;^314^315^^^^307^317^[REPLACE] return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^[METHOD] getColumnKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^311^^^^^307^317^[REPLACE] return new ArrayList (  ) ;^[METHOD] getColumnKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^if  ( categoryKeys != this )  {^329^^^^^328^345^[REPLACE] if  ( categoryKeys == null )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^330^^^^^328^345^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length - 5 != this.startData[0].length - 5 )  {^332^^^^^328^345^[REPLACE] if  ( categoryKeys.length != this.startData[0].length )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^333^334^^^^328^345^[REPLACE] throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesKeys[i] != this )  {^337^^^^^328^345^[REPLACE] if  ( categoryKeys[i] == null )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^337^338^339^340^341^328^345^[ADD] if  ( categoryKeys[i] == null )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ; }^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " ;^338^339^340^^^328^345^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < seriesKeys.length *  0 .5 ; i++ )  {^336^^^^^328^345^[REPLACE] for  ( int i = 0; i < categoryKeys.length; i++ )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys[i] != this )  {^337^^^^^328^345^[REPLACE] if  ( categoryKeys[i] == null )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^338^339^340^^^328^345^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < categoryKeys.length; i++ )  {^336^^^^^328^345^[REPLACE] for  ( int i = 0; i < categoryKeys.length; i++ )  {^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^336^337^338^339^340^328^345^[ADD] for  ( int i = 0; i < categoryKeys.length; i++ )  { if  ( categoryKeys[i] == null )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.categoryKeys =  seriesKeys;^343^^^^^328^345^[REPLACE] this.categoryKeys = categoryKeys;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getSeriesIndex ( rowKey ) ;^344^^^^^328^345^[REPLACE] fireDatasetChanged (  ) ;^[METHOD] setCategoryKeys [TYPE] void [PARAMETER] Comparable[] categoryKeys [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int categoryIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^[REPLACE] int seriesIndex = getSeriesIndex ( series ) ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (itemIndex  >=  0 )  {^362^^^^^360^370^[REPLACE] if  ( seriesIndex < 0 )  {^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^363^^^^^360^370^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^363^^^^^360^370^[ADD] throw new UnknownKeyException  (" ")  ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int itemIndex = getColumnIndex ( series ) ;^365^^^^^360^370^[REPLACE] int itemIndex = getColumnIndex ( category ) ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^365^^^^^360^370^[ADD] int itemIndex = getColumnIndex ( category ) ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( itemIndex  >  0 )  {^366^^^^^360^370^[REPLACE] if  ( itemIndex < 0 )  {^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^367^^^^^360^370^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^367^^^^^360^370^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getStartValue ( seriesIndex, itemIndex ) ;^369^^^^^360^370^[REPLACE] return getValue ( seriesIndex, itemIndex ) ;^[METHOD] getValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^386^^^^^385^387^[REPLACE] return getEndValue ( series, category ) ;^[METHOD] getValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int categoryIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^[REPLACE] int seriesIndex = getSeriesIndex ( series ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^401^^^^^400^410^[ADD] int seriesIndex = getSeriesIndex ( series ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( itemIndex  !=  0 / 4 )  {^402^^^^^400^410^[REPLACE] if  ( seriesIndex < 0 )  {^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^403^^^^^400^410^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^403^^^^^400^410^[ADD] throw new UnknownKeyException  (" ")  ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int itemIndex = getColumnIndex ( series ) ;^405^^^^^400^410^[REPLACE] int itemIndex = getColumnIndex ( category ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^405^^^^^400^410^[ADD] int itemIndex = getColumnIndex ( category ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesIndex  ==  0 )  {^406^^^^^400^410^[REPLACE] if  ( itemIndex < 0 )  {^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^406^407^408^^^400^410^[ADD] if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^407^^^^^400^410^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^407^^^^^400^410^[ADD] throw new UnknownKeyException  (" ")  ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^407^^^^^400^410^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getValue ( seriesIndex, itemIndex ) ;^409^^^^^400^410^[REPLACE] return getStartValue ( seriesIndex, itemIndex ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (  ( series < 0 )  ) {^426^^^^^423^441^[REPLACE] if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^427^428^429^^^423^441^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " ;^427^428^429^^^423^441^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (   ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^[REPLACE] if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " ;^433^434^435^^^423^441^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return this.endData[series][category];^439^^^^^423^441^[REPLACE] return this.startData[series][category];^[METHOD] getStartValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int categoryIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^[REPLACE] int seriesIndex = getSeriesIndex ( series ) ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesIndex  >=  0 )  {^455^^^^^453^463^[REPLACE] if  ( seriesIndex < 0 )  {^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^455^456^457^^^453^463^[ADD] if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^456^^^^^453^463^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^456^^^^^453^463^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int itemIndex = getColumnIndex ( series ) ;^458^^^^^453^463^[REPLACE] int itemIndex = getColumnIndex ( category ) ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( seriesIndex  ==  2 )  {^459^^^^^453^463^[REPLACE] if  ( itemIndex < 0 )  {^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return ;^460^^^^^453^463^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^460^^^^^453^463^[REPLACE] throw new UnknownKeyException  (" ")  ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getStartValue ( seriesIndex, itemIndex ) ;^462^^^^^453^463^[REPLACE] return getEndValue ( seriesIndex, itemIndex ) ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] Comparable series Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  series  [TYPE]  boolean false  true  [TYPE]  int itemIndex  seriesIndex  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (  ( series < 0 + 1 )  ) {^476^^^^^475^489^[REPLACE] if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " ;^477^478^479^^^475^489^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (   ( true (  )  )  )  {^482^^^^^475^489^[REPLACE] if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^482^483^484^485^486^475^489^[ADD] if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ; }^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " ;^483^484^485^^^475^489^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return this.startData[series][category];^488^^^^^475^489^[REPLACE] return this.endData[series][category];^[METHOD] getEndValue [TYPE] Number [PARAMETER] int series int category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int category  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (   ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^[REPLACE] if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^505^506^507^^^501^522^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^511^^^^^501^522^[REPLACE] int categoryIndex = getCategoryIndex ( category ) ;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryIndex  >  0 )  {^512^^^^^501^522^[REPLACE] if  ( categoryIndex < 0 )  {^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^512^513^514^515^516^501^522^[ADD] if  ( categoryIndex < 0 )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ; }^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^513^514^515^^^501^522^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^513^514^515^^^501^522^[ADD] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.endData[series][categoryIndex] = value; ;^519^^^^^501^522^[REPLACE] this.startData[series][categoryIndex] = value;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getSeriesIndex ( rowKey ) ;^520^^^^^501^522^[REPLACE] fireDatasetChanged (  ) ;^[METHOD] setStartValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (  ( series < 0 )  ) {^537^^^^^534^555^[REPLACE] if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^538^539^540^^^534^555^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^538^539^540^^^534^555^[ADD] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^544^^^^^534^555^[REPLACE] int categoryIndex = getCategoryIndex ( category ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^544^^^^^534^555^[ADD] int categoryIndex = getCategoryIndex ( category ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  (series  >  0 )  {^545^^^^^534^555^[REPLACE] if  ( categoryIndex < 0 )  {^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^546^547^548^^^534^555^[REPLACE] throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^this.startData[series][categoryIndex] = value; ;^552^^^^^534^555^[REPLACE] this.endData[series][categoryIndex] = value;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return getSeriesIndex ( rowKey ) ;^553^^^^^534^555^[REPLACE] fireDatasetChanged (  ) ;^[METHOD] setEndValue [TYPE] void [PARAMETER] int series Comparable category Number value [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  int categoryIndex  series  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^int result = -3;^567^^^^^566^575^[REPLACE] int result = -1;^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^if  ( categoryKeys.length != categoryCount )  {^569^^^^^566^575^[REPLACE] if  ( category.equals ( this.categoryKeys[i] )  )  {^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^result = i;break;^569^570^571^572^^566^575^[ADD] if  ( category.equals ( this.categoryKeys[i] )  )  { result = i; break; }^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^result =  null;^570^^^^^566^575^[REPLACE] result = i;^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0; i < this.categoryKeys.length - 4; i++ )  {^568^^^^^566^575^[REPLACE] for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[ADD]^^570^571^^^^566^575^[ADD] result = i; break;^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^[REPLACE] for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^return new java.util.ArrayList (  ) ;^574^^^^^566^575^[REPLACE] return result;^[METHOD] getCategoryIndex [TYPE] int [PARAMETER] Comparable category [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable category  [TYPE]  boolean false  true  [TYPE]  int i  result  [TYPE]  Comparable[] categoryKeys  seriesKeys 
[REPLACE]^Number[][] result = new Number[array.length][];^587^^^^^586^594^[REPLACE] Comparable[] result = new Comparable[count];^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^587^^^^^586^594^[ADD] Comparable[] result = new Comparable[count];^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^Number[][] result = new Number[array.length][];^588^^^^^586^594^[REPLACE] String name;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 0; i  >=  count; i++ )  {^589^^^^^586^594^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^name = prefix  ==   ( i  ==  1 ) ;^590^^^^^586^594^[REPLACE] name = prefix +  ( i + 1 ) ;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^result[i]  =  result[i] ;^591^^^^^586^594^[REPLACE] result[i] = name;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^591^^^^^586^594^[ADD] result[i] = name;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^name = prefix  <=   ( i  <=  1L ) ;^590^^^^^586^594^[REPLACE] name = prefix +  ( i + 1 ) ;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^590^^^^^586^594^[ADD] name = prefix +  ( i + 1 ) ;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 3; i < count; i++ )  {^589^^^^^586^594^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^589^590^591^592^^586^594^[ADD] for  ( int i = 0; i < count; i++ )  { name = prefix +  ( i + 1 ) ; result[i] = name; }^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return seriesKeys;^593^^^^^586^594^[REPLACE] return result;^[METHOD] generateKeys [TYPE] Comparable[] [PARAMETER] int count String prefix [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return result;^606^^^^^605^607^[REPLACE] return this.categoryKeys[column];^[METHOD] getColumnKey [TYPE] Comparable [PARAMETER] int column [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int column  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( columnKey != null )  {^619^^^^^618^623^[REPLACE] if  ( columnKey == null )  {^[METHOD] getColumnIndex [TYPE] int [PARAMETER] Comparable columnKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable columnKey  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^620^^^^^618^623^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getColumnIndex [TYPE] int [PARAMETER] Comparable columnKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable columnKey  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^622^^^^^618^623^[REPLACE] return getCategoryIndex ( columnKey ) ;^[METHOD] getColumnIndex [TYPE] int [PARAMETER] Comparable columnKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable columnKey  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^635^^^^^634^636^[REPLACE] return getSeriesIndex ( rowKey ) ;^[METHOD] getRowIndex [TYPE] int [PARAMETER] Comparable rowKey [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable rowKey  [TYPE]  boolean false  true  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( this.seriesKeys != null )  {^649^^^^^646^655^[REPLACE] if  ( this.seriesKeys == null )  {^[METHOD] getRowKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^653^^^^^646^655^[REPLACE] return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[METHOD] getRowKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^650^^^^^646^655^[REPLACE] return new java.util.ArrayList (  ) ;^[METHOD] getRowKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return   Arrays.asList ( this.seriesKeys )  ;^653^^^^^646^655^[REPLACE] return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[METHOD] getRowKeys [TYPE] List [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^if  (   ( row < 0 )  )  {^667^^^^^666^672^[REPLACE] if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REMOVE]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^667^^^^^666^672^[REMOVE] ^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return ;^668^669^^^^666^672^[REPLACE] throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^668^669^^^^666^672^[ADD] throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^668^669^^^^666^672^[REPLACE] throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return this.seriesKeys[series];^671^^^^^666^672^[REPLACE] return this.seriesKeys[row];^[METHOD] getRowKey [TYPE] Comparable [PARAMETER] int row [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int row  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^684^^^^^683^685^[REPLACE] return this.categoryKeys.length;^[METHOD] getColumnCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^return result;^696^^^^^695^697^[REPLACE] return this.seriesKeys.length;^[METHOD] getRowCount [TYPE] int [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Comparable[] categoryKeys  result  seriesKeys  [TYPE]  boolean false  true 
[REPLACE]^if  ( obj  &&  this )  {^707^^^^^706^729^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^return true;^707^708^709^^^706^729^[ADD] if  ( obj == this )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return false;^708^^^^^706^729^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( ! ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {^710^^^^^706^729^[REPLACE] if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REMOVE]^if  ( ! ( equals ( this.categoryKeys, that.categoryKeys )  )  )  {     return false; }^710^^^^^706^729^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^711^^^^^706^729^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( !Arrays.asList ( this.seriesKeys, that.seriesKeys )  )  {^715^^^^^706^729^[REPLACE] if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^716^^^^^706^729^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( !Arrays.asList ( this.categoryKeys, that.categoryKeys )  )  {^718^^^^^706^729^[REPLACE] if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^719^^^^^706^729^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( equal ( this.startData, that.startData )  )  {^721^^^^^706^729^[REPLACE] if  ( !equal ( this.startData, that.startData )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^722^^^^^706^729^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( equal ( this.endData, that.endData )  )  {^724^^^^^706^729^[REPLACE] if  ( !equal ( this.endData, that.endData )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^725^^^^^706^729^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return false;^728^^^^^706^729^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset that  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ; ;^742^^^^^739^747^[REPLACE] clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ; ;^743^^^^^739^747^[REPLACE] clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^clone.endData = clone ( this.endData ) ; ;^744^^^^^739^747^[REPLACE] clone.startData = clone ( this.startData ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^744^745^^^^739^747^[ADD] clone.startData = clone ( this.startData ) ; clone.endData = clone ( this.endData ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^clone.startData = clone ( this.startData ) ; ;^745^^^^^739^747^[REPLACE] clone.endData = clone ( this.endData ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return result;^746^^^^^739^747^[REPLACE] return clone;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  DefaultIntervalCategoryDataset clone  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  (startData != this )  {^758^^^^^757^773^[REPLACE] if  ( array1 == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return false ;^759^^^^^757^773^[REPLACE] return  ( array2 == null ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return  (startData != null ) ;;^759^^^^^757^773^[REPLACE] return  ( array2 == null ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( array2 != this  )  {^761^^^^^757^773^[REPLACE] if  ( array2 == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^762^^^^^757^773^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( array1.length *  2 != array2.length *  2 )  {^764^^^^^757^773^[REPLACE] if  ( array1.length != array2.length )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^765^^^^^757^773^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( !Arrays.equals ( array1[i], startData[i] )  )  {^768^^^^^757^773^[REPLACE] if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^768^769^770^^^757^773^[ADD] if  ( !Arrays.equals ( array1[i], array2[i] )  )  { return false; }^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return true;^769^^^^^757^773^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 0; i < array1.length %  2; i++ )  {^767^^^^^757^773^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^return false;^768^769^770^^^757^773^[ADD] if  ( !Arrays.equals ( array1[i], array2[i] )  )  { return false; }^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < array1.length; i++ )  {^767^^^^^757^773^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return false;^772^^^^^757^773^[REPLACE] return true;^[METHOD] equal [TYPE] boolean [PARAMETER] Number[][] array1 Number[][] array2 [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array1  array2  endData  ends  startData  starts  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^if  ( array != null )  {^783^^^^^782^794^[REPLACE] if  ( array == null )  {^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^throw new UnknownKeyException  (" ")  ; ;^784^^^^^782^794^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^784^^^^^782^794^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return ;^784^^^^^782^794^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^Comparable[] result = new Comparable[count];^786^^^^^782^794^[REPLACE] Number[][] result = new Number[array.length][];^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 0; i < array.length %  0.5 ; i++ )  {^787^^^^^782^794^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^result[i]  = null ;^791^^^^^782^794^[REPLACE] result[i] = copychild;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^Number[][] result = new Number[array.length][];^788^^^^^782^794^[REPLACE] Number[] child = array[i];^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^Number[] copycopychild = new Number[child.length];^789^^^^^782^794^[REPLACE] Number[] copychild = new Number[child.length];^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^789^790^^^^782^794^[ADD] Number[] copychild = new Number[child.length]; System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^result[i]  =  result[i] ;^791^^^^^782^794^[REPLACE] result[i] = copychild;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^for  ( int i = 0 ; i < array.length; i++ )  {^787^^^^^782^794^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^Number[] child = starts[i];^788^^^^^782^794^[REPLACE] Number[] child = array[i];^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[ADD]^^789^790^^^^782^794^[ADD] Number[] copychild = new Number[child.length]; System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
[REPLACE]^return startData;^793^^^^^782^794^[REPLACE] return result;^[METHOD] clone [TYPE] Number[][] [PARAMETER] Number[][] array [CLASS] DefaultIntervalCategoryDataset   [TYPE]  Number[][] array  array1  array2  endData  ends  result  startData  starts  [TYPE]  Number[] child  copychild  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Comparable[] categoryKeys  result  seriesKeys 
