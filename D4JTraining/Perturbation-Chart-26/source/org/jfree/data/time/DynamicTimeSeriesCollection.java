[REPLACE]^public static final int START = 0 + 4;^95^^^^^^^[REPLACE] public static final int START = 0;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^public static final int MIDDLE  = null ;^100^^^^^^^[REPLACE] public static final int MIDDLE = 1;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^public static final int END = 3;^105^^^^^^^[REPLACE] public static final int END = 2;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private int maximumItemCount ;^108^^^^^^^[REPLACE] private int maximumItemCount = 2000;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private int historyCount;^111^^^^^^^[REPLACE] protected int historyCount;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private Class timePeriodClass ;^117^^^^^^^[REPLACE] private Class timePeriodClass = Minute.class;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private RegularTimePeriod[] pointsInTime;^120^^^^^^^[REPLACE] protected RegularTimePeriod[] pointsInTime;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private Calendar workingCalendar;^178^^^^^^^[REPLACE] protected Calendar workingCalendar;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private  short  position;^184^^^^^^^[REPLACE] private int position;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private  long  newestAt;^197^^^^^^^[REPLACE] private int newestAt;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private Float minValue  = null ;^217^^^^^^^[REPLACE] private Float minValue = new Float ( 0.0f ) ;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^private Float maxValue ;^220^^^^^^^[REPLACE] private Float maxValue = null;^ [CLASS] DynamicTimeSeriesCollection ValueSequence  
[REPLACE]^result = this.maxValue.doubleValue (  ) ;^137^^^^^136^138^[REPLACE] this ( DynamicTimeSeriesCollection.this.maximumItemCount ) ;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence() [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.dataPoints =  new float[seriesCount];^146^^^^^145^150^[REPLACE] this.dataPoints = new float[length];^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( seriesCountnt i = 0; i < length /  0.5 ; i++ )  {^147^^^^^145^150^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.dataPoints[index] = value; ;^148^^^^^145^150^[REPLACE] this.dataPoints[i] = 0.0f;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^148^^^^^145^150^[ADD] this.dataPoints[i] = 0.0f;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^147^^^^^145^150^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this ( seriesCount, nMoments, new Millisecond (  ) , TimeZone.getDefault (  )  ) ;^234^^^^^232^237^[REPLACE] this ( nSeries, nMoments, new Millisecond (  ) , TimeZone.getDefault (  )  ) ;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection(int,int) [PARAMETER] int nSeries int nMoments [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return period.getLastMillisecond ( this.workingCalendar ) ;^234^^^^^232^237^[REPLACE] this ( nSeries, nMoments, new Millisecond (  ) , TimeZone.getDefault (  )  ) ;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection(int,int) [PARAMETER] int nSeries int nMoments [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.newestAt = nMoments  >=  3;^235^^^^^232^237^[REPLACE] this.newestAt = nMoments - 1;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection(int,int) [PARAMETER] int nSeries int nMoments [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this ( nSeries, nMoments, timeSample, TimeZone.getDefault (  )  ) ;^248^^^^^246^250^[REPLACE] this ( nSeries, nMoments, new Millisecond (  ) , zone ) ;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.newestAt = nMoments -seriesCount;^249^^^^^246^250^[REPLACE] this.newestAt = nMoments - 1;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this ( maximumItemCount, nMoments, timeSample, TimeZone.getDefault (  )  ) ;^262^^^^^259^263^[REPLACE] this ( nSeries, nMoments, timeSample, TimeZone.getDefault (  )  ) ;^[METHOD] <init> [TYPE] RegularTimePeriod) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this ( nSeries, nMoments, new Millisecond (  ) , TimeZone.getDefault (  )  ) ;^262^^^^^259^263^[REPLACE] this ( nSeries, nMoments, timeSample, TimeZone.getDefault (  )  ) ;^[METHOD] <init> [TYPE] RegularTimePeriod) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^262^^^^^259^263^[ADD] this ( nSeries, nMoments, timeSample, TimeZone.getDefault (  )  ) ;^[METHOD] <init> [TYPE] RegularTimePeriod) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.maximumItemCount =  null;^279^^^^^276^304^[REPLACE] this.maximumItemCount = nMoments;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.historyCount =  seriesCount;^280^^^^^276^304^[REPLACE] this.historyCount = nMoments;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.seriesKeys =  new Comparable[newestAt];^281^^^^^276^304^[REPLACE] this.seriesKeys = new Comparable[nSeries];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^for  ( int i = 0; i  >  nSeries; i++ )  {^283^^^^^276^304^[REPLACE] for  ( int i = 0; i < nSeries; i++ )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.seriesKeys[i] ;^284^^^^^276^304^[REPLACE] this.seriesKeys[i] = "";^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.seriesKeys[i]  =  this.seriesKeys[i] ;^284^^^^^276^304^[REPLACE] this.seriesKeys[i] = "";^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^for  ( int i = 4; i < nSeries; i++ )  {^283^^^^^276^304^[REPLACE] for  ( int i = 0; i < nSeries; i++ )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.newestAt =seriesCount - 1 >>> 2;^286^^^^^276^304^[REPLACE] this.newestAt = nMoments - 1;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^286^287^^^^276^304^[ADD] this.newestAt = nMoments - 1; this.valueHistory = new ValueSequence[nSeries];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.valueHistory =  new ValueSequence[position];^287^^^^^276^304^[REPLACE] this.valueHistory = new ValueSequence[nSeries];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^this.timePeriodClass = timeSample.getClass (  ) ;^287^288^^^^276^304^[ADD] this.valueHistory = new ValueSequence[nSeries]; this.timePeriodClass = timeSample.getClass (  ) ;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.timePeriodClass =  null.getClass (  ) ;^288^^^^^276^304^[REPLACE] this.timePeriodClass = timeSample.getClass (  ) ;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^if  ( this.timePeriodClass  &&  Second.class )  {^291^^^^^276^304^[REPLACE] if  ( this.timePeriodClass == Second.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^if  (timePeriodClass  &&  Minute.class )  {^294^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Minute.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^if  ( this.timePeriodClass  ||  Hour.class )  {^297^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Hour.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^this.pointsInTime = new Hour[nMoments];^297^298^299^^^276^304^[ADD] else if  ( this.timePeriodClass == Hour.class )  { this.pointsInTime = new Hour[nMoments]; }^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.pointsInTime = new Minute[nMoments]; ;^298^^^^^276^304^[REPLACE] this.pointsInTime = new Hour[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.pointsInTime = new Hour[nMoments]; ;^295^^^^^276^304^[REPLACE] this.pointsInTime = new Minute[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^if  (timePeriodClass  !=  Hour.class )  {^297^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Hour.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^295^^^^^276^304^[ADD] this.pointsInTime = new Minute[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.pointsInTime = new Minute[nMoments]; ;^292^^^^^276^304^[REPLACE] this.pointsInTime = new Second[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^else {^294^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Minute.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^else {^297^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Hour.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^298^^^^^276^304^[ADD] this.pointsInTime = new Hour[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^if  ( this.timePeriodClass  &&  Hour.class )  {^297^^^^^276^304^[REPLACE] else if  ( this.timePeriodClass == Hour.class )  {^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^292^^^^^276^304^[ADD] this.pointsInTime = new Second[nMoments];^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.workingCalendar =  Calendar.getInstance ( null ) ;^301^^^^^276^304^[REPLACE] this.workingCalendar = Calendar.getInstance ( zone ) ;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.position = position; ;^302^^^^^276^304^[REPLACE] this.position = START;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.domainIsPointsInTime = false;^303^^^^^276^304^[REPLACE] this.domainIsPointsInTime = true;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[ADD]^^303^^^^^276^304^[ADD] this.domainIsPointsInTime = true;^[METHOD] <init> [TYPE] TimeZone) [PARAMETER] int nSeries int nMoments RegularTimePeriod timeSample TimeZone zone [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  TimeZone zone  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod timeSample 
[REPLACE]^this.dataPoints[i] = 0.0f; ;^159^^^^^158^160^[REPLACE] this.dataPoints[index] = value;^[METHOD] enterData [TYPE] void [PARAMETER] int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^170^^^^^169^171^[REPLACE] return this.dataPoints[index];^[METHOD] getData [TYPE] float [PARAMETER] int index [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.pointsInTime[0] != null )  {^319^^^^^317^337^[REPLACE] if  ( this.pointsInTime[0] == null )  {^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^for  ( int i = 0; i  >=  this.historyCount; i++ )  {^321^^^^^317^337^[REPLACE] for  ( int i = 1; i < this.historyCount; i++ )  {^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[i] = this.pointsInTime[i  <=  0].next (  ) ;^322^^^^^317^337^[REPLACE] this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[ADD]^^322^^^^^317^337^[ADD] this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[4] = start;^320^^^^^317^337^[REPLACE] this.pointsInTime[0] = start;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[i] = this.pointsInTime[i  ==  1].next (  ) ;^322^^^^^317^337^[REPLACE] this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^for  ( int i = 4; i < this.historyCount; i++ )  {^321^^^^^317^337^[REPLACE] for  ( int i = 1; i < this.historyCount; i++ )  {^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^for  (seriesCountnt seriesCount = 1; i  ==  this.historyCount; i++ )  {^321^^^^^317^337^[REPLACE] for  ( int i = 1; i < this.historyCount; i++ )  {^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[ADD]^^321^322^323^^^317^337^[ADD] for  ( int i = 1; i < this.historyCount; i++ )  { this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ; }^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[i] = this.pointsInTime[i -seriesCount].next (  ) ;^322^^^^^317^337^[REPLACE] this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[3] = start;^320^^^^^317^337^[REPLACE] this.pointsInTime[0] = start;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.pointsInTime[i] = this.pointsInTime[i  |  1].next (  ) ;^322^^^^^317^337^[REPLACE] this.pointsInTime[i] = this.pointsInTime[i - 1].next (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^for  ( int i = 0; i < this.historyCount; i++ )  {^321^^^^^317^337^[REPLACE] for  ( int i = 1; i < this.historyCount; i++ )  {^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^long oldestL = this.pointsInTime[1].getFirstMillisecond ( this.workingCalendar ) ;^325^326^327^^^317^337^[REPLACE] long oldestL = this.pointsInTime[0].getFirstMillisecond ( this.workingCalendar ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^long nextL = this.pointsInTime[4].getFirstMillisecond ( this.workingCalendar ) ;^328^329^330^^^317^337^[REPLACE] long nextL = this.pointsInTime[1].getFirstMillisecond ( this.workingCalendar ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.deltaTime =deltaTime - oldestL;^331^^^^^317^337^[REPLACE] this.deltaTime = nextL - oldestL;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.oldestAt = 3;^332^^^^^317^337^[REPLACE] this.oldestAt = 0;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^this.newestAt = this.historyCount -nMoments;^333^^^^^317^337^[REPLACE] this.newestAt = this.historyCount - 1;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^long endL = this.domainEnd.longValue (  ) ;^334^^^^^317^337^[REPLACE] findDomainLimits (  ) ;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^return toFetch;^335^^^^^317^337^[REPLACE] return this.deltaTime;^[METHOD] setTimeBase [TYPE] long [PARAMETER] RegularTimePeriod start [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  nextL  oldestL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod start 
[REPLACE]^long startL = getOldestTime (  ) .getLastMillisecond ( this.workingCalendar ) ;^345^^^^^343^357^[REPLACE] long startL = getOldestTime (  ) .getFirstMillisecond ( this.workingCalendar ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int s = 0; s < nDataPoints; s++ )  { if  ( this.valueHistory[s] == null )  {^346^^^^^343^357^[REPLACE] long endL;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^346^^^^^343^357^[ADD] long endL;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( extremaChanged )  {^347^^^^^343^357^[REPLACE] if  ( this.domainIsPointsInTime )  {^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^endL = getNewestTime (  ) .getFirstMillisecond ( this.workingCalendar ) ; ;^351^^^^^343^357^[REPLACE] endL = getNewestTime (  ) .getLastMillisecond ( this.workingCalendar ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^endL = getNewestTime (  ) .getLastMillisecond ( this.workingCalendar ) ; ;^348^^^^^343^357^[REPLACE] endL = getNewestTime (  ) .getFirstMillisecond ( this.workingCalendar ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.domainEnd = new Long ( endL ) ; ;^353^^^^^343^357^[REPLACE] this.domainStart = new Long ( startL ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^353^354^^^^343^357^[ADD] this.domainStart = new Long ( startL ) ; this.domainEnd = new Long ( endL ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.domainStart =  new Long ( startL )  ; ;^354^^^^^343^357^[REPLACE] this.domainEnd = new Long ( endL ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^354^^^^^343^357^[ADD] this.domainEnd = new Long ( endL ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.domainStart = new Long ( startL ) ; ;^355^^^^^343^357^[REPLACE] this.domainRange = new Range ( startL, endL ) ;^[METHOD] findDomainLimits [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^365^^^^^364^366^[REPLACE] return this.position;^[METHOD] getPosition [TYPE] int [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.position = START; ;^374^^^^^373^375^[REPLACE] this.position = position;^[METHOD] setPosition [TYPE] void [PARAMETER] int position [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.workingCalendar = Calendar.getInstance ( zone ) ;^391^^^^^389^432^[REPLACE] invalidateRangeInfo (  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int s;^392^^^^^389^432^[REPLACE] int i;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( dataPoints != true )  {^393^^^^^389^432^[REPLACE] if  ( values == null )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^393^394^395^396^^389^432^[ADD] if  ( values == null )  { throw new IllegalArgumentException  (" ")  : " + "cannot add null array of values." ) ; }^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ; ;^394^395^^^^389^432^[REPLACE] throw new IllegalArgumentException  (" ")  : " + "cannot add null array of values." ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^394^395^^^^389^432^[ADD] throw new IllegalArgumentException  (" ")  : " + "cannot add null array of values." ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( seriesNumber >= this.valueHistory.length + 5 )  {^397^^^^^389^432^[REPLACE] if  ( seriesNumber >= this.valueHistory.length )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^397^398^399^400^^389^432^[ADD] if  ( seriesNumber >= this.valueHistory.length )  { throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ; }^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^throw new IllegalArgumentException ( "TimeSeriesDataset.addValue (  ) : series #" ;^398^399^^^^389^432^[REPLACE] throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return ;^398^399^^^^389^432^[REPLACE] throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueHistory[seriesNumber] != null )  {^401^^^^^389^432^[REPLACE] if  ( this.valueHistory[seriesNumber] == null )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^401^402^403^404^405^389^432^[ADD] if  ( this.valueHistory[seriesNumber] == null )  { this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ; this.seriesCount++; }^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber]  =  this.valueHistory[seriesNumber] ;^402^403^^^^389^432^[REPLACE] this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int srcLength = dataPoints.length;^409^^^^^389^432^[REPLACE] int srcLength = values.length;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int newIndex = toFetch + this.oldestAt;^410^^^^^389^432^[REPLACE] int copyLength = this.historyCount;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^boolean fillNeeded = true;^411^^^^^389^432^[REPLACE] boolean fillNeeded = false;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( srcLength  ==  this.historyCount )  {^412^^^^^389^432^[REPLACE] if  ( srcLength < this.historyCount )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^fillNeeded = false;^413^^^^^389^432^[REPLACE] fillNeeded = true;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^copyLength =  newestAt;^414^^^^^389^432^[REPLACE] copyLength = srcLength;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^copyLength =  null;^414^^^^^389^432^[REPLACE] copyLength = srcLength;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( i = 0; i  >= seriesNumber; i++ )  {^417^^^^^389^432^[REPLACE] for  ( i = 0; i < copyLength; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber] .getData ( i )  ;^419^^^^^389^432^[REPLACE] this.valueHistory[seriesNumber].enterData ( i, values[i] ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^419^^^^^389^432^[ADD] this.valueHistory[seriesNumber].enterData ( i, values[i] ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( i = 0 / 0; i < copyLength; i++ )  {^417^^^^^389^432^[REPLACE] for  ( i = 0; i < copyLength; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^417^418^419^420^^389^432^[ADD] for  ( i = 0; i < copyLength; i++ )  {  this.valueHistory[seriesNumber].enterData ( i, values[i] ) ; }^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( extremaChanged )  {^421^^^^^389^432^[REPLACE] if  ( fillNeeded )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( i = copyLength; i  !=  this.historyCount; i++ )  {^422^^^^^389^432^[REPLACE] for  ( i = copyLength; i < this.historyCount; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[s].enterData ( this.newestAt, newData[s] ) ;^423^^^^^389^432^[REPLACE] this.valueHistory[seriesNumber].enterData ( i, 0.0f ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( i =  null; i < this.historyCount; i++ )  {^422^^^^^389^432^[REPLACE] for  ( i = copyLength; i < this.historyCount; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( seriesCount = copyLength; i  >  this.historyCount; i++ )  {^422^^^^^389^432^[REPLACE] for  ( i = copyLength; i < this.historyCount; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber].enterData ( seriesCount, 0.0f ) ;^423^^^^^389^432^[REPLACE] this.valueHistory[seriesNumber].enterData ( i, 0.0f ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( i =  nSeries; i < this.historyCount; i++ )  {^422^^^^^389^432^[REPLACE] for  ( i = copyLength; i < this.historyCount; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( seriesKey == false )  {^427^^^^^389^432^[REPLACE] if  ( seriesKey != null )  {^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.seriesKeys[seriesNumber] = key; ;^428^^^^^389^432^[REPLACE] this.seriesKeys[seriesNumber] = seriesKey;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^428^^^^^389^432^[ADD] this.seriesKeys[seriesNumber] = seriesKey;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^invalidateRangeInfo (  ) ;^430^^^^^389^432^[REPLACE] fireSeriesChanged (  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] float[] values int seriesNumber Comparable seriesKey [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable seriesKey  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.seriesKeys[seriesNumber] = seriesKey; ;^441^^^^^440^442^[REPLACE] this.seriesKeys[seriesNumber] = key;^[METHOD] setSeriesKey [TYPE] void [PARAMETER] int seriesNumber Comparable key [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  Comparable key  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.workingCalendar = Calendar.getInstance ( zone ) ;^453^^^^^451^471^[REPLACE] invalidateRangeInfo (  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^453^^^^^451^471^[ADD] invalidateRangeInfo (  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( seriesNumber >= this.valueHistory.length /  2 )  {^454^^^^^451^471^[REPLACE] if  ( seriesNumber >= this.valueHistory.length )  {^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ; ;^455^456^457^458^^451^471^[REPLACE] throw new IllegalArgumentException ( "TimeSeriesDataset.addValue (  ) : series #" + seriesNumber + "unspecified in c'tor" ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^455^456^457^^^451^471^[ADD] throw new IllegalArgumentException ( "TimeSeriesDataset.addValue (  ) : series #" + seriesNumber + "unspecified in c'tor"^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueHistory[seriesNumber] != null )  {^460^^^^^451^471^[REPLACE] if  ( this.valueHistory[seriesNumber] == null )  {^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^460^461^462^463^464^451^471^[ADD] if  ( this.valueHistory[seriesNumber] == null )  { this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ; this.seriesCount++; }^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber] ;^461^462^^^^451^471^[REPLACE] this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^461^462^^^^451^471^[ADD] this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber] .getData ( copyLength )  ;^468^^^^^451^471^[REPLACE] this.valueHistory[seriesNumber].enterData ( index, value ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^468^^^^^451^471^[ADD] this.valueHistory[seriesNumber].enterData ( index, value ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^invalidateRangeInfo (  ) ;^470^^^^^451^471^[REPLACE] fireSeriesChanged (  ) ;^[METHOD] addValue [TYPE] void [PARAMETER] int seriesNumber int index float value [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float value  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^479^^^^^478^480^[REPLACE] return this.seriesCount;^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^493^^^^^491^494^[REPLACE] return this.historyCount;^[METHOD] getItemCount [TYPE] int [PARAMETER] int series [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.oldestAt  ||  0 )  {^506^^^^^505^515^[REPLACE] if  ( this.oldestAt == 0 )  {^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^return toFetch;^506^507^508^^^505^515^[ADD] if  ( this.oldestAt == 0 )  { return toFetch; }^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return srcLength;^507^^^^^505^515^[REPLACE] return toFetch;^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int newIndex =srcLength + this.oldestAt;^510^^^^^505^515^[REPLACE] int newIndex = toFetch + this.oldestAt;^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^510^^^^^505^515^[ADD] int newIndex = toFetch + this.oldestAt;^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( newIndex  != srcLength )  {^511^^^^^505^515^[REPLACE] if  ( newIndex >= this.historyCount )  {^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^511^512^513^^^505^515^[ADD] if  ( newIndex >= this.historyCount )  { newIndex -= this.historyCount; }^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^tmp -= this.historyCount; ;^512^^^^^505^515^[REPLACE] newIndex -= this.historyCount;^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return series;^514^^^^^505^515^[REPLACE] return newIndex;^[METHOD] translateGet [TYPE] int [PARAMETER] int toFetch [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return wrapOffset ( this.newestAt +position ) ;^525^^^^^524^526^[REPLACE] return wrapOffset ( this.newestAt + delta ) ;^[METHOD] offsetFromNewest [TYPE] int [PARAMETER] int delta [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return wrapOffset ( srcLength + toFetch ) ;^536^^^^^535^537^[REPLACE] return wrapOffset ( this.oldestAt + delta ) ;^[METHOD] offsetFromOldest [TYPE] int [PARAMETER] int delta [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  series  seriesCount  seriesNumber  srcLength  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int nDataPoints = newData.length;^547^^^^^546^555^[REPLACE] int tmp = protoIndex;^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( tmp  <=  this.historyCount )  {^548^^^^^546^555^[REPLACE] if  ( tmp >= this.historyCount )  {^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^else {^551^^^^^546^555^[REPLACE] else if  ( tmp < 0 )  {^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^tmp += this.historyCount;^551^552^553^^^546^555^[ADD] else if  ( tmp < 0 )  { tmp += this.historyCount; }^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^tmp -= this.historyCount; ;^552^^^^^546^555^[REPLACE] tmp += this.historyCount;^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^newIndex -= this.historyCount; ;^549^^^^^546^555^[REPLACE] tmp -= this.historyCount;^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^549^^^^^546^555^[ADD] tmp -= this.historyCount;^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  (toFetch  >  0 )  {^551^^^^^546^555^[REPLACE] else if  ( tmp < 0 )  {^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^551^552^553^^^546^555^[ADD] else if  ( tmp < 0 )  { tmp += this.historyCount; }^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^554^^^^^546^555^[REPLACE] return tmp;^[METHOD] wrapOffset [TYPE] int [PARAMETER] int protoIndex [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^RegularTimePeriod nextInstant = this.pointsInTime[this.newestAt] .getFirstMillisecond ( workingCalendar )  ;^565^^^^^564^609^[REPLACE] RegularTimePeriod nextInstant = this.pointsInTime[this.newestAt].next (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.newestAt ;^566^^^^^564^609^[REPLACE] this.newestAt = this.oldestAt;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^boolean extremaChanged = true;^573^^^^^564^609^[REPLACE] boolean extremaChanged = false;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^float wiper =  ( float )  0.0;^574^^^^^564^609^[REPLACE] float oldMax = 0.0f;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  (minValue == null )  {^575^^^^^564^609^[REPLACE] if  ( this.maxValue != null )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^result = this.maxValue.doubleValue (  ) ; ;^576^^^^^564^609^[REPLACE] oldMax = this.maxValue.floatValue (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^576^^^^^564^609^[ADD] oldMax = this.maxValue.floatValue (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  ( this.valueHistory[s].ValueSequence ( this.oldestAt )   ||  oldMax )  {^579^^^^^564^609^[REPLACE] if  ( this.valueHistory[s].getData ( this.oldestAt )  == oldMax )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^extremaChanged = true;^579^580^581^^^564^609^[ADD] if  ( this.valueHistory[s].getData ( this.oldestAt )  == oldMax )  { extremaChanged = true; }^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^extremaChanged = false;^580^^^^^564^609^[REPLACE] extremaChanged = true;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  ( true )  {^582^^^^^564^609^[REPLACE] if  ( extremaChanged )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^for  ( int s = 0; s  == srcLength (  ) ; s++ )  {^578^^^^^564^609^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^578^579^580^581^^564^609^[ADD] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  { if  ( this.valueHistory[s].getData ( this.oldestAt )  == oldMax )  { extremaChanged = true; }^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  ( this.valueHistory[s].getData ( this.oldestAt )   &&  oldMax )  {^579^^^^^564^609^[REPLACE] if  ( this.valueHistory[s].getData ( this.oldestAt )  == oldMax )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^580^^^^^564^609^[ADD] extremaChanged = true;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^for  ( int s = 0L; s < getSeriesCount (  ) ; s++ )  {^578^^^^^564^609^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  ( fillNeeded )  {^586^^^^^564^609^[REPLACE] if  ( extremaChanged )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.workingCalendar = Calendar.getInstance ( zone ) ;^587^^^^^564^609^[REPLACE] invalidateRangeInfo (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^float oldMax = 0.0f;^590^^^^^564^609^[REPLACE] float wiper =  ( float )  0.0;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^590^^^^^564^609^[ADD] float wiper =  ( float )  0.0;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^for  ( intsrcLength = 0; srcLength  >  getSeriesCount (  ) ; s++ )  {^591^^^^^564^609^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.valueHistory[s].enterData ( this.newestAt, newData[s] ) ;^592^^^^^564^609^[REPLACE] this.valueHistory[s].enterData ( this.newestAt, wiper ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REMOVE]^this.valueHistory[s].enterData ( this.newestAt, newData[s] ) ;^592^^^^^564^609^[REMOVE] ^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^for  ( int s = 3; s < getSeriesCount (  ) ; s++ )  {^591^^^^^564^609^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.pointsInTime[this.newestAt] ;^595^^^^^564^609^[REPLACE] this.pointsInTime[this.newestAt] = nextInstant;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^if  ( protoIndex  <=  this.historyCount )  {^598^^^^^564^609^[REPLACE] if  ( this.oldestAt >= this.historyCount )  {^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^this.oldestAt = 0;^598^599^600^^^564^609^[ADD] if  ( this.oldestAt >= this.historyCount )  { this.oldestAt = 0; }^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.oldestAt = 0 - 2;^599^^^^^564^609^[REPLACE] this.oldestAt = 0;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^599^^^^^564^609^[ADD] this.oldestAt = 0;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.oldestAt = 2;^599^^^^^564^609^[REPLACE] this.oldestAt = 0;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^long startL = this.domainStart.doubleValue (  ) ;^602^^^^^564^609^[REPLACE] long startL = this.domainStart.longValue (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.domainStart = new Long (oldestL + this.deltaTime ) ;^603^^^^^564^609^[REPLACE] this.domainStart = new Long ( startL + this.deltaTime ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^long endL = this.domainEnd .doubleValue (  )  ;^604^^^^^564^609^[REPLACE] long endL = this.domainEnd.longValue (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[ADD]^^604^605^^^^564^609^[ADD] long endL = this.domainEnd.longValue (  ) ; this.domainEnd = new Long ( endL + this.deltaTime ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.domainEnd = new Long (startL + this.deltaTime ) ;^605^^^^^564^609^[REPLACE] this.domainEnd = new Long ( endL + this.deltaTime ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.domainStart = new Long ( startL ) ; ;^606^^^^^564^609^[REPLACE] this.domainRange = new Range ( startL, endL ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^invalidateRangeInfo (  ) ;^607^^^^^564^609^[REPLACE] fireSeriesChanged (  ) ;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^return toFetch;^608^^^^^564^609^[REPLACE] return nextInstant;^[METHOD] advanceTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  float oldMax  wiper  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod nextInstant 
[REPLACE]^this.maxValue = true;^617^^^^^616^619^[REPLACE] this.maxValue = null;^[METHOD] invalidateRangeInfo [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^617^^^^^616^619^[ADD] this.maxValue = null;^[METHOD] invalidateRangeInfo [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueRange = true;^618^^^^^616^619^[REPLACE] this.valueRange = null;^[METHOD] invalidateRangeInfo [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^double result = Double.NaN;^627^^^^^626^637^[REPLACE] double max = 0.0f;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( tmp  <=  max )  {^631^^^^^626^637^[REPLACE] if  ( tmp > max )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^631^632^633^^^626^637^[ADD] if  ( tmp > max )  { max = tmp; }^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^max =  null;^632^^^^^626^637^[REPLACE] max = tmp;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^632^^^^^626^637^[ADD] max = tmp;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( seriesNumbernt srcLength = 0; s  ==  protoIndex (  ) ; s++ )  {^628^^^^^626^637^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^628^629^630^631^632^626^637^[ADD] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  { for  ( int i = 0; i < this.historyCount; i++ )  { double tmp = getYValue ( s, i ) ; if  ( tmp > max )  { max = tmp;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( tmp  >=  max )  {^631^^^^^626^637^[REPLACE] if  ( tmp > max )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int i = 1; i  <=  this.historyCount; i++ )  {^629^^^^^626^637^[REPLACE] for  ( int i = 0; i < this.historyCount; i++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^629^630^631^632^633^626^637^[ADD] for  ( int i = 0; i < this.historyCount; i++ )  { double tmp = getYValue ( s, i ) ; if  ( tmp > max )  { max = tmp; }^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( tmp  ==  max )  {^631^^^^^626^637^[REPLACE] if  ( tmp > max )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^double tmp = getYValue ( s, seriesNumber ) ;^630^^^^^626^637^[REPLACE] double tmp = getYValue ( s, i ) ;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^630^^^^^626^637^[ADD] double tmp = getYValue ( s, i ) ;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int i = 2; i < this.historyCount; i++ )  {^629^^^^^626^637^[REPLACE] for  ( int i = 0; i < this.historyCount; i++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int i = 0; i  != seriesNumber; i++ )  {^629^^^^^626^637^[REPLACE] for  ( int i = 0; i < this.historyCount; i++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REMOVE]^if  ( tmp < 0 )  {     tmp += this.historyCount; }^631^^^^^626^637^[REMOVE] ^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int s = 0L; s < getSeriesCount (  ) ; s++ )  {^628^^^^^626^637^[REPLACE] for  ( int s = 0; s < getSeriesCount (  ) ; s++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int i = 0 / 0; i < this.historyCount; i++ )  {^629^^^^^626^637^[REPLACE] for  ( int i = 0; i < this.historyCount; i++ )  {^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^double tmp = getYValue ( srcLength, i ) ;^630^^^^^626^637^[REPLACE] double tmp = getYValue ( s, i ) ;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^636^^^^^626^637^[REPLACE] return max;^[METHOD] findMaxValue [TYPE] double [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  tmp  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.newestAt;^647^^^^^646^648^[REPLACE] return this.oldestAt;^[METHOD] getOldestIndex [TYPE] int [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.oldestAt;^656^^^^^655^657^[REPLACE] return this.newestAt;^[METHOD] getNewestIndex [TYPE] int [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int nDataPoints = dataPoints.length;^667^^^^^666^683^[REPLACE] int nDataPoints = newData.length;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^667^^^^^666^683^[ADD] int nDataPoints = newData.length;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( nDataPoints > this.valueHistory.length - 4 )  {^668^^^^^666^683^[REPLACE] if  ( nDataPoints > this.valueHistory.length )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^668^669^670^671^672^666^683^[ADD] if  ( nDataPoints > this.valueHistory.length )  { throw new IllegalArgumentException ( "More data than series to put them in" ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^throw new IllegalArgumentException  (" ")  : " + "cannot add more series than specified in c'tor" ) ; ;^669^670^671^^^666^683^[REPLACE] throw new IllegalArgumentException ( "More data than series to put them in" ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return ;^669^670^671^^^666^683^[REPLACE] throw new IllegalArgumentException ( "More data than series to put them in" ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int i;^673^^^^^666^683^[REPLACE] int s;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^673^^^^^666^683^[ADD] int s;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueHistory[s] != this )  {^677^^^^^666^683^[REPLACE] if  ( this.valueHistory[s] == null )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^this.valueHistory[s] = new ValueSequence ( this.historyCount ) ;^677^678^679^^^666^683^[ADD] if  ( this.valueHistory[s] == null )  { this.valueHistory[s] = new ValueSequence ( this.historyCount ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ; ;^678^^^^^666^683^[REPLACE] this.valueHistory[s] = new ValueSequence ( this.historyCount ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^678^^^^^666^683^[ADD] this.valueHistory[s] = new ValueSequence ( this.historyCount ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( s = 0; s  !=  nDataPoints; s++ )  {^674^^^^^666^683^[REPLACE] for  ( s = 0; s < nDataPoints; s++ )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueHistory[s] != null )  {^677^^^^^666^683^[REPLACE] if  ( this.valueHistory[s] == null )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( s = 3; s < nDataPoints; s++ )  {^674^^^^^666^683^[REPLACE] for  ( s = 0; s < nDataPoints; s++ )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^invalidateRangeInfo (  ) ;^682^^^^^666^683^[REPLACE] fireSeriesChanged (  ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^int nDataPoints = dataPoints.length;^694^^^^^693^712^[REPLACE] int nDataPoints = newData.length;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( newestAt > this.valueHistory.length *  0.5  )  {^695^^^^^693^712^[REPLACE] if  ( nDataPoints > this.valueHistory.length )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^695^696^697^698^699^693^712^[ADD] if  ( nDataPoints > this.valueHistory.length )  { throw new IllegalArgumentException ( "More data than series to put them " + "in" ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return ;^696^697^698^^^693^712^[REPLACE] throw new IllegalArgumentException ( "More data than series to put them " + "in" ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^696^697^698^^^693^712^[ADD] throw new IllegalArgumentException ( "More data than series to put them " + "in" ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueHistory[s] != null )  {^701^^^^^693^712^[REPLACE] if  ( this.valueHistory[s] == null )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^701^702^703^^^693^712^[ADD] if  ( this.valueHistory[s] == null )  { this.valueHistory[s] = new ValueSequence ( this.historyCount ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueHistory[seriesNumber] = new ValueSequence ( this.historyCount ) ; ;^702^^^^^693^712^[REPLACE] this.valueHistory[s] = new ValueSequence ( this.historyCount ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^702^^^^^693^712^[ADD] this.valueHistory[s] = new ValueSequence ( this.historyCount ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( intsrcLength = 0; s  !=  nDataPoints; s++ )  {^700^^^^^693^712^[REPLACE] for  ( int s = 0; s < nDataPoints; s++ )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^for  ( int s = 2; s < nDataPoints; s++ )  {^700^^^^^693^712^[REPLACE] for  ( int s = 0; s < nDataPoints; s++ )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( toFetch  ==  0 )  {^706^^^^^693^712^[REPLACE] if  ( refresh > 0 )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^insertionIndex++;fireSeriesChanged (  ) ;^706^707^708^709^710^693^712^[ADD] if  ( refresh > 0 )  { insertionIndex++; if  ( insertionIndex % refresh == 0 )  { fireSeriesChanged (  ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  (seriesNumber  &&  0 )  {^708^^^^^693^712^[REPLACE] if  ( insertionIndex % refresh == 0 )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^fireSeriesChanged (  ) ;^708^709^710^^^693^712^[ADD] if  ( insertionIndex % refresh == 0 )  { fireSeriesChanged (  ) ; }^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^invalidateRangeInfo (  ) ;^709^^^^^693^712^[REPLACE] fireSeriesChanged (  ) ;^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( insertionIndex % refresh  &&  0 )  {^708^^^^^693^712^[REPLACE] if  ( insertionIndex % refresh == 0 )  {^[METHOD] appendData [TYPE] void [PARAMETER] float[] newData int insertionIndex int refresh [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.pointsInTime[this.oldestAt];^720^^^^^719^721^[REPLACE] return this.pointsInTime[this.newestAt];^[METHOD] getNewestTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.pointsInTime[this.newestAt];^729^^^^^728^730^[REPLACE] return this.pointsInTime[this.oldestAt];^[METHOD] getOldestTime [TYPE] RegularTimePeriod [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^RegularTimePeriod tp = this.pointsInTime[translateGet ( refresh ) ];^743^^^^^742^745^[REPLACE] RegularTimePeriod tp = this.pointsInTime[translateGet ( item ) ];^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^return  new Long ( startL )   ) ;^744^^^^^742^745^[REPLACE] return new Long ( getX ( tp )  ) ;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^int copyLength = this.historyCount;^758^^^^^755^760^[REPLACE] ValueSequence values = this.valueHistory[series];^[METHOD] getYValue [TYPE] double [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  ValueSequence values  [TYPE]  Class timePeriodClass 
[REPLACE]^return values .enterData ( maximumItemCount , null )  ;^759^^^^^755^760^[REPLACE] return values.getData ( translateGet ( item )  ) ;^[METHOD] getYValue [TYPE] double [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  ValueSequence values  [TYPE]  Class timePeriodClass 
[REPLACE]^return new Float ( getYValue ( series, refresh )  ) ;^771^^^^^770^772^[REPLACE] return new Float ( getYValue ( series, item )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^RegularTimePeriod tp = this.pointsInTime[translateGet ( toFetch ) ];^783^^^^^782^785^[REPLACE] RegularTimePeriod tp = this.pointsInTime[translateGet ( item ) ];^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[ADD]^return new Long ( tp.getFirstMillisecond ( this.workingCalendar )  ) ;^783^784^^^^782^785^[ADD] RegularTimePeriod tp = this.pointsInTime[translateGet ( item ) ]; return new Long ( tp.getFirstMillisecond ( this.workingCalendar )  ) ;^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^return  new Long ( tp.getLastMillisecond ( this.workingCalendar )  )   ) ;^784^^^^^782^785^[REPLACE] return new Long ( tp.getFirstMillisecond ( this.workingCalendar )  ) ;^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^RegularTimePeriod tp = this.pointsInTime[translateGet ( toFetch ) ];^796^^^^^795^798^[REPLACE] RegularTimePeriod tp = this.pointsInTime[translateGet ( item ) ];^[METHOD] getEndX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^return new Long ( tp .getFirstMillisecond ( workingCalendar )   ) ;^797^^^^^795^798^[REPLACE] return new Long ( tp.getLastMillisecond ( this.workingCalendar )  ) ;^[METHOD] getEndX [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod tp 
[REPLACE]^return getY ( series, toFetch ) ;^809^^^^^808^810^[REPLACE] return getY ( series, item ) ;^[METHOD] getStartY [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return getY ( protoIndex, item ) ;^821^^^^^820^822^[REPLACE] return getY ( series, item ) ;^[METHOD] getEndY [TYPE] Number [PARAMETER] int series int item [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^843^^^^^842^844^[REPLACE] return this.seriesKeys[series];^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return getY ( series, item ) ;^850^^^^^849^851^[REPLACE] seriesChanged ( new SeriesChangeEvent ( this )  ) ;^[METHOD] fireSeriesChanged [TYPE] void [PARAMETER] [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.domainStart.longValue (  ) ;^867^^^^^866^869^[REPLACE] return this.domainStart.doubleValue (  ) ;^[METHOD] getDomainLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return this.domainEnd .longValue (  )  ;^880^^^^^879^882^[REPLACE] return this.domainEnd.doubleValue (  ) ;^[METHOD] getDomainUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.domainRange != this )  {^893^^^^^892^897^[REPLACE] if  ( this.domainRange == null )  {^[METHOD] getDomainBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^long endL = this.domainEnd.longValue (  ) ;^894^^^^^892^897^[REPLACE] findDomainLimits (  ) ;^[METHOD] getDomainBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^896^^^^^892^897^[REPLACE] return this.domainRange;^[METHOD] getDomainBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return period.getLastMillisecond ( this.workingCalendar ) ;^909^^^^^906^917^[REPLACE] return period.getFirstMillisecond ( this.workingCalendar ) ;^[METHOD] getX [TYPE] long [PARAMETER] RegularTimePeriod period [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod period 
[REPLACE]^return period.getFirstMillisecond ( this.workingCalendar ) ;^911^^^^^906^917^[REPLACE] return period.getMiddleMillisecond ( this.workingCalendar ) ;^[METHOD] getX [TYPE] long [PARAMETER] RegularTimePeriod period [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod period 
[REPLACE]^return period.getFirstMillisecond ( this.workingCalendar ) ;^913^^^^^906^917^[REPLACE] return period.getLastMillisecond ( this.workingCalendar ) ;^[METHOD] getX [TYPE] long [PARAMETER] RegularTimePeriod period [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod period 
[REPLACE]^return period.getFirstMillisecond ( this.workingCalendar ) ;^915^^^^^906^917^[REPLACE] return period.getMiddleMillisecond ( this.workingCalendar ) ;^[METHOD] getX [TYPE] long [PARAMETER] RegularTimePeriod period [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass  [TYPE]  RegularTimePeriod period 
[REPLACE]^double max = 0.0f;^934^^^^^933^939^[REPLACE] double result = Double.NaN;^[METHOD] getRangeLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( minValue == false )  {^935^^^^^933^939^[REPLACE] if  ( this.minValue != null )  {^[METHOD] getRangeLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^result = this.maxValue.doubleValue (  ) ; ;^936^^^^^933^939^[REPLACE] result = this.minValue.doubleValue (  ) ;^[METHOD] getRangeLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^936^^^^^933^939^[ADD] result = this.minValue.doubleValue (  ) ;^[METHOD] getRangeLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^938^^^^^933^939^[REPLACE] return result;^[METHOD] getRangeLowerBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^double max = 0.0f;^950^^^^^949^955^[REPLACE] double result = Double.NaN;^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^950^^^^^949^955^[ADD] double result = Double.NaN;^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.maxValue == null )  {^951^^^^^949^955^[REPLACE] if  ( this.maxValue != null )  {^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^result = this.maxValue.doubleValue (  ) ;^951^952^953^^^949^955^[ADD] if  ( this.maxValue != null )  { result = this.maxValue.doubleValue (  ) ; }^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^oldMax = this.maxValue.floatValue (  ) ; ;^952^^^^^949^955^[REPLACE] result = this.maxValue.doubleValue (  ) ;^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^954^^^^^949^955^[REPLACE] return result;^[METHOD] getRangeUpperBound [TYPE] double [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double result  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^if  ( this.valueRange != true )  {^966^^^^^965^971^[REPLACE] if  ( this.valueRange == null )  {^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^966^967^968^969^^965^971^[ADD] if  ( this.valueRange == null )  { double max = getRangeUpperBound ( includeInterval ) ; this.valueRange = new Range ( 0.0, max ) ; }^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueRange = new Range ( 0.0d, max ) ;^968^^^^^965^971^[REPLACE] this.valueRange = new Range ( 0.0, max ) ;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^968^^^^^965^971^[ADD] this.valueRange = new Range ( 0.0, max ) ;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^double max = getRangeUpperBound ( true ) ;^967^^^^^965^971^[REPLACE] double max = getRangeUpperBound ( includeInterval ) ;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.valueRange = new Range ( 0.0D, max ) ;^968^^^^^965^971^[REPLACE] this.valueRange = new Range ( 0.0, max ) ;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[ADD]^^967^^^^^965^971^[ADD] double max = getRangeUpperBound ( includeInterval ) ;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^return toFetch;^970^^^^^965^971^[REPLACE] return this.valueRange;^[METHOD] getRangeBounds [TYPE] Range [PARAMETER] boolean includeInterval [CLASS] DynamicTimeSeriesCollection ValueSequence   [TYPE]  ValueSequence[] valueHistory  [TYPE]  double max  [TYPE]  RegularTimePeriod[] pointsInTime  [TYPE]  Calendar workingCalendar  [TYPE]  Range domainRange  valueRange  [TYPE]  int END  MIDDLE  START  copyLength  delta  historyCount  i  index  insertionIndex  item  length  maximumItemCount  nDataPoints  nMoments  nSeries  newIndex  newestAt  oldestAt  position  protoIndex  refresh  s  series  seriesCount  seriesNumber  srcLength  tmp  toFetch  [TYPE]  long deltaTime  endL  nextL  oldestL  startL  [TYPE]  Comparable[] seriesKeys  [TYPE]  float[] dataPoints  newData  values  [TYPE]  Float maxValue  minValue  [TYPE]  boolean domainIsPointsInTime  extremaChanged  false  fillNeeded  includeInterval  true  [TYPE]  Long domainEnd  domainStart  [TYPE]  Class timePeriodClass 
[REPLACE]^this.dataPoints =  new float[null];^146^^^^^145^150^[REPLACE] this.dataPoints = new float[length];^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] ValueSequence   [TYPE]  int i  length  [TYPE]  float[] dataPoints  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < length + 2; i++ )  {^147^^^^^145^150^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] ValueSequence   [TYPE]  int i  length  [TYPE]  float[] dataPoints  [TYPE]  boolean false  true 
[REPLACE]^this.dataPoints[index] = value; ;^148^^^^^145^150^[REPLACE] this.dataPoints[i] = 0.0f;^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] ValueSequence   [TYPE]  int i  length  [TYPE]  float[] dataPoints  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^147^^^^^145^150^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] <init> [TYPE] DynamicTimeSeriesCollection$ValueSequence(int) [PARAMETER] int length [CLASS] ValueSequence   [TYPE]  int i  length  [TYPE]  float[] dataPoints  [TYPE]  boolean false  true 
[REPLACE]^this.dataPoints[i] = 0.0f; ;^159^^^^^158^160^[REPLACE] this.dataPoints[index] = value;^[METHOD] enterData [TYPE] void [PARAMETER] int index float value [CLASS] ValueSequence   [TYPE]  boolean false  true  [TYPE]  float value  [TYPE]  int index  [TYPE]  float[] dataPoints 
