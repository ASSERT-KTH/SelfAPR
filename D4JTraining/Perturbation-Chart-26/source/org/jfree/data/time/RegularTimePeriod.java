[REPLACE]^public static final TimeZone DEFAULT_TIME_ZONE ;^163^^^^^^^[REPLACE] public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault (  ) ;^ [CLASS] RegularTimePeriod  
[REPLACE]^RegularTimePeriod result = false;^87^^^^^85^98^[REPLACE] RegularTimePeriod result = null;^[METHOD] createInstance [TYPE] RegularTimePeriod [PARAMETER] Class c Date millisecond TimeZone zone [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  Class c  [TYPE]  RegularTimePeriod result  [TYPE]  Date millisecond  [TYPE]  Exception e 
[ADD]^new Class[] {Date.class, TimeZone.class} ) ;new Object[] {millisecond, zone} ) ;^88^89^90^91^92^85^98^[ADD] try { Constructor constructor = c.getDeclaredConstructor ( new Class[] {Date.class, TimeZone.class} ) ; result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[METHOD] createInstance [TYPE] RegularTimePeriod [PARAMETER] Class c Date millisecond TimeZone zone [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  Class c  [TYPE]  RegularTimePeriod result  [TYPE]  Date millisecond  [TYPE]  Exception e 
[REPLACE]^result =   ( RegularTimePeriod )  null.newInstance ( new Object[] {millisecond, zone} ) ;^91^92^^^^85^98^[REPLACE] result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[METHOD] createInstance [TYPE] RegularTimePeriod [PARAMETER] Class c Date millisecond TimeZone zone [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  Class c  [TYPE]  RegularTimePeriod result  [TYPE]  Date millisecond  [TYPE]  Exception e 
[ADD]^^89^90^^^^85^98^[ADD] Constructor constructor = c.getDeclaredConstructor ( new Class[] {Date.class, TimeZone.class} ) ;^[METHOD] createInstance [TYPE] RegularTimePeriod [PARAMETER] Class c Date millisecond TimeZone zone [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  Class c  [TYPE]  RegularTimePeriod result  [TYPE]  Date millisecond  [TYPE]  Exception e 
[REPLACE]^return Millisecond.class;^97^^^^^85^98^[REPLACE] return result;^[METHOD] createInstance [TYPE] RegularTimePeriod [PARAMETER] Class c Date millisecond TimeZone zone [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  Constructor constructor  [TYPE]  Class c  [TYPE]  RegularTimePeriod result  [TYPE]  Date millisecond  [TYPE]  Exception e 
[REPLACE]^else if  ( c.equals ( Second.class )  )  {^109^^^^^108^133^[REPLACE] if  ( c.equals ( Year.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^^109^110^111^^^108^133^[ADD] if  ( c.equals ( Year.class )  )  { return Quarter.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^112^^^^^108^133^[REPLACE] else if  ( c.equals ( Quarter.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^if  ( c.equals ( Month.class )  )  {^115^^^^^108^133^[REPLACE] else if  ( c.equals ( Month.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^^115^116^117^^^108^133^[ADD] else if  ( c.equals ( Month.class )  )  { return Day.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^if  ( c.equals ( Day.class )  )  {^118^^^^^108^133^[REPLACE] else if  ( c.equals ( Day.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else if  ( c.equals ( Second.class )  )  {^121^^^^^108^133^[REPLACE] else if  ( c.equals ( Hour.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^124^^^^^108^133^[REPLACE] else if  ( c.equals ( Minute.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REMOVE]^if  ( c.equals ( class )  )  {     return class; }else {     return class; }^124^^^^^108^133^[REMOVE] ^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^if  ( c.equals ( Second.class )  )  {^127^^^^^108^133^[REPLACE] else if  ( c.equals ( Second.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Minute.class;^131^^^^^108^133^[REPLACE] return Millisecond.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Minute.class;^128^^^^^108^133^[REPLACE] return Millisecond.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Millisecond.class;^125^^^^^108^133^[REPLACE] return Second.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^127^^^^^108^133^[REPLACE] else if  ( c.equals ( Second.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Month.class;^122^^^^^108^133^[REPLACE] return Minute.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^if  ( c.equals ( Minute.class )  )  {^124^^^^^108^133^[REPLACE] else if  ( c.equals ( Minute.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^return Millisecond.class;^127^128^129^^^108^133^[ADD] else if  ( c.equals ( Second.class )  )  { return Millisecond.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Millisecond.class;^119^^^^^108^133^[REPLACE] return Hour.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^121^^^^^108^133^[REPLACE] else if  ( c.equals ( Hour.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^return Minute.class;^121^122^123^^^108^133^[ADD] else if  ( c.equals ( Hour.class )  )  { return Minute.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^return Second.class;^124^125^126^^^108^133^[ADD] else if  ( c.equals ( Minute.class )  )  { return Second.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else if  ( c.equals ( Second.class )  )  {^124^^^^^108^133^[REPLACE] else if  ( c.equals ( Minute.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REMOVE]^if  ( c.equals ( class )  )  {     return class; }else     if  ( c.equals ( class )  )  {         return class;     }else {         return class;     }^127^^^^^108^133^[REMOVE] ^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^^127^128^129^^^108^133^[ADD] else if  ( c.equals ( Second.class )  )  { return Millisecond.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Millisecond.class;^116^^^^^108^133^[REPLACE] return Day.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^118^^^^^108^133^[REPLACE] else if  ( c.equals ( Day.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^return Hour.class;^118^119^120^^^108^133^[ADD] else if  ( c.equals ( Day.class )  )  { return Hour.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^if  ( c.equals ( Hour.class )  )  {^121^^^^^108^133^[REPLACE] else if  ( c.equals ( Hour.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else if  ( c.equals ( Quarter.class )  )  {^127^^^^^108^133^[REPLACE] else if  ( c.equals ( Second.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Minute.class;^113^^^^^108^133^[REPLACE] return Month.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else if  ( c.equals ( Second.class )  )  {^115^^^^^108^133^[REPLACE] else if  ( c.equals ( Month.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^return Day.class;^115^116^117^^^108^133^[ADD] else if  ( c.equals ( Month.class )  )  { return Day.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^^124^125^126^^^108^133^[ADD] else if  ( c.equals ( Minute.class )  )  { return Second.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return Millisecond.class;^110^^^^^108^133^[REPLACE] return Quarter.class;^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else {^115^^^^^108^133^[REPLACE] else if  ( c.equals ( Month.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^else if  ( c.equals ( Second.class )  )  {^118^^^^^108^133^[REPLACE] else if  ( c.equals ( Day.class )  )  {^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REMOVE]^if  ( c.equals ( class )  )  {     return class; }else     if  ( c.equals ( class )  )  {         return class;     }else         if  ( c.equals ( class )  )  {             return class;         }else             if  ( c.equals ( class )  )  {                 return class;             }else {                 return class;             }^121^^^^^108^133^[REMOVE] ^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[ADD]^^118^119^120^^^108^133^[ADD] else if  ( c.equals ( Day.class )  )  { return Hour.class; }^[METHOD] downsize [TYPE] Class [PARAMETER] Class c [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  Class c  [TYPE]  boolean false  true 
[REPLACE]^return  new Date ( getLastMillisecond (  )  )   ) ;^184^^^^^183^185^[REPLACE] return new Date ( getFirstMillisecond (  )  ) ;^[METHOD] getStart [TYPE] Date [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true 
[REPLACE]^return  new Date ( getFirstMillisecond (  )  )   ) ;^196^^^^^195^197^[REPLACE] return new Date ( getLastMillisecond (  )  ) ;^[METHOD] getEnd [TYPE] Date [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true 
[REPLACE]^long m2 = getLastMillisecond (  ) ;^256^^^^^255^259^[REPLACE] long m1 = getFirstMillisecond (  ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  long m1  m2  [TYPE]  boolean false  true 
[REPLACE]^long m1 = getFirstMillisecond (  ) ;^257^^^^^255^259^[REPLACE] long m2 = getLastMillisecond (  ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  long m1  m2  [TYPE]  boolean false  true 
[ADD]^^257^^^^^255^259^[ADD] long m2 = getLastMillisecond (  ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  long m1  m2  [TYPE]  boolean false  true 
[REPLACE]^returnm2 +  ( m2 - m1 )  / 2;^258^^^^^255^259^[REPLACE] return m1 +  ( m2 - m1 )  / 2;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  long m1  m2  [TYPE]  boolean false  true 
[REPLACE]^long m2 = getLastMillisecond ( calendar ) ;^270^^^^^269^273^[REPLACE] long m1 = getFirstMillisecond ( calendar ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] Calendar calendar [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  long m1  m2  [TYPE]  Calendar calendar 
[ADD]^^270^^^^^269^273^[ADD] long m1 = getFirstMillisecond ( calendar ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] Calendar calendar [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  long m1  m2  [TYPE]  Calendar calendar 
[REPLACE]^long m1 = getFirstMillisecond ( calendar ) ;^271^^^^^269^273^[REPLACE] long m2 = getLastMillisecond ( calendar ) ;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] Calendar calendar [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  long m1  m2  [TYPE]  Calendar calendar 
[REPLACE]^return true ;^272^^^^^269^273^[REPLACE] return m1 +  ( m2 - m1 )  / 2;^[METHOD] getMiddleMillisecond [TYPE] long [PARAMETER] Calendar calendar [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true  [TYPE]  long m1  m2  [TYPE]  Calendar calendar 
[REPLACE]^return Minute.class;^281^^^^^280^282^[REPLACE] return String.valueOf ( getStart (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] RegularTimePeriod   [TYPE]  TimeZone DEFAULT_TIME_ZONE  zone  [TYPE]  boolean false  true 
