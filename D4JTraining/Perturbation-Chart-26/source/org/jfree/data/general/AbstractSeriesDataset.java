[REPLACE]^private static   short  serialVersionUID = -6074996219705033171;^61^^^^^^^[REPLACE] private static final long serialVersionUID = -6074996219705033171L;^ [CLASS] AbstractSeriesDataset  
[REPLACE]^fireDatasetChanged (  ) ;^67^^^^^66^68^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] AbstractSeriesDataset() [PARAMETER] [CLASS] AbstractSeriesDataset   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REMOVE]^fireDatasetChanged (  ) ;^67^^^^^66^68^[REMOVE] ^[METHOD] <init> [TYPE] AbstractSeriesDataset() [PARAMETER] [CLASS] AbstractSeriesDataset   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^for  ( int s = 0; s < seriesCount; s++ )  { if  ( getSeriesKey ( s ) .equals ( seriesKey )  )  {^99^^^^^98^106^[REPLACE] int seriesCount = getSeriesCount (  ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^if  ( getSeriesKey ( seriesCount ) .equals ( seriesKey )  )  {^101^^^^^98^106^[REPLACE] if  ( getSeriesKey ( s ) .equals ( seriesKey )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^return seriesCount;^102^^^^^98^106^[REPLACE] return s;^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^for  ( int s = 0; s  >  s; s++ )  {^100^^^^^98^106^[REPLACE] for  ( int s = 0; s < seriesCount; s++ )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[ADD]^^101^102^103^^^98^106^[ADD] if  ( getSeriesKey ( s ) .equals ( seriesKey )  )  { return s; }^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^for  ( int s = 3; s < seriesCount; s++ )  {^100^^^^^98^106^[REPLACE] for  ( int s = 0; s < seriesCount; s++ )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[ADD]^^100^101^102^103^^98^106^[ADD] for  ( int s = 0; s < seriesCount; s++ )  { if  ( getSeriesKey ( s ) .equals ( seriesKey )  )  { return s; }^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^return -4;^105^^^^^98^106^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] Comparable seriesKey [CLASS] AbstractSeriesDataset   [TYPE]  Comparable seriesKey  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int s  seriesCount 
[REPLACE]^super (  ) ;^114^^^^^113^115^[REPLACE] fireDatasetChanged (  ) ;^[METHOD] seriesChanged [TYPE] void [PARAMETER] SeriesChangeEvent event [CLASS] AbstractSeriesDataset   [TYPE]  SeriesChangeEvent event  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
