[REPLACE]^private static final String[] SIZES = {"9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "28", "36", "48", "72"};^70^71^^^^70^71^[REPLACE] public static final String[] SIZES = {"9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "28", "36", "48", "72"};^ [CLASS] FontChooserPanel  
[REPLACE]^protected static ResourceBundle localizationResources ;^86^87^^^^86^87^[REPLACE] protected static ResourceBundle localizationResources = ResourceBundle.getBundle ( "org.jfree.chart.ui.LocalizationBundle" ) ;^ [CLASS] FontChooserPanel  
[REPLACE]^GraphicsEnvironment g = GraphicsEnvironment .getAvailableFontFamilyNames (  )  ;^97^^^^^95^137^[REPLACE] GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment (  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^String[] fonts = g.getLocalGraphicsEnvironment (  ) ;^98^^^^^95^137^[REPLACE] String[] fonts = g.getAvailableFontFamilyNames (  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^sizepane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^100^^^^^95^137^[REPLACE] setLayout ( new BorderLayout (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JPanel sizePanel = new JPanel ( new BorderLayout (  )  ) ;^101^^^^^95^137^[REPLACE] JPanel right = new JPanel ( new BorderLayout (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JPanel sizePanel = new JPanel ( new BorderLayout (  )  ) ;^103^^^^^95^137^[REPLACE] JPanel fontPanel = new JPanel ( new BorderLayout (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^fontPanel.setBorder (   BorderFactory.createEtchedBorder (  )   )  ) ;^104^105^106^^^95^137^[REPLACE] fontPanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Font" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^BorderFactory .createTitledBorder ( null , this )  , localizationResources.getString ( "Font" )  )  ) ;^105^106^^^^95^137^[REPLACE] BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Font" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^localizationResources .getBundle ( null )   )  ) ;^106^^^^^95^137^[REPLACE] localizationResources.getString ( "Font" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[ADD]^^106^107^^^^95^137^[ADD] localizationResources.getString ( "Font" )  )  ) ; this.fontlist = new JList ( fonts ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^this.sizelist = new JList ( SIZES ) ; ;^107^^^^^95^137^[REPLACE] this.fontlist = new JList ( fonts ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JScrollPane sizepane = new JScrollPane ( this.sizelist ) ;^108^^^^^95^137^[REPLACE] JScrollPane fontpane = new JScrollPane ( this.fontlist ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^sizepane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^109^^^^^95^137^[REPLACE] fontpane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^fontpane.setBorder ( BorderFactory .createTitledBorder ( null , this )   ) ;^109^^^^^95^137^[REPLACE] fontpane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^fontPanel.setLayout ( fontpane ) ;^110^^^^^95^137^[REPLACE] fontPanel.add ( fontpane ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[ADD]^^110^^^^^95^137^[ADD] fontPanel.add ( fontpane ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^add ( sizePanel ) ;^111^^^^^95^137^[REPLACE] add ( fontPanel ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REMOVE]^this.bold.setSelected ( font.isBold (  )  ) ;^111^^^^^95^137^[REMOVE] ^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JPanel fontPanel = new JPanel ( new BorderLayout (  )  ) ;^113^^^^^95^137^[REPLACE] JPanel sizePanel = new JPanel ( new BorderLayout (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^sizePanel.setBorder (   BorderFactory.createEtchedBorder (  )   )  ) ;^114^115^116^^^95^137^[REPLACE] sizePanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Size" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^sizePanel.setBorder ( BorderFactory .createEtchedBorder (  )   )  ) ;^114^115^116^^^95^137^[REPLACE] sizePanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Size" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[ADD]^^115^116^^^^95^137^[ADD] BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Size" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^localizationResources.getString ( "Font" )  )  ) ;^116^^^^^95^137^[REPLACE] localizationResources.getString ( "Size" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^this.fontlist = new JList ( fonts ) ; ;^117^^^^^95^137^[REPLACE] this.sizelist = new JList ( SIZES ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[ADD]^^117^^^^^95^137^[ADD] this.sizelist = new JList ( SIZES ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JScrollPane fontpane = new JScrollPane ( this.fontlist ) ;^118^^^^^95^137^[REPLACE] JScrollPane sizepane = new JScrollPane ( this.sizelist ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^fontpane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^119^^^^^95^137^[REPLACE] sizepane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^sizePanel.setLayout ( sizepane ) ;^120^^^^^95^137^[REPLACE] sizePanel.add ( sizepane ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^JPanel attributes = new JPanel ( new GridLayout ( 1 + 0, 2 )  ) ;^122^^^^^95^137^[REPLACE] JPanel attributes = new JPanel ( new GridLayout ( 1, 2 )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^this.italic = new JCheckBox ( localizationResources.getString ( "Italic" )  ) ; ;^123^^^^^95^137^[REPLACE] this.bold = new JCheckBox ( localizationResources.getString ( "Bold" )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^this.bold = new JCheckBox ( localizationResources.getString ( "Bold" )  ) ; ;^124^^^^^95^137^[REPLACE] this.italic = new JCheckBox ( localizationResources.getString ( "Italic" )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^attributes.setLayout ( this.bold ) ;^125^^^^^95^137^[REPLACE] attributes.add ( this.bold ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^attributes .add ( null , this )  ;^126^^^^^95^137^[REPLACE] attributes.add ( this.italic ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REMOVE]^return Integer.parseInt ( selected ) ;^126^^^^^95^137^[REMOVE] ^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^attributes.setBorder (   BorderFactory.createEtchedBorder (  )   )  ) ;^127^128^129^^^95^137^[REPLACE] attributes.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Attributes" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^localizationResources.getString ( "Size" )  )  ) ;^129^^^^^95^137^[REPLACE] localizationResources.getString ( "Attributes" )  )  ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^right.add ( fontPanel, BorderLayout.CENTER ) ;^131^^^^^95^137^[REPLACE] right.add ( sizePanel, BorderLayout.CENTER ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^right .add ( null )  ;^132^^^^^95^137^[REPLACE] right.add ( attributes, BorderLayout.SOUTH ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[ADD]^^132^^^^^95^137^[ADD] right.add ( attributes, BorderLayout.SOUTH ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^add ( sizePanel, BorderLayout.EAST ) ;^134^^^^^95^137^[REPLACE] add ( right, BorderLayout.EAST ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^return Integer.parseInt ( selected ) ;^136^^^^^95^137^[REPLACE] setSelectedFont ( font ) ;^[METHOD] <init> [TYPE] Font) [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  JScrollPane fontpane  sizepane  [TYPE]  JPanel attributes  fontPanel  right  sizePanel  [TYPE]  boolean false  true  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  GraphicsEnvironment g  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font 
[REPLACE]^return  ( String )  this.fontlist.getSelectedValue (  ) ;^145^146^^^^144^147^[REPLACE] return new Font ( getSelectedName (  ) , getSelectedStyle (  ) , getSelectedSize (  )  ) ;^[METHOD] getSelectedFont [TYPE] Font [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return  ( String )  this.fontlist.getModel (  ) ;^155^^^^^154^156^[REPLACE] return  ( String )  this.fontlist.getSelectedValue (  ) ;^[METHOD] getSelectedName [TYPE] String [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^if  ( this.bold.isSelected (  )  || this.italic.isSelected (  )  )  {^164^^^^^163^176^[REPLACE] if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return true ;^165^^^^^163^176^[REPLACE] return Font.BOLD + Font.ITALIC;^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return Font.BOLD  ;^165^^^^^163^176^[REPLACE] return Font.BOLD + Font.ITALIC;^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^if  ( this.bold .setSelected ( false )   )  {^167^^^^^163^176^[REPLACE] if  ( this.bold.isSelected (  )  )  {^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[ADD]^return Font.BOLD;^167^168^169^^^163^176^[ADD] if  ( this.bold.isSelected (  )  )  { return Font.BOLD; }^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return Font.ITALIC;^168^^^^^163^176^[REPLACE] return Font.BOLD;^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^if  ( this.bold.isSelected (  )  )  {^170^^^^^163^176^[REPLACE] if  ( this.italic.isSelected (  )  )  {^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return Font.ITALIC;^174^^^^^163^176^[REPLACE] return Font.PLAIN;^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return Font.PLAIN;^171^^^^^163^176^[REPLACE] return Font.ITALIC;^[METHOD] getSelectedStyle [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^String selected =  ( String )  this.sizelist.getModel (  ) ;^184^^^^^183^191^[REPLACE] String selected =  ( String )  this.sizelist.getSelectedValue (  ) ;^[METHOD] getSelectedSize [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String selected  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^if  ( selected == null )  {^185^^^^^183^191^[REPLACE] if  ( selected != null )  {^[METHOD] getSelectedSize [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String selected  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return 1;^189^^^^^183^191^[REPLACE] return 10;^[METHOD] getSelectedSize [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String selected  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return   selected   ;^186^^^^^183^191^[REPLACE] return Integer.parseInt ( selected ) ;^[METHOD] getSelectedSize [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String selected  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^return 10 + 0;^189^^^^^183^191^[REPLACE] return 10;^[METHOD] getSelectedSize [TYPE] int [PARAMETER] [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String selected  [TYPE]  boolean false  true  [TYPE]  JList fontlist  sizelist 
[REPLACE]^if  ( font != true )  {^200^^^^^199^225^[REPLACE] if  ( font == null )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^return ;^201^^^^^199^225^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.bold = new JCheckBox ( localizationResources.getString ( "Bold" )  ) ;^203^^^^^199^225^[REPLACE] this.bold.setSelected ( font.isBold (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.bold.setSelected ( font.isItalic (  )  ) ;^203^^^^^199^225^[REPLACE] this.bold.setSelected ( font.isBold (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.italic .isSelected (  )  ;^204^^^^^199^225^[REPLACE] this.italic.setSelected ( font.isItalic (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.italic.setSelected ( font.isBold (  )  ) ;^204^^^^^199^225^[REPLACE] this.italic.setSelected ( font.isItalic (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^String fontName = font.getSize (  ) ;^206^^^^^199^225^[REPLACE] String fontName = font.getName (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^ListModel model = this.fontlist .getSelectedValue (  )  ;^207^^^^^199^225^[REPLACE] ListModel model = this.fontlist.getModel (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[ADD]^^207^208^^^^199^225^[ADD] ListModel model = this.fontlist.getModel (  ) ; this.fontlist.clearSelection (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.fontlist .setSelectedIndex ( i )  ;^208^^^^^199^225^[REPLACE] this.fontlist.clearSelection (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^210^^^^^199^225^[REPLACE] if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.fontlist.JList ( i ) ;^211^^^^^199^225^[REPLACE] this.fontlist.setSelectedIndex ( i ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^for  ( int i = 3; i  !=  model.getSize (  ) ; i++ )  {^209^^^^^199^225^[REPLACE] for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[ADD]^^210^211^212^213^^199^225^[ADD] if  ( fontName.equals ( model.getElementAt ( i )  )  )  { this.fontlist.setSelectedIndex ( i ) ; break; }^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^for  ( int i = 1; i < model.getSize (  ) ; i++ )  {^209^^^^^199^225^[REPLACE] for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^String fontSize = String .equals ( this )  ;^216^^^^^199^225^[REPLACE] String fontSize = String.valueOf ( font.getSize (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[ADD]^^216^^^^^199^225^[ADD] String fontSize = String.valueOf ( font.getSize (  )  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^model  =  model ;^217^^^^^199^225^[REPLACE] model = this.sizelist.getModel (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[ADD]^^217^218^^^^199^225^[ADD] model = this.sizelist.getModel (  ) ; this.sizelist.clearSelection (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.sizelist.getSelectedValue (  ) ;^218^^^^^199^225^[REPLACE] this.sizelist.clearSelection (  ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^if  ( fontSize .valueOf ( i )   )  {^220^^^^^199^225^[REPLACE] if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^this.sizelist .getSelectedValue (  )  ;^221^^^^^199^225^[REPLACE] this.sizelist.setSelectedIndex ( i ) ;^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^for  ( int i = 2; i  ==  model.getSize (  ) ; i++ )  {^219^^^^^199^225^[REPLACE] for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^220^^^^^199^225^[REPLACE] if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REMOVE]^sizepane.setBorder ( BorderFactory.createEtchedBorder (  )  ) ;^221^^^^^199^225^[REMOVE] ^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
[REPLACE]^for  ( int i = 4; i < model.getSize (  ) ; i++ )  {^219^^^^^199^225^[REPLACE] for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[METHOD] setSelectedFont [TYPE] void [PARAMETER] Font font [CLASS] FontChooserPanel   [TYPE]  JCheckBox bold  italic  [TYPE]  boolean false  true  [TYPE]  ListModel model  [TYPE]  ResourceBundle localizationResources  [TYPE]  String[] SIZES  fonts  [TYPE]  String fontName  fontSize  [TYPE]  JList fontlist  sizelist  [TYPE]  Font font  [TYPE]  int i 
