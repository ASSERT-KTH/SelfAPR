[REPLACE]^this.store ;^78^^^^^77^79^[REPLACE] this.store = new TreeMap (  ) ;^[METHOD] <init> [TYPE] StrokeMap() [PARAMETER] [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  boolean false  true 
[REPLACE]^if  ( key != true )  {^93^^^^^92^97^[REPLACE] if  ( key == null )  {^[METHOD] getStroke [TYPE] Stroke [PARAMETER] Comparable key [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  Comparable key  [TYPE]  boolean false  true 
[REPLACE]^return ;^94^^^^^92^97^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getStroke [TYPE] Stroke [PARAMETER] Comparable key [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  Comparable key  [TYPE]  boolean false  true 
[ADD]^^94^^^^^92^97^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getStroke [TYPE] Stroke [PARAMETER] Comparable key [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  Comparable key  [TYPE]  boolean false  true 
[REPLACE]^return  ( Stroke )  this.store.keySet ( key ) ;^96^^^^^92^97^[REPLACE] return  ( Stroke )  this.store.get ( key ) ;^[METHOD] getStroke [TYPE] Stroke [PARAMETER] Comparable key [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  Comparable key  [TYPE]  boolean false  true 
[REPLACE]^return this.store .clear (  )  ;^109^^^^^108^110^[REPLACE] return this.store.containsKey ( key ) ;^[METHOD] containsKey [TYPE] boolean [PARAMETER] Comparable key [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  Comparable key  [TYPE]  boolean false  true 
[REPLACE]^if  ( key != null )  {^120^^^^^119^124^[REPLACE] if  ( key == null )  {^[METHOD] put [TYPE] void [PARAMETER] Comparable key Stroke stroke [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store 
[REPLACE]^return ;^121^^^^^119^124^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] put [TYPE] void [PARAMETER] Comparable key Stroke stroke [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store 
[REPLACE]^SerialUtilities.writeStroke ( stroke, stream ) ;^123^^^^^119^124^[REPLACE] this.store.put ( key, stroke ) ;^[METHOD] put [TYPE] void [PARAMETER] Comparable key Stroke stroke [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store 
[REPLACE]^this.store.size (  ) ;^130^^^^^129^131^[REPLACE] this.store.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  boolean false  true 
[REMOVE]^stream.defaultWriteObject (  ) ;^130^^^^^129^131^[REMOVE] ^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  boolean false  true 
[REPLACE]^if  ( obj  ||  this )  {^141^^^^^140^162^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return false;^142^^^^^140^162^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^if  ( ! ! ( obj instanceof StrokeMap )  )  {^144^^^^^140^162^[REPLACE] if  ( ! ( obj instanceof StrokeMap )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return true;^145^^^^^140^162^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Stroke s2 = that.getStroke ( key ) ;^147^^^^^140^162^[REPLACE] StrokeMap that =  ( StrokeMap )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^if  ( this.store.size (  )  + 4 != that.store.size (  )  + 4 )  {^148^^^^^140^162^[REPLACE] if  ( this.store.size (  )  != that.store.size (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return true;^149^^^^^140^162^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Set keys = this.store .get ( obj )  ;^151^^^^^140^162^[REPLACE] Set keys = this.store.keySet (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Comparable key =  ( Comparable )  iterator.next (  ) ;^152^^^^^140^162^[REPLACE] Iterator iterator = keys.iterator (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^while  ( iterator.next (  )  )  {^153^^^^^140^162^[REPLACE] while  ( iterator.hasNext (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^if  ( !  s1, s2    )  {^157^^^^^140^162^[REPLACE] if  ( !ObjectUtilities.equal ( s1, s2 )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[ADD]^^157^158^159^^^140^162^[ADD] if  ( !ObjectUtilities.equal ( s1, s2 )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return true;^158^^^^^140^162^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Comparable key =  ( Comparable )  iterator.hasNext (  ) ;^154^^^^^140^162^[REPLACE] Comparable key =  ( Comparable )  iterator.next (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Stroke stroke = getStroke ( key ) ;^155^^^^^140^162^[REPLACE] Stroke s1 = getStroke ( key ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[ADD]^^155^^^^^140^162^[ADD] Stroke s1 = getStroke ( key ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^Stroke s2 = that.containsKey ( key ) ;^156^^^^^140^162^[REPLACE] Stroke s2 = that.getStroke ( key ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[ADD]^^156^^^^^140^162^[ADD] Stroke s2 = that.getStroke ( key ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[ADD]^^155^156^^^^140^162^[ADD] Stroke s1 = getStroke ( key ) ; Stroke s2 = that.getStroke ( key ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return false;^161^^^^^140^162^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke s1  s2  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  Object obj  [TYPE]  Map store  [TYPE]  StrokeMap that 
[REPLACE]^return this.store.containsKey ( key ) ;^174^^^^^171^175^[REPLACE] return super.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] StrokeMap   [TYPE]  Map store  [TYPE]  boolean false  true 
[REPLACE]^stream .writeObject ( stream )  ;^185^^^^^184^195^[REPLACE] stream.defaultWriteObject (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^stream.writeInt ( this.store .containsKey ( null )   ) ;^186^^^^^184^195^[REPLACE] stream.writeInt ( this.store.size (  )  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^stream.writeInt ( this.store.keySet (  )  ) ;^186^^^^^184^195^[REPLACE] stream.writeInt ( this.store.size (  )  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^Set keys = this.store .get ( null )  ;^187^^^^^184^195^[REPLACE] Set keys = this.store.keySet (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^Comparable key =  ( Comparable )  iterator.next (  ) ;^188^^^^^184^195^[REPLACE] Iterator iterator = keys.iterator (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[ADD]^^188^^^^^184^195^[ADD] Iterator iterator = keys.iterator (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^while  ( iterator.next (  )  )  {^189^^^^^184^195^[REPLACE] while  ( iterator.hasNext (  )  )  {^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[ADD]^^189^190^^^^184^195^[ADD] while  ( iterator.hasNext (  )  )  { Comparable key =  ( Comparable )  iterator.next (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^Comparable key =  ( Comparable )  iterator .hasNext (  )  ;^190^^^^^184^195^[REPLACE] Comparable key =  ( Comparable )  iterator.next (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^Stroke s1 = getStroke ( key ) ;^192^^^^^184^195^[REPLACE] Stroke stroke = getStroke ( key ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^Comparable key =  ( Comparable )  iterator.hasNext (  ) ;^190^^^^^184^195^[REPLACE] Comparable key =  ( Comparable )  iterator.next (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  Set keys  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  ObjectOutputStream stream  [TYPE]  Map store 
[REPLACE]^stream.readObject (  ) ;^207^^^^^205^215^[REPLACE] stream.defaultReadObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[ADD]^^207^^^^^205^215^[ADD] stream.defaultReadObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^this.store  =  this.store ;^208^^^^^205^215^[REPLACE] this.store = new TreeMap (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^int keyCount = stream .readObject ( stream )  ;^209^^^^^205^215^[REPLACE] int keyCount = stream.readInt (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^for  ( int i = 4; i  >  keyCount; i++ )  {^210^^^^^205^215^[REPLACE] for  ( int i = 0; i < keyCount; i++ )  {^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^Comparable key =  ( Comparable )  stream.readInt (  ) ;^211^^^^^205^215^[REPLACE] Comparable key =  ( Comparable )  stream.readObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^Stroke stroke =   stream   ;^212^^^^^205^215^[REPLACE] Stroke stroke = SerialUtilities.readStroke ( stream ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^for  ( int i = 0 - 1; i < keyCount; i++ )  {^210^^^^^205^215^[REPLACE] for  ( int i = 0; i < keyCount; i++ )  {^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[ADD]^^210^211^212^213^214^205^215^[ADD] for  ( int i = 0; i < keyCount; i++ )  { Comparable key =  ( Comparable )  stream.readObject (  ) ; Stroke stroke = SerialUtilities.readStroke ( stream ) ; this.store.put ( key, stroke ) ; }^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[REPLACE]^Comparable key =  ( Comparable )  stream .readObject ( stream )  ;^211^^^^^205^215^[REPLACE] Comparable key =  ( Comparable )  stream.readObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
[ADD]^^212^^^^^205^215^[ADD] Stroke stroke = SerialUtilities.readStroke ( stream ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream stream [CLASS] StrokeMap   [TYPE]  Comparable key  [TYPE]  Stroke stroke  [TYPE]  boolean false  true  [TYPE]  Map store  [TYPE]  int i  keyCount  [TYPE]  ObjectInputStream stream 
