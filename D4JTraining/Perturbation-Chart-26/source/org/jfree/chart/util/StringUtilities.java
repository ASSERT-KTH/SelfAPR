[REPLACE]^if  ( base.length (  )  - 1 < start.length (  )  - 1 )  {^67^^^^^66^71^[REPLACE] if  ( base.length (  )  < start.length (  )  )  {^[METHOD] startsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String start [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  start 
[ADD]^^67^68^69^^^66^71^[ADD] if  ( base.length (  )  < start.length (  )  )  { return false; }^[METHOD] startsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String start [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  start 
[REPLACE]^return true;^68^^^^^66^71^[REPLACE] return false;^[METHOD] startsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String start [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  start 
[REPLACE]^return base.regionMatches ( false, 0, start, 0, start.length (  )  ) ;^70^^^^^66^71^[REPLACE] return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^[METHOD] startsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String start [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  start 
[REPLACE]^if  ( base.size (  )  < end.size (  )  )  {^83^^^^^82^88^[REPLACE] if  ( base.length (  )  < end.length (  )  )  {^[METHOD] endsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String end [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  end 
[ADD]^^83^84^85^^^82^88^[ADD] if  ( base.length (  )  < end.length (  )  )  { return false; }^[METHOD] endsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String end [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  end 
[REPLACE]^return true;^84^^^^^82^88^[REPLACE] return false;^[METHOD] endsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String end [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  end 
[REPLACE]^return base.regionMatches ( false, base.length (  )  - 1 - end.length (  )  - 1, end, 0, end.length (  )  - 1 ) ;^86^87^^^^82^88^[REPLACE] return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[METHOD] endsWithIgnoreCase [TYPE] boolean [PARAMETER] String base String end [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  String base  end 
[ADD]^return System.getProperty ( "line.separator", "\n" ) ;^97^98^99^^^96^103^[ADD] try { return System.getProperty ( "line.separator", "\n" ) ; }^[METHOD] getLineSeparator [TYPE] String [PARAMETER] [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^98^^^^^96^103^[REPLACE] return System.getProperty ( "line.separator", "\n" ) ;^[METHOD] getLineSeparator [TYPE] String [PARAMETER] [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return false;^101^^^^^96^103^[REPLACE] return "\n";^[METHOD] getLineSeparator [TYPE] String [PARAMETER] [CLASS] StringUtilities   [TYPE]  boolean false  true  [TYPE]  Exception e 
