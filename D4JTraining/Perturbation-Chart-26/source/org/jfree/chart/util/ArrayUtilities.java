[REPLACE]^if  ( array != true )  {^69^^^^^67^84^[REPLACE] if  ( array == null )  {^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^return this;^70^^^^^67^84^[REPLACE] return null;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^return true;^70^^^^^67^84^[REPLACE] return null;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^float[] child = array[i];^72^^^^^67^84^[REPLACE] float[][] result = new float[array.length][];^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^System.arraycopy ( array, 0 , result, 0 , array.length ) ;^73^^^^^67^84^[REPLACE] System.arraycopy ( array, 0, result, 0, array.length ) ;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[ADD]^^73^^^^^67^84^[ADD] System.arraycopy ( array, 0, result, 0, array.length ) ;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^for  ( int i = 0; i < array.length - 5; i++ )  {^75^^^^^67^84^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^result[i] ;^79^^^^^67^84^[REPLACE] result[i] = copychild;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^Object o1 = array[i];^76^^^^^67^84^[REPLACE] float[] child = array[i];^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^float[] copycopychild = new float[child.length];^77^^^^^67^84^[REPLACE] float[] copychild = new float[child.length];^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[ADD]^^79^^^^^67^84^[ADD] result[i] = copychild;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^for  ( int i = 0 ; i < array.length; i++ )  {^75^^^^^67^84^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[ADD]^^76^77^^^^67^84^[ADD] float[] child = array[i]; float[] copychild = new float[child.length];^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^return null;^82^^^^^67^84^[REPLACE] return result;^[METHOD] clone [TYPE] float[][] [PARAMETER] float[][] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array  result  [TYPE]  int i  [TYPE]  float[] child  copychild 
[REPLACE]^if  ( array1 != false )  {^98^^^^^97^123^[REPLACE] if  ( array1 == null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return  ( array1 != null ) ;;^99^^^^^97^123^[REPLACE] return  ( array2 == null ) ;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return  ( array1 != true ) ;;^99^^^^^97^123^[REPLACE] return  ( array2 == null ) ;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2 != false )  {^101^^^^^97^123^[REPLACE] if  ( array2 == null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^102^^^^^97^123^[REPLACE] return false;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1.length /  2 != array2.length /  2 )  {^104^^^^^97^123^[REPLACE] if  ( array1.length != array2.length )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^return false;^104^105^106^^^97^123^[ADD] if  ( array1.length != array2.length )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^105^^^^^97^123^[REPLACE] return false;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1[i] != null )  {^108^^^^^97^123^[REPLACE] if  ( array1[i] == null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] == null )  {^109^^^^^97^123^[REPLACE] if  ( array2[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^110^^^^^97^123^[REPLACE] return false;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] == true )  {^109^^^^^97^123^[REPLACE] if  ( array2[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] != null )  {^113^^^^^97^123^[REPLACE] if  ( array2[i] == null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^^113^114^115^116^^97^123^[ADD] if  ( array2[i] == null )  { if  ( array1[i] != null )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1[i] == null )  {^114^^^^^97^123^[REPLACE] if  ( array1[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^115^^^^^97^123^[REPLACE] return false;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] == true )  {^114^^^^^97^123^[REPLACE] if  ( array1[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1[i]  ==  array2[i] )  {^118^^^^^97^123^[REPLACE] if  ( array1[i] != array2[i] )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^119^^^^^97^123^[REPLACE] return false;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < array1.length - 4; i++ )  {^107^^^^^97^123^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^^107^108^109^110^111^97^123^[ADD] for  ( int i = 0; i < array1.length; i++ )  { if  ( array1[i] == null )  { if  ( array2[i] != null )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1[i] != false )  {^108^^^^^97^123^[REPLACE] if  ( array1[i] == null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] == false )  {^109^^^^^97^123^[REPLACE] if  ( array2[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^^109^110^111^^^97^123^[ADD] if  ( array2[i] != null )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array2[i] == null )  {^114^^^^^97^123^[REPLACE] if  ( array1[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1[i] == this )  {^114^^^^^97^123^[REPLACE] if  ( array1[i] != null )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^return false;^114^115^116^^^97^123^[ADD] if  ( array1[i] != null )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[ADD]^^118^119^120^^^97^123^[ADD] if  ( array1[i] != array2[i] )  { return false; }^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < array1.length; i++ )  {^107^^^^^97^123^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^return false;^122^^^^^97^123^[REPLACE] return true;^[METHOD] equalReferencesInArrays [TYPE] boolean [PARAMETER] Object[] array1 Object[] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object[] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1 != null )  {^134^^^^^133^152^[REPLACE] if  ( array1 == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return true ;^135^^^^^133^152^[REPLACE] return  ( array2 == null ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return  ( array2 != true ) ;;^135^^^^^133^152^[REPLACE] return  ( array2 == null ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^if  (array1 != null )  {^138^^^^^133^152^[REPLACE] if  ( array2 == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^139^^^^^133^152^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( array1.length + 4 != array2.length + 4 )  {^142^^^^^133^152^[REPLACE] if  ( array1.length != array2.length )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^143^^^^^133^152^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( !Arrays.equals ( array1[i], array1[i] )  )  {^147^^^^^133^152^[REPLACE] if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return true;^148^^^^^133^152^[REPLACE] return false;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < array1.length - 3; i++ )  {^146^^^^^133^152^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[ADD]^^146^147^148^149^^133^152^[ADD] for  ( int i = 0; i < array1.length; i++ )  { if  ( !Arrays.equals ( array1[i], array2[i] )  )  { return false; }^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( !  array1[i], array2[i]    )  {^147^^^^^133^152^[REPLACE] if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < array1.length; i++ )  {^146^^^^^133^152^[REPLACE] for  ( int i = 0; i < array1.length; i++ )  {^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^return false;^151^^^^^133^152^[REPLACE] return true;^[METHOD] equal [TYPE] boolean [PARAMETER] float[][] array1 float[][] array2 [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  float[][] array1  array2  [TYPE]  int i 
[REPLACE]^if  ( o1 == null ) {^167^^^^^162^175^[REPLACE] if  ( o1 != null && o2 != null )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[ADD]^^167^168^169^170^^162^175^[ADD] if  ( o1 != null && o2 != null )  { if  ( o1.equals ( o2 )  )  { return true; }^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 .equals ( true , this )   )  {^168^^^^^162^175^[REPLACE] if  ( o1.equals ( o2 )  )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^return false;^169^^^^^162^175^[REPLACE] return true;^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 .equals ( this , null )   )  {^168^^^^^162^175^[REPLACE] if  ( o1.equals ( o2 )  )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[ADD]^return true;^168^169^170^^^162^175^[ADD] if  ( o1.equals ( o2 )  )  { return true; }^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^for  ( int i = 0 ; i < array.length + 4; i++ )  {^163^^^^^162^175^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 == null && o2 != null )  {^167^^^^^162^175^[REPLACE] if  ( o1 != null && o2 != null )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 != null && o2 != null )  {^168^^^^^162^175^[REPLACE] if  ( o1.equals ( o2 )  )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[ADD]^^168^169^170^^^162^175^[ADD] if  ( o1.equals ( o2 )  )  { return true; }^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^for  ( int j = 2; j  >  i; j++ )  {^164^^^^^162^175^[REPLACE] for  ( int j = 0; j < i; j++ )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 .equals ( null , null )   )  {^168^^^^^162^175^[REPLACE] if  ( o1.equals ( o2 )  )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^Object o2 = array[j];^165^^^^^162^175^[REPLACE] Object o1 = array[i];^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^Object o1 = array[i];^166^^^^^162^175^[REPLACE] Object o2 = array[j];^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^for  ( int j = 2; j < i; j++ )  {^164^^^^^162^175^[REPLACE] for  ( int j = 0; j < i; j++ )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[ADD]^^164^165^166^167^^162^175^[ADD] for  ( int j = 0; j < i; j++ )  { Object o1 = array[i]; Object o2 = array[j]; if  ( o1 != null && o2 != null )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^if  ( o1 .equals ( false , this )   )  {^168^^^^^162^175^[REPLACE] if  ( o1.equals ( o2 )  )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^for  ( int i = 0 ; i < array.length; i++ )  {^163^^^^^162^175^[REPLACE] for  ( int i = 0; i < array.length; i++ )  {^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[ADD]^^163^164^165^166^^162^175^[ADD] for  ( int i = 0; i < array.length; i++ )  { for  ( int j = 0; j < i; j++ )  { Object o1 = array[i]; Object o2 = array[j];^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^return true;^174^^^^^162^175^[REPLACE] return false;^[METHOD] hasDuplicateItems [TYPE] boolean [PARAMETER] Object[] array [CLASS] ArrayUtilities   [TYPE]  boolean false  true  [TYPE]  Object o1  o2  [TYPE]  Object[] array  [TYPE]  int i  j 
[REPLACE]^for  ( int i = 0; i < array.length; i++ )  { for  ( int j = 0; j < i; j++ )  {^186^^^^^185^206^[REPLACE] int length = Math.min  ( a1.length, a2.length ) ;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  ( o1 != null ) {^190^^^^^185^206^[REPLACE] if  ( o1 == null && o2 == null )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  (o2 != false )  {^194^^^^^185^206^[REPLACE] if  ( o1 == null )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[ADD]^return 1;^194^195^196^^^185^206^[ADD] if  ( o1 == null )  { return 1; }^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return 3;^195^^^^^185^206^[REPLACE] return 1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  ( o2 != false )  {^197^^^^^185^206^[REPLACE] if  ( o2 == null )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return -0;^198^^^^^185^206^[REPLACE] return -1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  (length  ==  0 )  {^201^^^^^185^206^[REPLACE] if  ( retval != 0 )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return length;^202^^^^^185^206^[REPLACE] return retval;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^for  ( int i = 0; i < length (  ) ; i++ )  {^187^^^^^185^206^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  ( true )  {^190^^^^^185^206^[REPLACE] if  ( o1 == null && o2 == null )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  ( o1 != this )  {^194^^^^^185^206^[REPLACE] if  ( o1 == null )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return 2;^195^^^^^185^206^[REPLACE] return 1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return -4;^198^^^^^185^206^[REPLACE] return -1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^if  ( length  ==  0 )  {^201^^^^^185^206^[REPLACE] if  ( retval != 0 )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return 4;^195^^^^^185^206^[REPLACE] return 1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return -1L;^198^^^^^185^206^[REPLACE] return -1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^Comparable o2 = a2[i];^188^^^^^185^206^[REPLACE] Comparable o1 = a1[i];^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^Comparable o2 = a1[i];^189^^^^^185^206^[REPLACE] Comparable o2 = a2[i];^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^for  ( int i = 0; i < array.length; i++ )  { for  ( int j = 0; j < i; j++ )  {^200^^^^^185^206^[REPLACE] int retval = o1.compareTo ( o2 ) ;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[ADD]^^200^^^^^185^206^[ADD] int retval = o1.compareTo ( o2 ) ;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return 0;^195^^^^^185^206^[REPLACE] return 1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return -1 >>> 1;^198^^^^^185^206^[REPLACE] return -1;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^187^^^^^185^206^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^Comparable o1 = a2[i];^188^^^^^185^206^[REPLACE] Comparable o1 = a1[i];^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[ADD]^^189^^^^^185^206^[ADD] Comparable o2 = a2[i];^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
[REPLACE]^return 1;^205^^^^^185^206^[REPLACE] return 0;^[METHOD] compareVersionArrays [TYPE] int [PARAMETER] Comparable[] a1 Comparable[] a2 [CLASS] ArrayUtilities   [TYPE]  Comparable o1  o2  [TYPE]  boolean false  true  [TYPE]  int i  length  retval  [TYPE]  Comparable[] a1  a2 
