[REPLACE]^private static final long serialVersionUID ;^66^^^^^^^[REPLACE] private static final long serialVersionUID = 506071142274883745L;^ [CLASS] BorderArrangement  
[REPLACE]^if  ( key != null )  {^98^^^^^96^116^[REPLACE] if  ( key == null )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.TOP )  {^103^^^^^96^116^[REPLACE] if  ( edge == RectangleEdge.TOP )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.BOTTOM )  {^106^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.LEFT )  {^109^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.RIGHT )  {^112^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.leftBlock = block; ;^113^^^^^96^116^[REPLACE] this.rightBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^113^^^^^96^116^[ADD] this.rightBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.leftBlock = null; ;^110^^^^^96^116^[REPLACE] this.leftBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^112^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^110^^^^^96^116^[ADD] this.leftBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.bottomBlock = null; ;^107^^^^^96^116^[REPLACE] this.bottomBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^107^^^^^96^116^[ADD] this.bottomBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^109^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.leftBlock = block;^109^110^111^^^96^116^[ADD] else if  ( edge == RectangleEdge.LEFT )  { this.leftBlock = block; }^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.rightBlock = block;^112^113^114^^^96^116^[ADD] else if  ( edge == RectangleEdge.RIGHT )  { this.rightBlock = block; }^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.rightBlock = block; ;^104^^^^^96^116^[REPLACE] this.topBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^106^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^109^110^111^^^96^116^[ADD] else if  ( edge == RectangleEdge.LEFT )  { this.leftBlock = block; }^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.RIGHT )  {^112^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.LEFT )  {^109^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( widthRange, heightRange^102^^^^^96^116^[REPLACE] RectangleEdge edge =  ( RectangleEdge )  key;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^102^^^^^96^116^[ADD] RectangleEdge edge =  ( RectangleEdge )  key;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.rightBlock = block; ;^99^^^^^96^116^[REPLACE] this.centerBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.TOP )  {^103^^^^^96^116^[REPLACE] if  ( edge == RectangleEdge.TOP )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.BOTTOM )  {^106^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.bottomBlock = block;^106^107^108^^^96^116^[ADD] else if  ( edge == RectangleEdge.BOTTOM )  { this.bottomBlock = block; }^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  &&  RectangleEdge.LEFT )  {^109^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  &&  RectangleEdge.LEFT )  {^109^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  !=  RectangleEdge.RIGHT )  {^112^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.RIGHT )  {^112^^^^^96^116^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^99^^^^^96^116^[ADD] this.centerBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^104^^^^^96^116^[ADD] this.topBlock = block;^[METHOD] add [TYPE] void [PARAMETER] Block block Object key [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object key  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^RectangleConstraint contentConstraint = container.toContentConstraint ( contentConstraint ) ;^131^132^^^^130^176^[REPLACE] RectangleConstraint contentConstraint = container.toContentConstraint ( constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D contentSize = true;^133^^^^^130^176^[REPLACE] Size2D contentSize = null;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^133^^^^^130^176^[ADD] Size2D contentSize = null;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint .getHeightConstraintType (  )  ;^134^^^^^130^176^[REPLACE] LengthConstraintType w = contentConstraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^134^^^^^130^176^[ADD] LengthConstraintType w = contentConstraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^135^^^^^130^176^[REPLACE] LengthConstraintType h = contentConstraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.NONE )  {^136^^^^^130^176^[REPLACE] if  ( w == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^136^137^138^139^^130^176^[ADD] if  ( w == LengthConstraintType.NONE )  { if  ( h == LengthConstraintType.NONE )  { contentSize = arrangeNN ( container, g2 ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.FIXED )  {^147^^^^^130^176^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.RANGE )  {^158^^^^^130^176^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^159^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^165^166^167^168^169^130^176^[ADD] else if  ( h == LengthConstraintType.RANGE )  { contentSize = arrangeRR ( container, constraint.getWidthRange (  ) , constraint.getHeightRange (  ) , g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^contentSize =  arrangeRR ( null, constraint.getWidthRange (  ) , constraint.getHeightRange (  ) , g2 ) ;^166^167^168^169^^130^176^[REPLACE] contentSize = arrangeRR ( container, constraint.getWidthRange (  ) , constraint.getHeightRange (  ) , g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^166^167^168^^^130^176^[ADD] contentSize = arrangeRR ( container, constraint.getWidthRange (  ) , constraint.getHeightRange (  ) , g2^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^163^^^^^130^176^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^160^^^^^130^176^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^159^160^161^^^130^176^[ADD] if  ( h == LengthConstraintType.NONE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^162^163^164^^^130^176^[ADD] else if  ( h == LengthConstraintType.FIXED )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^163^^^^^130^176^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^160^^^^^130^176^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^148^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^151^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^151^152^153^^^130^176^[ADD] else if  ( h == LengthConstraintType.FIXED )  { contentSize = arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^contentSize = arrangeFR ( container, g2, constraint ) ;^154^155^156^^^130^176^[ADD] else if  ( h == LengthConstraintType.RANGE )  { contentSize = arrangeFR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^contentSize = arrangeFF ( container, g2, constraint ) ; ;^155^^^^^130^176^[REPLACE] contentSize = arrangeFR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^contentSize = arrangeNN ( container, g2 ) ; ;^152^^^^^130^176^[REPLACE] contentSize = arrangeFF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^154^^^^^130^176^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^contentSize = arrangeFF ( container, g2, constraint ) ; ;^149^^^^^130^176^[REPLACE] contentSize = arrangeFN ( container, g2, constraint.getWidth (  )  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^151^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^155^^^^^130^176^[ADD] contentSize = arrangeFR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^151^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^contentSize = arrangeFF ( container, g2, constraint ) ;^151^152^153^^^130^176^[ADD] else if  ( h == LengthConstraintType.FIXED )  { contentSize = arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^154^155^156^^^130^176^[ADD] else if  ( h == LengthConstraintType.RANGE )  { contentSize = arrangeFR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^152^^^^^130^176^[ADD] contentSize = arrangeFF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^159^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^165^^^^^130^176^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^165^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^137^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^140^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^140^^^^^130^176^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^143^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^144^^^^^130^176^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^141^^^^^130^176^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^143^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^contentSize = arrangeFF ( container, g2, constraint ) ; ;^138^^^^^130^176^[REPLACE] contentSize = arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^140^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^143^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^143^144^145^^^130^176^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^137^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^143^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^144^^^^^130^176^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^138^^^^^130^176^[ADD] contentSize = arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^140^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^141^^^^^130^176^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^143^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  &&  LengthConstraintType.FIXED )  {^147^^^^^130^176^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^158^^^^^130^176^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^159^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^148^^^^^130^176^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^contentSize = arrangeFN ( container, g2, constraint.getWidth (  )  ) ;^148^149^150^^^130^176^[ADD] if  ( h == LengthConstraintType.NONE )  { contentSize = arrangeFN ( container, g2, constraint.getWidth (  )  ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^151^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^154^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^149^^^^^130^176^[ADD] contentSize = arrangeFN ( container, g2, constraint.getWidth (  )  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^162^^^^^130^176^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( container.calculateTotalWidth ( contentSize.getWidth (  )  ) , container.calculateTotalHeight ( contentSize .getWidth (  )   ) ) ;^172^173^174^175^^130^176^[REPLACE] return new Size2D ( container.calculateTotalWidth ( contentSize.getWidth (  )  ) , container.calculateTotalHeight ( contentSize.getHeight (  )  ) ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D contentSize  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint constraint  contentConstraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] w = new double[2];^187^^^^^186^260^[REPLACE] double[] w = new double[5];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] h = new double[6];^188^^^^^186^260^[REPLACE] double[] h = new double[5];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^188^^^^^186^260^[ADD] double[] h = new double[5];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (leftBlock == null )  {^189^^^^^186^260^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^193^^^^^186^260^[REPLACE] w[0] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^194^^^^^186^260^[REPLACE] h[0] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.topBlock .arrange ( container , g2 , 1 )  ;^190^191^192^^^186^260^[REPLACE] Size2D size = this.topBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^190^191^192^^^186^260^[ADD] Size2D size = this.topBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^194^^^^^186^260^[REPLACE] h[0] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.topBlock .arrange ( container , g2 , this )  ;^190^191^192^^^186^260^[REPLACE] Size2D size = this.topBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.bottomBlock == null )  {^196^^^^^186^260^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^200^^^^^186^260^[REPLACE] w[1] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^201^^^^^186^260^[REPLACE] h[1] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock .arrange ( container , g2 , this )  ;^197^198^199^^^186^260^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^201^^^^^186^260^[ADD] h[1] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock .arrange ( container , g2 , null )  ;^197^198^199^^^186^260^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^203^^^^^186^260^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[4] = size.width; ;^207^^^^^186^260^[REPLACE] w[2] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^208^^^^^186^260^[REPLACE] h[2] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.leftBlock .arrange ( container , g2 , this )  ;^204^205^206^^^186^260^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^207^^^^^186^260^[REPLACE] w[2] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[4] = size.height; ;^208^^^^^186^260^[REPLACE] h[2] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.leftBlock .arrange ( container , g2 , true )  ;^204^205^206^^^186^260^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^204^205^206^^^186^260^[ADD] Size2D size = this.leftBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (rightBlock == null )  {^210^^^^^186^260^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^214^^^^^186^260^[REPLACE] w[3] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^214^^^^^186^260^[ADD] w[3] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^215^^^^^186^260^[REPLACE] h[3] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.rightBlock .arrange ( container , g2 , null )  ;^211^212^213^^^186^260^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[4] = size.width; ;^214^^^^^186^260^[REPLACE] w[3] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^215^^^^^186^260^[ADD] h[3] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^211^212^213^^^186^260^[ADD] Size2D size = this.rightBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[1] = Math.max ( h[1], h[3] ) ;^218^^^^^186^260^[REPLACE] h[2] = Math.max ( h[2], h[3] ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[1] = h[2];^219^^^^^186^260^[REPLACE] h[3] = h[2];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock == null )  {^221^^^^^186^260^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^225^^^^^186^260^[REPLACE] w[4] = size.width;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^226^^^^^186^260^[REPLACE] h[4] = size.height;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.centerBlock .arrange ( container , g2 , null )  ;^222^223^224^^^186^260^[REPLACE] Size2D size = this.centerBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.centerBlock .arrange ( container , g2 , false )  ;^222^223^224^^^186^260^[REPLACE] Size2D size = this.centerBlock.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double width = Math.max ( w[0], Math.max ( w[1], w[2] + w[4] +width )  ) ;^228^^^^^186^260^[REPLACE] double width = Math.max ( w[0], Math.max ( w[1], w[2] + w[4] + w[3] )  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double centerHeight = Math.max ( h[2 >> 4], Math.max ( h[3], h[4] )  ) ;^229^^^^^186^260^[REPLACE] double centerHeight = Math.max ( h[2], Math.max ( h[3], h[4] )  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double height = h[0L] + h[1] + centerHeight;^230^^^^^186^260^[REPLACE] double height = h[0] + h[1] + centerHeight;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.topBlock == this  )  {^231^^^^^186^260^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0D, 0.0D, width, h[0] ) ) ;^232^233^234^^^186^260^[REPLACE] this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, width, h[0] ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^232^233^234^^^186^260^[ADD] this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, width, h[0] ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.bottomBlock == null )  {^236^^^^^186^260^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^236^237^238^239^240^186^260^[ADD] if  ( this.bottomBlock != null )  { this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ; }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, width - h[1], width, h[1] ) ) ;^237^238^239^^^186^260^[REPLACE] this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^237^238^239^^^186^260^[ADD] this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^241^^^^^186^260^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.leftBlock.setBounds ( new Rectangle2D.Double ( 4.0d, h[0], w[2], width ) ) ;^242^243^244^^^186^260^[REPLACE] this.leftBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0], w[2], centerHeight ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.rightBlock == false )  {^246^^^^^186^260^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.rightBlock.setBounds ( new Rectangle2D.Double ( width  >  w[3], h[0], w[3], centerHeight ) ) ;^247^248^249^^^186^260^[REPLACE] this.rightBlock.setBounds ( new Rectangle2D.Double ( width - w[3], h[0], w[3], centerHeight ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^247^248^249^^^186^260^[ADD] this.rightBlock.setBounds ( new Rectangle2D.Double ( width - w[3], h[0], w[3], centerHeight ) ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock ==topBlock )  {^252^^^^^186^260^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.centerBlock.setBounds ( new Rectangle1D.Double ( w[1], h[0], width - w[1] -width, centerHeight )^253^254^255^256^^186^260^[REPLACE] this.centerBlock.setBounds ( new Rectangle2D.Double ( w[2], h[0], width - w[2] - w[3], centerHeight )^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^253^254^255^^^186^260^[ADD] this.centerBlock.setBounds ( new Rectangle2D.Double ( w[2], h[0], width - w[2] - w[3], centerHeight^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( width, centerHeight ) ;^259^^^^^186^260^[REPLACE] return new Size2D ( width, height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double centerHeight  height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size1 = arrangeFN ( container, g2, constraint.getWidthRange (  )  ) ;^273^^^^^271^282^[REPLACE] Size2D size1 = arrangeFN ( container, g2, constraint.getWidth (  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( edge == RectangleEdge.LEFT )  {^274^^^^^271^282^[REPLACE] if  ( constraint.getHeightRange (  ) .contains ( size1.getHeight (  )  )  )  {^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return arrange ( container, g2, constraint ) ;^280^^^^^271^282^[REPLACE] return arrange ( container, g2, c2 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double h = constraint .getWidth (  )  .constrain ( size1^278^^^^^271^282^[REPLACE] double h = constraint.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = constraint .getHeight (  )  ;^279^^^^^271^282^[REPLACE] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( width, height ) ;^275^^^^^271^282^[REPLACE] return size1;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( container.calculateTotalWidth ( contentSize.getWidth (  )  ) ,^280^^^^^271^282^[REPLACE] return arrange ( container, g2, c2 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double h = c2.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^278^^^^^271^282^[REPLACE] double h = constraint.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = c2.toFixedHeight ( h ) ;^279^^^^^271^282^[REPLACE] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^279^280^^^^271^282^[ADD] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ; return arrange ( container, g2, c2 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] w = new double[1];^296^^^^^295^347^[REPLACE] double[] w = new double[5];^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] h = new double[1];^297^^^^^295^347^[REPLACE] double[] h = new double[5];^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( width, true, LengthConstraintType.FIXED, 0.0, true, LengthConstraintType.NONE ) ;^298^299^300^301^^295^347^[REPLACE] RectangleConstraint c1 = new RectangleConstraint ( width, null, LengthConstraintType.FIXED, 0.0, null, LengthConstraintType.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.topBlock == null )  {^302^^^^^295^347^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^Size2D size = this.topBlock.arrange ( g2, c1 ) ;w[0] = size.width;h[0] = size.height;^302^303^304^305^306^295^347^[ADD] if  ( this.topBlock != null )  { Size2D size = this.topBlock.arrange ( g2, c1 ) ; w[0] = size.width; h[0] = size.height; }^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^304^^^^^295^347^[REPLACE] w[0] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^305^^^^^295^347^[REPLACE] h[0] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^303^^^^^295^347^[REPLACE] Size2D size = this.topBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^305^^^^^295^347^[REPLACE] h[0] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^303^304^^^^295^347^[ADD] Size2D size = this.topBlock.arrange ( g2, c1 ) ; w[0] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.bottomBlock == null )  {^307^^^^^295^347^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^309^^^^^295^347^[REPLACE] w[1] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^310^^^^^295^347^[REPLACE] h[1] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^310^^^^^295^347^[ADD] h[1] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.centerBlock.arrange ( g2, c5 ) ;^308^^^^^295^347^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^w[1] = size.width;^308^309^^^^295^347^[ADD] Size2D size = this.bottomBlock.arrange ( g2, c1 ) ; w[1] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c4 ) ;^308^^^^^295^347^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = new RectangleConstraint ( 2.0d, new Range ( 2.0d, width ) , LengthConstraintType.RANGE, 2.0d, null, LengthConstraintType.NONE ) ;^312^313^314^315^^295^347^[REPLACE] RectangleConstraint c2 = new RectangleConstraint ( 0.0, new Range ( 0.0, width ) , LengthConstraintType.RANGE, 0.0, null, LengthConstraintType.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^316^^^^^295^347^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^318^^^^^295^347^[REPLACE] w[2] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^319^^^^^295^347^[REPLACE] h[2] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^319^^^^^295^347^[ADD] h[2] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.leftBlock.arrange ( g2, c4 ) ;^317^^^^^295^347^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, c2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^318^319^^^^295^347^[ADD] w[2] = size.width; h[2] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.rightBlock == null )  {^321^^^^^295^347^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^329^^^^^295^347^[REPLACE] w[3] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^329^^^^^295^347^[ADD] w[3] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^330^^^^^295^347^[REPLACE] h[3] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double maxW = Math.max (height - w[0], 0.0 ) ;^322^^^^^295^347^[REPLACE] double maxW = Math.max ( width - w[2], 0.0 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( 0.0d, new Range (   maxW   , maxW ) , LengthConstraintType.RANGE, 0.0d, null, LengthConstraintType.NONE^323^324^325^326^^295^347^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( 0.0, new Range ( Math.min ( w[2], maxW ) , maxW ) , LengthConstraintType.RANGE, 0.0, null, LengthConstraintType.NONE^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.rightBlock.arrange ( g2, c4 ) ;^328^^^^^295^347^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double maxW = Math.max ( width -height, 0.0 ) ;^322^^^^^295^347^[REPLACE] double maxW = Math.max ( width - w[2], 0.0 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^322^^^^^295^347^[ADD] double maxW = Math.max ( width - w[2], 0.0 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( 4.0d, new Range ( Math.min ( w[2], maxW ) , maxW ) , LengthConstraintType.RANGE, 4.0d, null, LengthConstraintType.NONE^323^324^325^326^^295^347^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( 0.0, new Range ( Math.min ( w[2], maxW ) , maxW ) , LengthConstraintType.RANGE, 0.0, null, LengthConstraintType.NONE^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^328^^^^^295^347^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^328^^^^^295^347^[ADD] Size2D size = this.rightBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2 + 0] = Math.max ( h[2 + 0], h[3] ) ;^333^^^^^295^347^[REPLACE] h[2] = Math.max ( h[2], h[3] ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0] = h[2];^334^^^^^295^347^[REPLACE] h[3] = h[2];^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (rightBlock == false )  {^336^^^^^295^347^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^342^^^^^295^347^[REPLACE] w[4] = size.width;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^343^^^^^295^347^[REPLACE] h[4] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( width - w[4] - w[3], null, LengthConstraintType.FIXED, 0.0, null, LengthConstraintType.NONE ) ;^337^338^339^340^^295^347^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( width - w[2] - w[3], null, LengthConstraintType.FIXED, 0.0, null, LengthConstraintType.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^341^^^^^295^347^[REPLACE] Size2D size = this.centerBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^343^^^^^295^347^[REPLACE] h[4] = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( width  &&  w[4]  &&  w[3], null, LengthConstraintType.FIXED, 0.0, null, LengthConstraintType.NONE ) ;^337^338^339^340^^295^347^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( width - w[2] - w[3], null, LengthConstraintType.FIXED, 0.0, null, LengthConstraintType.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.centerBlock.arrange ( g2, c3 ) ;^341^^^^^295^347^[REPLACE] Size2D size = this.centerBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double maxW = Math.max ( width - w[2], 0.0 ) ;^345^^^^^295^347^[REPLACE] double height = h[0] + h[1] + Math.max ( h[2], Math.max ( h[3], h[4] )  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return arrange ( container, g2,  new RectangleConstraint ( widthRange, heightRange )   ) ;^346^^^^^295^347^[REPLACE] return arrange ( container, g2, new RectangleConstraint ( width, height )  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 double width [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  maxW  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] w = new double[3];^363^^^^^362^446^[REPLACE] double[] w = new double[5];^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^double[] h = new double[5];^363^364^^^^362^446^[ADD] double[] w = new double[5]; double[] h = new double[5];^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] h = new double[5L];^364^^^^^362^446^[REPLACE] double[] h = new double[5];^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^364^^^^^362^446^[ADD] double[] h = new double[5];^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( topBlock == this )  {^365^^^^^362^446^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^370^^^^^362^446^[REPLACE] w[0] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^370^^^^^362^446^[ADD] w[0] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^371^^^^^362^446^[REPLACE] h[0] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( widthRange, widthRange3 ) ;^366^367^368^^^362^446^[REPLACE] RectangleConstraint c1 = new RectangleConstraint ( widthRange, heightRange ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^366^367^368^^^362^446^[ADD] RectangleConstraint c1 = new RectangleConstraint ( widthRange, heightRange ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^369^^^^^362^446^[REPLACE] Size2D size = this.topBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^w[0] = size.width;^369^370^^^^362^446^[ADD] Size2D size = this.topBlock.arrange ( g2, c1 ) ; w[0] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( widthRange3, heightRange ) ;^366^367^368^^^362^446^[REPLACE] RectangleConstraint c1 = new RectangleConstraint ( widthRange, heightRange ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (rightBlock == null )  {^373^^^^^362^446^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^379^^^^^362^446^[REPLACE] w[1] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^379^^^^^362^446^[ADD] w[1] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^380^^^^^362^446^[REPLACE] h[1] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^380^^^^^362^446^[ADD] h[1] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Range heightRange2 = Range.shift ( heightRange, -h[4], false ) ;^374^^^^^362^446^[REPLACE] Range heightRange2 = Range.shift ( heightRange, -h[0], false ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = new RectangleConstraint ( widthRange3, heightRange2 ) ;^375^376^377^^^362^446^[REPLACE] RectangleConstraint c2 = new RectangleConstraint ( widthRange, heightRange2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^375^376^377^^^362^446^[ADD] RectangleConstraint c2 = new RectangleConstraint ( widthRange, heightRange2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^378^^^^^362^446^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, c2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Range heightRange2 = Range.shift ( heightRange, -h[3], false ) ;^374^^^^^362^446^[REPLACE] Range heightRange2 = Range.shift ( heightRange, -h[0], false ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^374^375^376^377^378^362^446^[ADD] Range heightRange2 = Range.shift ( heightRange, -h[0], false ) ; RectangleConstraint c2 = new RectangleConstraint ( widthRange, heightRange2 ) ; Size2D size = this.bottomBlock.arrange ( g2, c2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Range heightRange3 = Range.Range ( heightRange, - ( h[0] + h[1] )  ) ;^382^^^^^362^446^[REPLACE] Range heightRange3 = Range.shift ( heightRange, - ( h[0] + h[1] )  ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^382^383^384^385^386^362^446^[ADD] Range heightRange3 = Range.shift ( heightRange, - ( h[0] + h[1] )  ) ; if  ( this.leftBlock != null )  { RectangleConstraint c3 = new RectangleConstraint ( widthRange, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^383^^^^^362^446^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^388^^^^^362^446^[REPLACE] w[2] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[4] = size.height; ;^389^^^^^362^446^[REPLACE] h[2] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( widthRange, widthRange3 ) ;^384^385^386^^^362^446^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( widthRange, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^387^^^^^362^446^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^389^^^^^362^446^[REPLACE] h[2] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( widthRange3, heightRange3 ) ;^384^385^386^^^362^446^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( widthRange, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^384^385^386^^^362^446^[ADD] RectangleConstraint c3 = new RectangleConstraint ( widthRange, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Range widthRange2 * 3 = Range.shift ( widthRange, -w[2 * 3], false ) ;^391^^^^^362^446^[REPLACE] Range widthRange2 = Range.shift ( widthRange, -w[2], false ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.rightBlock == null )  {^392^^^^^362^446^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^397^^^^^362^446^[REPLACE] w[3] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^398^^^^^362^446^[REPLACE] h[3] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( widthRange3, heightRange3 ) ;^393^394^395^^^362^446^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( widthRange2, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.rightBlock .arrange ( container , g2 , c4 )  ;^396^^^^^362^446^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[4] = size.width; ;^397^^^^^362^446^[REPLACE] w[3] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( widthRange2, widthRange3 ) ;^393^394^395^^^362^446^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( widthRange2, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^393^394^395^^^362^446^[ADD] RectangleConstraint c4 = new RectangleConstraint ( widthRange2, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.rightBlock .arrange ( container , g2 , c2 )  ;^396^^^^^362^446^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2 + 4] = Math.max ( h[2 + 4], h[3] ) ;^401^^^^^362^446^[REPLACE] h[2] = Math.max ( h[2], h[3] ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[4] = h[2]; ;^402^^^^^362^446^[REPLACE] h[3] = h[2];^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Range widthRange3 = Range.shift ( widthRange, - ( w[2] +width ) , false ) ;^403^^^^^362^446^[REPLACE] Range widthRange3 = Range.shift ( widthRange, - ( w[2] + w[3] ) , false ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock == null )  {^404^^^^^362^446^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^412^^^^^362^446^[REPLACE] w[4] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^412^^^^^362^446^[ADD] w[4] = size.width;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^413^^^^^362^446^[REPLACE] h[4] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c5 = new RectangleConstraint ( widthRange3, widthRange2 ) ;^405^406^407^^^362^446^[REPLACE] RectangleConstraint c5 = new RectangleConstraint ( widthRange3, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^405^406^407^^^362^446^[ADD] RectangleConstraint c5 = new RectangleConstraint ( widthRange3, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^411^^^^^362^446^[REPLACE] Size2D size = this.centerBlock.arrange ( g2, c5 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^413^^^^^362^446^[REPLACE] h[4] = size.height;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c5 = new RectangleConstraint ( widthRange2, heightRange3 ) ;^405^406^407^^^362^446^[REPLACE] RectangleConstraint c5 = new RectangleConstraint ( widthRange3, heightRange3 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double width = Math.max ( w[0], Math.max ( w[1], w[2]  |  w[4]  |  w[3] )  ) ;^415^^^^^362^446^[REPLACE] double width = Math.max ( w[0], Math.max ( w[1], w[2] + w[4] + w[3] )  ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double height = h[0 / 3]  >  h[1]  >  Math.max ( h[2], Math.max ( h[3], h[4] )  ) ;^416^^^^^362^446^[REPLACE] double height = h[0] + h[1] + Math.max ( h[2], Math.max ( h[3], h[4] )  ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( topBlock == null )  {^417^^^^^362^446^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^417^418^419^420^421^362^446^[ADD] if  ( this.topBlock != null )  { this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, width, h[0] ) ) ; }^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.topBlock .arrange ( container , g2 , c3 )  ;^418^419^420^^^362^446^[REPLACE] this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, width, h[0] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.bottomBlock == null )  {^422^^^^^362^446^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^422^423^424^425^426^362^446^[ADD] if  ( this.bottomBlock != null )  { this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ; }^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.bottom  new Rectangle2D.Double ( 0.0, height -width, width,width )  ;^423^424^425^^^362^446^[REPLACE] this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^423^424^425^^^362^446^[ADD] this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, height - h[1], width, h[1] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.leftBlock == null )  {^427^^^^^362^446^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.leftBlock.setBounds ( new Rectangle2D.Double ( 0.0D, h[0], w[2], h[2] ) ) ;^428^429^430^^^362^446^[REPLACE] this.leftBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0], w[2], h[2] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.rightBlock == null )  {^432^^^^^362^446^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.rightBlock.setBounds ( new Rectangle2D.Double ( width -height, h[0],height, h[3] ) ) ;^433^434^435^^^362^446^[REPLACE] this.rightBlock.setBounds ( new Rectangle2D.Double ( width - w[3], h[0], w[3], h[3] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^433^434^435^^^362^446^[ADD] this.rightBlock.setBounds ( new Rectangle2D.Double ( width - w[3], h[0], w[3], h[3] ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock == null )  {^438^^^^^362^446^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.centerBlock.arrange ( new Rectangle2D.Double ( w[2], h[0], width - w[2] -width, height - h[0] - h[1] )^439^440^441^442^^362^446^[REPLACE] this.centerBlock.setBounds ( new Rectangle2D.Double ( w[2], h[0], width - w[2] - w[3], height - h[0] - h[1] )^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return arrange ( container, g2, c2 ) ;^445^^^^^362^446^[REPLACE] return new Size2D ( width, height ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Range widthRange Range heightRange Graphics2D g2 [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  [TYPE]  Range heightRange  heightRange2  heightRange3  widthRange  widthRange2  widthRange3  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] w = new double[3];^459^^^^^458^534^[REPLACE] double[] w = new double[5];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double[] h = new double[6];^460^^^^^458^534^[REPLACE] double[] h = new double[5];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 >> 3] = constraint.getWidth (  ) ;^461^^^^^458^534^[REPLACE] w[0] = constraint.getWidth (  ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^461^^^^^458^534^[ADD] w[0] = constraint.getWidth (  ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (rightBlock == null )  {^462^^^^^458^534^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = size.height; ;^469^^^^^458^534^[REPLACE] h[0] = size.height;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^469^^^^^458^534^[ADD] h[0] = size.height;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( w[3], null, LengthConstraintType.FIXED, 3.3, new Range ( 3.3, constraint.getHeight (  )  ) , LengthConstraintType.RANGE^463^464^465^466^^458^534^[REPLACE] RectangleConstraint c1 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )  ) , LengthConstraintType.RANGE^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.topBlock.arrange ( g2, constraint ) ;^468^^^^^458^534^[REPLACE] Size2D size = this.topBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^469^^^^^458^534^[REPLACE] h[0] = size.height;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = new RectangleConstraint ( w[0 * 1], null, LengthConstraintType.FIXED, 0 * 1.0 * 1, new Range ( 0 * 1.0 * 1, constraint.getHeight (  )  ) , LengthConstraintType.RANGE^463^464^465^466^^458^534^[REPLACE] RectangleConstraint c1 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )  ) , LengthConstraintType.RANGE^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^468^^^^^458^534^[REPLACE] Size2D size = this.topBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^468^^^^^458^534^[ADD] Size2D size = this.topBlock.arrange ( g2, c1 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[1L] = w[0];^471^^^^^458^534^[REPLACE] w[1] = w[0];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^471^^^^^458^534^[ADD] w[1] = w[0];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^472^^^^^458^534^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^472^473^474^475^476^458^534^[ADD] if  ( this.bottomBlock != null )  { RectangleConstraint c2 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )  - h[0] ) , LengthConstraintType.RANGE^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[0 ] = size.height;^479^^^^^458^534^[REPLACE] h[1] = size.height;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^479^^^^^458^534^[ADD] h[1] = size.height;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )   >=  h[0] ) , LengthConstraintType.RANGE^473^474^475^476^^458^534^[REPLACE] RectangleConstraint c2 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )  - h[0] ) , LengthConstraintType.RANGE^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, constraint ) ;^478^^^^^458^534^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, c2 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = new RectangleConstraint ( w[0 / 2], null, LengthConstraintType.FIXED, 0 / 2.0 / 2, new Range ( 0 / 2.0 / 2, constraint .getWidth (  )    ^  h[0 / 2] ) , LengthConstraintType.RANGE^473^474^475^476^^458^534^[REPLACE] RectangleConstraint c2 = new RectangleConstraint ( w[0], null, LengthConstraintType.FIXED, 0.0, new Range ( 0.0, constraint.getHeight (  )  - h[0] ) , LengthConstraintType.RANGE^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^478^^^^^458^534^[REPLACE] Size2D size = this.bottomBlock.arrange ( g2, c2 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[2] = constraint.getHeight (  )   <  h[1]  <  h[0];^481^^^^^458^534^[REPLACE] h[2] = constraint.getHeight (  )  - h[1] - h[0];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^481^^^^^458^534^[ADD] h[2] = constraint.getHeight (  )  - h[1] - h[0];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.leftBlock == null )  {^482^^^^^458^534^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^489^^^^^458^534^[REPLACE] w[2] = size.width;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( 3.0d, new Range ( 3.0d, constraint.getWidth (  )  ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^483^484^485^486^^458^534^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )  ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.leftBlock.arrange ( g2, constraint ) ;^488^^^^^458^534^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[4] = size.width; ;^489^^^^^458^534^[REPLACE] w[2] = size.width;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c3 = new RectangleConstraint ( 0.0D, new Range ( 0.0D, constraint.getWidth (  )  ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^483^484^485^486^^458^534^[REPLACE] RectangleConstraint c3 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )  ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^488^^^^^458^534^[REPLACE] Size2D size = this.leftBlock.arrange ( g2, c3 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[1] = h[2];^491^^^^^458^534^[REPLACE] h[3] = h[2];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.rightBlock == this )  {^492^^^^^458^534^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[0 ] = size.width;^499^^^^^458^534^[REPLACE] w[3] = size.width;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )   ||  w[2] ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^493^494^495^496^^458^534^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )  - w[2] ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.rightBlock .arrange ( container , g2 , c1 )  ;^498^^^^^458^534^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c4 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.toFixedHeight (  )   >  w[2] ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^493^494^495^496^^458^534^[REPLACE] RectangleConstraint c4 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )  - w[2] ) , LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^493^494^495^^^458^534^[ADD] RectangleConstraint c4 = new RectangleConstraint ( 0.0, new Range ( 0.0, constraint.getWidth (  )  - w[2] ) , LengthConstraintType.RANGE,^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D size = this.bottomBlock.arrange ( g2, c1 ) ;^498^^^^^458^534^[REPLACE] Size2D size = this.rightBlock.arrange ( g2, c4 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^h[3] = h[2]; ;^501^^^^^458^534^[REPLACE] h[4] = h[2];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^w[4] = constraint.getWidth (  )   ^  w[3]  ^  w[2];^502^^^^^458^534^[REPLACE] w[4] = constraint.getWidth (  )  - w[3] - w[2];^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^502^503^^^^458^534^[ADD] w[4] = constraint.getWidth (  )  - w[3] - w[2]; RectangleConstraint c5 = new RectangleConstraint ( w[4], h[4] ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c5 = new RectangleConstraint ( w[4 - 1], h[4 - 1] ) ;^503^^^^^458^534^[REPLACE] RectangleConstraint c5 = new RectangleConstraint ( w[4], h[4] ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^503^^^^^458^534^[ADD] RectangleConstraint c5 = new RectangleConstraint ( w[4], h[4] ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock ==rightBlock )  {^504^^^^^458^534^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.centerBlock .arrange ( container , g2 , c2 )  ;^505^^^^^458^534^[REPLACE] this.centerBlock.arrange ( g2, c5 ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^508^^^^^458^534^[REPLACE] if  ( this.topBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.topBlock.arrange ( new Rectangle2D.Double ( 3.0d, 3.0d, w[0], h[0] ) ) ;^509^510^511^^^458^534^[REPLACE] this.topBlock.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, w[0], h[0] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.bottomBlock == null )  {^513^^^^^458^534^[REPLACE] if  ( this.bottomBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0]  <  h[2], w[1], h[1] ) ) ;^514^515^516^^^458^534^[REPLACE] this.bottomBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0] + h[2], w[1], h[1] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.leftBlock == null )  {^518^^^^^458^534^[REPLACE] if  ( this.leftBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.leftBlock.arrange ( new Rectangle2D.Double ( 0.0D, h[0], w[2], h[2] ) ) ;^519^520^521^^^458^534^[REPLACE] this.leftBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0], w[2], h[2] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^519^520^521^^^458^534^[ADD] this.leftBlock.setBounds ( new Rectangle2D.Double ( 0.0, h[0], w[2], h[2] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  (topBlock == null )  {^523^^^^^458^534^[REPLACE] if  ( this.rightBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.rightBlock.setBounds ( new Rectangle2D.Double ( w[2] +null, h[0], w[3], h[3] ) ) ;^524^525^526^^^458^534^[REPLACE] this.rightBlock.setBounds ( new Rectangle2D.Double ( w[2] + w[4], h[0], w[3], h[3] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.centerBlock == true )  {^528^^^^^458^534^[REPLACE] if  ( this.centerBlock != null )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.centerBlock.setBounds ( new Rectangle3D.Double ( w[3], h[0], w[4], h[4] ) ) ;^529^530^531^^^458^534^[REPLACE] this.centerBlock.setBounds ( new Rectangle2D.Double ( w[2], h[0], w[4], h[4] ) ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( constraint.getWidthRange (  ) , constraint.getHeight (  )  ) ;^533^^^^^458^534^[REPLACE] return new Size2D ( constraint.getWidth (  ) , constraint.getHeight (  )  ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] BorderArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double[] h  w  [TYPE]  BlockContainer container  [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  RectangleConstraint c1  c2  c3  c4  c5  constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^this.bottomBlock = null; ;^540^^^^^539^545^[REPLACE] this.centerBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.topBlock = true;^541^^^^^539^545^[REPLACE] this.topBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^541^^^^^539^545^[ADD] this.topBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.bottomBlock = true;^542^^^^^539^545^[REPLACE] this.bottomBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.leftBlock = this;^543^^^^^539^545^[REPLACE] this.leftBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.bottomBlock = null; ;^544^^^^^539^545^[REPLACE] this.rightBlock = null;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( obj  !=  this )  {^555^^^^^554^578^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^556^^^^^554^578^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! ! ( obj instanceof BorderArrangement )  )  {^558^^^^^554^578^[REPLACE] if  ( ! ( obj instanceof BorderArrangement )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^559^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^RectangleEdge edge =  ( RectangleEdge )  key;^561^^^^^554^578^[REPLACE] BorderArrangement that =  ( BorderArrangement )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.topBlock, that.topBlock    )  {^562^^^^^554^578^[REPLACE] if  ( !ObjectUtilities.equal ( this.topBlock, that.topBlock )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^563^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.bottomBlock, that.bottomBlock    )  {^565^^^^^554^578^[REPLACE] if  ( !ObjectUtilities.equal ( this.bottomBlock, that.bottomBlock )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[ADD]^return false;^565^566^567^^^554^578^[ADD] if  ( !ObjectUtilities.equal ( this.bottomBlock, that.bottomBlock )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^566^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.leftBlock, that.leftBlock    )  {^568^^^^^554^578^[REPLACE] if  ( !ObjectUtilities.equal ( this.leftBlock, that.leftBlock )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[ADD]^return false;^568^569^570^^^554^578^[ADD] if  ( !ObjectUtilities.equal ( this.leftBlock, that.leftBlock )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^569^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.rightBlock, that.rightBlock    )  {^571^^^^^554^578^[REPLACE] if  ( !ObjectUtilities.equal ( this.rightBlock, that.rightBlock )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^572^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.centerBlock, that.centerBlock    )  {^574^^^^^554^578^[REPLACE] if  ( !ObjectUtilities.equal ( this.centerBlock, that.centerBlock )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^575^^^^^554^578^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^577^^^^^554^578^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] BorderArrangement   [TYPE]  Block block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  BorderArrangement that  [TYPE]  long serialVersionUID 
