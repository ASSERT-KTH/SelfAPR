[REPLACE]^private static final long serialVersionUID = -353308149220382047;^61^^^^^^^[REPLACE] private static final long serialVersionUID = -353308149220382047L;^ [CLASS] CenterArrangement  
[REPLACE]^LengthConstraintType w = constraint.getHeightConstraintType (  ) ;^97^^^^^95^134^[REPLACE] LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType h = constraint .getWidthConstraintType (  )  ;^98^^^^^95^134^[REPLACE] LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  &&  LengthConstraintType.NONE )  {^99^^^^^95^134^[REPLACE] if  ( w == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^99^100^101^102^^95^134^[ADD] if  ( w == LengthConstraintType.NONE )  { if  ( h == LengthConstraintType.NONE )  { return arrangeNN ( container, g2 ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.FIXED )  {^110^^^^^95^134^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  &&  LengthConstraintType.RANGE )  {^121^^^^^95^134^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^121^122^123^124^^95^134^[ADD] else if  ( w == LengthConstraintType.RANGE )  { if  ( h == LengthConstraintType.NONE )  { return arrangeRN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^122^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^129^^^^^95^134^[REPLACE] return arrangeRR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^126^^^^^95^134^[REPLACE] return arrangeRF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRR ( container, g2, constraint ) ;^123^^^^^95^134^[REPLACE] return arrangeRN ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRN ( container, g2, constraint ) ;^122^123^124^^^95^134^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeRN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     return arrangeNN ( container, g2 ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not implemented." ) ;         }^125^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^128^129^130^^^95^134^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRF ( container, g2, constraint ) ;^125^126^127^^^95^134^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeRF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRR ( container, g2, constraint ) ;^128^129^130^^^95^134^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^111^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^111^112^113^^^95^134^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeFN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^114^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^114^115^116^^^95^134^[ADD] else if  ( h == LengthConstraintType.FIXED )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^118^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^115^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^117^118^119^^^95^134^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^118^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^115^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^112^^^^^95^134^[REPLACE] return arrangeFN ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^114^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     throw new RuntimeException ( "Not implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }^117^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^118^^^^^95^134^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^111^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^114^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^122^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^125^126^127^^^95^134^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeRF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^128^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^122^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     return arrangeNN ( container, g2 ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not implemented." ) ;         }^122^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^128^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^115^^^^^95^134^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^100^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^103^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^106^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^106^107^108^^^95^134^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^107^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^107^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^104^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^106^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^104^^^^^95^134^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, c ) ;^101^^^^^95^134^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^103^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^104^^^^^95^134^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^106^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^100^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^103^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^103^104^105^^^95^134^[ADD] else if  ( h == LengthConstraintType.FIXED )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^106^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^103^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( w  ||  LengthConstraintType.FIXED )  {^110^^^^^95^134^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( w ==  ( LengthConstraintType.RANGE )  )  {     if  ( h ==  ( LengthConstraintType.NONE )  )  {         return arrangeRN ( container, g2, constraint ) ;     }else         if  ( h ==  ( LengthConstraintType.FIXED )  )  {             return arrangeRF ( container, g2, constraint ) ;         }else             if  ( h ==  ( LengthConstraintType.RANGE )  )  {                 return arrangeRR ( container, g2, constraint ) ;             }               }^110^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.RANGE )  {^121^^^^^95^134^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFN ( container, g2, constraint ) ;^111^112^113^^^95^134^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeFN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^114^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^114^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^111^^^^^95^134^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^117^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else {^121^^^^^95^134^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     return arrangeNN ( container, g2 ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not implemented." ) ;         }^121^^^^^95^134^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^125^^^^^95^134^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^132^^^^^95^134^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^149^^^^^146^157^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks.get ( 0 % 3 ) ;^150^^^^^146^157^[REPLACE] Block b =  ( Block )  blocks.get ( 0 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^150^^^^^146^157^[ADD] Block b =  ( Block )  blocks.get ( 0 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^151^^^^^146^157^[REPLACE] Size2D s = b.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^double width = constraint.getWidthRange (  ) ;^152^^^^^146^157^[REPLACE] double width = constraint.getWidth (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Rectangle2D bounds = new Rectangle2D.Double (  ( width - s.width )   >  2.0, 0.0, s.width, s.height ) ;^153^154^^^^146^157^[REPLACE] Rectangle2D bounds = new Rectangle2D.Double (  ( width - s.width )  / 2.0, 0.0, s.width, s.height ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^153^154^^^^146^157^[ADD] Rectangle2D bounds = new Rectangle2D.Double (  ( width - s.width )  / 2.0, 0.0, s.width, s.height ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^155^^^^^146^157^[REPLACE] b.setBounds ( bounds ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return true ;^156^^^^^146^157^[REPLACE] return new Size2D (  ( width - s.width )  / 2.0, s.height ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double width  [TYPE]  Rectangle2D bounds  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^172^^^^^169^181^[REPLACE] Size2D s = arrangeFN ( container, g2, constraint ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^173^^^^^169^181^[REPLACE] if  ( constraint.getHeightRange (  ) .contains ( s.height )  )  {^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^179^^^^^169^181^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = constraint.toFixedHeight ( constraint.getWidthRange (  ) .constrain ( s.getHeight (  )  )  ) ;^177^178^^^^169^181^[REPLACE] RectangleConstraint c = constraint.toFixedHeight ( constraint.getHeightRange (  ) .constrain ( s.getHeight (  )  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return s1;^174^^^^^169^181^[REPLACE] return s;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^197^^^^^193^198^[REPLACE] return arrangeFN ( container, g2, constraint ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^215^^^^^210^224^[REPLACE] Size2D s1 = arrangeNN ( container, g2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getHeightRange (  ) .contains ( s.height )  )  {^216^^^^^210^224^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFR ( constraintontainer, g2, c ) ;^222^^^^^210^224^[REPLACE] return arrangeFR ( container, g2, c ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;^220^221^^^^210^224^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return s;^217^^^^^210^224^[REPLACE] return s1;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^222^^^^^210^224^[REPLACE] return arrangeFR ( container, g2, c ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeFN ( container, g2, constraint ) ;^239^^^^^236^248^[REPLACE] Size2D s = arrangeNF ( container, g2, constraint ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^239^^^^^236^248^[ADD] Size2D s = arrangeNF ( container, g2, constraint ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getHeightRange (  ) .contains ( s.width )  )  {^240^^^^^236^248^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s.width )  )  {^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^240^241^242^^^236^248^[ADD] if  ( constraint.getWidthRange (  ) .contains ( s.width )  )  { return s; }^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^246^^^^^236^248^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  )  ) ;^244^245^^^^236^248^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  )  ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[ADD]^^244^245^^^^236^248^[ADD] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  )  ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return s1;^241^^^^^236^248^[REPLACE] return s;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^264^^^^^260^273^[REPLACE] Size2D s1 = arrangeNN ( container, g2 ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( c.getWidthRange (  ) .contains ( s1.width )  )  {^265^^^^^260^273^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFN ( constraintontainer, g2, c ) ;^271^^^^^260^273^[REPLACE] return arrangeFN ( container, g2, c ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;^269^270^^^^260^273^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return s;^266^^^^^260^273^[REPLACE] return s1;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^271^^^^^260^273^[REPLACE] return arrangeFN ( container, g2, c ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getHeightRange (  ) .getUpperBound (  )  ) ;^269^270^^^^260^273^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  Size2D s1  [TYPE]  RectangleConstraint c  constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^285^^^^^284^290^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks.get ( 3 ) ;^286^^^^^284^290^[REPLACE] Block b =  ( Block )  blocks.get ( 0 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^286^^^^^284^290^[ADD] Block b =  ( Block )  blocks.get ( 0 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^287^^^^^284^290^[REPLACE] Size2D s = b.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^287^^^^^284^290^[ADD] Size2D s = b.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^b.setBounds ( new Rectangle2D.Double ( 0.0d, 0.0d, s.width, s.height )  ) ;^288^^^^^284^290^[REPLACE] b.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, s.width, s.height )  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[ADD]^^288^^^^^284^290^[ADD] b.setBounds ( new Rectangle2D.Double ( 0.0, 0.0, s.width, s.height )  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^289^^^^^284^290^[REPLACE] return new Size2D ( s.width, s.height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] CenterArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, c ) ;^305^^^^^302^306^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] CenterArrangement   [TYPE]  RectangleConstraint constraint  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BlockContainer container  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( obj  &&  this )  {^323^^^^^322^330^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] CenterArrangement   [TYPE]  long serialVersionUID  [TYPE]  Object obj  [TYPE]  boolean false  true 
[REPLACE]^return false;^324^^^^^322^330^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] CenterArrangement   [TYPE]  long serialVersionUID  [TYPE]  Object obj  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! ! ( obj instanceof CenterArrangement )  )  {^326^^^^^322^330^[REPLACE] if  ( ! ( obj instanceof CenterArrangement )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] CenterArrangement   [TYPE]  long serialVersionUID  [TYPE]  Object obj  [TYPE]  boolean false  true 
[REPLACE]^return true;^327^^^^^322^330^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] CenterArrangement   [TYPE]  long serialVersionUID  [TYPE]  Object obj  [TYPE]  boolean false  true 
[REPLACE]^return false;^329^^^^^322^330^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] CenterArrangement   [TYPE]  long serialVersionUID  [TYPE]  Object obj  [TYPE]  boolean false  true 
