[REPLACE]^private static final double LOG_10_VALUE ;^54^^^^^^^[REPLACE] private static final double LOG_10_VALUE = Math.log ( 10.0 ) ;^ [CLASS] StandardTickUnitSource  
[REPLACE]^double log = Math.log ( x )  / LOG_10_VALUE;^64^^^^^63^69^[REPLACE] double x = unit.getSize (  ) ;^[METHOD] getLargerTickUnit [TYPE] TickUnit [PARAMETER] TickUnit unit [CLASS] StandardTickUnitSource   [TYPE]  TickUnit unit  [TYPE]  double LOG_10_VALUE  higher  log  x  [TYPE]  boolean false  true 
[REPLACE]^double higher =   higher   ;^66^^^^^63^69^[REPLACE] double higher = Math.ceil ( log ) ;^[METHOD] getLargerTickUnit [TYPE] TickUnit [PARAMETER] TickUnit unit [CLASS] StandardTickUnitSource   [TYPE]  TickUnit unit  [TYPE]  double LOG_10_VALUE  higher  log  x  [TYPE]  boolean false  true 
[REPLACE]^return new NumberTickUnit (   log   , new DecimalFormat ( "0.0E0" )  ) ;^67^68^^^^63^69^[REPLACE] return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[METHOD] getLargerTickUnit [TYPE] TickUnit [PARAMETER] TickUnit unit [CLASS] StandardTickUnitSource   [TYPE]  TickUnit unit  [TYPE]  double LOG_10_VALUE  higher  log  x  [TYPE]  boolean false  true 
[REPLACE]^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^80^^^^^79^81^[REPLACE] return getLargerTickUnit ( unit ) ;^[METHOD] getCeilingTickUnit [TYPE] TickUnit [PARAMETER] TickUnit unit [CLASS] StandardTickUnitSource   [TYPE]  TickUnit unit  [TYPE]  double LOG_10_VALUE  higher  log  x  [TYPE]  boolean false  true 
[REPLACE]^double.ceil = Math.log(size)  ;^92^^^^^91^96^[REPLACE] double log = Math.log ( size )  / LOG_10_VALUE;^[METHOD] getCeilingTickUnit [TYPE] TickUnit [PARAMETER] double size [CLASS] StandardTickUnitSource   [TYPE]  double LOG_10_VALUE  higher  log  size  x  [TYPE]  boolean false  true 
[REPLACE]^double higher =   higher   ;^93^^^^^91^96^[REPLACE] double higher = Math.ceil ( log ) ;^[METHOD] getCeilingTickUnit [TYPE] TickUnit [PARAMETER] double size [CLASS] StandardTickUnitSource   [TYPE]  double LOG_10_VALUE  higher  log  size  x  [TYPE]  boolean false  true 
[REPLACE]^return new NumberTickUnit (   higher   , new DecimalFormat ( "0.0E0" )  ) ;^94^95^^^^91^96^[REPLACE] return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[METHOD] getCeilingTickUnit [TYPE] TickUnit [PARAMETER] double size [CLASS] StandardTickUnitSource   [TYPE]  double LOG_10_VALUE  higher  log  size  x  [TYPE]  boolean false  true 
