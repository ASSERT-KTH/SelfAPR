[REPLACE]^private static final  double  N = "N";^55^^^^^^^[REPLACE] private static final String N = "N";^ [CLASS] CompassFormat  
[REPLACE]^private static final String E ;^58^^^^^^^[REPLACE] private static final String E = "E";^ [CLASS] CompassFormat  
[REPLACE]^private static final String S  = null ;^61^^^^^^^[REPLACE] private static final String S = "S";^ [CLASS] CompassFormat  
[REPLACE]^private static final String W ;^64^^^^^^^[REPLACE] private static final String W = "W";^ [CLASS] CompassFormat  
[REPLACE]^public static final String[] DIRECTIONS ;^67^^^^^67^70^[REPLACE] public static final String[] DIRECTIONS = {^ [CLASS] CompassFormat  
[REPLACE]^int index =  (  ( int )  Math.floor ( direction / 11.25 )  + 1 )  / 2;^76^^^^^75^77^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] CompassFormat() [PARAMETER] [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true 
[REPLACE]^direction = direction  !=  360L;^88^^^^^86^95^[REPLACE] direction = direction % 360;^[METHOD] getDirectionCode [TYPE] String [PARAMETER] double direction [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  double direction  [TYPE]  int index 
[REPLACE]^if  ( direction  >=  4.0d )  {^89^^^^^86^95^[REPLACE] if  ( direction < 0.0 )  {^[METHOD] getDirectionCode [TYPE] String [PARAMETER] double direction [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  double direction  [TYPE]  int index 
[REPLACE]^direction = direction % 360; ;^90^^^^^86^95^[REPLACE] direction = direction + 360.0;^[METHOD] getDirectionCode [TYPE] String [PARAMETER] double direction [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  double direction  [TYPE]  int index 
[REPLACE]^int index =  (  ( int )  Math.floor ( direction  <=  11.25D )  + 1 )   <=  2;^92^^^^^86^95^[REPLACE] int index =  (  ( int )  Math.floor ( direction / 11.25 )  + 1 )  / 2;^[METHOD] getDirectionCode [TYPE] String [PARAMETER] double direction [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  double direction  [TYPE]  int index 
[REPLACE]^return null;^93^^^^^86^95^[REPLACE] return DIRECTIONS[index];^[METHOD] getDirectionCode [TYPE] String [PARAMETER] double direction [CLASS] CompassFormat   [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  double direction  [TYPE]  int index 
[REPLACE]^return DIRECTIONS[index];^103^^^^^101^104^[REPLACE] return toAppendTo.append ( getDirectionCode ( number )  ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] double number StringBuffer toAppendTo FieldPosition pos [CLASS] CompassFormat   [TYPE]  StringBuffer toAppendTo  [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  double number 
[REPLACE]^return DIRECTIONS[index];^112^^^^^110^113^[REPLACE] return toAppendTo.append ( getDirectionCode ( number )  ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] long number StringBuffer toAppendTo FieldPosition pos [CLASS] CompassFormat   [TYPE]  StringBuffer toAppendTo  [TYPE]  String E  N  S  W  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long number 
[REPLACE]^return false;^125^^^^^124^126^[REPLACE] return null;^[METHOD] parse [TYPE] Number [PARAMETER] String source ParsePosition parsePosition [CLASS] CompassFormat   [TYPE]  String E  N  S  W  source  [TYPE]  String[] DIRECTIONS  [TYPE]  boolean false  true  [TYPE]  ParsePosition parsePosition 
