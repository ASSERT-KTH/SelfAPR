[REPLACE]^private float base = 10.0;^85^^^^^^^[REPLACE] private double base = 10.0;^ [CLASS] LogAxis  
[REPLACE]^private double baseLog  = null ;^88^^^^^^^[REPLACE] private double baseLog = Math.log ( 10.0 ) ;^ [CLASS] LogAxis  
[REPLACE]^private double smallestValue  = null ;^91^^^^^^^[REPLACE] private double smallestValue = 1E-100;^ [CLASS] LogAxis  
[REPLACE]^this ( this ) ;^106^^^^^105^107^[REPLACE] this ( null ) ;^[METHOD] <init> [TYPE] LogAxis() [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^106^^^^^105^107^[ADD] this ( null ) ;^[METHOD] <init> [TYPE] LogAxis() [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^double next = Math.pow ( this.base, current + this.tickUnit.getSize (  )  ) ;^115^^^^^114^120^[REPLACE] super ( label, NumberAxis.createIntegerTickUnits (  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^setDefaultAutoRange ( new Range ( 0.0d, 1.0 )  ) ;^116^^^^^114^120^[REPLACE] setDefaultAutoRange ( new Range ( 0.01, 1.0 )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^116^^^^^114^120^[ADD] setDefaultAutoRange ( new Range ( 0.01, 1.0 )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.tickUnit = new NumberTickUnit ( 1.0D ) ;^117^^^^^114^120^[REPLACE] this.tickUnit = new NumberTickUnit ( 1.0 ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.minorTickCount = 10 / 0;^118^^^^^114^120^[REPLACE] this.minorTickCount = 10;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^118^^^^^114^120^[ADD] this.minorTickCount = 10;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.setTickMarksVisible ( true ) ;^119^^^^^114^120^[REPLACE] this.setTickMarksVisible ( false ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^119^^^^^114^120^[ADD] this.setTickMarksVisible ( false ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String label [CLASS] LogAxis   [TYPE]  String label  [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return this.tickUnit;^128^^^^^127^129^[REPLACE] return this.base;^[METHOD] getBase [TYPE] double [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^if  ( smallestValue  ==  1.0D )  {^138^^^^^137^144^[REPLACE] if  ( base <= 1.0 )  {^[METHOD] setBase [TYPE] void [PARAMETER] double base [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return ;^139^^^^^137^144^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setBase [TYPE] void [PARAMETER] double base [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.base =  smallestValue;^141^^^^^137^144^[REPLACE] this.base = base;^[METHOD] setBase [TYPE] void [PARAMETER] double base [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.baseLog =  Math.log ( smallestValue ) ;^142^^^^^137^144^[REPLACE] this.baseLog = Math.log ( base ) ;^[METHOD] setBase [TYPE] void [PARAMETER] double base [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^143^144^^^^137^144^[ADD] notifyListeners ( new AxisChangeEvent ( this )  ) ; }^[METHOD] setBase [TYPE] void [PARAMETER] double base [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return this.tickUnit;^152^^^^^151^153^[REPLACE] return this.smallestValue;^[METHOD] getSmallestValue [TYPE] double [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^if  ( value  >  0.0D )  {^161^^^^^160^165^[REPLACE] if  ( value <= 0.0 )  {^[METHOD] setSmallestValue [TYPE] void [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^161^162^163^^^160^165^[ADD] if  ( value <= 0.0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] setSmallestValue [TYPE] void [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return ;^162^^^^^160^165^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setSmallestValue [TYPE] void [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.smallestValue =  null;^164^^^^^160^165^[REPLACE] this.smallestValue = value;^[METHOD] setSmallestValue [TYPE] void [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^164^^^^^160^165^[ADD] this.smallestValue = value;^[METHOD] setSmallestValue [TYPE] void [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return this.base;^173^^^^^172^174^[REPLACE] return this.tickUnit;^[METHOD] getTickUnit [TYPE] NumberTickUnit [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^setTickUnit ( tickUnit, false, false ) ;^187^^^^^185^188^[REPLACE] setTickUnit ( unit, true, true ) ;^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^if  ( tickUnit !=tickUnit )  {^204^^^^^201^215^[REPLACE] if  ( unit == null )  {^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return ;^205^^^^^201^215^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.tickUnit =  tickUnit;^207^^^^^201^215^[REPLACE] this.tickUnit = unit;^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^if  ( true )  {^208^^^^^201^215^[REPLACE] if  ( turnOffAutoSelect )  {^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^setAutoTickUnitSelection ( true, true ) ;^209^^^^^201^215^[REPLACE] setAutoTickUnitSelection ( false, false ) ;^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^if  ( turnOffAutoSelect )  {^211^^^^^201^215^[REPLACE] if  ( notify )  {^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^notifyListeners ( new AxisChangeEvent ( this )  ) ;^211^212^213^^^201^215^[ADD] if  ( notify )  { notifyListeners ( new AxisChangeEvent ( this )  ) ; }^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[ADD]^^212^213^^^^201^215^[ADD] notifyListeners ( new AxisChangeEvent ( this )  ) ; }^[METHOD] setTickUnit [TYPE] void [PARAMETER] NumberTickUnit unit boolean notify boolean turnOffAutoSelect [CLASS] LogAxis   [TYPE]  boolean false  notify  true  turnOffAutoSelect  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^return this.tickUnit;^224^^^^^223^225^[REPLACE] return this.numberFormatOverride;^[METHOD] getNumberFormatOverride [TYPE] NumberFormat [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat numberFormatOverride 
[REPLACE]^this.numberFormatOverride =  numberFormatOverride;^234^^^^^233^236^[REPLACE] this.numberFormatOverride = formatter;^[METHOD] setNumberFormatOverride [TYPE] void [PARAMETER] NumberFormat formatter [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return this.tickUnit;^244^^^^^243^245^[REPLACE] return this.minorTickCount;^[METHOD] getMinorTickCount [TYPE] int [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  (minorTickCount  !=  0 )  {^253^^^^^252^258^[REPLACE] if  ( count <= 0 )  {^[METHOD] setMinorTickCount [TYPE] void [PARAMETER] int count [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return ;^254^^^^^252^258^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setMinorTickCount [TYPE] void [PARAMETER] int count [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^this.minorTickCount = 10; ;^256^^^^^252^258^[REPLACE] this.minorTickCount = count;^[METHOD] setMinorTickCount [TYPE] void [PARAMETER] int count [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return   smallestValue     ;^270^^^^^269^271^[REPLACE] return Math.log ( value )  / this.baseLog;^[METHOD] calculateLog [TYPE] double [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return   this.base  ;^281^^^^^280^282^[REPLACE] return Math.pow ( this.base, log ) ;^[METHOD] calculateValue [TYPE] double [PARAMETER] double log [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double base  baseLog  log  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double expand =  ( minRange - range )  / 2;^297^^^^^295^321^[REPLACE] Range range = getRange (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMin = calculateLog ( range.getUpperBound (  )  ) ;^298^^^^^295^321^[REPLACE] double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMax = calculateLog ( range.getLowerBound (  )  ) ;^299^^^^^295^321^[REPLACE] double axisMax = calculateLog ( range.getUpperBound (  )  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double min = 0.0D;^301^^^^^295^321^[REPLACE] double min = 0.0;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double max = 2.0d;^302^^^^^295^321^[REPLACE] double max = 0.0;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^303^^^^^295^321^[REPLACE] if  ( RectangleEdge.isTopOrBottom ( edge )  )  {^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^307^^^^^295^321^[REPLACE] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^308^^^^^295^321^[REPLACE] min = area.getMaxY (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getMaxX (  ) ; ;^309^^^^^295^321^[REPLACE] max = area.getY (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^max = area.getY (  ) ;^308^309^^^^295^321^[ADD] min = area.getMaxY (  ) ; max = area.getY (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^304^^^^^295^321^[REPLACE] min = area.getX (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^304^305^^^^295^321^[ADD] min = area.getX (  ) ; max = area.getMaxX (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^305^^^^^295^321^[REPLACE] max = area.getMaxX (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( RectangleEdge.isTopOrBottom ( edge )  )  {^307^^^^^295^321^[REPLACE] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^305^^^^^295^321^[ADD] max = area.getMaxX (  ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double log = 0.0D;^311^^^^^295^321^[REPLACE] double log = 0.0;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^312^^^^^295^321^[REPLACE] if  ( isInverted (  )  )  {^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^312^313^^315^^295^321^[ADD] if  ( isInverted (  )  )  { log = axisMax -  ( java2DValue - min )  /  ( max - min ) }^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^log =smallestValue +  ( java2DValue - min )  /  ( max - min )  }^317^318^319^^^312^319^[REPLACE] log = axisMin +  ( java2DValue - min )  /  ( max - min )  }^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^log = axisMax  >=   ( java2DValue  >=  min )  /  ( max  >=  min )  }^313^314^315^^^295^321^[REPLACE] log = axisMax -  ( java2DValue - min )  /  ( max - min )  }^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^log = axisMax  &&   ( java2DValue  &&  min )  /  ( max  &&  min )  }^313^314^315^^^295^321^[REPLACE] log = axisMax -  ( java2DValue - min )  /  ( max - min )  }^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^log =smallestValue +  ( java2DValue - min )  /  ( max - min )  }^317^318^319^^^295^321^[REPLACE] log = axisMin +  ( java2DValue - min )  /  ( max - min )  }^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^return calculateValue ( value ) ;^320^^^^^295^321^[REPLACE] return calculateValue ( log ) ;^[METHOD] java2DToValue [TYPE] double [PARAMETER] double java2DValue Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double expand =  ( minRange - range )  / 2;^337^^^^^335^360^[REPLACE] Range range = getRange (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMin = calculateLog ( range.getUpperBound (  )  ) ;^338^^^^^335^360^[REPLACE] double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMax = calculateLog ( range.getLowerBound (  )  ) ;^339^^^^^335^360^[REPLACE] double axisMax = calculateLog ( range.getUpperBound (  )  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^value =  calculateLog ( smallestValue ) ;^340^^^^^335^360^[REPLACE] value = calculateLog ( value ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double min = 2.0d;^342^^^^^335^360^[REPLACE] double min = 0.0;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^double max = 0.0D;^343^^^^^335^360^[REPLACE] double max = 0.0;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^344^^^^^335^360^[REPLACE] if  ( RectangleEdge.isTopOrBottom ( edge )  )  {^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^348^^^^^335^360^[REPLACE] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^max = area.getMinY (  ) ;min = area.getMaxY (  ) ;^348^349^350^351^^335^360^[ADD] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  { max = area.getMinY (  ) ; min = area.getMaxY (  ) ; }^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^349^^^^^335^360^[REPLACE] max = area.getMinY (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^350^^^^^335^360^[REPLACE] min = area.getMaxY (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^345^^^^^335^360^[REPLACE] min = area.getX (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^max = area.getY (  ) ; ;^346^^^^^335^360^[REPLACE] max = area.getMaxX (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^350^^^^^335^360^[ADD] min = area.getMaxY (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^345^^^^^335^360^[ADD] min = area.getX (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^346^^^^^335^360^[ADD] max = area.getMaxX (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[ADD]^^349^^^^^335^360^[ADD] max = area.getMinY (  ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^352^^^^^335^360^[REPLACE] if  ( isInverted (  )  )  {^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^returnsmallestValue +  (  ( value - axisMin )  /  ( smallestValue - axisMin )  )  *  ( max - min ) ;^357^358^^^^335^360^[REPLACE] return min +  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^returnvalue -  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^353^354^^^^335^360^[REPLACE] return max -  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^return max  ||   (  ( value  ||  axisMin )  /  ( axisMax  ||  axisMin )  )  *  ( max  ||  min ) ;^353^354^^^^335^360^[REPLACE] return max -  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^returnsmallestValue +  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^357^358^^^^335^360^[REPLACE] return min +  (  ( value - axisMin )  /  ( axisMax - axisMin )  )  *  ( max - min ) ;^[METHOD] valueToJava2D [TYPE] double [PARAMETER] double value Rectangle2D area RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  Rectangle2D area  [TYPE]  Range range  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^367^^^^^366^370^[REPLACE] if  ( isAutoRange (  )  )  {^[METHOD] configure [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( isAutoRange (  )  )  { autoAdjustRange (  ) ;^368^^^^^366^370^[REPLACE] autoAdjustRange (  ) ;^[METHOD] configure [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  java2DValue  log  max  min  smallestValue  value  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^List result = new java.util.ArrayList (  ) ;^377^^^^^376^416^[REPLACE] Plot plot = getPlot (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( plot != null )  {^378^^^^^376^416^[REPLACE] if  ( plot == null )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return this.tickUnit;^379^^^^^376^416^[REPLACE] return;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( ! plot instanceof ValueAxisPlot )  {^382^^^^^376^416^[REPLACE] if  ( plot instanceof ValueAxisPlot )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( r != false )  {^386^^^^^376^416^[REPLACE] if  ( r == null )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^r = getDefaultAutoRange (  ) ;^386^387^388^^^376^416^[ADD] if  ( r == null )  { r = getDefaultAutoRange (  ) ; }^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^r  = null ;^387^^^^^376^416^[REPLACE] r = getDefaultAutoRange (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( fixedAutoRange  !=  1.0d )  {^396^^^^^376^416^[REPLACE] if  ( fixedAutoRange > 0.0 )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( range  == value )  {^402^^^^^396^411^[REPLACE] if  ( range < minRange )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^upper = upper +smallestValue;^404^^^^^396^411^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = lower -upper;^405^^^^^396^411^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^405^^^^^396^411^[ADD] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double expand =  ( max - range )   ;^403^^^^^396^411^[REPLACE] double expand =  ( minRange - range )  / 2;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^upper =smallestValue + expand;^404^^^^^396^411^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower =upper - expand;^405^^^^^396^411^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^401^^^^^396^411^[REPLACE] double minRange = getAutoRangeMinimumSize (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double expand =  ( minRange - range )   ;^403^^^^^396^411^[REPLACE] double expand =  ( minRange - range )  / 2;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = Math.max (smallestValue - fixedAutoRange, this.smallestValue ) ;^397^^^^^376^416^[REPLACE] lower = Math.max ( upper - fixedAutoRange, this.smallestValue ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^397^^^^^376^416^[ADD] lower = Math.max ( upper - fixedAutoRange, this.smallestValue ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  (value  <=  minRange )  {^402^^^^^376^416^[REPLACE] if  ( range < minRange )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^upper = upper  &&  expand;^404^^^^^376^416^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = lower  <  expand;^405^^^^^376^416^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double expand =  ( minRange - range )   ;^403^^^^^376^416^[REPLACE] double expand =  ( minRange - range )  / 2;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^r ;^387^^^^^376^416^[REPLACE] r = getDefaultAutoRange (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^387^^^^^376^416^[ADD] r = getDefaultAutoRange (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^upper = upper  ^  expand;^404^^^^^376^416^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower =upper - expand;^405^^^^^376^416^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^Plot plot = getPlot (  ) ;^383^^^^^376^416^[REPLACE] ValueAxisPlot vap =  ( ValueAxisPlot )  plot;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^383^^^^^376^416^[ADD] ValueAxisPlot vap =  ( ValueAxisPlot )  plot;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double fixedAutoRange = getFixedAutoRange (  ) ;^385^^^^^376^416^[REPLACE] Range r = vap.getDataRange ( this ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double upper = r.getLowerBound (  ) ;^390^^^^^376^416^[REPLACE] double upper = r.getUpperBound (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double lower = r.getUpperBound (  ) ;^391^^^^^376^416^[REPLACE] double lower = r.getLowerBound (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double range = smallestValue - upper;^392^^^^^376^416^[REPLACE] double range = upper - lower;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^395^^^^^376^416^[REPLACE] double fixedAutoRange = getFixedAutoRange (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^401^^^^^376^416^[REPLACE] double minRange = getAutoRangeMinimumSize (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double expand =  ( value - range )   ;^403^^^^^376^416^[REPLACE] double expand =  ( minRange - range )  / 2;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( r != null )  {^386^^^^^376^416^[REPLACE] if  ( r == null )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( fixedAutoRange  ==  0.0d )  {^396^^^^^376^416^[REPLACE] if  ( fixedAutoRange > 0.0 )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  (value  <=  minRange )  {^402^^^^^396^411^[REPLACE] if  ( range < minRange )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^if  ( range  ==  minRange )  {^402^^^^^376^416^[REPLACE] if  ( range < minRange )  {^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^smallestValue = upper + upper;^404^^^^^376^416^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = lower -upper;^405^^^^^376^416^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^r  =  r ;^387^^^^^376^416^[REPLACE] r = getDefaultAutoRange (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = Math.max ( upper  >  fixedAutoRange, this.smallestValue ) ;^397^^^^^376^416^[REPLACE] lower = Math.max ( upper - fixedAutoRange, this.smallestValue ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^upper =smallestValue + expand;^404^^^^^376^416^[REPLACE] upper = upper + expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^lower = lower  |  expand;^405^^^^^376^416^[REPLACE] lower = lower - expand;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^385^^^^^376^416^[ADD] Range r = vap.getDataRange ( this ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double upper = r .getLowerBound (  )  ;^390^^^^^376^416^[REPLACE] double upper = r.getUpperBound (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double lower = r .getUpperBound (  )  ;^391^^^^^376^416^[REPLACE] double lower = r.getLowerBound (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^391^^^^^376^416^[ADD] double lower = r.getLowerBound (  ) ;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^double range = smallestValue -smallestValue;^392^^^^^376^416^[REPLACE] double range = upper - lower;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[ADD]^^403^^^^^376^416^[ADD] double expand =  ( minRange - range )  / 2;^[METHOD] autoAdjustRange [TYPE] void [PARAMETER] [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Plot plot  [TYPE]  ValueAxisPlot vap  [TYPE]  Range r  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^AxisState state = false;^436^^^^^432^450^[REPLACE] AxisState state = null;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^436^^^^^432^450^[ADD] AxisState state = null;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( isVisible (  )  )  {^438^^^^^432^450^[REPLACE] if  ( !isVisible (  )  )  {^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^state =  new AxisState ( smallestValue ) ;^439^^^^^432^450^[REPLACE] state = new AxisState ( cursor ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^439^^^^^432^450^[ADD] state = new AxisState ( cursor ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^return this.tickUnit;^444^^^^^432^450^[REPLACE] return state;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^List ticks = new ArrayList (  ) ;^442^^^^^432^450^[REPLACE] List ticks = refreshTicks ( g2, state, dataArea, edge ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^state =  new AxisState ( upper ) ;^439^^^^^432^450^[REPLACE] state = new AxisState ( cursor ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^List ticks = refreshTicks ( g2, state, plotArea, edge ) ;^442^^^^^432^450^[REPLACE] List ticks = refreshTicks ( g2, state, dataArea, edge ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^state =  drawTickMarksAndLabels ( null, cursor, plotArea, dataArea, edge ) ;^446^^^^^432^450^[REPLACE] state = drawTickMarksAndLabels ( g2, cursor, plotArea, dataArea, edge ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^state =  drawLabel ( getLabel (  ) , null, plotArea, dataArea, edge, state, plotState ) ;^447^448^^^^432^450^[REPLACE] state = drawLabel ( getLabel (  ) , g2, plotArea, dataArea, edge, state, plotState ) ;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^return this.tickUnit;^449^^^^^432^450^[REPLACE] return state;^[METHOD] draw [TYPE] AxisState [PARAMETER] Graphics2D g2 double cursor Rectangle2D plotArea Rectangle2D dataArea RectangleEdge edge PlotRenderingInfo plotState [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  PlotRenderingInfo plotState  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  plotArea  [TYPE]  List ticks  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^Plot plot = getPlot (  ) ;^467^^^^^464^476^[REPLACE] List result = new java.util.ArrayList (  ) ;^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( !isVisible (  )  )  {^468^^^^^464^476^[REPLACE] if  ( RectangleEdge.isTopOrBottom ( edge )  )  {^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^468^469^470^^^464^476^[ADD] if  ( RectangleEdge.isTopOrBottom ( edge )  )  { result = refreshTicksHorizontal ( g2, dataArea, edge ) ; }^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( RectangleEdge.isTopOrBottom ( edge )  )  {^471^^^^^464^476^[REPLACE] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^471^472^473^^^464^476^[ADD] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  { result = refreshTicksVertical ( g2, dataArea, edge ) ; }^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^result = refreshTicksHorizontal ( g2, dataArea, edge ) ; ;^472^^^^^464^476^[REPLACE] result = refreshTicksVertical ( g2, dataArea, edge ) ;^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^472^^^^^464^476^[ADD] result = refreshTicksVertical ( g2, dataArea, edge ) ;^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^result = refreshTicksVertical ( g2, dataArea, edge ) ; ;^469^^^^^464^476^[REPLACE] result = refreshTicksHorizontal ( g2, dataArea, edge ) ;^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^471^^^^^464^476^[REPLACE] else if  ( RectangleEdge.isLeftOrRight ( edge )  )  {^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^return this.tickUnit;^474^^^^^464^476^[REPLACE] return result;^[METHOD] refreshTicks [TYPE] List [PARAMETER] Graphics2D g2 AxisState state Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  AxisState state  [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  cursor  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  range  smallestValue  upper  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List result  [TYPE]  int count  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double expand =  ( minRange - range )  / 2;^489^^^^^488^513^[REPLACE] Range range = getRange (  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^List result = new java.util.ArrayList (  ) ;^490^^^^^488^513^[REPLACE] List ticks = new ArrayList (  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^491^^^^^488^513^[REPLACE] double start = Math.floor ( calculateLog ( getLowerBound (  )  )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^492^^^^^488^513^[REPLACE] double end = Math.ceil ( calculateLog ( getUpperBound (  )  )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double current = smallestValue;^493^^^^^488^513^[REPLACE] double current = start;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^while  ( current  !=  end )  {^494^^^^^488^513^[REPLACE] while  ( current <= end )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( minorV )  )  {^496^^^^^488^513^[REPLACE] if  ( range.contains ( v )  )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.af ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.TOP_CENTER, TextAnchor.CENTER, 1.0d )  ) ;^497^498^^^^488^513^[REPLACE] ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( value ) , createTickLabel ( v ) , TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^497^498^^^^488^513^[REPLACE] ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( v )  )  {^505^^^^^488^513^[REPLACE] if  ( range.contains ( minorV )  )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( v ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^506^507^^^^488^513^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1; i  <=  this.minorTickCount; i++ )  {^503^^^^^488^513^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^503^504^505^506^507^488^513^[ADD] for  ( int i = 1; i < this.minorTickCount; i++ )  { double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ; if  ( range.contains ( minorV )  )  { ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^505^506^507^508^^488^513^[ADD] if  ( range.contains ( minorV )  )  { ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ; }^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV =value + i *  (  ( start - v )  / this.minorTickCount ) ;^504^^^^^488^513^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^current =value + this.tickUnit.getSize (  ) ;^510^^^^^488^513^[REPLACE] current = current + this.tickUnit.getSize (  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double v = calculateValue ( value ) ;^495^^^^^488^513^[REPLACE] double v = calculateValue ( current ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double next = Math.pow ( this.base,start + this.tickUnit.getSize (  )  ) ;^501^502^^^^488^513^[REPLACE] double next = Math.pow ( this.base, current + this.tickUnit.getSize (  )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 0; i < this.minorTickCount; i++ )  {^503^^^^^488^513^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV =value + minorTickCount *  (  ( next - v )  / this.minorTickCount ) ;^504^^^^^488^513^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^496^497^498^499^^488^513^[ADD] if  ( range.contains ( v )  )  { ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ; }^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( next ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^506^507^^^^488^513^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1; i  !=  this.minorTickCount; i++ )  {^503^^^^^488^513^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( upper ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^506^507^^^^488^513^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.TOP_CENTER, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV =value + i *  (  ( next - v )  / this.minorTickCount ) ;^504^^^^^488^513^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double next = Math.max ( this.base, start + this.tickUnit.getSize (  )  ) ;^501^502^^^^488^513^[REPLACE] double next = Math.pow ( this.base, current + this.tickUnit.getSize (  )  ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1L; i < this.minorTickCount; i++ )  {^503^^^^^488^513^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV = v  |  i *  (  ( next - v )  / this.minorTickCount ) ;^504^^^^^488^513^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^return this.tickUnit;^512^^^^^488^513^[REPLACE] return ticks;^[METHOD] refreshTicksHorizontal [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double expand =  ( minRange - range )  / 2;^526^^^^^525^550^[REPLACE] Range range = getRange (  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^List result = new java.util.ArrayList (  ) ;^527^^^^^525^550^[REPLACE] List ticks = new ArrayList (  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double start = Math.log ( calculateLog ( getLowerBound (  )  )  ) ;^528^^^^^525^550^[REPLACE] double start = Math.floor ( calculateLog ( getLowerBound (  )  )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double axisMin = calculateLog ( range.getLowerBound (  )  ) ;^529^^^^^525^550^[REPLACE] double end = Math.ceil ( calculateLog ( getUpperBound (  )  )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double current = smallestValue;^530^^^^^525^550^[REPLACE] double current = start;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^while  ( current  !=  end )  {^531^^^^^525^550^[REPLACE] while  ( current <= end )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^531^532^^^^525^550^[ADD] while  ( current <= end )  { double v = calculateValue ( current ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( value )  )  {^533^^^^^525^550^[REPLACE] if  ( range.contains ( v )  )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^533^534^535^536^^525^550^[ADD] if  ( range.contains ( v )  )  { ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ; }^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.af ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0D )  ) ;^534^535^^^^525^550^[REPLACE] ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( value ) , createTickLabel ( v ) , TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^534^535^^^^525^550^[REPLACE] ticks.add ( new NumberTick ( new Double ( v ) , createTickLabel ( v ) , TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( smallestValue )  )  {^542^^^^^525^550^[REPLACE] if  ( range.contains ( minorV )  )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( start ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^543^544^^^^525^550^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1; i  >=  this.minorTickCount; i++ )  {^540^^^^^525^550^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( range )  )  {^542^^^^^525^550^[REPLACE] if  ( range.contains ( minorV )  )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^542^543^544^545^^525^550^[ADD] if  ( range.contains ( minorV )  )  { ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ; }^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( v ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^543^544^^^^525^550^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV = v  >  minorTickCount *  (  ( next - v )  / this.minorTickCount ) ;^541^^^^^525^550^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^current =upper + this.tickUnit.getSize (  ) ;^547^^^^^525^550^[REPLACE] current = current + this.tickUnit.getSize (  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double v = calculateValue ( value ) ;^532^^^^^525^550^[REPLACE] double v = calculateValue ( current ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double next = Math.pow ( this.base, current  ==  this.tickUnit.getSize (  )  ) ;^538^539^^^^525^550^[REPLACE] double next = Math.pow ( this.base, current + this.tickUnit.getSize (  )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1 * 2; i < this.minorTickCount; i++ )  {^540^^^^^525^550^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV =value + i *  (  ( next - v )  / this.minorTickCount ) ;^541^^^^^525^550^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( minorV )  )  {^533^^^^^525^550^[REPLACE] if  ( range.contains ( v )  )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( range.contains ( v )  )  {^542^^^^^525^550^[REPLACE] if  ( range.contains ( minorV )  )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^ticks.add ( new NumberTick ( new Double ( range ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^543^544^^^^525^550^[REPLACE] ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 1 / 2; i  >=  this.minorTickCount; i++ )  {^540^^^^^525^550^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV = value + i *  (  ( next - v )  / this.minorTickCount ) ;^541^^^^^525^550^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^541^^^^^525^550^[ADD] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^current =start + this.tickUnit.getSize (  ) ;^547^^^^^525^550^[REPLACE] current = current + this.tickUnit.getSize (  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^532^^^^^525^550^[ADD] double v = calculateValue ( current ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double next = Math.pow ( this.base,value + this.tickUnit.getSize (  )  ) ;^538^539^^^^525^550^[REPLACE] double next = Math.pow ( this.base, current + this.tickUnit.getSize (  )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^for  ( int i = 0; i < this.minorTickCount; i++ )  {^540^^^^^525^550^[REPLACE] for  ( int i = 1; i < this.minorTickCount; i++ )  {^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[ADD]^^540^541^542^543^544^525^550^[ADD] for  ( int i = 1; i < this.minorTickCount; i++ )  { double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ; if  ( range.contains ( minorV )  )  { ticks.add ( new NumberTick ( new Double ( minorV ) , "", TextAnchor.CENTER_RIGHT, TextAnchor.CENTER, 0.0 )  ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^double minorV = v  &  i *  (  ( next - v )  / this.minorTickCount ) ;^541^^^^^525^550^[REPLACE] double minorV = v + i *  (  ( next - v )  / this.minorTickCount ) ;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^return this.tickUnit;^549^^^^^525^550^[REPLACE] return ticks;^[METHOD] refreshTicksVertical [TYPE] List [PARAMETER] Graphics2D g2 Rectangle2D dataArea RectangleEdge edge [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  Rectangle2D dataArea  [TYPE]  List ticks  [TYPE]  Range range  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride  [TYPE]  Graphics2D g2  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.numberFormatOverride == null )  {^560^^^^^559^566^[REPLACE] if  ( this.numberFormatOverride != null )  {^[METHOD] createTickLabel [TYPE] String [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return this.tickUnit.NumberTickUnit ( value ) ;^564^^^^^559^566^[REPLACE] return this.tickUnit.valueToString ( value ) ;^[METHOD] createTickLabel [TYPE] String [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return this.numberFormatOverride.format ( v ) ;^561^^^^^559^566^[REPLACE] return this.numberFormatOverride.format ( value ) ;^[METHOD] createTickLabel [TYPE] String [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
[REPLACE]^return this.tickUnit .getSize (  )  ;^564^^^^^559^566^[REPLACE] return this.tickUnit.valueToString ( value ) ;^[METHOD] createTickLabel [TYPE] String [PARAMETER] double value [CLASS] LogAxis   [TYPE]  boolean false  true  [TYPE]  double axisMax  axisMin  base  baseLog  current  cursor  end  expand  fixedAutoRange  java2DValue  log  lower  max  min  minRange  minorV  next  range  smallestValue  start  upper  v  value  [TYPE]  int count  i  minorTickCount  [TYPE]  NumberTickUnit tickUnit  unit  [TYPE]  NumberFormat formatter  numberFormatOverride 
