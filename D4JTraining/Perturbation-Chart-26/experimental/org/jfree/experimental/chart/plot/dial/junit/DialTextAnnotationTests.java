[REPLACE]^assertEquals ( h1, h2 ) ;^80^^^^^79^81^[REPLACE] super ( name ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  String name 
[REPLACE]^DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^87^^^^^86^92^[REPLACE] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2 
[ADD]^^87^^^^^86^92^[ADD] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2 
[REPLACE]^DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^88^^^^^86^92^[REPLACE] DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2 
[REPLACE]^assertTrue ( a1.setPaint ( a2 )  ) ;^89^^^^^86^92^[REPLACE] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2 
[REPLACE]^assertTrue ( a1 .getClass (  )   ) ;^89^^^^^86^92^[REPLACE] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2 
[REPLACE]^DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^98^^^^^97^104^[REPLACE] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[ADD]^^98^99^^^^97^104^[ADD] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ; DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^99^^^^^97^104^[REPLACE] DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^assertTrue ( a1.setPaint ( a2 )  ) ;^100^^^^^97^104^[REPLACE] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[ADD]^^100^101^^^^97^104^[ADD] assertTrue ( a1.equals ( a2 )  ) ; int h1 = a1.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^int h1 = a2 .clone (  )  ;^101^^^^^97^104^[REPLACE] int h1 = a1.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^int h2 = a1.clone (  ) ;^102^^^^^97^104^[REPLACE] int h2 = a2.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^assertEquals ( a1, a2 ) ;^103^^^^^97^104^[REPLACE] assertEquals ( h1, h2 ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  int h1  h2 
[REPLACE]^DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^111^^^^^109^125^[REPLACE] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialTextAnnotation a2 = this;^112^^^^^109^125^[REPLACE] DialTextAnnotation a2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^^112^^^^^109^125^[ADD] DialTextAnnotation a2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^a2 =  ( DialTextAnnotation )  a1.clone (  ) ;^113^114^115^^^109^125^[ADD] try { a2 =  ( DialTextAnnotation )  a1.clone (  ) ; }^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^a2 =  ( DialTextAnnotation )  in.readObject (  ) ; ;^114^^^^^109^125^[REPLACE] a2 =  ( DialTextAnnotation )  a1.clone (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^^116^117^^^^109^125^[ADD] catch  ( CloneNotSupportedException e )  { e.printStackTrace (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a1  ==  a2 ) ;^119^^^^^109^125^[REPLACE] assertTrue ( a1 != a2 ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a1.getClass (  )   !=  a2.getClass (  )  ) ;^120^^^^^109^125^[REPLACE] assertTrue ( a1.getClass (  )  == a2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^^120^121^^^^109^125^[ADD] assertTrue ( a1.getClass (  )  == a2.getClass (  )  ) ; assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a2.setPaint (  )  == a2.getClass (  )  ) ;^120^^^^^109^125^[REPLACE] assertTrue ( a1.getClass (  )  == a2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^^120^^^^^109^125^[ADD] assertTrue ( a1.getClass (  )  == a2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a1.getClass (  )  == a1.getClass (  )  ) ;^120^^^^^109^125^[REPLACE] assertTrue ( a1.getClass (  )  == a2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a1 .getClass (  )   ) ;^121^^^^^109^125^[REPLACE] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[ADD]^^121^^^^^109^125^[ADD] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( a1.setPaint ( a2 )  ) ;^121^^^^^109^125^[REPLACE] assertTrue ( a1.equals ( a2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialTextAnnotation a2 = new DialTextAnnotation ( "A1" ) ;^133^^^^^131^175^[REPLACE] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^133^134^^^^131^175^[ADD] DialTextAnnotation a1 = new DialTextAnnotation ( "A1" ) ; DialTextAnnotation a2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^DialTextAnnotation a2 = false;^134^^^^^131^175^[REPLACE] DialTextAnnotation a2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;ObjectOutput out = new ObjectOutputStream ( buffer ) ;out.writeObject ( a1 ) ;out.close (  ) ;^136^137^138^139^140^131^175^[ADD] try { ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( a1 ) ; out.close (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^a2 =  ( DialTextAnnotation )  a1.clone (  ) ; ;^144^^^^^131^175^[REPLACE] a2 =  ( DialTextAnnotation )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^137^^^^^131^175^[REPLACE] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^138^^^^^131^175^[REPLACE] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^138^^^^^131^175^[ADD] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.ByteArrayOutputStream (  )  )  ) ;^142^143^^^^131^175^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^142^143^^^^131^175^[ADD] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^142^143^^^^131^175^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^147^148^^^^131^175^[ADD] catch  ( Exception e )  { e.printStackTrace (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^assertEquals ( h1, h2 ) ;^150^^^^^131^175^[REPLACE] assertEquals ( a1, a2 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^a1 ;^153^^^^^131^175^[REPLACE] a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^153^^^^^131^175^[ADD] a1 = new DialTextAnnotation ( "A1" ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^a1 .equals ( a1 )  ;^154^155^^^^131^175^[REPLACE] a1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^a2 = this;^156^^^^^131^175^[REPLACE] a2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^156^^^^^131^175^[ADD] a2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;ObjectOutput out = new ObjectOutputStream ( buffer ) ;out.writeObject ( a1 ) ;out.close (  ) ;^158^159^160^161^162^131^175^[ADD] try { ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( a1 ) ; out.close (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^a2 =  ( DialTextAnnotation )  a1.clone (  ) ; ;^166^^^^^131^175^[REPLACE] a2 =  ( DialTextAnnotation )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^159^^^^^131^175^[REPLACE] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^160^^^^^131^175^[REPLACE] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.ByteArrayOutputStream (  )  )  ) ;^164^165^^^^131^175^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^159^160^^^^131^175^[ADD] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[ADD]^^160^^^^^131^175^[ADD] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REPLACE]^assertEquals ( h1, h2 ) ;^172^^^^^131^175^[REPLACE] assertEquals ( a1, a2 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
[REMOVE]^out.close (  ) ;^172^^^^^131^175^[REMOVE] ^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialTextAnnotationTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialTextAnnotation a1  a2  [TYPE]  Exception e 
