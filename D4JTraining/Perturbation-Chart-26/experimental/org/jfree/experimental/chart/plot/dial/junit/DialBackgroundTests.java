[REPLACE]^assertTrue ( b1 != b2 ) ;^83^^^^^82^84^[REPLACE] super ( name ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] DialBackgroundTests   [TYPE]  boolean false  true  [TYPE]  String name 
[REPLACE]^DialBackground b2 = new DialBackground (  ) ;^90^^^^^89^109^[REPLACE] DialBackground b1 = new DialBackground (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^DialBackground b1 = new DialBackground (  ) ;^91^^^^^89^109^[REPLACE] DialBackground b2 = new DialBackground (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1 .getClass (  )   ) ;^92^^^^^89^109^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[ADD]^^92^^^^^89^109^[ADD] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1.setPaint ( b2 )  ) ;^92^^^^^89^109^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^b1.DialBackground ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^95^96^^^^89^109^[REPLACE] b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1.equals ( b2 )  ) ;^97^^^^^89^109^[REPLACE] assertFalse ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertFalse ( b1.setPaint ( b2 )  ) ;^97^^^^^89^109^[REPLACE] assertFalse ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^b2.DialBackground ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^98^99^^^^89^109^[REPLACE] b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertFalse ( b1.equals ( b2 )  ) ;^100^^^^^89^109^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1.setPaint ( b2 )  ) ;^100^^^^^89^109^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[ADD]^^100^^^^^89^109^[ADD] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^b1 .setPaint ( true )  ;^103^104^^^^89^109^[REPLACE] b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1.equals ( b2 )  ) ;^105^^^^^89^109^[REPLACE] assertFalse ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertFalse ( b1 .getClass (  )   ) ;^105^^^^^89^109^[REPLACE] assertFalse ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REMOVE]^assertTrue ( b1.equals ( b2 )  ) ;^105^^^^^89^109^[REMOVE] ^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^b2.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^106^107^^^^89^109^[REPLACE] b2.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( b1.setPaint ( b2 )  ) ;^108^^^^^89^109^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true 
[REPLACE]^DialBackground b2 = new DialBackground ( Color.red ) ;^115^^^^^114^121^[REPLACE] DialBackground b1 = new DialBackground ( Color.red ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^DialBackground b1 = new DialBackground ( Color.red ) ;^116^^^^^114^121^[REPLACE] DialBackground b2 = new DialBackground ( Color.red ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^assertFalse ( b1.equals ( b2 )  ) ;^117^^^^^114^121^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REMOVE]^out.writeObject ( b1 ) ;^117^^^^^114^121^[REMOVE] ^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^assertTrue ( b1.setPaint ( b2 )  ) ;^117^^^^^114^121^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[ADD]^^117^^^^^114^121^[ADD] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^int h1 = b2.hashCode (  ) ;^118^^^^^114^121^[REPLACE] int h1 = b1.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^int h2 = b1.hashCode (  ) ;^119^^^^^114^121^[REPLACE] int h2 = b2.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^assertEquals ( b1, b2 ) ;^120^^^^^114^121^[REPLACE] assertEquals ( h1, h2 ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  int h1  h2 
[REPLACE]^DialBackground b2 = new DialBackground (  ) ;^128^^^^^126^156^[REPLACE] DialBackground b1 = new DialBackground (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^^128^^^^^126^156^[ADD] DialBackground b1 = new DialBackground (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialBackground b2 = false;^129^^^^^126^156^[REPLACE] DialBackground b2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^^129^^^^^126^156^[ADD] DialBackground b2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^b2 =  ( DialBackground )  b1.clone (  ) ;^130^131^132^^^126^156^[ADD] try { b2 =  ( DialBackground )  b1.clone (  ) ; }^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b2 =  ( DialBackground )  in.readObject (  ) ; ;^131^^^^^126^156^[REPLACE] b2 =  ( DialBackground )  b1.clone (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^^133^134^^^^126^156^[ADD] catch  ( CloneNotSupportedException e )  { e.printStackTrace (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1  ==  b2 ) ;^136^^^^^126^156^[REPLACE] assertTrue ( b1 != b2 ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1.getClass (  )   &&  b2.getClass (  )  ) ;^137^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b2.getClass (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1.DialBackground (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertFalse ( b1.equals ( b2 )  ) ;^138^^^^^126^156^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1 .getClass (  )   ) ;^138^^^^^126^156^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b1 =  new DialBackground ( red )  ;^141^^^^^126^156^[REPLACE] b1 = new DialBackground (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b1.DialBackground ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^142^143^^^^126^156^[REPLACE] b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b1.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^144^145^^^^126^156^[REPLACE] b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b2 = true;^146^^^^^126^156^[REPLACE] b2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^b2 =  ( DialBackground )  b1.clone (  ) ;^147^148^149^^^126^156^[ADD] try { b2 =  ( DialBackground )  b1.clone (  ) ; }^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^b2 =  ( DialBackground )  in.readObject (  ) ; ;^148^^^^^126^156^[REPLACE] b2 =  ( DialBackground )  b1.clone (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1  ==  b2 ) ;^153^^^^^126^156^[REPLACE] assertTrue ( b1 != b2 ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REMOVE]^in.close (  ) ;^153^^^^^126^156^[REMOVE] ^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1.getClass (  )   ||  b2.getClass (  )  ) ;^154^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b2.getClass (  )  == b2.getClass (  )  ) ;^154^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[ADD]^^154^^^^^126^156^[ADD] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1.DialBackground (  )  == b1.getClass (  )  ) ;^154^^^^^126^156^[REPLACE] assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertFalse ( b1.equals ( b2 )  ) ;^155^^^^^126^156^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REMOVE]^out.writeObject ( b1 ) ;^155^^^^^126^156^[REMOVE] ^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( b1 .getClass (  )   ) ;^155^^^^^126^156^[REPLACE] assertTrue ( b1.equals ( b2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialBackground b2 = new DialBackground (  ) ;^164^^^^^162^206^[REPLACE] DialBackground b1 = new DialBackground (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^DialBackground b2 = false;^165^^^^^162^206^[REPLACE] DialBackground b2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^^165^^^^^162^206^[ADD] DialBackground b2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;ObjectOutput out = new ObjectOutputStream ( buffer ) ;out.writeObject ( b1 ) ;out.close (  ) ;^167^168^169^170^171^162^206^[ADD] try { ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( b1 ) ; out.close (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b2 =  ( DialBackground )  b1.clone (  ) ; ;^175^^^^^162^206^[REPLACE] b2 =  ( DialBackground )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^168^^^^^162^206^[REPLACE] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^169^^^^^162^206^[REPLACE] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.ByteArrayOutputStream (  )  )  ) ;^173^174^^^^162^206^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^assertEquals ( h1, h2 ) ;^181^^^^^162^206^[REPLACE] assertEquals ( b1, b2 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b1 =  new DialBackground ( red )  ;^184^^^^^162^206^[REPLACE] b1 = new DialBackground (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b1.DialBackground ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^185^186^^^^162^206^[REPLACE] b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b1.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^187^188^^^^162^206^[REPLACE] b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^^187^188^189^^^162^206^[ADD] b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ; b2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b2 = true;^189^^^^^162^206^[REPLACE] b2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;ObjectOutput out = new ObjectOutputStream ( buffer ) ;out.writeObject ( b1 ) ;out.close (  ) ;^191^192^193^194^195^162^206^[ADD] try { ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( b1 ) ; out.close (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^b2 =  ( DialBackground )  b1.clone (  ) ; ;^199^^^^^162^206^[REPLACE] b2 =  ( DialBackground )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^192^^^^^162^206^[REPLACE] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^193^^^^^162^206^[REPLACE] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.ByteArrayOutputStream (  )  )  ) ;^197^198^^^^162^206^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^^192^^^^^162^206^[ADD] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[ADD]^^197^198^^^^162^206^[ADD] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
[REPLACE]^assertEquals ( h1, h2 ) ;^205^^^^^162^206^[REPLACE] assertEquals ( b1, b2 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialBackgroundTests   [TYPE]  DialBackground b1  b2  [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  Exception e 
