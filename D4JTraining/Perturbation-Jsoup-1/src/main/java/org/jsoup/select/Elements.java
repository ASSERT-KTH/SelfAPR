[REPLACE]^contents = new ArrayList<Element> ( elements ) ; ;^16^^^^^15^17^[REPLACE] contents = new ArrayList<Element> (  ) ;^[METHOD] <init> [TYPE] Elements() [PARAMETER] [CLASS] Elements   [TYPE]  List contents  [TYPE]  boolean false  true 
[REPLACE]^contents =  new Element> (  )  ; ;^20^^^^^19^21^[REPLACE] contents = new ArrayList<Element> ( elements ) ;^[METHOD] <init> [TYPE] Collection) [PARAMETER] Element> elements [CLASS] Elements   [TYPE]  Collection elements  [TYPE]  List contents  [TYPE]  boolean false  true 
[REPLACE]^contents =  null;^24^^^^^23^25^[REPLACE] contents = elements;^[METHOD] <init> [TYPE] List) [PARAMETER] Element> elements [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^this (   elements    ) ;^28^^^^^27^29^[REPLACE] this ( Arrays.asList ( elements )  ) ;^[METHOD] <init> [TYPE] Element[]) [PARAMETER]  elements [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element[] elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( element.hasAttr (.hasAttributeKey )  ) return element.attr ( attributeKey ) ;^41^42^^^^39^45^[REPLACE] if  ( element.hasAttr ( attributeKey )  ) return element.attr ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return element.hasAttr ( attributeKey ) ;^42^^^^^39^45^[REPLACE] return element.attr ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^40^^^^^39^45^[REPLACE] for  ( Element element : contents )  {^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return new Elements (  ) ;^44^^^^^39^45^[REPLACE] return "";^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^if  ( element.attr ( attributeKey )  ) return false;^54^55^^^^52^58^[REPLACE] if  ( element.hasAttr ( attributeKey )  ) return true;^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return false;^55^^^^^52^58^[REPLACE] return true;^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^53^^^^^52^58^[REPLACE] for  ( Element element : contents )  {^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return true;^57^^^^^52^58^[REPLACE] return false;^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^67^^^^^66^71^[REPLACE] for  ( Element element : contents )  {^[METHOD] attr [TYPE] Elements [PARAMETER] String attributeKey String attributeValue [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  attributeValue  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^70^^^^^66^71^[REPLACE] return this;^[METHOD] attr [TYPE] Elements [PARAMETER] String attributeKey String attributeValue [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  attributeValue  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^79^^^^^78^83^[REPLACE] for  ( Element element : contents )  {^[METHOD] removeAttr [TYPE] Elements [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[ADD]^^79^80^81^^^78^83^[ADD] for  ( Element element : contents )  { element.removeAttr ( attributeKey ) ; }^[METHOD] removeAttr [TYPE] Elements [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^82^^^^^78^83^[REPLACE] return this;^[METHOD] removeAttr [TYPE] Elements [PARAMETER] String attributeKey [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String attributeKey  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^91^^^^^90^95^[REPLACE] for  ( Element element : contents )  {^[METHOD] addClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^94^^^^^90^95^[REPLACE] return this;^[METHOD] addClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^103^^^^^102^107^[REPLACE] for  ( Element element : contents )  {^[METHOD] removeClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^106^^^^^102^107^[REPLACE] return this;^[METHOD] removeClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^115^^^^^114^119^[REPLACE] for  ( Element element : contents )  {^[METHOD] toggleClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^118^^^^^114^119^[REPLACE] return this;^[METHOD] toggleClass [TYPE] Elements [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^if  ( element.addClass ( className )  ) return false;^128^129^^^^126^132^[REPLACE] if  ( element.hasClass ( className )  ) return true;^[METHOD] hasClass [TYPE] boolean [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return false;^129^^^^^126^132^[REPLACE] return true;^[METHOD] hasClass [TYPE] boolean [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^127^^^^^126^132^[REPLACE] for  ( Element element : contents )  {^[METHOD] hasClass [TYPE] boolean [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return true;^131^^^^^126^132^[REPLACE] return false;^[METHOD] hasClass [TYPE] boolean [PARAMETER] String className [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^if  ( size (  )  - 4 > 0 ) return first (  ) .val (  ) ;^140^141^^^^139^144^[REPLACE] if  ( size (  )  > 0 ) return first (  ) .val (  ) ;^[METHOD] val [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^return new Elements (  ) ;^143^^^^^139^144^[REPLACE] return "";^[METHOD] val [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public int size (  )  {return contents.size (  ) ;}^141^^^^^139^144^[REPLACE] return first (  ) .val (  ) ;^[METHOD] val [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[ADD]^^152^153^154^155^^151^155^[ADD] for  ( Element element : contents ) element.val ( value ) ; return this; }^[METHOD] val [TYPE] Elements [PARAMETER] String value [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^154^^^^^151^155^[REPLACE] return this;^[METHOD] val [TYPE] Elements [PARAMETER] String value [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^166^^^^^165^173^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^if  ( sb.length (  )  - 1 != 0 ) sb.append ( " " ) ;^168^169^^^^165^173^[REPLACE] if  ( sb.length (  )  != 0 ) sb.append ( " " ) ;^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^sb.append ( "\n" ) ;^169^^^^^165^173^[REPLACE] sb.append ( " " ) ;^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^167^^^^^165^173^[REPLACE] for  ( Element element : contents )  {^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[ADD]^^167^168^169^170^171^165^173^[ADD] for  ( Element element : contents )  { if  ( sb.length (  )  != 0 ) sb.append ( " " ) ; sb.append ( element.text (  )  ) ; }^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^return sb.StringBuilder (  ) ;^172^^^^^165^173^[REPLACE] return sb.toString (  ) ;^[METHOD] text [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^if  ( element.hasText (  )  ) return false;^177^178^^^^175^181^[REPLACE] if  ( element.hasText (  )  ) return true;^[METHOD] hasText [TYPE] boolean [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element element  [TYPE]  boolean false  true 
[REPLACE]^return false;^178^^^^^175^181^[REPLACE] return true;^[METHOD] hasText [TYPE] boolean [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element element  [TYPE]  boolean false  true 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^176^^^^^175^181^[REPLACE] for  ( Element element: contents )  {^[METHOD] hasText [TYPE] boolean [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element element  [TYPE]  boolean false  true 
[REPLACE]^return true;^180^^^^^175^181^[REPLACE] return false;^[METHOD] hasText [TYPE] boolean [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element element  [TYPE]  boolean false  true 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^190^^^^^189^197^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^if  ( sb.length (  )  *  2 != 0 ) sb.append ( "\n" ) ;^192^193^^^^189^197^[REPLACE] if  ( sb.length (  )  != 0 ) sb.append ( "\n" ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^sb .StringBuilder (  )  ;^193^^^^^189^197^[REPLACE] sb.append ( "\n" ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^191^^^^^189^197^[REPLACE] for  ( Element element : contents )  {^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^return sb.StringBuilder (  ) ;^196^^^^^189^197^[REPLACE] return sb.toString (  ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^206^^^^^205^213^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^if  ( sb.length (  )  %  2 != 0  ) sb.append ( "\n" ) ;^208^209^^^^205^213^[REPLACE] if  ( sb.length (  )  != 0 ) sb.append ( "\n" ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[ADD]^sb.append ( "\n" ) ;sb.append ( element.outerHtml (  )  ) ;^208^209^210^211^^205^213^[ADD] if  ( sb.length (  )  != 0 ) sb.append ( "\n" ) ; sb.append ( element.outerHtml (  )  ) ; }^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^sb .StringBuilder (  )  ;^209^^^^^205^213^[REPLACE] sb.append ( "\n" ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^207^^^^^205^213^[REPLACE] for  ( Element element : contents )  {^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^return sb.StringBuilder (  ) ;^212^^^^^205^213^[REPLACE] return sb.toString (  ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^222^^^^^221^226^[REPLACE] for  ( Element element : contents )  {^[METHOD] html [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^225^^^^^221^226^[REPLACE] return this;^[METHOD] html [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^235^^^^^234^239^[REPLACE] for  ( Element element : contents )  {^[METHOD] prepend [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^238^^^^^234^239^[REPLACE] return this;^[METHOD] prepend [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^248^^^^^247^252^[REPLACE] for  ( Element element : contents )  {^[METHOD] append [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[ADD]^^248^249^250^^^247^252^[ADD] for  ( Element element : contents )  { element.append ( html ) ; }^[METHOD] append [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^251^^^^^247^252^[REPLACE] return this;^[METHOD] append [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^html   ;^264^^^^^263^269^[REPLACE] Validate.notEmpty ( html ) ;^[METHOD] wrap [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[ADD]^^264^^^^^263^269^[ADD] Validate.notEmpty ( html ) ;^[METHOD] wrap [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^for  ( Element element : contents )  { element.addClass ( className ) ;^265^^^^^263^269^[REPLACE] for  ( Element element : contents )  {^[METHOD] wrap [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return null;^268^^^^^263^269^[REPLACE] return this;^[METHOD] wrap [TYPE] Elements [PARAMETER] String html [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String html  [TYPE]  boolean false  true  [TYPE]  Element element 
[REPLACE]^return Selector .select ( query )  ;^279^^^^^278^280^[REPLACE] return Selector.select ( query, this ) ;^[METHOD] select [TYPE] Elements [PARAMETER] String query [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String query  [TYPE]  boolean false  true 
[REPLACE]^if  ( contents.size (  )  %  0.5  > index ) return new Elements ( get ( index )  ) ;^288^289^^^^287^292^[REPLACE] if  ( contents.size (  )  > index ) return new Elements ( get ( index )  ) ;^[METHOD] eq [TYPE] Elements [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^return  new Elements ( get ( index )  )  ;^291^^^^^287^292^[REPLACE] return new Elements (  ) ;^[METHOD] eq [TYPE] Elements [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^return  new Elements (  )   ) ;^289^^^^^287^292^[REPLACE] return new Elements ( get ( index )  ) ;^[METHOD] eq [TYPE] Elements [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^Elements children = this .select ( query , children )  ;^300^^^^^299^302^[REPLACE] Elements children = this.select ( query ) ;^[METHOD] is [TYPE] boolean [PARAMETER] String query [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String query  [TYPE]  boolean false  true  [TYPE]  Elements children 
[REPLACE]^return !children .set ( null , null )  ;^301^^^^^299^302^[REPLACE] return !children.isEmpty (  ) ;^[METHOD] is [TYPE] boolean [PARAMETER] String query [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  String query  [TYPE]  boolean false  true  [TYPE]  Elements children 
[REPLACE]^return !contents.isEmpty (  )  ? contents.get ( 2 )  : null;^310^^^^^309^311^[REPLACE] return !contents.isEmpty (  )  ? contents.get ( 0 )  : null;^[METHOD] first [TYPE] Element [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^return !contents.isEmpty (  )  ? contents.clear ( contents.size (  )  - 1 )  : null;^318^^^^^317^319^[REPLACE] return !contents.isEmpty (  )  ? contents.get ( contents.size (  )  - 1 )  : null;^[METHOD] last [TYPE] Element [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public int.get (  )  {return contents.size (  ) ;}^322^^^^^^^[REPLACE] public int size (  )  {return contents.size (  ) ;}^[METHOD] size [TYPE] int [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean.iterator (  )  {return contents.isEmpty (  ) ;}^324^^^^^^^[REPLACE] public boolean isEmpty (  )  {return contents.isEmpty (  ) ;}^[METHOD] isEmpty [TYPE] boolean [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean.equals ( Object o )  {return contents.contains ( o ) ;}^326^^^^^^^[REPLACE] public boolean contains ( Object o )  {return contents.contains ( o ) ;}^[METHOD] contains [TYPE] boolean [PARAMETER] Object o [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^public Iterator<Element>.listIterator (  )  {return contents.iterator (  ) ;}^328^^^^^^^[REPLACE] public Iterator<Element> iterator (  )  {return contents.iterator (  ) ;}^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public Object[].isEmpty (  )  {return contents.toArray (  ) ;}^330^^^^^^^[REPLACE] public Object[] toArray (  )  {return contents.toArray (  ) ;}^[METHOD] toArray [TYPE] Object[] [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public Object[] toArray (  )  {return contents.toArray (  ) ;}^332^^^^^^^[REPLACE] public <T> T[] toArray ( T[] a )  {return contents.toArray ( a ) ;}^[METHOD] toArray [TYPE] <T> [PARAMETER] T[] a [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  T[] a  [TYPE]  boolean false  true 
[REPLACE]^public boolean.remove ( Element element )  {return contents.add ( element ) ;}^334^^^^^^^[REPLACE] public boolean add ( Element element )  {return contents.add ( element ) ;}^[METHOD] add [TYPE] boolean [PARAMETER] Element element [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Element element  [TYPE]  boolean false  true 
[REPLACE]^public boolean.indexOf ( Object o )  {return contents.remove ( o ) ;}^336^^^^^^^[REPLACE] public boolean remove ( Object o )  {return contents.remove ( o ) ;}^[METHOD] remove [TYPE] boolean [PARAMETER] Object o [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^public boolean containsAll ( Collection<?> c )  {return contents .contains ( null )  ;}^338^^^^^^^[REPLACE] public boolean containsAll ( Collection<?> c )  {return contents.containsAll ( c ) ;}^[METHOD] containsAll [TYPE] boolean [PARAMETER] Collection<?> c [CLASS] Elements   [TYPE]  Collection c  [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean.retainAll ( Collection<? extends Element> c )  {return contents.addAll ( c ) ;}^340^^^^^^^[REPLACE] public boolean addAll ( Collection<? extends Element> c )  {return contents.addAll ( c ) ;}^[METHOD] addAll [TYPE] boolean [PARAMETER] Element> c [CLASS] Elements   [TYPE]  Collection c  [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean.add ( int index, Collection<? extends Element> c )  {return contents.addAll ( index, c ) ;}^342^^^^^^^[REPLACE] public boolean addAll ( int index, Collection<? extends Element> c )  {return contents.addAll ( index, c ) ;}^[METHOD] addAll [TYPE] boolean [PARAMETER] int index Element> c [CLASS] Elements   [TYPE]  Collection c  [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  int index 
[REPLACE]^public boolean.retainAll ( Collection<?> 1 )  {return contents.removeAll ( c ) ;}^344^^^^^^^[REPLACE] public boolean removeAll ( Collection<?> c )  {return contents.removeAll ( c ) ;}^[METHOD] removeAll [TYPE] boolean [PARAMETER] Collection<?> c [CLASS] Elements   [TYPE]  Collection c  [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean containsAll ( Collection<?> c )  {return contents.containsAll ( c ) ;}^346^^^^^^^[REPLACE] public boolean retainAll ( Collection<?> c )  {return contents.retainAll ( c ) ;}^[METHOD] retainAll [TYPE] boolean [PARAMETER] Collection<?> c [CLASS] Elements   [TYPE]  Collection c  [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public void.get (  )  {contents.clear (  ) ;}^348^^^^^^^[REPLACE] public void clear (  )  {contents.clear (  ) ;}^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public boolean.contains ( Object o )  {return contents.equals ( o ) ;}^350^^^^^^^[REPLACE] public boolean equals ( Object o )  {return contents.equals ( o ) ;}^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^public int.size (  )  {return contents.hashCode (  ) ;}^352^^^^^^^[REPLACE] public int hashCode (  )  {return contents.hashCode (  ) ;}^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public Element remove ( int index )  {return contents.remove ( index ) ;}^354^^^^^^^[REPLACE] public Element get ( int index )  {return contents.get ( index ) ;}^[METHOD] get [TYPE] Element [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^public Element.add ( int index, Element element )  {return contents.set ( index, element ) ;}^356^^^^^^^[REPLACE] public Element set ( int index, Element element )  {return contents.set ( index, element ) ;}^[METHOD] set [TYPE] Element [PARAMETER] int index Element element [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Element element 
[REPLACE]^public void.set ( int index, Element element )  {contents.add ( index, element ) ;}^358^^^^^^^[REPLACE] public void add ( int index, Element element )  {contents.add ( index, element ) ;}^[METHOD] add [TYPE] void [PARAMETER] int index Element element [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Element element 
[REPLACE]^public Element remove ( int index )  {return contents .removeAll ( null )  ;}^360^^^^^^^[REPLACE] public Element remove ( int index )  {return contents.remove ( index ) ;}^[METHOD] remove [TYPE] Element [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^public int.lastIndexOf ( Object o )  {return contents.indexOf ( o ) ;}^362^^^^^^^[REPLACE] public int indexOf ( Object o )  {return contents.indexOf ( o ) ;}^[METHOD] indexOf [TYPE] int [PARAMETER] Object o [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^public int.indexOf ( Object o )  {return contents.lastIndexOf ( o ) ;}^364^^^^^^^[REPLACE] public int lastIndexOf ( Object o )  {return contents.lastIndexOf ( o ) ;}^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object o [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^public ListIterator<Element>.iterator (  )  {return contents.listIterator (  ) ;}^366^^^^^^^[REPLACE] public ListIterator<Element> listIterator (  )  {return contents.listIterator (  ) ;}^[METHOD] listIterator [TYPE] ListIterator [PARAMETER] [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  boolean false  true 
[REPLACE]^public ListIterator<Element> listIterator ( int index )  {return contents .iterator (  )  ;}^368^^^^^^^[REPLACE] public ListIterator<Element> listIterator ( int index )  {return contents.listIterator ( index ) ;}^[METHOD] listIterator [TYPE] ListIterator [PARAMETER] int index [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int index  [TYPE]  boolean false  true 
[REPLACE]^public List<Element>.addAll ( int fromIndex, int toIndex )  {return contents.subList ( fromIndex, toIndex ) ;}^370^^^^^^^[REPLACE] public List<Element> subList ( int fromIndex, int toIndex )  {return contents.subList ( fromIndex, toIndex ) ;}^[METHOD] subList [TYPE] List [PARAMETER] int fromIndex int toIndex [CLASS] Elements   [TYPE]  List contents  elements  [TYPE]  int fromIndex  toIndex  [TYPE]  boolean false  true 
