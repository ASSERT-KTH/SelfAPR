[REPLACE]^private LinkedHashMap<String, Attribute> attributes  = null ;^18^^^^^^^[REPLACE] private LinkedHashMap<String, Attribute> attributes = new LinkedHashMap<String, Attribute> (  ) ;^ [CLASS] Attributes  
[REPLACE]^Validate.notNull ( key ) ;^28^^^^^27^32^[REPLACE] Validate.notEmpty ( key ) ;^[METHOD] get [TYPE] String [PARAMETER] String key [CLASS] Attributes   [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[ADD]^^28^^^^^27^32^[ADD] Validate.notEmpty ( key ) ;^[METHOD] get [TYPE] String [PARAMETER] String key [CLASS] Attributes   [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[REPLACE]^Attribute attr = attributes .put ( key , key )  ;^30^^^^^27^32^[REPLACE] Attribute attr = attributes.get ( key.toLowerCase (  )  ) ;^[METHOD] get [TYPE] String [PARAMETER] String key [CLASS] Attributes   [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[ADD]^^30^^^^^27^32^[ADD] Attribute attr = attributes.get ( key.toLowerCase (  )  ) ;^[METHOD] get [TYPE] String [PARAMETER] String key [CLASS] Attributes   [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return attr != null ? attr.getKey (  )  : "";^31^^^^^27^32^[REPLACE] return attr != null ? attr.getValue (  )  : "";^[METHOD] get [TYPE] String [PARAMETER] String key [CLASS] Attributes   [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[REPLACE]^List<Attribute> list = new ArrayList<Attribute> ( attributes.size (  )  ) ;^40^^^^^39^42^[REPLACE] Attribute attr = new Attribute ( key, value ) ;^[METHOD] put [TYPE] void [PARAMETER] String key String value [CLASS] Attributes   [TYPE]  String key  value  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return html (  ) ;^41^^^^^39^42^[REPLACE] put ( attr ) ;^[METHOD] put [TYPE] void [PARAMETER] String key String value [CLASS] Attributes   [TYPE]  String key  value  [TYPE]  boolean false  true  [TYPE]  Attribute attr  [TYPE]  LinkedHashMap attributes 
[REPLACE]^Validate.notEmpty ( attribute ) ;^49^^^^^48^51^[REPLACE] Validate.notNull ( attribute ) ;^[METHOD] put [TYPE] void [PARAMETER] Attribute attribute [CLASS] Attributes   [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^attributes.put ( attribute .getValue (  )  , attribute ) ;^50^^^^^48^51^[REPLACE] attributes.put ( attribute.getKey (  ) , attribute ) ;^[METHOD] put [TYPE] void [PARAMETER] Attribute attribute [CLASS] Attributes   [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[ADD]^^50^^^^^48^51^[ADD] attributes.put ( attribute.getKey (  ) , attribute ) ;^[METHOD] put [TYPE] void [PARAMETER] Attribute attribute [CLASS] Attributes   [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^attributes.put ( attribute.getValue (  ) , attribute ) ;^50^^^^^48^51^[REPLACE] attributes.put ( attribute.getKey (  ) , attribute ) ;^[METHOD] put [TYPE] void [PARAMETER] Attribute attribute [CLASS] Attributes   [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^Validate.notNull ( key ) ;^58^^^^^57^60^[REPLACE] Validate.notEmpty ( key ) ;^[METHOD] remove [TYPE] void [PARAMETER] String key [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  String key  [TYPE]  boolean false  true 
[REPLACE]^attributes.get ( key.toLowerCase (  )  ) ;^59^^^^^57^60^[REPLACE] attributes.remove ( key.toLowerCase (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] String key [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  String key  [TYPE]  boolean false  true 
[ADD]^^59^^^^^57^60^[ADD] attributes.remove ( key.toLowerCase (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] String key [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  String key  [TYPE]  boolean false  true 
[REPLACE]^attributes.put ( attribute.getKey (  ) , attribute ) ;^59^^^^^57^60^[REPLACE] attributes.remove ( key.toLowerCase (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] String key [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  String key  [TYPE]  boolean false  true 
[REPLACE]^return asList (  ) .iterator (  ) ;^68^^^^^67^69^[REPLACE] return attributes.containsKey ( key.toLowerCase (  )  ) ;^[METHOD] hasKey [TYPE] boolean [PARAMETER] String key [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  String key  [TYPE]  boolean false  true 
[REPLACE]^return attributes.hashCode (  ) ;^76^^^^^75^77^[REPLACE] return attributes.size (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^attributes.equals ( incoming.attributes ) ;^84^^^^^83^85^[REPLACE] attributes.putAll ( incoming.attributes ) ;^[METHOD] addAll [TYPE] void [PARAMETER] Attributes incoming [CLASS] Attributes   [TYPE]  Attributes incoming  [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^return attributes.size (  ) ;^88^^^^^87^89^[REPLACE] return asList (  ) .iterator (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^List<Attribute> list = new ArrayList<Attribute> ( attributes .hashCode (  )   ) ;^97^^^^^96^102^[REPLACE] List<Attribute> list = new ArrayList<Attribute> ( attributes.size (  )  ) ;^[METHOD] asList [TYPE] List [PARAMETER] [CLASS] Attributes   [TYPE]  List list  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^for  ( Attribute attribute : this )  { accum.append ( " " ) ;^98^^^^^96^102^[REPLACE] for  ( Map.Entry<String, Attribute> entry : attributes.entrySet (  )  )  {^[METHOD] asList [TYPE] List [PARAMETER] [CLASS] Attributes   [TYPE]  List list  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[ADD]^^98^99^100^^^96^102^[ADD] for  ( Map.Entry<String, Attribute> entry : attributes.entrySet (  )  )  { list.add ( entry.getValue (  )  ) ; }^[METHOD] asList [TYPE] List [PARAMETER] [CLASS] Attributes   [TYPE]  List list  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return   null   ;^101^^^^^96^102^[REPLACE] return Collections.unmodifiableList ( list ) ;^[METHOD] asList [TYPE] List [PARAMETER] [CLASS] Attributes   [TYPE]  List list  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^Attribute attr = new Attribute ( key, value ) ;^109^^^^^108^115^[REPLACE] StringBuilder accum = new StringBuilder (  ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes 
[ADD]^^109^^^^^108^115^[ADD] StringBuilder accum = new StringBuilder (  ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes 
[REPLACE]^List<Attribute> list = new ArrayList<Attribute> ( attributes.size (  )  ) ;^110^^^^^108^115^[REPLACE] for  ( Attribute attribute : this )  {^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes 
[ADD]^^110^111^112^113^^108^115^[ADD] for  ( Attribute attribute : this )  { accum.append ( " " ) ; accum.append ( attribute.html (  )  ) ; }^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return accum .StringBuilder (  )  ;^114^^^^^108^115^[REPLACE] return accum.toString (  ) ;^[METHOD] html [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Attribute attribute  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return asList (  ) .iterator (  ) ;^118^^^^^117^119^[REPLACE] return html (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
[REPLACE]^if  ( this  !=  o )  return true;^123^^^^^122^131^[REPLACE] if  ( this == o )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^if  ( this == o )  return false;^123^^^^^122^131^[REPLACE] if  ( this == o )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^if  ( ! ! ( o instanceof Attributes )  )  return false;^124^^^^^122^131^[REPLACE] if  ( ! ( o instanceof Attributes )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^if  ( ! ( o instanceof Attributes )  )  return true;^124^^^^^122^131^[REPLACE] if  ( ! ( o instanceof Attributes )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^List<Attribute> list = new ArrayList<Attribute> ( attributes.size (  )  ) ;^126^^^^^122^131^[REPLACE] Attributes that =  ( Attributes )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^if  ( attributes ! =  that.attributes == null )  return false;^128^^^^^122^131^[REPLACE] if  ( attributes != null ? !attributes.equals ( that.attributes )  : that.attributes != null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^if  ( attributes != null ? !attributes.equals ( that.attributes )  : that.attributes != null )  return true;^128^^^^^122^131^[REPLACE] if  ( attributes != null ? !attributes.equals ( that.attributes )  : that.attributes != null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return false;^130^^^^^122^131^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Attributes   [TYPE]  Attributes that  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  LinkedHashMap attributes 
[REPLACE]^return attributes != null ? attributes.length (  )  : 0;^135^^^^^134^136^[REPLACE] return attributes != null ? attributes.hashCode (  )  : 0;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Attributes   [TYPE]  LinkedHashMap attributes  [TYPE]  boolean false  true 
