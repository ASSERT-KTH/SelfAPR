[REPLACE]^Validate.notNull ( html ) ;^296^^^^^295^317^[REPLACE] Validate.notEmpty ( html ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[ADD]^^298^^^^^295^317^[ADD] Element wrapBody = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^Elements wrapChildren = wrap.parent (  ) ;^299^^^^^295^317^[REPLACE] Elements wrapChildren = wrapBody.children (  ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^Element remainder = wrapChildren.get ( i )  ;^300^^^^^295^317^[REPLACE] Element wrap = wrapChildren.first (  ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^if  (wrapBody != null ) return null;^301^302^^^^295^317^[REPLACE] if  ( wrap == null ) return null;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^return true;^302^^^^^295^317^[REPLACE] return null;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^String text = textNode.getWholeText (  )  ;^304^^^^^295^317^[REPLACE] Element deepest = getDeepChild ( wrap ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^parentNode.replaceChild ( this, wrapBody ) ;^305^^^^^295^317^[REPLACE] parentNode.replaceChild ( this, wrap ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[ADD]^^305^^^^^295^317^[ADD] parentNode.replaceChild ( this, wrap ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^deepest.indent ( this ) ;^306^^^^^295^317^[REPLACE] deepest.addChild ( this ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^if  ( wrapChildren.length (  )  > 1 )  {^309^^^^^295^317^[REPLACE] if  ( wrapChildren.size (  )  > 1 )  {^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[ADD]^^310^311^312^313^314^295^317^[ADD] for  ( int i = 1; i < wrapChildren.size (  ) ; i++ )  { Element remainder = wrapChildren.get ( i ) ; remainder.parentNode.removeChild ( remainder ) ; wrap.appendChild ( remainder ) ; }^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^Element remainder = wrapChildren .Elements ( 1 )  ;^311^^^^^295^317^[REPLACE] Element remainder = wrapChildren.get ( i ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < wrapChildren.size (  ) ; i++ )  {^310^^^^^295^317^[REPLACE] for  ( int i = 1; i < wrapChildren.size (  ) ; i++ )  {^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^Element wrap = wrapChildren.first (  )  ;^311^^^^^295^317^[REPLACE] Element remainder = wrapChildren.get ( i ) ;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^return null;^316^^^^^295^317^[REPLACE] return this;^[METHOD] wrap [TYPE] Element [PARAMETER] String html [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  Element deepest  remainder  wrap  wrapBody  [TYPE]  Tag tag  [TYPE]  String html  [TYPE]  Elements wrapChildren  [TYPE]  int i 
[REPLACE]^if  ( ! child instanceof TextNode )  {^564^^^^^562^582^[REPLACE] if  ( child instanceof TextNode )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^}  else {^575^^^^^562^582^[REPLACE] } else if  ( child instanceof Element )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  + 3 > 0  && element.isBlock (  )  && !TextNode.normaliseWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^accum.append ( " />" )  ;^578^^^^^562^582^[REPLACE] accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REMOVE]^attributes.hasKey ( "class" )  ;^578^^^^^562^582^[REMOVE] ^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^576^^^^^562^582^[ADD] Element element =  ( Element )  child;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  + 2 > 0  && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^accum .appendText ( text )  ;^578^^^^^562^582^[REPLACE] accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^DataNode data =  (  ( DataNode )   ( childNode )  )  ;^576^^^^^562^582^[REPLACE] Element element =  ( Element )  child;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( preserveWhitespace (  )  )  {^568^^^^^562^582^[REPLACE] if  ( !preserveWhitespace (  )  )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( TextNode.normaliseWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ;^570^571^^^^562^582^[REPLACE] if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^text = normaliseWhitespace ( text )  ;^571^^^^^562^582^[REPLACE] text = TextNode.stripLeadingWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^text = stripLeadingWhitespace ( text )  ;^569^^^^^562^582^[REPLACE] text = TextNode.normaliseWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^571^^^^^562^582^[ADD] text = TextNode.stripLeadingWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^DataNode data =  (  ( DataNode )   ( childNode )  )  ;^565^^^^^562^582^[REPLACE] TextNode textNode =  ( TextNode )  child;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^566^^^^^562^582^[ADD] String text = textNode.getWholeText (  ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.normaliseWhitespace ( text ) ;^570^571^^^^562^582^[REPLACE] if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^569^^^^^562^582^[ADD] text = TextNode.normaliseWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( TextNode .normaliseWhitespace ( text )   ) text = TextNode.stripLeadingWhitespace ( text ) ;^570^571^^^^562^582^[REPLACE] if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^} else if  ( ! child instanceof Element )  {^575^^^^^562^582^[REPLACE] } else if  ( child instanceof Element )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^}   Element element =  ( Element )  child;accum.append ( " " ) ;element.text ( accum ) ;^575^576^577^578^579^562^582^[ADD] else if  ( child instanceof Element )  { Element element =  ( Element )  child; if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ; element.text ( accum ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  + 2 > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  + 4 > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^} else if   (  childNode instanceof Element  )   {  ;^575^^^^^562^582^[REPLACE] } else if  ( child instanceof Element )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  + 5 > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^text = TextNode.normaliseWhitespace ( text ) ;text = TextNode.stripLeadingWhitespace ( text ) ;^568^569^570^571^572^562^582^[ADD] if  ( !preserveWhitespace (  )  )  { text = TextNode.normaliseWhitespace ( text ) ; if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ; }^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^String text = textNode.isBlank (  ) ;^566^^^^^562^582^[REPLACE] String text = textNode.getWholeText (  ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^568^569^570^571^572^562^582^[ADD] if  ( !preserveWhitespace (  )  )  { text = TextNode.normaliseWhitespace ( text ) ; if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ; }^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^570^571^572^^^562^582^[ADD] if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ; }^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^text = TextNode.stripLeadingWhitespace ( text ) ;^570^571^572^^^562^582^[ADD] if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ; }^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.length (  )  /  0 .5  > 0  && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( accum.size (  )  > 0  && element.child (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^[REPLACE] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[ADD]^^577^578^579^580^^562^582^[ADD] if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ; element.text ( accum ) ; }^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^Node childNode  ;^563^^^^^562^582^[REPLACE] for  ( Node child : childNodes )  {^[METHOD] text [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node child  [TYPE]  Element element  [TYPE]  TextNode textNode  [TYPE]  Tag tag  [TYPE]  String text 
[REPLACE]^if  ( isBlock (  )  ||  ( parent (  )  != this && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  != 0 )  ) indent ( accum ) ;^758^759^^^^757^773^[REPLACE] if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^attributes.hasKey ( "class" )  ;^759^^^^^757^773^[REPLACE] indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[ADD]^^759^^^^^757^773^[ADD] indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^accum  .appendText ( this )^760^761^762^763^^757^773^[REPLACE] accum .append ( "<" ) .append ( tagName (  )  ) .append ( attributes.html (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^accum  .appendText ( null )^760^761^762^763^^757^773^[REPLACE] accum .append ( "<" ) .append ( tagName (  )  ) .append ( attributes.html (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[ADD]^^762^763^^^^757^773^[ADD] .append ( tagName (  )  ) .append ( attributes.html (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^.append ( attributes .html (  )   ) ;^763^^^^^757^773^[REPLACE] .append ( attributes.html (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^if  ( childNodes.isEmpty (  )  || tag.isEmpty (  )  )  {^765^^^^^757^773^[REPLACE] if  ( childNodes.isEmpty (  )  && tag.isEmpty (  )  )  {^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^if  ( tag.isBlock (  )  )  indent ( accum ) ;^770^^^^^765^772^[REPLACE] if  ( tag.canContainBlock (  )  )  indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^accum.append ( ">" )  ;^766^^^^^757^773^[REPLACE] accum.append ( " />" ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[ADD]^^766^^^^^757^773^[ADD] accum.append ( " />" ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
[REPLACE]^if  ( tag.isBlock (  )  )  indent ( accum ) ;^770^^^^^757^773^[REPLACE] if  ( tag.canContainBlock (  )  )  indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Element   [TYPE]  Set classNames  classes  [TYPE]  Tag tag  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum 
