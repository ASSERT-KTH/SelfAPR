[REPLACE]^Attributes attributes;^20^^^^^^^[REPLACE] final Attributes attributes;^ [CLASS] Node  
[REPLACE]^char  baseUri;^21^^^^^^^[REPLACE] String baseUri;^ [CLASS] Node  
[REPLACE]^Validate .notEmpty ( baseUri )  ;^29^^^^^28^35^[REPLACE] Validate.notNull ( baseUri ) ;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notNull ( attributeKey ) ;^30^^^^^28^35^[REPLACE] Validate.notNull ( attributes ) ;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^childNodes ;^32^^^^^28^35^[REPLACE] childNodes = new ArrayList<Node> (  ) ;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^this.baseUri =  null.trim (  ) ;^33^^^^^28^35^[REPLACE] this.baseUri = baseUri.trim (  ) ;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[ADD]^^33^^^^^28^35^[ADD] this.baseUri = baseUri.trim (  ) ;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^this.attributes =  null;^34^^^^^28^35^[REPLACE] this.attributes = attributes;^[METHOD] <init> [TYPE] Attributes) [PARAMETER] String baseUri Attributes attributes [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^if  ( !hasAttr ( attributeKey )  )  { return "";^38^^^^^37^39^[REPLACE] this ( baseUri, new Attributes (  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String baseUri [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REMOVE]^if  ( !hasAttr ( attributeKey )  )  { return "";^38^^^^^37^39^[REMOVE] ^[METHOD] <init> [TYPE] String) [PARAMETER] String baseUri [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate .notEmpty ( baseUri )  ;^60^^^^^59^67^[REPLACE] Validate.notNull ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^if  ( hasAttr ( baseUri )  ) return attributes.get ( attributeKey ) ;^62^63^^^^59^67^[REPLACE] if  ( hasAttr ( attributeKey )  ) return attributes.get ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^if  ( baseUri.toLowerCase (  ) .startsWith ( "abs:" )  ) return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^64^65^^^^59^67^[REPLACE] else if  ( attributeKey.toLowerCase (  ) .startsWith ( "abs:" )  ) return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[ADD]^^64^65^66^67^^59^67^[ADD] else if  ( attributeKey.toLowerCase (  ) .startsWith ( "abs:" )  ) return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ; else return ""; }^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return "";^66^^^^^59^67^[REPLACE] else return "";^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return absUrl ( baseUri.substring ( "abs:".length (  )  )  ) ;^65^^^^^59^67^[REPLACE] return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return absUrl ( attributeKey.substring ( "abs:" .startsWith ( baseUri )   )  ) ;^65^^^^^59^67^[REPLACE] return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return attributes.hasKey ( baseUri ) ;^63^^^^^59^67^[REPLACE] return attributes.get ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return attributes .put ( baseUri , baseUri )  ;^63^^^^^59^67^[REPLACE] return attributes.get ( attributeKey ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return absUrl ( baseUri.substring ( "abs:" .startsWith ( baseUri )   )  ) ;^65^^^^^59^67^[REPLACE] return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[METHOD] attr [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^74^^^^^73^75^[REPLACE] return attributes;^[METHOD] attributes [TYPE] Attributes [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^attributes.put ( baseUri, attributeValue ) ;^84^^^^^83^86^[REPLACE] attributes.put ( attributeKey, attributeValue ) ;^[METHOD] attr [TYPE] Node [PARAMETER] String attributeKey String attributeValue [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return null;^85^^^^^83^86^[REPLACE] return this;^[METHOD] attr [TYPE] Node [PARAMETER] String attributeKey String attributeValue [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notEmpty ( attributeKey ) ;^94^^^^^93^96^[REPLACE] Validate.notNull ( attributeKey ) ;^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return attributes.get ( attributeKey ) ;^95^^^^^93^96^[REPLACE] return attributes.hasKey ( attributeKey ) ;^[METHOD] hasAttr [TYPE] boolean [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notNull ( baseUri ) ;^104^^^^^103^107^[REPLACE] Validate.notNull ( attributeKey ) ;^[METHOD] removeAttr [TYPE] Node [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^attributes.get ( attributeKey ) ;^105^^^^^103^107^[REPLACE] attributes.remove ( attributeKey ) ;^[METHOD] removeAttr [TYPE] Node [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REMOVE]^return siblings.get ( index-1 ) ;^105^^^^^103^107^[REMOVE] ^[METHOD] removeAttr [TYPE] Node [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return null;^106^^^^^103^107^[REPLACE] return this;^[METHOD] removeAttr [TYPE] Node [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^114^^^^^113^115^[REPLACE] return baseUri;^[METHOD] baseUri [TYPE] String [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notNull ( attributeValue ) ;^122^^^^^121^124^[REPLACE] Validate.notNull ( baseUri ) ;^[METHOD] setBaseUri [TYPE] void [PARAMETER] String baseUri [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^this.baseUri =  attributeValue;^123^^^^^121^124^[REPLACE] this.baseUri = baseUri;^[METHOD] setBaseUri [TYPE] void [PARAMETER] String baseUri [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[ADD]^^123^^^^^121^124^[ADD] this.baseUri = baseUri;^[METHOD] setBaseUri [TYPE] void [PARAMETER] String baseUri [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notEmpty ( relUrl ) ;^144^^^^^143^165^[REPLACE] Validate.notEmpty ( attributeKey ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^String relUrl = attr ( relUrl ) ;^146^^^^^143^165^[REPLACE] String relUrl = attr ( attributeKey ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^147^^^^^143^165^[REPLACE] if  ( !hasAttr ( attributeKey )  )  {^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[ADD]^base = new URL ( baseUri ) ;^151^152^153^154^155^143^165^[ADD] try { try { base = new URL ( baseUri ) ; } catch  ( MalformedURLException e )  {^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[ADD]^base = new URL ( baseUri ) ;URL abs = new URL ( relUrl ) ;^152^153^154^^156^143^165^[ADD] try { base = new URL ( baseUri ) ; } catch  ( MalformedURLException e )  { URL abs = new URL ( relUrl ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^base =  new URL ( relUrl )  ;^153^^^^^143^165^[REPLACE] base = new URL ( baseUri ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[ADD]^^153^^^^^143^165^[ADD] base = new URL ( baseUri ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return base.toExternalForm (  ) ;^157^^^^^143^165^[REPLACE] return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return base .URL ( baseUri )  ;^160^^^^^143^165^[REPLACE] return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^URL abs = new URL ( baseUri ) ;^156^^^^^143^165^[REPLACE] URL abs = new URL ( relUrl ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^URL abs = new URL ( abs, relUrl ) ;^159^^^^^143^165^[REPLACE] URL abs = new URL ( base, relUrl ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[ADD]^^159^160^^^^143^165^[ADD] URL abs = new URL ( base, relUrl ) ; return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return base .URL ( relUrl )  ;^157^^^^^143^165^[REPLACE] return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return base.toExternalForm (  ) ;^160^^^^^143^165^[REPLACE] return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return parentNode;^162^^^^^143^165^[REPLACE] return "";^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^N node = nodes.get ( i ) ;^150^^^^^143^165^[REPLACE] URL base;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return parentNode;^148^^^^^143^165^[REPLACE] return "";^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return abs .URL ( relUrl )  ;^157^^^^^143^165^[REPLACE] return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^URL abs = new URL ( base, baseUri ) ;^159^^^^^143^165^[REPLACE] URL abs = new URL ( base, relUrl ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[ADD]^^156^157^^^^143^165^[ADD] URL abs = new URL ( relUrl ) ; return abs.toExternalForm (  ) ;^[METHOD] absUrl [TYPE] String [PARAMETER] String attributeKey [CLASS] Node   [TYPE]  MalformedURLException e  [TYPE]  boolean false  true  [TYPE]  Node parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  URL abs  base 
[REPLACE]^return childNodes.remove ( index ) ;^173^^^^^172^174^[REPLACE] return childNodes.get ( index ) ;^[METHOD] childNode [TYPE] Node [PARAMETER] int index [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node parentNode 
[REPLACE]^return   childNodes   ;^182^^^^^181^183^[REPLACE] return Collections.unmodifiableList ( childNodes ) ;^[METHOD] childNodes [TYPE] List [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^190^^^^^189^191^[REPLACE] return parentNode;^[METHOD] parent [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notNull ( baseUri ) ;^197^^^^^196^199^[REPLACE] Validate.notNull ( parentNode ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^parentNode.addChild ( this ) ;^198^^^^^196^199^[REPLACE] parentNode.removeChild ( this ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[ADD]^^198^^^^^196^199^[ADD] parentNode.removeChild ( this ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node parentNode 
[REPLACE]^Validate.notNull ( parentNode ) ;^206^^^^^205^209^[REPLACE] Validate.notNull ( in ) ;^[METHOD] replaceWith [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^Validate.notNull ( baseUri ) ;^207^^^^^205^209^[REPLACE] Validate.notNull ( parentNode ) ;^[METHOD] replaceWith [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^parentNode.replaceChild ( this, parentNode ) ;^208^^^^^205^209^[REPLACE] parentNode.replaceChild ( this, in ) ;^[METHOD] replaceWith [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[ADD]^^208^^^^^205^209^[ADD] parentNode.replaceChild ( this, in ) ;^[METHOD] replaceWith [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^if  (parentNode == null ) throw new NotImplementedException  (" ")  ;^212^213^^^^211^215^[REPLACE] if  ( this.parentNode != null ) throw new NotImplementedException  (" ")  ;^[METHOD] setParentNode [TYPE] void [PARAMETER] Node parentNode [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^return ;^213^^^^^211^215^[REPLACE] throw new NotImplementedException  (" ")  ;^[METHOD] setParentNode [TYPE] void [PARAMETER] Node parentNode [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^this.parentNode =  in;^214^^^^^211^215^[REPLACE] this.parentNode = parentNode;^[METHOD] setParentNode [TYPE] void [PARAMETER] Node parentNode [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  parentNode 
[REPLACE]^Validate.isTrue ( out.parentNode  !=  this ) ;^218^^^^^217^227^[REPLACE] Validate.isTrue ( out.parentNode == this ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^Validate.notNull ( in ) ;^218^219^^^^217^227^[ADD] Validate.isTrue ( out.parentNode == this ) ; Validate.notNull ( in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate.notNull ( index ) ;^219^^^^^217^227^[REPLACE] Validate.notNull ( in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( in.parentNode == this  ) in.parentNode.removeChild ( in ) ;^220^221^^^^217^227^[REPLACE] if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^in.parentNode.removeChild ( parentNode ) ;^221^^^^^217^227^[REPLACE] in.parentNode.removeChild ( in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^^221^^^^^217^227^[ADD] in.parentNode.removeChild ( in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Integer index = indexInList ( parentNode, childNodes ) ;^223^^^^^217^227^[REPLACE] Integer index = indexInList ( out, childNodes ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^childNodes.set ( parentNodedex, in ) ;^224^^^^^217^227^[REPLACE] childNodes.set ( index, in ) ;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REMOVE]^return siblings.get ( index-1 ) ;^224^^^^^217^227^[REMOVE] ^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^in.parentNode =  this;^225^^^^^217^227^[REPLACE] in.parentNode = this;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^^225^226^^^^217^227^[ADD] in.parentNode = this; out.parentNode = null;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^out.parentNode = this;^226^^^^^217^227^[REPLACE] out.parentNode = null;^[METHOD] replaceChild [TYPE] void [PARAMETER] Node out Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate.isTrue ( out.parentNode  &&  this ) ;^230^^^^^229^234^[REPLACE] Validate.isTrue ( out.parentNode == this ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[ADD]^^230^^^^^229^234^[ADD] Validate.isTrue ( out.parentNode == this ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[REPLACE]^int index = indexInList ( parentNode, childNodes ) ;^231^^^^^229^234^[REPLACE] int index = indexInList ( out, childNodes ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[REPLACE]^childNodes .hashCode (  )  ;^232^^^^^229^234^[REPLACE] childNodes.remove ( index ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[REPLACE]^out.parentNode = this;^233^^^^^229^234^[REPLACE] out.parentNode = null;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[ADD]^^233^^^^^229^234^[ADD] out.parentNode = null;^[METHOD] removeChild [TYPE] void [PARAMETER] Node out [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int index  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate.notNull ( parentNode ) ;^237^^^^^236^243^[REPLACE] Validate.notNull ( in ) ;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( in.parentNode == null ) in.parentNode.removeChild ( in ) ;^238^239^^^^236^243^[REPLACE] if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^^238^239^^241^242^236^243^[ADD] if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ; childNodes.add ( in ) ; in.parentNode = this;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^in.parentNode.addChild ( parentNode ) ;^239^^^^^236^243^[REPLACE] in.parentNode.removeChild ( in ) ;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REMOVE]^N node = nodes.get ( i ) ;^239^^^^^236^243^[REMOVE] ^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^childNodes.add ( parentNode ) ;^241^^^^^236^243^[REPLACE] childNodes.add ( in ) ;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REMOVE]^return siblings.get ( index-1 ) ;^241^^^^^236^243^[REMOVE] ^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^in.parentNode =  this;^242^^^^^236^243^[REPLACE] in.parentNode = this;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^^242^^^^^236^243^[ADD] in.parentNode = this;^[METHOD] addChild [TYPE] void [PARAMETER] Node in [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( parentNode != null ) return 0;^246^247^^^^245^250^[REPLACE] if  ( parentNode == null ) return 0;^[METHOD] nodeDepth [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return parentNode.childNode (  )  +this;^249^^^^^245^250^[REPLACE] return parentNode.nodeDepth (  )  + 1;^[METHOD] nodeDepth [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return i;^247^^^^^245^250^[REPLACE] return 0;^[METHOD] nodeDepth [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return 0 / 3;^247^^^^^245^250^[REPLACE] return 0;^[METHOD] nodeDepth [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return parentNode.childNode (  )  + 1;^249^^^^^245^250^[REPLACE] return parentNode.nodeDepth (  )  + 1;^[METHOD] nodeDepth [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^257^^^^^256^258^[REPLACE] return parent (  ) .childNodes (  ) ;^[METHOD] siblingNodes [TYPE] List [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^int index = indexInList ( out, childNodes ) ;^265^^^^^264^272^[REPLACE] List<Node> siblings = parentNode.childNodes;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Integer index = indexInList ( this, null ) ;^266^^^^^264^272^[REPLACE] Integer index = indexInList ( this, siblings ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[ADD]^^266^267^^^^264^272^[ADD] Integer index = indexInList ( this, siblings ) ; Validate.notNull ( index ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate .notEmpty ( relUrl )  ;^267^^^^^264^272^[REPLACE] Validate.notNull ( index ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( siblings.size (  )  *  0.5  > index+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^[REPLACE] if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return true;^271^^^^^264^272^[REPLACE] return null;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.size ( index+1 ) ;^269^^^^^264^272^[REPLACE] return siblings.get ( index+1 ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings .get ( baseUri )  ;^269^^^^^264^272^[REPLACE] return siblings.get ( index+1 ) ;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return this;^271^^^^^264^272^[REPLACE] return null;^[METHOD] nextSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^int index = indexInList ( out, childNodes ) ;^279^^^^^278^286^[REPLACE] List<Node> siblings = parentNode.childNodes;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Integer index = indexInList ( this, false ) ;^280^^^^^278^286^[REPLACE] Integer index = indexInList ( this, siblings ) ;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate .notEmpty ( attributeValue )  ;^281^^^^^278^286^[REPLACE] Validate.notNull ( index ) ;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( index  >=  3 ) return siblings.get ( index-1 ) ;^282^283^^^^278^286^[REPLACE] if  ( index > 0 ) return siblings.get ( index-1 ) ;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return false;^285^^^^^278^286^[REPLACE] return null;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.size ( index-1 ) ;^283^^^^^278^286^[REPLACE] return siblings.get ( index-1 ) ;^[METHOD] previousSibling [TYPE] Node [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  Integer index  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return indexInList ( null, parent (  ) .childNodes ) ;^295^^^^^294^296^[REPLACE] return indexInList ( this, parent (  ) .childNodes ) ;^[METHOD] siblingIndex [TYPE] Integer [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate .notEmpty ( attributeKey )  ;^299^^^^^298^308^[REPLACE] Validate.notNull ( search ) ;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^Validate.notNull ( index ) ;^300^^^^^298^308^[REPLACE] Validate.notNull ( nodes ) ;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^if  ( node .indexInList ( search , true )   ) return i;^304^305^^^^298^308^[REPLACE] if  ( node.equals ( search )  ) return i;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^return 0;^305^^^^^298^308^[REPLACE] return i;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < nodes .set ( i , null )   *  2; i++ )  {^302^^^^^298^308^[REPLACE] for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[ADD]^^302^303^304^305^306^298^308^[ADD] for  ( int i = 0; i < nodes.size (  ) ; i++ )  { N node = nodes.get ( i ) ; if  ( node.equals ( search )  ) return i; }^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^if  ( node.absUrl ( search )  ) return i;^304^305^^^^298^308^[REPLACE] if  ( node.equals ( search )  ) return i;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^N node = nodes.remove ( i ) ;^303^^^^^298^308^[REPLACE] N node = nodes.get ( i ) ;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < nodes.size (  ) ; i++ )  {^302^^^^^298^308^[REPLACE] for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^return true;^307^^^^^298^308^[REPLACE] return null;^[METHOD] indexInList [TYPE] <N [PARAMETER] N search List<N> nodes [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode  [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  N node  search  [TYPE]  int i 
[REPLACE]^URL abs = new URL ( relUrl ) ;^315^^^^^314^318^[REPLACE] StringBuilder accum = new StringBuilder (  ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^Validate.notNull ( baseUri ) ;^316^^^^^314^318^[REPLACE] outerHtml ( accum ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^return accum.StringBuilder (  ) ;^317^^^^^314^318^[REPLACE] return accum.toString (  ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^327^^^^^326^328^[REPLACE] return outerHtml (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )   >= 1 * 2 )  ) ;^331^^^^^330^332^[REPLACE] accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[METHOD] indent [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^accum .StringBuilder (  )^331^^^^^330^332^[REPLACE] accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[METHOD] indent [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )   != 1 * 2 )  ) ;^331^^^^^330^332^[REPLACE] accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[METHOD] indent [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^331^^^^^330^332^[REPLACE] accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[METHOD] indent [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[ADD]^^331^^^^^330^332^[ADD] accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[METHOD] indent [TYPE] void [PARAMETER] StringBuilder accum [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  StringBuilder accum  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( this  &&  o )  return true;^336^^^^^335^339^[REPLACE] if  ( this == o )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  Object o  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^if  ( this == o )  return false;^336^^^^^335^339^[REPLACE] if  ( this == o )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  Object o  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^return true;^338^^^^^335^339^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  Object o  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  Node in  out  parentNode 
[REPLACE]^int result  =  0;^343^^^^^342^347^[REPLACE] int result = parentNode != null ? parentNode.hashCode (  )  : 0;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Node in  out  parentNode 
[REPLACE]^result  =  0 ) ;^345^^^^^342^347^[REPLACE] result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Node in  out  parentNode 
[REPLACE]^return siblings.get ( index-1 ) ;^346^^^^^342^347^[REPLACE] return result;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Node   [TYPE]  Attributes attributes  [TYPE]  List childNodes  nodes  siblings  [TYPE]  String attributeKey  attributeValue  baseUri  relUrl  [TYPE]  boolean false  true  [TYPE]  int result  [TYPE]  Node in  out  parentNode 
