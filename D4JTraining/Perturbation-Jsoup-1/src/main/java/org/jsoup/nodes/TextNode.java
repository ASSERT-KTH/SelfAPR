[REPLACE]^private static final String TEXT_KEY ;^12^^^^^^^[REPLACE] private static final String TEXT_KEY = "text";^ [CLASS] TextNode  
[REPLACE]^super ( text ) ;^22^^^^^21^24^[REPLACE] super ( baseUri ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String text String baseUri [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^attributes .get ( TEXT_KEY )  ;^23^^^^^21^24^[REPLACE] attributes.put ( TEXT_KEY, text ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String text String baseUri [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^return new TextNode ( text, baseUri ) ;^27^^^^^26^28^[REPLACE] return "#text";^[METHOD] nodeName [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^return new TextNode ( text, baseUri ) ;^36^^^^^35^37^[REPLACE] return outerHtml (  ) ;^[METHOD] text [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^attributes.put ( TEXT_KEY, baseUri ) ;^45^^^^^44^47^[REPLACE] attributes.put ( TEXT_KEY, text ) ;^[METHOD] text [TYPE] TextNode [PARAMETER] String text [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^return null;^46^^^^^44^47^[REPLACE] return this;^[METHOD] text [TYPE] TextNode [PARAMETER] String text [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^return   TEXT_KEY   ;^54^^^^^53^55^[REPLACE] return attributes.get ( TEXT_KEY ) ;^[METHOD] getWholeText [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^return   normaliseWhitespace ( getWholeText (  )   ) ;^62^^^^^61^63^[REPLACE] return StringUtils.isBlank ( normaliseWhitespace ( getWholeText (  )  )  ) ;^[METHOD] isBlank [TYPE] boolean [PARAMETER] [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  text  [TYPE]  boolean false  true 
[REPLACE]^String html = StringEscapeUtils.unescapeHtml ( getWholeText (  )  ) ;^66^^^^^65^74^[REPLACE] String html = StringEscapeUtils.escapeHtml ( getWholeText (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[ADD]^^66^^^^^65^74^[ADD] String html = StringEscapeUtils.escapeHtml ( getWholeText (  )  ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! parent (  )  instanceof Element ) {^67^^^^^65^74^[REPLACE] if  ( parent (  )  instanceof Element && ! (  ( Element )  parent (  )  ) .preserveWhitespace (  )  )  {^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^html =  normaliseWhitespace ( TEXT_KEY ) ;^68^^^^^65^74^[REPLACE] html = normaliseWhitespace ( html ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[ADD]^^68^^^^^65^74^[ADD] html = normaliseWhitespace ( html ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! !isBlank (  )  && parentNode instanceof Element &&  (  ( Element )  parentNode ) .tag (  ) .canContainBlock (  )   && siblingIndex (  )  == 3 ) indent ( accum ) ;^71^72^^^^65^74^[REPLACE] if  ( !isBlank (  )  && parentNode instanceof Element &&  (  ( Element )  parentNode ) .tag (  ) .canContainBlock (  )   && siblingIndex (  )  == 0 ) indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[ADD]^^71^72^73^74^^65^74^[ADD] if  ( !isBlank (  )  && parentNode instanceof Element &&  (  ( Element )  parentNode ) .tag (  ) .canContainBlock (  )   && siblingIndex (  )  == 0 ) indent ( accum ) ; accum.append ( html ) ; }^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^super ( baseUri ) ;^72^^^^^65^74^[REPLACE] indent ( accum ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^accum.append ( TEXT_KEY ) ;^73^^^^^65^74^[REPLACE] accum.append ( html ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[ADD]^^73^^^^^65^74^[ADD] accum.append ( html ) ;^[METHOD] outerHtml [TYPE] void [PARAMETER] StringBuilder accum [CLASS] TextNode   [TYPE]  StringBuilder accum  [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^return new TextNode ( text, baseUri ) ;^77^^^^^76^78^[REPLACE] return outerHtml (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  html  text  [TYPE]  boolean false  true 
[REPLACE]^String text = StringEscapeUtils .escapeHtml ( baseUri )  ;^86^^^^^85^88^[REPLACE] String text = StringEscapeUtils.unescapeHtml ( encodedText ) ;^[METHOD] createFromEncoded [TYPE] TextNode [PARAMETER] String encodedText String baseUri [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  encodedText  html  text  [TYPE]  boolean false  true 
[REPLACE]^return new TextNode ( encodedText, baseUri ) ;^87^^^^^85^88^[REPLACE] return new TextNode ( text, baseUri ) ;^[METHOD] createFromEncoded [TYPE] TextNode [PARAMETER] String encodedText String baseUri [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  encodedText  html  text  [TYPE]  boolean false  true 
[REPLACE]^text =  encodedText.replaceAll ( "\\s{2,}| ( \\r\\n|\\r|\\n ) ", " " ) ;^91^^^^^90^93^[REPLACE] text = text.replaceAll ( "\\s{2,}| ( \\r\\n|\\r|\\n ) ", " " ) ;^[METHOD] normaliseWhitespace [TYPE] String [PARAMETER] String text [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  encodedText  html  text  [TYPE]  boolean false  true 
[REPLACE]^return encodedText;^92^^^^^90^93^[REPLACE] return text;^[METHOD] normaliseWhitespace [TYPE] String [PARAMETER] String text [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  encodedText  html  text  [TYPE]  boolean false  true 
[REPLACE]^return encodedText.replaceAll ( "^\\s+", "" ) ;^96^^^^^95^97^[REPLACE] return text.replaceFirst ( "^\\s+", "" ) ;^[METHOD] stripLeadingWhitespace [TYPE] String [PARAMETER] String text [CLASS] TextNode   [TYPE]  String TEXT_KEY  baseUri  encodedText  html  text  [TYPE]  boolean false  true 
[REPLACE]^if  ( sb.length (  )  - 3 == 0  ) return false;^100^101^^^^99^105^[REPLACE] if  ( sb.length (  )  == 0 ) return false;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[REPLACE]^return true;^101^^^^^99^105^[REPLACE] return false;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[REPLACE]^String lastChar = sb.substring ( sb.size (  ) -1, sb.size (  )  ) ;^102^^^^^99^105^[REPLACE] String lastChar = sb.substring ( sb.length (  ) -1, sb.length (  )  ) ;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[REPLACE]^Validate.isTrue ( lastChar .substring ( null , null )   + 4 == 1 ) ;^103^^^^^99^105^[REPLACE] Validate.isTrue ( lastChar.length (  )  == 1 ) ;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[REPLACE]^Validate.isTrue ( text.length (  )  == 1 ) ;^103^^^^^99^105^[REPLACE] Validate.isTrue ( lastChar.length (  )  == 1 ) ;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[ADD]^^103^^^^^99^105^[ADD] Validate.isTrue ( lastChar.length (  )  == 1 ) ;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
[REPLACE]^return text.equals ( " " ) ;^104^^^^^99^105^[REPLACE] return lastChar.equals ( " " ) ;^[METHOD] lastCharIsWhitespace [TYPE] boolean [PARAMETER] StringBuilder sb [CLASS] TextNode   [TYPE]  StringBuilder sb  [TYPE]  String TEXT_KEY  baseUri  encodedText  html  lastChar  text  [TYPE]  boolean false  true 
