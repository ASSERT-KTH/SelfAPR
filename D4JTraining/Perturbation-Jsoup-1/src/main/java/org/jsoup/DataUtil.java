[REPLACE]^String protocol = url .openConnection (  )  ;^37^^^^^36^61^[REPLACE] String protocol = url.getProtocol (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^Validate.isTrue ( protocol.equals ( "http" )  ;^38^^^^^36^61^[REPLACE] Validate.isTrue ( protocol.equals ( "http" )  || protocol.equals ( "https" ) , "Only http & https protocols supported" ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^( protocol.equals ( "https" )  )  ;^38^^^^^36^61^[REPLACE] Validate.isTrue ( protocol.equals ( "http" )  || protocol.equals ( "https" ) , "Only http & https protocols supported" ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^Validate.isTrue ( data.startsWith ( "http" )  || protocol.equals ( "https" ) , "Only http & https protocols supported" ) ;^38^^^^^36^61^[REPLACE] Validate.isTrue ( protocol.equals ( "http" )  || protocol.equals ( "https" ) , "Only http & https protocols supported" ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^38^^^^^36^61^[ADD] Validate.isTrue ( protocol.equals ( "http" )  || protocol.equals ( "https" ) , "Only http & https protocols supported" ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^HttpURLConnection conn =  ( HttpURLConnection )  url.getProtocol (  ) ;^40^^^^^36^61^[REPLACE] HttpURLConnection conn =  ( HttpURLConnection )  url.openConnection (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^conn .getResponseCode (  )  ;^41^^^^^36^61^[REPLACE] conn.setInstanceFollowRedirects ( true ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^41^42^^^^36^61^[ADD] conn.setInstanceFollowRedirects ( true ) ; conn.setConnectTimeout ( timeoutMillis ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^conn.setReadTimeout ( timeoutMillis )  ;^42^^^^^36^61^[REPLACE] conn.setConnectTimeout ( timeoutMillis ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^conn.setConnectTimeout ( timeoutMillis )  ;^43^^^^^36^61^[REPLACE] conn.setReadTimeout ( timeoutMillis ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^conn.getContentType (  ) ;^44^^^^^36^61^[REPLACE] conn.connect (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^44^^^^^36^61^[ADD] conn.connect (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^String charSet = "UTF-8"  ;^46^^^^^36^61^[REPLACE] int res = conn.getResponseCode (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^if  ( res  ==  HttpURLConnection.HTTP_OK ) throw new IOException  (" ")  ;^47^48^^^^36^61^[REPLACE] if  ( res != HttpURLConnection.HTTP_OK ) throw new IOException  (" ")  ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^return ;^48^^^^^36^61^[REPLACE] throw new IOException  (" ")  ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^data.toString (  )  ;^48^^^^^36^61^[REPLACE] throw new IOException  (" ")  ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REMOVE]^data.toString (  )  ;^48^^^^^36^61^[REMOVE] ^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^48^^^^^36^61^[ADD] throw new IOException  (" ")  ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^50^^^^^36^61^[ADD] String contentType = conn.getContentType (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^if  ( contentType != null || !contentType.startsWith ( "text/" )  ) t contentType, url.getProtocol (  )  )  ) ;^51^52^53^^^36^61^[REPLACE] if  ( contentType == null || !contentType.startsWith ( "text/" )  ) t contentType, url.toString (  )  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^return ;^52^53^^^^36^61^[REPLACE] t contentType, url.toString (  )  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^t protocol, url.toString (  )  )  ) ;^52^53^^^^36^61^[REPLACE] t contentType, url.toString (  )  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[ADD]^^52^53^^^^36^61^[ADD] t contentType, url.toString (  )  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^data.toString (  )  ;^53^^^^^36^61^[REPLACE] contentType, url.toString (  )  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^InputStream inStream = new BufferedInputStream ( conn.getContentType (  )  ) ;^55^^^^^36^61^[REPLACE] InputStream inStream = new BufferedInputStream ( conn.getInputStream (  )  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^StringBuilder data = new StringBuilder ( 131072 )  ;^56^^^^^36^61^[REPLACE] String charSet = "UTF-8";^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^String data = readInputStream ( inStream, charsetName )  ;^58^^^^^36^61^[REPLACE] String data = readInputStream ( inStream, charSet ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^data.toString (  )  ;^59^^^^^36^61^[REPLACE] inStream.close (  ) ;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
[REPLACE]^return data;  ;^60^^^^^36^61^[REPLACE] return data;^[METHOD] load [TYPE] String [PARAMETER] URL url int timeoutMillis [CLASS] DataUtil   [TYPE]  HttpURLConnection conn  [TYPE]  boolean false  true  [TYPE]  InputStream inStream  [TYPE]  String charSet  contentType  data  protocol  [TYPE]  URL url  [TYPE]  int res  timeoutMillis 
