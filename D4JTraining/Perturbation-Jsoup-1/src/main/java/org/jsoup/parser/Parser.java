[REPLACE]^private static final  char  SQ = "'";^13^^^^^^^[REPLACE] private static final String SQ = "'";^ [CLASS] Parser  
[REPLACE]^private static final String DQ  = null ;^14^^^^^^^[REPLACE] private static final String DQ = "\"";^ [CLASS] Parser  
[REPLACE]^private static  Tag htmlTag = Tag.valueOf ( "html" ) ;^16^^^^^^^[REPLACE] private static final Tag htmlTag = Tag.valueOf ( "html" ) ;^ [CLASS] Parser  
[REPLACE]^private static final Tag headTag ;^17^^^^^^^[REPLACE] private static final Tag headTag = Tag.valueOf ( "head" ) ;^ [CLASS] Parser  
[REPLACE]^private  final Tag bodyTag = Tag.valueOf ( "body" ) ;^18^^^^^^^[REPLACE] private static final Tag bodyTag = Tag.valueOf ( "body" ) ;^ [CLASS] Parser  
[REPLACE]^private static final Tag titleTag ;^19^^^^^^^[REPLACE] private static final Tag titleTag = Tag.valueOf ( "title" ) ;^ [CLASS] Parser  
[REPLACE]^private static  Tag textareaTag = Tag.valueOf ( "textarea" ) ;^20^^^^^^^[REPLACE] private static final Tag textareaTag = Tag.valueOf ( "textarea" ) ;^ [CLASS] Parser  
[REPLACE]^private  TokenQueue tq;^23^^^^^^^[REPLACE] private final TokenQueue tq;^ [CLASS] Parser  
[REPLACE]^private  Document doc;^24^^^^^^^[REPLACE] private final Document doc;^ [CLASS] Parser  
[REPLACE]^if  ( tq.matches ( "<--" )  )  {^68^^^^^66^83^[REPLACE] if  ( tq.matches ( "<!--" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if   (  tq.matches  (  "</"  )    )   {  ;^70^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<![CDATA[" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  (  tq.matches ( "<" )  )  {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseXmlDecl (  ) ;parseEndTag (  ) ;^72^73^74^75^^66^83^[ADD] else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  { parseXmlDecl (  ) ; } else if  ( tq.matches ( "</" )  )  { parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "</" )  )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^createFromEncoded ( data, baseUri )  ;^79^^^^^76^80^[REPLACE] parseTextNode (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^parseCdata (  )  ;^77^^^^^66^83^[REPLACE] parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^parseCdata (  )  ;^75^^^^^66^83^[REPLACE] parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^75^^^^^66^83^[ADD] parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if   (  tq.matchChomp  (  DQ  )    )   {  ;^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^79^^^^^76^80^[ADD] parseTextNode (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^createFromEncoded ( data, baseUri )  ;^73^^^^^66^83^[REPLACE] parseXmlDecl (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^73^^^^^66^83^[ADD] parseXmlDecl (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseStartTag (  ) ;^74^75^76^77^^66^83^[ADD] else if  ( tq.matches ( "</" )  )  { parseEndTag (  ) ; } else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "</" )  )  {     parseEndTag (  ) ; }else     if  ( tq.matches ( "<" )  )  {         parseStartTag (  ) ;     }else {         parseTextNode (  ) ;     }^76^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^parseStartTag (  )  ;^71^^^^^66^83^[REPLACE] parseCdata (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( "</" )  )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "<" )  )  {     parseStartTag (  ) ; }else {     parseTextNode (  ) ; }^74^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<" )  )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( "<" )  )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^parseCdata (  )  ;^73^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseTextNode (  ) ;^76^77^78^79^80^66^83^[ADD] else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ; } else { parseTextNode (  ) ; }^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^parseCdata (  )  ;^79^^^^^76^80^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^parseCdata (  )  ;^77^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^createFromEncoded ( data, baseUri )  ;^69^^^^^66^83^[REPLACE] parseComment (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matches ( "<[CDATA[" )  )  {^70^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<![CDATA[" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<?" )  || tq.matches ( "<" )  )  {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^77^^^^^66^83^[ADD] parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq .matchesAny ( html , SQ , html )   )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^71^^^^^66^83^[ADD] parseCdata (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseStartTag (  ) ;parseTextNode (  ) ;^76^77^78^79^80^66^83^[ADD] else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ; } else { parseTextNode (  ) ; }^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return doc.body (  ) ;^82^^^^^66^83^[REPLACE] return doc.normalise (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.consumeTo ( "<" ) ;^117^^^^^116^166^[REPLACE] tq.consume ( "<" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^117^^^^^116^166^[ADD] tq.consume ( "<" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^118^^^^^116^166^[ADD] String tagName = tq.consumeWord (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( html.length (  )  %  2 == 0  )  {^120^^^^^116^166^[REPLACE] if  ( tagName.length (  )  == 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "<" )  )  {     parseStartTag (  ) ; }else {     parseTextNode (  ) ; }^120^^^^^116^166^[REMOVE] ^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return;  ;^123^^^^^116^166^[REPLACE] return;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attribute attribute = parseAttribute (  )  ;^126^^^^^116^166^[REPLACE] Attributes attributes = new Attributes (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( attribute == null ) attributes.put ( attribute ) ;^129^130^^^^116^166^[REPLACE] if  ( attribute != null ) attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^attributes .Attributes (  )  ;^130^^^^^116^166^[REPLACE] attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attributes attributes = new Attributes (  )  ;^128^^^^^116^166^[REPLACE] Attribute attribute = parseAttribute (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag tag = Tag.valueOf ( html ) ;^133^^^^^116^166^[REPLACE] Tag tag = Tag.valueOf ( tagName ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^134^^^^^116^166^[ADD] Element child = new Element ( tag, baseUri, attributes ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^boolean isEmptyElement = tag .chompTo ( tagName )  ;^136^^^^^116^166^[REPLACE] boolean isEmptyElement = tag.isEmpty (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tq.matches ( "/>" )  )  {^137^^^^^116^166^[REPLACE] if  ( tq.matchChomp ( "/>" )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.matchChomp ( "/>" )  ;^140^^^^^137^141^[REPLACE] tq.matchChomp ( ">" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^138^^^^^116^166^[ADD] isEmptyElement = true;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^isEmptyElement = false;^138^^^^^116^166^[REPLACE] isEmptyElement = true;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if   (  key.length  (    )   != 0  )  return Attribute.createFromEncoded  (  key, value  )  ;  ;^144^^^^^116^166^[REPLACE] if  ( tag.isData (  )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tag.equals ( titleTag )  && tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^149^150^^^^116^166^[REPLACE] if  ( tag.equals ( titleTag )  || tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^dataNode = TextNode.createFromEncoded ( data, baseUri ) ;dataNode = new DataNode ( data, baseUri ) ;child.appendChild ( dataNode ) ;^149^150^151^152^153^116^166^[ADD] if  ( tag.equals ( titleTag )  || tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ; else dataNode = new DataNode ( data, baseUri ) ; child.appendChild ( dataNode ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^doc = new Document ( baseUri )  ;^152^^^^^116^166^[REPLACE] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =  TextNode.createFromEncoded ( tagName, baseUri ) ;^150^^^^^116^166^[REPLACE] dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^150^^^^^116^166^[ADD] dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =  new DataNode ( tagName, baseUri ) ;^152^^^^^116^166^[REPLACE] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String data = tq.chompTo ( "->" )  ;^145^^^^^116^166^[REPLACE] String data = tq.chompTo ( "</" + tagName ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq.consumeAttributeKey (  )  ;^148^^^^^116^166^[REPLACE] Node dataNode;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tag.equals ( titleTag )  && tag.equals ( textareaTag )  ) tagNameNode = TextNode.createFromEncoded ( data, baseUri ) ;^149^150^^^^116^166^[REPLACE] if  ( tag.equals ( titleTag )  || tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( child.tag (  ) .equals ( bodyTag )  )  {     Element head = new Element ( headTag, baseUri ) ;     implicit.appendChild ( head ) ; }^149^^^^^116^166^[REMOVE] ^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =   new Element ( parentTag, baseUri )  ;^152^^^^^116^166^[REPLACE] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if   (  child.tag  (    )  .equals  (  bodyTag  )    )   {  ;^157^^^^^116^166^[REPLACE] if  ( child.tagName (  ) .equals ( "base" )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( href.length (  )  + 1 != 0  )  {^159^^^^^116^166^[REPLACE] if  ( href.length (  )  != 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^159^160^161^162^^116^166^[ADD] if  ( href.length (  )  != 0 )  { baseUri = href; doc.setBaseUri ( href ) ; }^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^baseUri =  html;^160^^^^^116^166^[REPLACE] baseUri = href;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^160^^^^^116^166^[ADD] baseUri = href;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^158^^^^^116^166^[ADD] String href = child.absUrl ( "href" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( html.length (  )  + 3 != 0  )  {^159^^^^^116^166^[REPLACE] if  ( href.length (  )  != 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String href = child.appendChild ( "href" ) ;^158^^^^^116^166^[REPLACE] String href = child.absUrl ( "href" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^addChildToParent ( child, true ) ;^165^^^^^116^166^[REPLACE] addChildToParent ( child, isEmptyElement ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.matchesWhitespace (  ) ;^169^^^^^168^196^[REPLACE] tq.consumeWhitespace (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq .consumeWord (  )  ;^170^^^^^168^196^[REPLACE] String key = tq.consumeAttributeKey (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq.consumeAttributeKey (  )  ;^171^^^^^168^196^[REPLACE] String value = "";^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.matchesWhitespace (  ) ;^172^^^^^168^196^[REPLACE] tq.consumeWhitespace (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tq.matches ( "=" )  )  {^173^^^^^168^196^[REPLACE] if  ( tq.matchChomp ( "=" )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^tq.consumeWhitespace (  ) ;value = tq.chompTo ( SQ ) ;^173^174^^176^177^168^196^[ADD] if  ( tq.matchChomp ( "=" )  )  { tq.consumeWhitespace (  ) ; if  ( tq.matchChomp ( SQ )  )  { value = tq.chompTo ( SQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if   (  tq.matchChomp  (  DQ  )    )   {  ;^176^^^^^168^196^[REPLACE] if  ( tq.matchChomp ( SQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   value = tq.chompTo ( DQ ) ;StringBuilder valueAccum = new StringBuilder (  ) ;^178^179^180^181^^168^196^[ADD] else if  ( tq.matchChomp ( DQ )  )  { value = tq.chompTo ( DQ ) ; } else { StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value =  null.toString (  ) ;^186^^^^^178^187^[REPLACE] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^181^^^^^178^187^[ADD] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value = tq.chompTo ( SQ )  ;^179^^^^^168^196^[REPLACE] value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^179^^^^^168^196^[ADD] value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value =  null.toString (  ) ;^186^^^^^168^196^[REPLACE] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq.consumeAttributeKey (  )  ;^181^^^^^168^196^[REPLACE] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value = tq.chompTo ( DQ )  ;^177^^^^^168^196^[REPLACE] value = tq.chompTo ( SQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if   (  tq.matches  (  "</"  )    )   {  ;^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^186^^^^^178^187^[ADD] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq.consumeAttributeKey (  )  ;^181^^^^^178^187^[REPLACE] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^186^^^^^168^196^[ADD] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( DQ )  )  {^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^181^^^^^168^196^[ADD] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( key.size (  )  != 0 ) return Attribute.createFromEncoded ( key, tagName ) ;^190^191^^^^168^196^[REPLACE] if  ( key.length (  )  != 0 ) return Attribute.createFromEncoded ( key, value ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return this;^194^^^^^190^195^[REPLACE] return null;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return Attribute.createFromEncoded ( href, value ) ;^191^^^^^168^196^[REPLACE] return Attribute.createFromEncoded ( key, value ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return Attribute.createFromEncoded ( key, tagName ) ;^191^^^^^168^196^[REPLACE] return Attribute.createFromEncoded ( key, value ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return false;^194^^^^^168^196^[REPLACE] return null;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element parent = popStackToSuitableContainer ( implicit.tag (  )  ) ;^212^^^^^211^239^[REPLACE] Element parent = popStackToSuitableContainer ( child.tag (  )  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag implicitTag = child.tag (  ) ;^213^^^^^211^239^[REPLACE] Tag childTag = child.tag (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^boolean validAncestor = stackHasValidParent ( titleTag ) ;^214^^^^^211^239^[REPLACE] boolean validAncestor = stackHasValidParent ( childTag ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( validAncestor )  {^216^^^^^211^239^[REPLACE] if  ( !validAncestor )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^216^217^218^219^^211^239^[ADD] if  ( !validAncestor )  {  Tag parentTag = childTag.getImplicitParent (  ) ; Element implicit = new Element ( parentTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( child.tagName (  ) .equals ( bodyTag )  )  {^221^^^^^211^239^[REPLACE] if  ( child.tag (  ) .equals ( bodyTag )  )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^221^222^223^224^^211^239^[ADD] if  ( child.tag (  ) .equals ( bodyTag )  )  { Element head = new Element ( headTag, baseUri ) ; implicit.appendChild ( head ) ; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element implicit = new Element ( parentTag, baseUri )  ;^222^^^^^211^239^[REPLACE] Element head = new Element ( headTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !isEmptyElement ) stack.addLast ( implicit ) ;^229^230^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^stack.addLast ( child ) ;return root;^229^230^231^232^^211^239^[ADD] if  ( !isEmptyElement ) stack.addLast ( child ) ; return root; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.addLast ( implicit ) ;^230^^^^^211^239^[REPLACE] stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return root;  ;^231^^^^^211^239^[REPLACE] return root;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag parentTag = titleTag.isEmpty (  ) ;^218^^^^^211^239^[REPLACE] Tag parentTag = childTag.getImplicitParent (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Comment comment = new Comment ( data, baseUri )  ;^219^^^^^211^239^[REPLACE] Element implicit = new Element ( parentTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^222^223^^^^211^239^[ADD] Element head = new Element ( headTag, baseUri ) ; implicit.appendChild ( head ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element root = addChildToParent ( root, true ) ;^228^^^^^211^239^[REPLACE] Element root = addChildToParent ( implicit, false ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if   (  child.tagName  (    )  .equals  (  "base"  )    )   {  ;^221^^^^^211^239^[REPLACE] if  ( child.tag (  ) .equals ( bodyTag )  )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^222^^^^^211^239^[ADD] Element head = new Element ( headTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !isEmptyElement ) stack.add ( implicit ) ;^229^230^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^218^219^^^^211^239^[ADD] Tag parentTag = childTag.getImplicitParent (  ) ; Element implicit = new Element ( parentTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element root = addChildToParent ( implicit, true ) ;^228^^^^^211^239^[REPLACE] Element root = addChildToParent ( implicit, false ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^parent.appendChild ( implicit ) ;^234^^^^^211^239^[REPLACE] parent.appendChild ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !validAncestor ) stack.add ( child ) ;^236^237^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.addLast ( implicit ) ;^237^^^^^211^239^[REPLACE] stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return parent;  ;^238^^^^^211^239^[REPLACE] return parent;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^int counter = 0 >>> 3;^267^^^^^265^286^[REPLACE] int counter = 0;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^268^^^^^265^286^[ADD] Element elToClose = null;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^if  ( titleTag.isValidParent ( bodyTag )  ) {^273^^^^^265^286^[REPLACE] if  ( elTag.equals ( bodyTag )  || elTag.equals ( htmlTag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^} elToClosese if  ( elTag.equals ( tag )  )  {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^}   elToClose = el;break;^275^276^277^278^^265^286^[ADD] else if  ( elTag.equals ( tag )  )  { elToClose = el; break; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^elToClose =  null;^276^^^^^265^286^[REPLACE] elToClose = el;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^}  else {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^276^^^^^265^286^[ADD] elToClose = el;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = stack.size (  )  - 0  -0 ; i > 0; i-- )  {^269^^^^^265^286^[REPLACE] for  ( int i = stack.size (  )  -1; i > 0; i-- )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Element el = stack .getLast (  )  ;^271^^^^^265^286^[REPLACE] Element el = stack.get ( i ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Tag elToCloseTag = el.tagName (  ) ;^272^^^^^265^286^[REPLACE] Tag elTag = el.tag (  ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^if  ( elToClose == this )  {^280^^^^^265^286^[REPLACE] if  ( elToClose != null )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^280^281^282^283^^265^286^[ADD] if  ( elToClose != null )  { for  ( int i = 0; i < counter; i++ )  { stack.removeLast (  ) ; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^281^282^283^^^265^286^[ADD] for  ( int i = 0; i < counter; i++ )  { stack.removeLast (  ) ; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^return el;^285^^^^^265^286^[REPLACE] return elToClose;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
