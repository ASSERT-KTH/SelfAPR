[REPLACE]^Validate.isTrue ( args.length *  2 == 1, "usage: supply url to fetch" ) ;^17^^^^^16^45^[REPLACE] Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^URL url = new URL ( args[1] ) ;^18^^^^^16^45^[REPLACE] URL url = new URL ( args[0] ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( " * %s: <%s> %sx%s  ( %s ) ",^19^^^^^16^45^[REPLACE] print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^Document doc = Jsoup.parse ( url, 3 ^ 1000 ) ;^21^^^^^16^45^[REPLACE] Document doc = Jsoup.parse ( url, 3*1000 ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^Elements media = doc.select ( "[src]" ) ;^22^^^^^16^45^[REPLACE] Elements links = doc.select ( "a[href]" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^22^23^^^^16^45^[ADD] Elements links = doc.select ( "a[href]" ) ; Elements media = doc.select ( "[src]" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^Elements links = doc.select ( "a[href]" ) ;^23^^^^^16^45^[REPLACE] Elements media = doc.select ( "[src]" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^Elements media = doc.select ( "[src]" ) ;^24^^^^^16^45^[REPLACE] Elements imports = doc.select ( "link[href]" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^24^^^^^16^45^[ADD] Elements imports = doc.select ( "link[href]" ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( "\nMedia:  ( %d ) ", imports.size (  )  ) ;^26^^^^^16^45^[REPLACE] print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^26^^^^^16^45^[ADD] print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^28^29^30^31^32^16^45^[ADD] if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ; else^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( " * %s: <%s>", src.text (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^[REPLACE] print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^33^^^^^16^45^[ADD] print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( " * %s: <%s>", src.tagName (  ) , src .tagName (  )   ) ;^33^^^^^16^45^[REPLACE] print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REMOVE]^print ( " * %s: <%s> %sx%s  ( %s ) ",^33^^^^^16^45^[REMOVE] ^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.text (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^[REPLACE] print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^29^30^31^^^16^45^[ADD] print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^src.text (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^[REPLACE] src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^src.tagName (  ) , src .tagName (  )  , src^30^31^^^^16^45^[REPLACE] src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^30^31^^^^16^45^[ADD] src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^trim ( src .tagName (  )  , 20 )  ) ;^31^^^^^16^45^[REPLACE] trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^31^^^^^16^45^[REPLACE] trim ( src.attr ( "alt" ) , 20 )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^for  ( Element src : media )  { if  ( src.tagName (  ) .equals ( "img" )  )^27^^^^^16^45^[REPLACE] for  ( Element src : media )  {^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( "\nImports:  ( %d ) ", media.size (  )  ) ;^36^^^^^16^45^[REPLACE] print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^for  ( Element src : media )  { if  ( src.tagName (  ) .equals ( "img" )  )^37^^^^^16^45^[REPLACE] for  ( Element link : imports )  {^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^37^38^39^^^16^45^[ADD] for  ( Element link : imports )  { print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ; }^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^print ( "\nLinks:  ( %d ) ", imports.size (  )  ) ;^41^^^^^16^45^[REPLACE] print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[ADD]^^41^^^^^16^45^[ADD] print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^for  ( Element src : media )  { if  ( src.tagName (  ) .equals ( "img" )  )^42^^^^^16^45^[REPLACE] for  ( Element link : links )  {^[METHOD] main [TYPE] void [PARAMETER] String[] args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  Element link  src  [TYPE]  String[] args  [TYPE]  Document doc  [TYPE]  Elements imports  links  media  [TYPE]  URL url 
[REPLACE]^System.out.println ( String .substring ( null , true )   ) ;^48^^^^^47^49^[REPLACE] System.out.println ( String.format ( msg, args )  ) ;^[METHOD] print [TYPE] void [PARAMETER] String msg  args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String msg  [TYPE]  Object[] args 
[REPLACE]^System.out.println ( String.substring ( msg, args )  ) ;^48^^^^^47^49^[REPLACE] System.out.println ( String.format ( msg, args )  ) ;^[METHOD] print [TYPE] void [PARAMETER] String msg  args [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String msg  [TYPE]  Object[] args 
[REPLACE]^if  ( s.length (  )  + 3 > width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^[REPLACE] if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[METHOD] trim [TYPE] String [PARAMETER] String s int width [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String s  [TYPE]  int width 
[ADD]^return s.substring ( 0, width-1 )  + ".";return s;^52^53^54^55^56^51^56^[ADD] if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + "."; else return s; }^[METHOD] trim [TYPE] String [PARAMETER] String s int width [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String s  [TYPE]  int width 
[REPLACE]^return s.substring ( 3, width-1 )   &&  ".";^53^^^^^51^56^[REPLACE] return s.substring ( 0, width-1 )  + ".";^[METHOD] trim [TYPE] String [PARAMETER] String s int width [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String s  [TYPE]  int width 
[REPLACE]^return s.substring ( 0, width-1 )  +s;^53^^^^^51^56^[REPLACE] return s.substring ( 0, width-1 )  + ".";^[METHOD] trim [TYPE] String [PARAMETER] String s int width [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String s  [TYPE]  int width 
[REPLACE]^return s.substring ( 0, width-1 )  + ".";^55^^^^^51^56^[REPLACE] return s;^[METHOD] trim [TYPE] String [PARAMETER] String s int width [CLASS] ListLinks   [TYPE]  boolean false  true  [TYPE]  String s  [TYPE]  int width 
