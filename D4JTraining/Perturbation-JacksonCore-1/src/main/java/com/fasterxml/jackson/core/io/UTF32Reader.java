[REPLACE]^protected  boolean _bigEndian;^13^^^^^^^[REPLACE] protected final boolean _bigEndian;^ [CLASS] UTF32Reader  
[REPLACE]^protected char _surrogate  = null ;^20^^^^^^^[REPLACE] protected char _surrogate = NULL_CHAR;^ [CLASS] UTF32Reader  
[REPLACE]^protected  long  _charCount = 2;^25^^^^^^^[REPLACE] protected int _charCount = 0;^ [CLASS] UTF32Reader  
[REPLACE]^protected int _byteCount  = null ;^30^^^^^^^[REPLACE] protected int _byteCount = 0;^ [CLASS] UTF32Reader  
[REPLACE]^private final boolean _managedBuffers;^32^^^^^^^[REPLACE] protected final boolean _managedBuffers;^ [CLASS] UTF32Reader  
[REPLACE]^if  ( _buffer != null )  {^60^^^^^58^131^[REPLACE] if  ( _buffer == null )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -3;^61^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if   (  left < 4  )   {  ;^63^^^^^58^131^[REPLACE] if  ( len < 1 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return len;  ;^64^^^^^58^131^[REPLACE] return len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( start < 0 ||  ( start+len )  > cbuf.length - 5 )  {^67^^^^^58^131^[REPLACE] if  ( start < 0 ||  ( start+len )  > cbuf.length )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^reportBounds ( cbuf, start, len ) ;^67^68^69^^^58^131^[ADD] if  ( start < 0 ||  ( start+len )  > cbuf.length )  { reportBounds ( cbuf, start, len ) ; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportBounds ( cbuf, start, left ) ;^68^^^^^58^131^[REPLACE] reportBounds ( cbuf, start, len ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^68^^^^^58^131^[ADD] reportBounds ( cbuf, start, len ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^71^^^^^58^131^[ADD] len += start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int outPtr = ptr;^72^^^^^58^131^[REPLACE] int outPtr = start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _surrogate  ==  NULL_CHAR )  {^75^^^^^58^131^[REPLACE] if  ( _surrogate != NULL_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^75^76^77^^^58^131^[ADD] if  ( _surrogate != NULL_CHAR )  { cbuf[outPtr++] = _surrogate; _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( start  ==  4L )  {^84^^^^^75^89^[REPLACE] if  ( left < 4 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if   (  ch > 0xFFFF  )   {  ;^85^^^^^75^89^[REPLACE] if  ( !loadMore ( left )  )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^85^86^87^^^75^89^[ADD] if  ( !loadMore ( left )  )  { return -1; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -2;^86^^^^^75^89^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int left =  ( _length *  2 - _ptr ) ;^83^^^^^75^89^[REPLACE] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^76^^^^^58^131^[ADD] cbuf[outPtr++] = _surrogate;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^77^^^^^58^131^[ADD] _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( left  <=  0 )  {^84^^^^^58^131^[REPLACE] if  ( left < 4 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( !loadMore ( start )  )  {^85^^^^^58^131^[REPLACE] if  ( !loadMore ( left )  )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^return -1;^85^86^87^^^58^131^[ADD] if  ( !loadMore ( left )  )  { return -1; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 % 3;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 % 2;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1;  ;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr++] =  _surrogate;^76^^^^^58^131^[REPLACE] cbuf[outPtr++] = _surrogate;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_surrogate ;^77^^^^^58^131^[REPLACE] _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 / 3;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^83^^^^^58^131^[ADD] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if   (  ch > 0xFFFF  )   {  ;^96^^^^^58^131^[REPLACE] if  ( _bigEndian )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] & 0xFF )  &  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  &  ( _buffer[ptr+3] << 24 ) ;^100^101^^^^96^102^[REPLACE] ch =  ( _buffer[ptr] & 0xFF )  |  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  |  ( _buffer[ptr+3] << 24 ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^97^98^^^^58^131^[ADD] ch =  ( _buffer[ptr] << 24 )  |  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  |  ( _buffer[ptr+3] & 0xFF ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  (_charCount  ==  0xFFFF )  {^107^^^^^58^131^[REPLACE] if  ( ch > 0xFFFF )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^107^108^109^110^111^58^131^[ADD] if  ( ch > 0xFFFF )  { if  ( ch > LAST_VALID_UNICODE_CHAR )  { reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _charCount  >=  LAST_VALID_UNICODE_CHAR )  {^108^^^^^58^131^[REPLACE] if  ( ch > LAST_VALID_UNICODE_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportInvalid ( ch,ptrstart, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^109^110^^^^58^131^[REPLACE] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^109^110^^^^58^131^[ADD] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportBounds ( cbuf, start, len )  ;^110^^^^^58^131^[REPLACE] " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( outPtr  <=  len )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^117^118^119^120^^58^131^[ADD] if  ( outPtr >= len )  { _surrogate =  ( char )  ch; break main_loop; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_surrogate =   ( char )  ch;^118^^^^^58^131^[REPLACE] _surrogate =  ( char )  ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[ ( outPtr++ ) ] =  (  ( char )   ( 55296 +  ( ch >> 10 )  )  )  ;^112^^^^^58^131^[REPLACE] ch -= 0x10000;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr] =  ( char )   ( 0xD800   ( ch >> 10 )  ) ;^113^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( 0xDC00 &  ( ch & 0x03FF )  ) ;^115^^^^^58^131^[REPLACE] ch =  ( 0xDC00 |  ( ch & 0x03FF )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _charCount  <  LAST_VALID_UNICODE_CHAR )  {^108^^^^^58^131^[REPLACE] if  ( ch > LAST_VALID_UNICODE_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportInvalid ( ch, outPtrstart, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^109^110^^^^58^131^[REPLACE] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( start  <=  left )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^_surrogate =  ( char )  ch;break main_loop;^117^118^119^120^^58^131^[ADD] if  ( outPtr >= len )  { _surrogate =  ( char )  ch; break main_loop; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _ptr >= _length - 4 )  {^123^^^^^58^131^[REPLACE] if  ( _ptr >= _length )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^break main_loop;^123^124^125^^^58^131^[ADD] if  ( _ptr >= _length )  { break main_loop; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] << 24 )  &  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  &  ( _buffer[ptr+3] & 0xFF ) ;^97^98^^^^58^131^[REPLACE] ch =  ( _buffer[ptr] << 24 )  |  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  |  ( _buffer[ptr+3] & 0xFF ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] & 0xFF )  &  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  &  ( _buffer[ptr+3] << 24 ) ;^100^101^^^^58^131^[REPLACE] ch =  ( _buffer[ptr] & 0xFF )  |  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  |  ( _buffer[ptr+3] << 24 ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_ptr = 0  ;^103^^^^^58^131^[REPLACE] _ptr += 4;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^112^^^^^58^131^[ADD] ch -= 0x10000;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[ ( outPtr++ ) ] =  (  ( char )   ( ch )  )  ;^113^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^break main_loop;^118^119^^^^58^131^[ADD] _surrogate =  ( char )  ch; break main_loop;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^122^^^^^58^131^[ADD] cbuf[outPtr++] =  ( char )  ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int bytePos =  (  ( _byteCount )  +  ( _ptr )  )  - 1  ;^93^^^^^58^131^[REPLACE] int ptr = _ptr;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^94^^^^^58^131^[ADD] int ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^len = outPtr  start;^128^^^^^58^131^[REPLACE] len = outPtr - start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_charCount +=  left;^129^^^^^58^131^[REPLACE] _charCount += len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return len;  ;^130^^^^^58^131^[REPLACE] return len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_byteCount +=  ( _length - 5 - available ) ;^168^^^^^167^217^[REPLACE] _byteCount +=  ( _length - available ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( available  >=  4 )  {^171^^^^^167^217^[REPLACE] if  ( available > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^171^172^173^174^175^167^217^[ADD] if  ( available > 0 )  { if  ( _ptr > 0 )  { for  ( int i = 0; i < available; ++i )  { _buffer[i] = _buffer[_ptr+i]; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  !=  1 )  {^185^^^^^171^197^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  <=  0 )  {^187^^^^^171^197^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  (  ( _ptr )  > 0 )  {     for  ( int i = 0; i < available; ++i )  {         _buffer[i] = _buffer[ (  ( _ptr )  + i ) ];     }     _ptr = 0; }^187^^^^^171^197^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if   (  ch > 0xFFFF  )   {  ;^188^^^^^171^197^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^freeBuffers (  ) ;^188^189^190^^^171^197^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportBounds ( cbuf, start, len )  ;^189^^^^^171^197^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return true;^191^^^^^171^197^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( ! ( loadMore ( left )  )  )  {     return -1; }^188^^^^^171^197^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = 0 ;^186^^^^^171^197^[REPLACE] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^189^^^^^171^197^[ADD] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 2;^183^^^^^171^197^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length += count  ;^196^^^^^171^197^[REPLACE] _length = count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return false;  ;^191^^^^^171^197^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count  =  _in.read ( _buffer ) ;^184^^^^^171^197^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( _ptr  <  3 )  {^172^^^^^167^217^[REPLACE] if  ( _ptr > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^174^^^^^167^217^[ADD] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 0 - 0;^176^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 3; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptri];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr += 4  ;^176^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length =  value;^178^^^^^167^217^[REPLACE] _length = available;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 1; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( _ptr  >=  0 )  {^172^^^^^167^217^[REPLACE] if  ( _ptr > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^176^^^^^167^217^[ADD] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0 >>> 1; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  >  2 )  {^185^^^^^167^217^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  <=  4 )  {^187^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^187^188^189^190^^167^217^[ADD] if  ( count < 0 )  { if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if   (  ch > 0xFFFF  )   {  ;^188^^^^^167^217^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^freeBuffers (  ) ;^188^189^190^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportBounds ( cbuf, start, len )  ;^189^^^^^167^217^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return false;  ;^191^^^^^167^217^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^_in.read ( _buffer )  ;^189^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^186^^^^^167^217^[ADD] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return true;^191^^^^^167^217^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if   (  count < 1  )   {  ;^187^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  (  ( _ptr )  > 0 )  {     for  ( int i = 0; i < available; ++i )  {         _buffer[i] = _buffer[ (  ( _ptr )  + i ) ];     }     _ptr = 0; }^187^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^189^^^^^167^217^[ADD] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr += 4  ;^183^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = 0 ;^186^^^^^167^217^[REPLACE] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = 0  ;^196^^^^^167^217^[REPLACE] _length = count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^173^174^175^^^167^217^[ADD] for  ( int i = 0; i < available; ++i )  { _buffer[i] = _buffer[_ptr+i]; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count =  ( _in != null )  ? -1 : _in.read ( _buffer ) ;^184^^^^^167^217^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  >  4 )  {^204^^^^^167^217^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  <=  2 )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( count < 1 )  {     _length = 0;     if  ( count < 0 )  {         if  ( _managedBuffers )  {             freeBuffers (  ) ;         }         return false;     }     reportStrangeStream (  ) ; }^205^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if   (  ch > 0xFFFF  )   {  ;^206^^^^^167^217^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportBounds ( cbuf, start, len )  ;^207^^^^^167^217^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^_in.read ( _buffer )  ;^207^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^freeBuffers (  ) ;^206^207^208^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  > start )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^205^206^207^208^^167^217^[ADD] if  ( count < 0 )  { if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( ! ( loadMore ( left )  )  )  {     return -1; }^206^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^206^207^208^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = count  ;^214^^^^^167^217^[REPLACE] _length += count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^203^^^^^167^217^[ADD] int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length, _buffer.length - _length ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return false;^216^^^^^167^217^[REPLACE] return true;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
