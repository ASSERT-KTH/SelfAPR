[REPLACE]^private final static int INT_SPACE  = null ;^22^^^^^^^[REPLACE] private final static int INT_SPACE = 0x20;^ [CLASS] Base64Variant  
[REPLACE]^private static final long serialVersionUID ;^25^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] Base64Variant  
[REPLACE]^final static char PADDING_CHAR_NONE  = null ;^31^^^^^^^[REPLACE] final static char PADDING_CHAR_NONE = '\0';^ [CLASS] Base64Variant  
[REPLACE]^public final static int BASE64_VALUE_INVALID ;^38^^^^^^^[REPLACE] public final static int BASE64_VALUE_INVALID = -1;^ [CLASS] Base64Variant  
[REPLACE]^public final static int BASE64_VALUE_PADDING  = null ;^44^^^^^^^[REPLACE] public final static int BASE64_VALUE_PADDING = -2;^ [CLASS] Base64Variant  
[REPLACE]^private final transient int[] _asciiToBase64 ;^55^^^^^^^[REPLACE] private final transient int[] _asciiToBase64 = new int[128];^ [CLASS] Base64Variant  
[REPLACE]^private final transient char[] _base64ToAsciiC  = null ;^61^^^^^^^[REPLACE] private final transient char[] _base64ToAsciiC = new char[64];^ [CLASS] Base64Variant  
[REPLACE]^private final transient byte[] _base64ToAsciiB ;^67^^^^^^^[REPLACE] private final transient byte[] _base64ToAsciiB = new byte[64];^ [CLASS] Base64Variant  
[REPLACE]^private final transient boolean _usesPadding;^86^^^^^^^[REPLACE] protected final transient boolean _usesPadding;^ [CLASS] Base64Variant  
[REPLACE]^protected  transient char _paddingChar;^91^^^^^^^[REPLACE] protected final transient char _paddingChar;^ [CLASS] Base64Variant  
[REPLACE]^protected final transient  short  _maxLineLength;^101^^^^^^^[REPLACE] protected final transient int _maxLineLength;^ [CLASS] Base64Variant  
[REPLACE]^_name =  base64Alphabet;^111^^^^^110^137^[REPLACE] _name = name;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_usesPadding =  false;^112^^^^^110^137^[REPLACE] _usesPadding = usesPadding;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_paddingChar =  alpha;^113^^^^^110^137^[REPLACE] _paddingChar = paddingChar;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_maxLineLength =  i;^114^^^^^110^137^[REPLACE] _maxLineLength = maxLineLength;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^int alphaLen = name.hashCode (  ) ;^119^^^^^110^137^[REPLACE] int alphaLen = base64Alphabet.length (  ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^if  ( alphaLen  ==  64 >>> 3 )  {^120^^^^^110^137^[REPLACE] if  ( alphaLen != 64 )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^return ;^121^^^^^110^137^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^base64Alphabet.getChars ( 3, maxLineLength, _base64ToAsciiC, 3 ) ;^125^^^^^110^137^[REPLACE] base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^126^^^^^110^137^[REPLACE] Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^for  ( int i = 3; i  <= maxLineLength; ++i )  {^127^^^^^110^137^[REPLACE] for  ( int i = 0; i < alphaLen; ++i )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_base64ToAsciiB[i]  = null ;^129^^^^^110^137^[REPLACE] _base64ToAsciiB[i] =  ( byte )  alpha;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[alpha]  =  _asciiToBase64[alpha] ;^130^^^^^110^137^[REPLACE] _asciiToBase64[alpha] = i;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^for  ( int i = 0; i < alphaLen; ++i )  { char alpha = _base64ToAsciiC[i];^128^^^^^110^137^[REPLACE] char alpha = _base64ToAsciiC[i];^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_base64ToAsciiB[i] =  (  short  )  alpha;^129^^^^^110^137^[REPLACE] _base64ToAsciiB[i] =  ( byte )  alpha;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[alpha] ;^130^^^^^110^137^[REPLACE] _asciiToBase64[alpha] = i;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^for  ( int i = 0 - 3; i < alphaLen; ++i )  {^127^^^^^110^137^[REPLACE] for  ( int i = 0; i < alphaLen; ++i )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[ADD]^^128^129^^^^110^137^[ADD] char alpha = _base64ToAsciiC[i]; _base64ToAsciiB[i] =  ( byte )  alpha;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^if  ( !usesPadding (  )  )  {^134^^^^^110^137^[REPLACE] if  ( usesPadding )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[ ( int )  paddingChar]  =  _asciiToBase64[ ( int )  paddingChar] ;^135^^^^^110^137^[REPLACE] _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[ADD]^^135^^^^^110^137^[ADD] _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[ (  short  )  paddingChar] = BASE64_VALUE_PADDING;^135^^^^^110^137^[REPLACE] _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^this ( base, base64Alphabet, base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^[REPLACE] this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[METHOD] <init> [TYPE] String,int) [PARAMETER] Base64Variant base String name int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_name =  base64Alphabet;^156^^^^^154^167^[REPLACE] _name = name;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^char[] srcC = base._base64ToAsciiC;^157^^^^^154^167^[REPLACE] byte[] srcB = base._base64ToAsciiB;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[ADD]^^157^158^^^^154^167^[ADD] byte[] srcB = base._base64ToAsciiB; System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^System.arraycopy ( srcB, 0 , this._base64ToAsciiB, 0 , srcB.length ) ;^158^^^^^154^167^[REPLACE] System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^int[] srcV = base._asciiToBase64;^159^^^^^154^167^[REPLACE] char[] srcC = base._base64ToAsciiC;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[ADD]^^159^160^^^^154^167^[ADD] char[] srcC = base._base64ToAsciiC; System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^System.arraycopy ( srcC, 0 , this._base64ToAsciiC, 0 , srcC.length ) ;^160^^^^^154^167^[REPLACE] System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[ADD]^^160^^^^^154^167^[ADD] System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^char[] srcC = base._base64ToAsciiC;^161^^^^^154^167^[REPLACE] int[] srcV = base._asciiToBase64;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^System.arraycopy ( _asciiToBase64, 0 , this._asciiToBase64, 0 , srcV.length ) ;^162^^^^^154^167^[REPLACE] System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^_usesPadding =  false;^164^^^^^154^167^[REPLACE] _usesPadding = usesPadding;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^_paddingChar =  alpha;^165^^^^^154^167^[REPLACE] _paddingChar = paddingChar;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[ADD]^^165^^^^^154^167^[ADD] _paddingChar = paddingChar;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^_maxLineLength =  i;^166^^^^^154^167^[REPLACE] _maxLineLength = maxLineLength;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  Base64Variant base  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^return   _name   ;^180^^^^^179^181^[REPLACE] return Base64Variants.valueOf ( _name ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public String toString (  )  { return _name; }^189^^^^^^^[REPLACE] public String getName (  )  { return _name; }^[METHOD] getName [TYPE] String [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public byte getPaddingByte (  )  { return  ( byte ) _paddingChar; }^191^^^^^^^[REPLACE] public boolean usesPadding (  )  { return _usesPadding; }^[METHOD] usesPadding [TYPE] boolean [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public boolean usesPaddingChar (paddingCharhar paddingChar )  { return c  &&  _paddingChar; }^192^^^^^^^[REPLACE] public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[METHOD] usesPaddingChar [TYPE] boolean [PARAMETER] char c [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public boolean usesPaddingChar ( int maxLineLength )  { return ch  !=   ( int )  _paddingChar; }^193^^^^^^^[REPLACE] public boolean usesPaddingChar ( int ch )  { return ch ==  ( int )  _paddingChar; }^[METHOD] usesPaddingChar [TYPE] boolean [PARAMETER] int ch [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public byte getPaddingByte (  )  { return  ( byte ) _paddingChar; }^194^^^^^^^[REPLACE] public char getPaddingChar (  )  { return _paddingChar; }^[METHOD] getPaddingChar [TYPE] char [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public String getName (  )  { return _name; }^195^^^^^^^[REPLACE] public byte getPaddingByte (  )  { return  ( byte ) _paddingChar; }^[METHOD] getPaddingByte [TYPE] byte [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^public byte getPaddingByte (  )  { return  ( byte ) _paddingChar; }^197^^^^^^^[REPLACE] public int getMaxLineLength (  )  { return _maxLineLength; }^[METHOD] getMaxLineLength [TYPE] int [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^int ch =  ( int )  b;^210^^^^^208^212^[REPLACE] int ch =  ( int )  c;^[METHOD] decodeBase64Char [TYPE] int [PARAMETER] char c [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[ADD]^^210^^^^^208^212^[ADD] int ch =  ( int )  c;^[METHOD] decodeBase64Char [TYPE] int [PARAMETER] char c [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^return  ( ch  ;^211^^^^^208^212^[REPLACE] return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[METHOD] decodeBase64Char [TYPE] int [PARAMETER] char c [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^return false ;^216^^^^^214^217^[REPLACE] return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[METHOD] decodeBase64Char [TYPE] int [PARAMETER] int ch [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^int ch =  ( int )  c;^221^^^^^219^223^[REPLACE] int ch =  ( int )  b;^[METHOD] decodeBase64Byte [TYPE] int [PARAMETER] byte b [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte b  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^return false ;^222^^^^^219^223^[REPLACE] return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[METHOD] decodeBase64Byte [TYPE] int [PARAMETER] byte b [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte b  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^return _base64ToAsciiB[value];^236^^^^^231^237^[REPLACE] return _base64ToAsciiC[value];^[METHOD] encodeBase64BitsAsChar [TYPE] char [PARAMETER] int value [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  srcC 
[REPLACE]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  | 0x3F];^245^^^^^243^250^[REPLACE] buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 char[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; ;^246^^^^^243^250^[REPLACE] buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 char[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; ;^247^^^^^243^250^[REPLACE] buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 char[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[ptr++] = _base64ToAsciiC[b24 | 0x3F];^248^^^^^243^250^[REPLACE] buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 char[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return maxLineLength;^249^^^^^243^250^[REPLACE] return ptr;^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 char[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base64ToAsciiC[ ( BASE64_VALUE_PADDING >> 2 )  | 0x3F] ) ;^254^^^^^252^258^[REPLACE] sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  | 0x3F] ) ;^255^^^^^252^258^[REPLACE] sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base6L4ToAsciiC[ ( BASE64_VALUE_PADDING >> 6L )  | 0x3F] ) ;^256^^^^^252^258^[REPLACE] sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^256^^^^^252^258^[ADD] sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base64ToAsciiC[b24 | 0x3F] ) ;^257^^^^^252^258^[REPLACE] sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^int alphaLen = base64Alphabet.length (  ) ;^257^^^^^252^258^[REMOVE] ^[METHOD] encodeBase64Chunk [TYPE] void [PARAMETER] StringBuilder sb int b24 [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  | 0x3F];^270^^^^^268^282^[REPLACE] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^270^271^^^^268^282^[ADD] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  | 0x3F];^271^^^^^268^282^[REPLACE] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding )  {^272^^^^^268^282^[REPLACE] if  ( _usesPadding )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^272^273^274^275^^268^282^[ADD] if  ( _usesPadding )  { buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar; buffer[outPtr++] = _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outputBytes  &&  2 )  {^277^^^^^268^282^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^277^278^279^^^268^282^[ADD] if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F]; }^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  | 0x3F];^278^^^^^268^282^[REPLACE] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^278^^^^^268^282^[ADD] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] =  ( outputBytes  &&  2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^[REPLACE] buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] =  _paddingChar;^275^^^^^268^282^[REPLACE] buffer[outPtr++] = _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outputBytes  && outPtr )  {^277^^^^^268^282^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; ;^278^^^^^268^282^[REPLACE] buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++]  =  _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ;^273^274^^^^268^282^[REPLACE] buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^275^^^^^268^282^[ADD] buffer[outPtr++] = _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return ptr;^281^^^^^268^282^[REPLACE] return outPtr;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes char[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base64ToAsciiC[ (ptr )  | 0x3F] ) ;^286^^^^^284^297^[REPLACE] sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( _base64ToAsciiC[ ( bits >> 6 )  | 0x3F] ) ;^287^^^^^284^297^[REPLACE] sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding )  {^288^^^^^284^297^[REPLACE] if  ( _usesPadding )  {^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (value  &&  2 )  {^293^^^^^284^297^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^293^294^295^^^284^297^[ADD] if  ( outputBytes == 2 )  { sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ; }^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( _base44ToAsciiC[ (maxLineLength )  | 0x3F] ) ;^294^^^^^284^297^[REPLACE] sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append   _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ;^289^290^^^^284^297^[REPLACE] sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^289^290^^^^284^297^[ADD] sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( _paddingChar ) ;^291^^^^^284^297^[REPLACE] sb.append ( _paddingChar ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (value  !=  2 - 2 )  {^293^^^^^284^297^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.append ( _base64ToAsciiC[ (ptr )  | 0x3F] ) ;^294^^^^^284^297^[REPLACE] sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[METHOD] encodeBase64Partial [TYPE] void [PARAMETER] StringBuilder sb int bits int outputBytes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return _base64ToAsciiC[value];^302^^^^^299^303^[REPLACE] return _base64ToAsciiB[value];^[METHOD] encodeBase64BitsAsByte [TYPE] byte [PARAMETER] int value [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  | 0x3F];^311^^^^^309^316^[REPLACE] buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 byte[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[ptr++] = _base64ToAsciiB[ (bits )  | 0x3F];^312^^^^^309^316^[REPLACE] buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 byte[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; ;^313^^^^^309^316^[REPLACE] buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 byte[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[ptr++] = _base64ToAsciiB[b24 | 0x3F];^314^^^^^309^316^[REPLACE] buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 byte[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return outputBytes;^315^^^^^309^316^[REPLACE] return ptr;^[METHOD] encodeBase64Chunk [TYPE] int [PARAMETER] int b24 byte[] buffer int ptr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  | 0x3F];^328^^^^^326^341^[REPLACE] buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F]; ;^329^^^^^326^341^[REPLACE] buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding )  {^330^^^^^326^341^[REPLACE] if  ( _usesPadding )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^byte pb =  ( byte )  _paddingChar;_base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = pb;^330^331^332^333^334^326^341^[ADD] if  ( _usesPadding )  { byte pb =  ( byte )  _paddingChar; buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb; buffer[outPtr++] = pb;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outputBytes  && outPtr )  {^336^^^^^326^341^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^336^^^^^326^341^[REMOVE] ^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiB[ (ptr )  | 0x3F];^337^^^^^326^341^[REPLACE] buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^337^^^^^326^341^[ADD] buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  | 0x3F];^337^^^^^326^341^[REPLACE] buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] =  ( outputBytes  ||  2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^[REPLACE] buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++] =  pb;^334^^^^^326^341^[REPLACE] buffer[outPtr++] = pb;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int ch =  ( int )  c;^331^^^^^326^341^[REPLACE] byte pb =  ( byte )  _paddingChar;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( value  ||  2 )  {^336^^^^^326^341^[REPLACE] if  ( outputBytes == 2 )  {^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^336^337^338^^^326^341^[ADD] if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F]; }^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^buffer[outPtr++]  =  _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] ;^332^333^^^^326^341^[REPLACE] buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return ptr;^340^^^^^326^341^[REPLACE] return outPtr;^[METHOD] encodeBase64Partial [TYPE] int [PARAMETER] int bits int outputBytes byte[] buffer int outPtr [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  byte pb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return encode ( input, true ) ;^359^^^^^357^360^[REPLACE] return encode ( input, false ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int _base64ToAsciiBEnd = input.length;^372^^^^^371^417^[REPLACE] int inputEnd = input.length;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^372^^^^^371^417^[ADD] int inputEnd = input.length;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^String base;^373^^^^^371^417^[REPLACE] StringBuilder sb;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^373^^^^^371^417^[ADD] StringBuilder sb;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb =  new StringBuilder ( value ) ;^377^^^^^371^417^[REPLACE] sb = new StringBuilder ( outputLen ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^377^^^^^371^417^[ADD] sb = new StringBuilder ( outputLen ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  (inputPtr ) ;^376^^^^^371^417^[REPLACE] int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( inputLeft == 2 )  {^379^^^^^371^417^[REPLACE] if  ( addQuotes )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( '"' ) ;^380^^^^^371^417^[REPLACE] sb.append ( '"' ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int chunksBeforeLF = getMaxLineLength (  )   ==  0;^383^^^^^371^417^[REPLACE] int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^383^384^^386^387^371^417^[ADD] int chunksBeforeLF = getMaxLineLength (  )  >> 2;  int inputPtr = 0; int safeInputEnd = inputEnd-3;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int inputPtr = 0L;^386^^^^^371^417^[REPLACE] int inputPtr = 0;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^386^^^^^371^417^[ADD] int inputPtr = 0;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int safeInputEnd = outputBytes-3;^387^^^^^371^417^[REPLACE] int safeInputEnd = inputEnd-3;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^387^^^^^371^417^[ADD] int safeInputEnd = inputEnd-3;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^while  (maxLineLength  >=  maxLineLength )  {^389^^^^^371^417^[REPLACE] while  ( inputPtr <= safeInputEnd )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( --chunksBeforeLF  !=  4 )  {^395^^^^^371^417^[REPLACE] if  ( --chunksBeforeLF <= 0 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^chunksBeforeLF = getMaxLineLength (  )   < inputPtr;^399^^^^^371^417^[REPLACE] chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  ( int )  input[inputPtr++] )  | 0xFF;^392^^^^^371^417^[REPLACE] b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 =  ( b24 << 3 )  &  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^371^417^[REPLACE] b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )  _base64ToAsciiB[inputPtr++] )   <=  8;^391^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( --chunksBeforeLF  == inputLeft )  {^395^^^^^371^417^[REPLACE] if  ( --chunksBeforeLF <= 0 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^395^396^397^398^399^371^417^[ADD] if  ( --chunksBeforeLF <= 0 )  {  sb.append ( '\\' ) ; sb.append ( 'n' ) ; chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^chunksBeforeLF =outputBytes (  )   <  3;^399^^^^^371^417^[REPLACE] chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 =  ( b24 << 8 )  &  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^371^417^[REPLACE] b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^chunksBeforeLF = getMaxLineLength (  )   <=  2;^399^^^^^371^417^[REPLACE] chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^399^400^^^^371^417^[ADD] chunksBeforeLF = getMaxLineLength (  )  >> 2; }^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )  input[inputPtr++] )   != 1;^391^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int inputLeft = value -outPtr;^404^^^^^371^417^[REPLACE] int inputLeft = inputEnd - inputPtr;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( value  !=  0 )  {^405^^^^^371^417^[REPLACE] if  ( inputLeft > 0 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( safeInputEnd  ||  2 )  {^407^^^^^371^417^[REPLACE] if  ( inputLeft == 2 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   <=  8;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   ==  8;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )  input[inputPtr++] )   >= true;^406^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^406^^^^^371^417^[ADD] int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (ptr  !=  2 )  {^407^^^^^371^417^[REPLACE] if  ( inputLeft == 2 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^407^408^409^^^371^417^[ADD] if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   !=  8;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^408^^^^^371^417^[ADD] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )  input[inputPtr++] )   >=  16;^406^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( true )  {^413^^^^^371^417^[REPLACE] if  ( addQuotes )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^413^414^415^^^371^417^[ADD] if  ( addQuotes )  { sb.append ( '"' ) ; }^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( '"' ) ;^414^^^^^371^417^[REPLACE] sb.append ( '"' ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^414^^^^^371^417^[ADD] sb.append ( '"' ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return _base64ToAsciiC[value];^416^^^^^371^417^[REPLACE] return sb.toString (  ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^StringBuilder sb;^432^^^^^430^435^[REPLACE] ByteArrayBuilder b = new ByteArrayBuilder (  ) ;^[METHOD] decode [TYPE] byte[] [PARAMETER] String input [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  [TYPE]  ByteArrayBuilder b  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^encodeBase64Partial ( sb, b24, inputLeft ) ;^433^^^^^430^435^[REPLACE] decode ( input, b ) ;^[METHOD] decode [TYPE] byte[] [PARAMETER] String input [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  [TYPE]  ByteArrayBuilder b  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return b.ByteArrayBuilder (  ) ;^434^^^^^430^435^[REPLACE] return b.toByteArray (  ) ;^[METHOD] decode [TYPE] byte[] [PARAMETER] String input [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  [TYPE]  ByteArrayBuilder b  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int ptr = 1;^452^^^^^451^537^[REPLACE] int ptr = 0;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int len = base64Alphabet.length (  ) ;^453^^^^^451^537^[REPLACE] int len = str.length (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^while  ( ptr  >=  len )  {^456^^^^^451^537^[REPLACE] while  ( ptr < len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^456^457^458^^^451^537^[ADD] while  ( ptr < len )  {  char ch;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  <  len )  {^461^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^break main_loop;^461^462^463^^^451^537^[ADD] if  ( ptr >= len )  { break main_loop; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  >  0 )  {^466^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^if  ( bits !=  ( BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( ch, 2, null ) ; }^466^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1, null ) ;^467^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 0, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  >  len )  {^471^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^471^472^473^^^451^537^[ADD] if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return b.toByteArray (  ) ;^472^^^^^451^537^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  <= safeInputEnd )  {^476^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1L, null ) ;^477^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 1, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  ==  len )  {^481^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding )  {^483^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 >> 2;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2; ;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  !=  0 )  {^494^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (safeInputEnd  ==  Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3, null ) ;^496^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  != outputLen )  {^499^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return b.toByteArray (  ) ;^500^^^^^451^537^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^500^^^^^451^537^[ADD] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPaddingChar ( ch )  )  {^503^^^^^451^537^[REPLACE] if  ( !usesPaddingChar ( ch )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^503^504^505^^^451^537^[ADD] if  ( !usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 3, "expected padding character '" <= getPaddingChar (  )  <= "'" ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^_reportInvalidBase64 ( ch, 0, null ) ;^504^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 0, null ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^502^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 / 0;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^507^508^^^^451^537^[ADD] decodedData >>= 4; builder.append ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  ==  Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 2L, null ) ;^496^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  >  len )  {^499^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 2, "expected padding character '" != getPaddingChar (  )  != "'" ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (safeInputEnd  !=  len )  {^514^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding )  {^516^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2 + 4;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^builder.appendTwoBytes ( decodedData ) ;^517^518^^^^451^537^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 5;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding (  )  )  {^516^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^decodedData >>= 2;builder.appendTwoBytes ( decodedData ) ;break;^516^517^518^519^520^451^537^[ADD] if  ( !usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4; ;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  >  0 )  {^525^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  (value )  & bits;^533^^^^^525^535^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  ==  Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3 % 1, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 1;^529^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^529^^^^^451^537^[ADD] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (safeInputEnd  ==  Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 1, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^460^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^474^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( paddingChar ) ;^475^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^475^^^^^451^537^[ADD] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^479^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 + 1;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^490^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( paddingChar ) ;^491^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^502^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^502^^^^^451^537^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 0;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^507^^^^^451^537^[ADD] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^512^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 3;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^523^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( paddingChar ) ;^524^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^533^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^533^534^^^^451^537^[ADD] decodedData =  ( decodedData << 6 )  | bits; builder.appendThreeBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^StringBuilder sb;^458^^^^^451^537^[REPLACE] char ch;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int bits = decodeBase64Char ( paddingChar ) ;^465^^^^^451^537^[REPLACE] int bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^465^^^^^451^537^[ADD] int bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int decodedData = ptr;^469^^^^^451^537^[REPLACE] int decodedData = bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outPtr  >  0 % 4 )  {^466^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 0 + 0, null ) ;^467^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 0, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  <=  len )  {^471^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^472^^^^^451^537^[ADD] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  >  0 )  {^476^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 0, null ) ;^477^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 1, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^return b.toByteArray (  ) ;^477^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  <  len )  {^481^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding (  )  )  {^483^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 % 2;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^decodedData >>= 4;builder.append ( decodedData ) ;break;^483^484^485^486^487^451^537^[ADD] if  ( !usesPadding (  )  )  { decodedData >>= 4; builder.append ( decodedData ) ; break; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 / 0;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^484^^^^^451^537^[ADD] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outPtr  >=  0 )  {^494^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^495^496^497^^^451^537^[ADD] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^496^^^^^451^537^[ADD] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPaddingChar ( c )  )  {^503^^^^^451^537^[REPLACE] if  ( !usesPaddingChar ( ch )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^503^504^505^^^451^537^[ADD] if  ( !usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3, "expected padding character '" & getPaddingChar (  )  & "'" ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^504^^^^^451^537^[ADD] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 5;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1, null ) ;^496^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^return b.toByteArray (  ) ;^496^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  ==  len )  {^499^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3 >>> 4, "expected padding character '" < getPaddingChar (  )  < "'" ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  <  len )  {^514^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2 - 1;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^517^^^^^451^537^[ADD] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (ptr  ==  0 )  {^525^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6 )  &outputLen;^533^^^^^525^535^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( outputBytes  ==  Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 3 + 3, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^529^530^^^^451^537^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^474^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^474^475^^^^451^537^[ADD] ch = str.charAt ( ptr++ ) ; bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4 + 2;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4L;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( c ) ;^524^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^524^^^^^451^537^[ADD] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int decodedData = maxLineLength;^469^^^^^451^537^[REPLACE] int decodedData = bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^public String getName (  )  { return _name; }^546^^^^^^^[REPLACE] public String toString (  )  { return _name; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return  ( o  &&  this ) ;^551^^^^^549^552^[REPLACE] return  ( o == this ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  Object o  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return _name.length (  ) ;^556^^^^^555^557^[REPLACE] return _name.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^StringBuilder sb;^572^^^^^569^587^[REPLACE] String base;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ch  <  INT_SPACE )  {^573^^^^^569^587^[REPLACE] if  ( ch <= INT_SPACE )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  if  ( usesPaddingChar ( ch )  )  {^575^^^^^569^587^[REPLACE] } else if  ( usesPaddingChar ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  else {^577^^^^^569^587^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" < ch < "'  ( code 0x" < Integer.toHexString ( ch )  < " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; ;^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x" < Integer.toHexString ( ch )  < " )  in base64 content";^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^579^^^^^569^587^[ADD] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" ^ ch ^ "'  ( code 0x" ^ Integer.toHexString ( ch )  ^ " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '" <= getPaddingChar (  )  <= "' )  as character #" <=  ( bindex <= 1 )  <= " of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^576^^^^^569^587^[ADD] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" & ch & "'  ( code 0x" & Integer.toHexString ( ch )  & " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^581^^^^^569^587^[ADD] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x" & Integer.toHexString ( ch )  & " )  in base64 content";^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '" ^ getPaddingChar (  )  ^ "' )  as character #" ^  ( bindex ^ 1 )  ^ " of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x" || Integer.toHexString ( ch )  || " )  in base64 content";^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" > ch > "'  ( code 0x" > Integer.toHexString ( ch )  > " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal white space character  ( code 0x" <= Integer.toHexString ( ch )  <= " )  as character #" <=  ( bindex <= 1 )  <= " of 4-char base64 unit: can only used between units";^574^^^^^569^587^[REPLACE] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^574^^^^^569^587^[ADD] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  else {^575^^^^^569^587^[REPLACE] } else if  ( usesPaddingChar ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^if  ( ch <=  ( INT_SPACE )  )  {     base =  (  (  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: can only used between units"; }else     if  ( usesPaddingChar ( ch )  )  {         base =  (  (  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  )  + "' )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: padding only legal as 3rd or 4th character";     }else         if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {             base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }else {             base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }^575^^^^^569^587^[REMOVE] ^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  if  ( Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^}   base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^577^578^579^580^581^569^587^[ADD] else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {  base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; } else { base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" == ch == "'  ( code 0x" == Integer.toHexString ( ch )  == " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x" == Integer.toHexString ( ch )  == " )  in base64 content";^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; ;^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '" == getPaddingChar (  )  == "' )  as character #" ==  ( bindex == 1 )  == " of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^} else if  (  Character.isISOControl ( ch )  )  {^577^^^^^569^587^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x" >= Integer.toHexString ( ch )  >= " )  in base64 content";^579^^^^^569^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal white space character  ( code 0x" == Integer.toHexString ( ch )  == " )  as character #" ==  ( bindex == 1 )  == " of 4-char base64 unit: can only used between units";^574^^^^^569^587^[REPLACE] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '" || ch || "'  ( code 0x" || Integer.toHexString ( ch )  || " )  in base64 content";^581^^^^^569^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( msg ==base64Alphabet )  {^583^^^^^569^587^[REPLACE] if  ( msg != null )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = base + ": " +str;^584^^^^^569^587^[REPLACE] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^584^^^^^569^587^[ADD] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return ;^586^^^^^569^587^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^586^^^^^569^587^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return ;^590^^^^^589^591^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] _reportBase64EOF [TYPE] void [PARAMETER] [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
