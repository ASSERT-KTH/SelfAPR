[REPLACE]^private static final long serialVersionUID ;^25^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] Base64Variant  
[REPLACE]^final static char PADDING_CHAR_NONE ;^31^^^^^^^[REPLACE] final static char PADDING_CHAR_NONE = '\0';^ [CLASS] Base64Variant  
[REPLACE]^public final static int BASE64_VALUE_INVALID = -1 - 4;^38^^^^^^^[REPLACE] public final static int BASE64_VALUE_INVALID = -1;^ [CLASS] Base64Variant  
[REPLACE]^public final static int BASE64_VALUE_PADDING ;^44^^^^^^^[REPLACE] public final static int BASE64_VALUE_PADDING = -2;^ [CLASS] Base64Variant  
[REPLACE]^private  transient int[] _asciiToBase64 = new int[128];^55^^^^^^^[REPLACE] private final transient int[] _asciiToBase64 = new int[128];^ [CLASS] Base64Variant  
[REPLACE]^private final transient char[] _base64ToAsciiC ;^61^^^^^^^[REPLACE] private final transient char[] _base64ToAsciiC = new char[64];^ [CLASS] Base64Variant  
[REPLACE]^private final transient byte[] _base64ToAsciiB ;^67^^^^^^^[REPLACE] private final transient byte[] _base64ToAsciiB = new byte[64];^ [CLASS] Base64Variant  
[REPLACE]^protected   double  _name;^81^^^^^^^[REPLACE] protected final String _name;^ [CLASS] Base64Variant  
[REPLACE]^protected final transient String _paddingChar;^91^^^^^^^[REPLACE] protected final transient char _paddingChar;^ [CLASS] Base64Variant  
[REPLACE]^private final transient int _maxLineLength;^101^^^^^^^[REPLACE] protected final transient int _maxLineLength;^ [CLASS] Base64Variant  
[REPLACE]^_name =  base64Alphabet;^111^^^^^110^137^[REPLACE] _name = name;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_usesPadding =  false;^112^^^^^110^137^[REPLACE] _usesPadding = usesPadding;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[ADD]^^113^^^^^110^137^[ADD] _paddingChar = paddingChar;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_maxLineLength =  i;^114^^^^^110^137^[REPLACE] _maxLineLength = maxLineLength;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^int alphaLen = name.length (  ) ;^119^^^^^110^137^[REPLACE] int alphaLen = base64Alphabet.length (  ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^if  ( alphaLen  ==  64 )  {^120^^^^^110^137^[REPLACE] if  ( alphaLen != 64 )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^throw new IllegalArgumentException ( "Unexpected end-of-String in base64 content" )  ;^121^^^^^110^137^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^return ;^121^^^^^110^137^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^base64Alphabet.getChars ( 1, alphaLen, _base64ToAsciiC, 1 ) ;^125^^^^^110^137^[REPLACE] base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^encodeBase64Chunk ( sb, b24 )  ;^126^^^^^110^137^[REPLACE] Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_base64ToAsciiB[i]  =  _base64ToAsciiB[i] ;^129^^^^^110^137^[REPLACE] _base64ToAsciiB[i] =  ( byte )  alpha;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[alpha]  =  _asciiToBase64[alpha] ;^130^^^^^110^137^[REPLACE] _asciiToBase64[alpha] = i;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^for  ( int i = 3; i < alphaLen; ++i )  {^127^^^^^110^137^[REPLACE] for  ( int i = 0; i < alphaLen; ++i )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^int safeInputEnd = inputEnd - 3  ;^128^^^^^110^137^[REPLACE] char alpha = _base64ToAsciiC[i];^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^if   (  !usesPadding  (    )    )   {  ;^134^^^^^110^137^[REPLACE] if  ( usesPadding )  {^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[ADD]^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^134^135^136^^^110^137^[ADD] if  ( usesPadding )  { _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING; }^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[ ( int )  paddingChar]  = null ;^135^^^^^110^137^[REPLACE] _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^_asciiToBase64[ (  short  )  paddingChar] = BASE64_VALUE_PADDING;^135^^^^^110^137^[REPLACE] _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[METHOD] <init> [TYPE] String,boolean,char,int) [PARAMETER] String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  [TYPE]  boolean _usesPadding  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  [TYPE]  int[] _asciiToBase64  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC 
[REPLACE]^int safeInputEnd = inputEnd - 3  ;^372^^^^^371^417^[REPLACE] int inputEnd = input.length;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^String base  ;^373^^^^^371^417^[REPLACE] StringBuilder sb;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^377^^^^^371^417^[ADD] sb = new StringBuilder ( outputLen ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^sb = new StringBuilder ( outputLen ) ;^376^377^^^^371^417^[ADD] int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ; sb = new StringBuilder ( outputLen ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( true )  {^379^^^^^371^417^[REPLACE] if  ( addQuotes )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^if  ( ptr >= len )  {     break main_loop; }^379^^^^^371^417^[REMOVE] ^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb.StringBuilder ( '"' ) ;^380^^^^^371^417^[REPLACE] sb.append ( '"' ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^super (  )  ;^380^^^^^371^417^[REMOVE] ^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int chunksBeforeLF = getMaxLineLength (  )   != value;^383^^^^^371^417^[REPLACE] int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int inputPtr = 0 - 3;^386^^^^^371^417^[REPLACE] int inputPtr = 0;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^387^^^^^371^417^[ADD] int safeInputEnd = inputEnd-3;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( --chunksBeforeLF  >=  0 )  {^395^^^^^371^417^[REPLACE] if  ( --chunksBeforeLF <= 0 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^395^396^397^398^399^371^417^[ADD] if  ( --chunksBeforeLF <= 0 )  {  sb.append ( '\\' ) ; sb.append ( 'n' ) ; chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^chunksBeforeLF = getMaxLineLength (  )   == value;^399^^^^^371^417^[REPLACE] chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^392^^^^^371^417^[ADD] b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )   ( input[ ( inputPtr++ ) ] )  )  & 255 )  << 8  ;^393^^^^^371^417^[REPLACE] b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^chunksBeforeLF = getMaxLineLength (  )   ==  2;^399^^^^^371^417^[REPLACE] chunksBeforeLF = getMaxLineLength (  )  >> 2;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )   ( input[ ( inputPtr++ ) ] )  )  << 16  ;^391^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int inputLeft = inputEnd  inputPtr;^404^^^^^371^417^[REPLACE] int inputLeft = inputEnd - inputPtr;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if   (  inputLeft == 2  )   {  ;^405^^^^^371^417^[REPLACE] if  ( inputLeft > 0 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( _base64ToAsciiBLeft  || safeInputEnd )  {^407^^^^^371^417^[REPLACE] if  ( inputLeft == 2 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  ( int )   ( input[ ( inputPtr++ ) ] )  )  & 255  ;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   <=  8;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int b24 =  (  ( int )  input[inputPtr++] )   >  5;^406^^^^^371^417^[REPLACE] int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if   (  inputLeft > 0  )   {  ;^407^^^^^371^417^[REPLACE] if  ( inputLeft == 2 )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^407^408^409^^^371^417^[ADD] if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   != value;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   >  8;^408^^^^^371^417^[REPLACE] b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^406^^^^^371^417^[ADD] int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( true )  {^413^^^^^371^417^[REPLACE] if  ( addQuotes )  {^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^sb.append ( '"' ) ;^413^414^415^^^371^417^[ADD] if  ( addQuotes )  { sb.append ( '"' ) ; }^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^sb .StringBuilder ( inputPtr )  ;^414^^^^^371^417^[REPLACE] sb.append ( '"' ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return sb.toString  (    )  ;  ;^416^^^^^371^417^[REPLACE] return sb.toString (  ) ;^[METHOD] encode [TYPE] String [PARAMETER] byte[] input boolean addQuotes [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  StringBuilder sb  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  name  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^452^^^^^451^537^[ADD] int ptr = 0;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int len = base64Alphabet.length (  ) ;^453^^^^^451^537^[REPLACE] int len = str.length (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( safeInputEnd  != safeInputEnd )  {^461^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (maxLineLength  >=  0 )  {^466^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1, null )  ;^467^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 0, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^encodeBase64Chunk ( sb, b24 )  ;^467^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  < safeInputEnd )  {^471^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^encodeBase64Chunk ( sb, b24 )  ;^472^^^^^451^537^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( maxLineLength  ==  0 )  {^476^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1 / 4, null ) ;^477^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 1, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  !=  len )  {^481^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if   (  usesPadding  )   {  ;^483^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^decodedData >>= 4;builder.append ( decodedData ) ;break;^483^484^485^486^487^451^537^[ADD] if  ( !usesPadding (  )  )  { decodedData >>= 4; builder.append ( decodedData ) ; break; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2  ;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 3;^484^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (maxLineLength  ==  0 )  {^494^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (ptr  ==  Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 1, null ) ;^496^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  !=  len )  {^499^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^encodeBase64Chunk ( sb, b24 )  ;^500^^^^^451^537^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPaddingChar ( paddingChar )  )  {^503^^^^^451^537^[REPLACE] if  ( !usesPaddingChar ( ch )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^503^504^505^^^451^537^[ADD] if  ( !usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3, "expected padding character '"getPaddingChar (  ) "'" ) ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^usesPaddingChar ( ch )  ;^504^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^502^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( maxLineLength  ==  Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^_reportInvalidBase64 ( ch, 2, null ) ;^495^496^497^^^451^537^[ADD] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( paddingChar, 2 * 3, null ) ;^496^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^496^^^^^451^537^[ADD] _reportInvalidBase64 ( ch, 2, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  != safeInputEnd )  {^499^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^500^^^^^451^537^[ADD] _reportBase64EOF (  ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPaddingChar ( ch )  )  {^503^^^^^451^537^[REPLACE] if  ( !usesPaddingChar ( ch )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  != outputBytes )  {^514^^^^^451^537^[REPLACE] if  ( ptr >= len )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REMOVE]^if  ( ptr >= len )  {     if  ( ! ( usesPadding (  )  )  )  {         decodedData >>= 4;         builder.append ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^514^^^^^451^537^[REMOVE] ^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( usesPadding (  )  )  {^516^^^^^451^537^[REPLACE] if  ( !usesPadding (  )  )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^decodedData >>= 2;builder.appendTwoBytes ( decodedData ) ;break;^516^517^518^519^520^451^537^[ADD] if  ( !usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^builder.appendTwoBytes ( decodedData ) ;^517^518^^^^451^537^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4  ;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^516^517^518^519^520^451^537^[ADD] if  ( !usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^517^518^^^^451^537^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( bits  >=  0 )  {^525^^^^^451^537^[REPLACE] if  ( bits < 0 )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6L )  & bits;^533^^^^^525^535^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ptr  ==  Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 3 - 1, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^builder.appendTwoBytes ( decodedData ) ;^529^530^^^^451^537^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  (outputBytes  ==  Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^451^537^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^_reportInvalidBase64 ( ch, 3, null ) ;^526^527^528^^^451^537^[ADD] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 3, null ) ; }^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^_reportInvalidBase64 ( ch, 5, null ) ;^527^^^^^451^537^[REPLACE] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^527^^^^^451^537^[ADD] _reportInvalidBase64 ( ch, 3, null ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^460^^^^^451^537^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^474^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( null ) ;^475^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  ( decodedData << 6 - 0 )  &safeInputEnd;^479^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^490^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( paddingChar ) ;^491^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^502^^^^^451^537^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 2  ;^507^^^^^451^537^[REPLACE] decodedData >>= 4;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  (ptr )  & bits;^512^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData >>= 4;^517^^^^^451^537^[REPLACE] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^ch =  base64Alphabet.charAt ( ptr++ ) ;^523^^^^^451^537^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^bits =  decodeBase64Char ( paddingChar ) ;^524^^^^^451^537^[REPLACE] bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^529^^^^^451^537^[ADD] decodedData >>= 2;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^decodedData =  (value )  & bits;^533^^^^^451^537^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int safeInputEnd = inputEnd - 3  ;^458^^^^^451^537^[REPLACE] char ch;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int bits = decodeBase64Char ( paddingChar ) ;^465^^^^^451^537^[REPLACE] int bits = decodeBase64Char ( ch ) ;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^int decodedData = safeInputEnd;^469^^^^^451^537^[REPLACE] int decodedData = bits;^[METHOD] decode [TYPE] void [PARAMETER] String str ByteArrayBuilder builder [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base64Alphabet  input  name  str  [TYPE]  ByteArrayBuilder builder  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^572^^^^^571^587^[ADD] String base;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( ch  >  INT_SPACE )  {^573^^^^^571^587^[REPLACE] if  ( ch <= INT_SPACE )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^573^574^575^576^^571^587^[ADD] if  ( ch <= INT_SPACE )  { base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units"; } else if  ( usesPaddingChar ( ch )  )  { base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if   (  !usesPaddingChar  (  ch  )    )   {  ;^575^^^^^571^587^[REPLACE] } else if  ( usesPaddingChar ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  if  ( Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^577^^^^^571^587^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '"ch"'  ( code 0x"Integer.toHexString ( ch ) " )  in base64 content";^581^^^^^577^582^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content"  ;^579^^^^^571^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^579^^^^^571^587^[ADD] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content"  ;^581^^^^^571^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '"getPaddingChar (  ) "' )  as character #" ( bindex1 ) " of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^571^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character '"ch"'  ( code 0x"Integer.toHexString ( ch ) " )  in base64 content";^581^^^^^571^587^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal white space character  ( code 0x"Integer.toHexString ( ch ) " )  as character #" ( bindex1 )str;^574^^^^^571^587^[REPLACE] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^}   base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^575^576^577^^579^571^587^[ADD] else if  ( usesPaddingChar ( ch )  )  { base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character"; } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  { base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Illegal character  ( code 0x"Integer.toHexString ( ch ) " )  in base64 content";^579^^^^^571^587^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '"getPaddingChar (  ) "' )  as character #" ( bindex1 )str;^576^^^^^571^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^}  else {^577^^^^^571^587^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^581^^^^^577^582^[ADD] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[ADD]^^574^^^^^571^587^[ADD] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = "Unexpected padding character  ( '"getPaddingChar (  ) "' )  as character #" ( bindex1 ) str;^576^^^^^571^587^[REPLACE] base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^if  ( base64Alphabet ==base64Alphabet )  {^583^^^^^571^587^[REPLACE] if  ( msg != null )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^base = base  ": "  msg;^584^^^^^571^587^[REPLACE] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
[REPLACE]^return ;^586^^^^^571^587^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] char ch int bindex String msg [CLASS] Base64Variant   [TYPE]  byte[] _base64ToAsciiB  buffer  input  srcB  [TYPE]  boolean _usesPadding  addQuotes  false  true  usesPadding  [TYPE]  char PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  [TYPE]  int[] _asciiToBase64  srcV  [TYPE]  String _name  base  base64Alphabet  input  msg  name  str  [TYPE]  int BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  [TYPE]  long serialVersionUID  [TYPE]  char[] _base64ToAsciiC  buffer  srcC 
