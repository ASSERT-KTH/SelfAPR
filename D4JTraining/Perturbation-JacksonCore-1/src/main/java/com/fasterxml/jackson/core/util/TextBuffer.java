[REPLACE]^final static char[] NO_CHARS  = null ;^29^^^^^^^[REPLACE] final static char[] NO_CHARS = new char[0];^ [CLASS] TextBuffer  
[REPLACE]^final static int MIN_SEGMENT_LEN  = null ;^34^^^^^^^[REPLACE] final static int MIN_SEGMENT_LEN = 1000;^ [CLASS] TextBuffer  
[REPLACE]^static int MAX_SEGMENT_LEN = 0x40000;^40^^^^^^^[REPLACE] final static int MAX_SEGMENT_LEN = 0x40000;^ [CLASS] TextBuffer  
[REPLACE]^private  BufferRecycler _allocator;^48^^^^^^^[REPLACE] private final BufferRecycler _allocator;^ [CLASS] TextBuffer  
[REPLACE]^private boolean _hasSegments  = null ;^85^^^^^^^[REPLACE] private boolean _hasSegments = false;^ [CLASS] TextBuffer  
[REPLACE]^private  byte  _result byte ;^111^^^^^^^[REPLACE] private String _resultString;^ [CLASS] TextBuffer  
[REPLACE]^_inputBuffer = false;^196^^^^^195^211^[REPLACE] _inputBuffer = null;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_inputStart = -1 - 2;^197^^^^^195^211^[REPLACE] _inputStart = -1;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_inputLen = 0 - 2;^198^^^^^195^211^[REPLACE] _inputLen = 0;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_resultString = false;^200^^^^^195^211^[REPLACE] _resultString = null;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_resultArray = false;^201^^^^^195^211^[REPLACE] _resultArray = null;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if   (  !_hasSegments  )   {  ;^204^^^^^195^211^[REPLACE] if  ( _hasSegments )  {^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^}  else {^206^^^^^195^211^[REPLACE] } else if  ( _currentSegment == null )  {^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_currentSegment = findBuffer ( needed )  ;^207^^^^^195^211^[REPLACE] _currentSegment = findBuffer ( len ) ;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_charArray ( min ( MAX_SEGMENT_LEN,  ( oldLen + sizeAddition )  )  )  ;^205^^^^^195^211^[REPLACE] clearSegments (  ) ;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REMOVE]^_segments.size (  )  ;^205^^^^^195^211^[REMOVE] ^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^}  if  ( _currentSegment != this  )  {^206^^^^^195^211^[REPLACE] } else if  ( _currentSegment == null )  {^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REMOVE]^if  (  ( _currentSize )  >=  ( curr.length )  )  {     expand ( 1 ) ;     curr = _currentSegment; }^206^^^^^195^211^[REMOVE] ^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[ADD]^^207^^^^^195^211^[ADD] _currentSegment = findBuffer ( len ) ;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_currentSize = _segmentSize = 0 - 3;^209^^^^^195^211^[REPLACE] _currentSize = _segmentSize = 0;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^_currentSize = _segmentSize = 0 - 1;^209^^^^^195^211^[REPLACE] _currentSize = _segmentSize = 0;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^append ( buf, start, _segmentSize ) ;^210^^^^^195^211^[REPLACE] append ( buf, start, len ) ;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[ADD]^^210^^^^^195^211^[ADD] append ( buf, start, len ) ;^[METHOD] resetWithCopy [TYPE] void [PARAMETER] char[] buf int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if  ( _inputStart  <  0 * 3 )  {^307^^^^^305^322^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return _inputBuffer;  ;^308^^^^^305^322^[REPLACE] return _inputBuffer;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if  ( _resultArray == null )  {^310^^^^^305^322^[REPLACE] if  ( _resultArray != null )  {^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return _resultArray;  ;^311^^^^^305^322^[REPLACE] return _resultArray;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if  ( _resultString == null )  {^313^^^^^305^322^[REPLACE] if  ( _resultString != null )  {^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[ADD]^^313^314^315^^^305^322^[ADD] if  ( _resultString != null )  { return  ( _resultArray = _resultString.toCharArray (  )  ) ; }^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[ADD]^^314^^^^^305^322^[ADD] return  ( _resultArray = _resultString.toCharArray (  )  ) ;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return   (  _resultArray = _resultString.toCharArray  (    )    )  ;  ;^314^^^^^305^322^[REPLACE] return  ( _resultArray = _resultString.toCharArray (  )  ) ;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return  ( _resultArray  =  return  ( _resultArray ;^314^^^^^305^322^[REPLACE] return  ( _resultArray = _resultString.toCharArray (  )  ) ;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if  ( _hasSegments )  {^317^^^^^305^322^[REPLACE] if  ( !_hasSegments )  {^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return _currentSize;  ;^318^^^^^305^322^[REPLACE] return _currentSegment;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^return contentsAsArray  (    )  ;  ;^321^^^^^305^322^[REPLACE] return contentsAsArray (  ) ;^[METHOD] getTextBuffer [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  needed  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf 
[REPLACE]^if  ( _resultString != false )  {^332^^^^^331^367^[REPLACE] if  ( _resultString == null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _resultArray ==curr )  {^334^^^^^331^367^[REPLACE] if  ( _resultArray != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputStart  !=  0 )  {^338^^^^^334^364^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (start  !=  0 )  {^348^^^^^338^363^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( true == null )  {^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^361^^^^^348^362^[ADD] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^351^^^^^348^362^[ADD] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0 , len = _segments.size (  ) ; i < len; ++i )  {^354^^^^^348^362^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments.clear (  ) ; i < len; ++i )  {^354^^^^^348^362^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.get ( _segmentSize ) ;^355^^^^^348^362^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  new String ( _currentSegment, 0, currLen ) ;^349^^^^^338^363^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _segments == true )  {^353^^^^^338^363^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0 , len = _segments.size (  ) ; i < len; ++i )  {^354^^^^^338^363^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments.clear (  ) ; i < len; ++i )  {^354^^^^^338^363^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.get ( _segmentSize ) ;^355^^^^^338^363^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultnew StringBuilder (  ( segLen + currLen )  )  ;^349^^^^^338^363^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^361^^^^^338^363^[ADD] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int len = _segments.size (  )  ;^345^^^^^338^363^[REPLACE] int segLen = _segmentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int currLen = curr.length  ;^346^^^^^338^363^[REPLACE] int currLen = _currentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( segLen  currLen ) ;^351^^^^^338^363^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments .ArrayList (  )  ; i < len; ++i )  {^354^^^^^338^363^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr =  (  ( char[] )   ( _segments.get ( i )  )  )  ;^355^^^^^338^363^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (start  !=  1 )  {^339^^^^^334^364^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString = value  ;^340^^^^^334^364^[REPLACE] return  ( _resultString = "" ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^return _resultString;  ;^340^^^^^334^364^[REPLACE] return  ( _resultString = "" ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString ;^342^^^^^334^364^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputLen  !=  0 )  {^339^^^^^334^364^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^339^340^341^^^334^364^[ADD] if  ( _inputLen < 1 )  { return  ( _resultString = "" ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( segLen  !=  0 )  {^348^^^^^334^364^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _segments == null )  {^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( segLen start ) ;^351^^^^^348^362^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.add ( _segmentSize ) ;^355^^^^^348^362^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  "" ;^349^^^^^334^364^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _segments == null )  {^353^^^^^334^364^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^353^354^355^356^357^334^364^[ADD] if  ( _segments != null )  { for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0 , len = _segments.size (  ) ; i < len; ++i )  {^354^^^^^334^364^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments .ArrayList (  )  ; i < len; ++i )  {^354^^^^^334^364^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.add ( i ) ;^355^^^^^334^364^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  = null ;^342^^^^^334^364^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString =  null.toString (  ) ;^361^^^^^334^364^[REPLACE] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int len = _segments.size (  )  ;^345^^^^^334^364^[REPLACE] int segLen = _segmentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int currLen = curr.length  ;^346^^^^^334^364^[REPLACE] int currLen = _currentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^351^^^^^334^364^[ADD] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^354^355^356^357^^334^364^[ADD] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^355^^^^^334^364^[ADD] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString ;^335^^^^^331^367^[REPLACE] _resultString = new String ( _resultArray ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputStart  == start )  {^338^^^^^331^367^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (   0 )  {^348^^^^^338^363^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString =  null.toString (  ) ;^361^^^^^348^362^[REPLACE] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^355^^^^^348^362^[ADD] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int segLen = _segmentSize  ;^354^^^^^338^363^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  "" ;^349^^^^^338^363^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString =  null.toString (  ) ;^361^^^^^338^363^[REPLACE] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputLen  >=  1 )  {^339^^^^^331^367^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString = value  ;^340^^^^^331^367^[REPLACE] return  ( _resultString = "" ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^return _resultString;  ;^340^^^^^331^367^[REPLACE] return  ( _resultString = "" ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  _resultString ;^342^^^^^331^367^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputLen  != start )  {^339^^^^^331^367^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^339^340^341^^^331^367^[ADD] if  ( _inputLen < 1 )  { return  ( _resultString = "" ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( segLen  &&  0 )  {^348^^^^^331^367^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if   (  _currentSegment != null  )   {  ;^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( segLen  currLen ) ;^351^^^^^348^362^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^354^355^356^357^^348^362^[ADD] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments .ArrayList (  )  ; i < len; ++i )  {^354^^^^^348^362^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  "" ;^349^^^^^331^367^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if   (  _currentSegment != null  )   {  ;^353^^^^^331^367^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0 , len = _segments.size (  ) ; i < len; ++i )  {^354^^^^^331^367^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments .ArrayList (  )  ; i < len; ++i )  {^354^^^^^331^367^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^sb.append ( curr, 0, curr.length ) ;^355^356^^^^331^367^[ADD] char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_result boolean  = new  boolean  ( _inputBuffer, _inputStart, _inputLen ) ;^342^^^^^331^367^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^361^^^^^331^367^[ADD] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int len = _segments.size (  )  ;^345^^^^^331^367^[REPLACE] int segLen = _segmentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^346^^^^^331^367^[ADD] int currLen = _currentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( segLen  start ) ;^351^^^^^331^367^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^354^355^356^357^^331^367^[ADD] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.get ( _segmentSize ) ;^355^^^^^331^367^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( buf == null )  {^334^^^^^331^367^[REPLACE] if  ( _resultArray != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (start  ==  0 )  {^338^^^^^334^364^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^338^339^340^341^^334^364^[ADD] if  ( _inputStart >= 0 )  { if  ( _inputLen < 1 )  { return  ( _resultString = "" ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( segLen  ||  0 )  {^348^^^^^338^363^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^353^354^355^356^357^348^362^[ADD] if  ( _segments != null )  { for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( needed  start ) ;^351^^^^^348^362^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int segLen = _segmentSize  ;^354^^^^^348^362^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^353^354^355^356^357^338^363^[ADD] if  ( _segments != null )  { for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.add ( i ) ;^355^^^^^338^363^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^345^346^^^^338^363^[ADD] int segLen = _segmentSize; int currLen = _currentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^351^^^^^338^363^[ADD] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^354^355^356^357^^338^363^[ADD] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr = _segments.get ( i ) ; sb.append ( curr, 0, curr.length ) ; }^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^355^^^^^338^363^[ADD] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputLen  ==  1 )  {^339^^^^^334^364^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_result double  = new  double  ( _inputBuffer, _inputStart, _inputLen ) ;^342^^^^^334^364^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (segLen  >  1 )  {^339^^^^^334^364^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( segLen  ||  0 )  {^348^^^^^334^364^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _segments == false )  {^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder ( start  start ) ;^351^^^^^348^362^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr =  (  ( char[] )   ( _segments.get ( i )  )  )  ;^355^^^^^348^362^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  new String ( _currentSegment, 0 + 2, currLen ) ;^349^^^^^334^364^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments.clear (  ) ; i < len; ++i )  {^354^^^^^334^364^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr =  (  ( char[] )   ( _segments.get ( i )  )  )  ;^355^^^^^334^364^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultnew StringBuilder (  ( segLen + currLen )  )  ;^349^^^^^334^364^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^361^^^^^334^364^[ADD] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder (start  currLen ) ;^351^^^^^334^364^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr = _segments.add ( _segmentSize ) ;^355^^^^^334^364^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  _resultString ;^335^^^^^331^367^[REPLACE] _resultString = new String ( _resultArray ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputStart  <  0 )  {^338^^^^^331^367^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( this == this )  {^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder (start  currLen ) ;^351^^^^^348^362^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  new String ( _currentSegment, 0 << 2, start ) ;^349^^^^^338^363^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if   (  _currentSegment != null  )   {  ;^353^^^^^338^363^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^StringBuilder sb = new StringBuilder (start  currLen ) ;^351^^^^^338^363^[REPLACE] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  (segLen  ==  2 )  {^339^^^^^331^367^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  = null ;^342^^^^^331^367^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _inputLen  ==  1 )  {^339^^^^^331^367^[REPLACE] if  ( _inputLen < 1 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( segLen  !=  1 )  {^348^^^^^331^367^[REPLACE] if  ( segLen == 0 )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^348^349^350^351^^331^367^[ADD] if  ( segLen == 0 )  { _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ; } else { StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( false == false )  {^353^^^^^348^362^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString  =  new String ( _currentSegment, 0, currLen ) ;^349^^^^^331^367^[REPLACE] _resultString =  ( currLen == 0 )  ? "" : new String ( _currentSegment, 0, currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _segments == null )  {^353^^^^^331^367^[REPLACE] if  ( _segments != null )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^for  ( int i = 0, len = _segments.clear (  ) ; i < len; ++i )  {^354^^^^^331^367^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^char[] curr =  (  ( char[] )   ( _segments.get ( i )  )  )  ;^355^^^^^331^367^[REPLACE] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^340^^^^^331^367^[ADD] return  ( _resultString = "" ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_result char  = new  char  ( _inputBuffer, _inputStart, _inputLen ) ;^342^^^^^331^367^[REPLACE] _resultString = new String ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^_resultString =  null.toString (  ) ;^361^^^^^331^367^[REPLACE] _resultString = sb.toString (  ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^int currLen = curr.length  ;^346^^^^^331^367^[REPLACE] int currLen = _currentSize;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^351^^^^^331^367^[ADD] StringBuilder sb = new StringBuilder ( segLen + currLen ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[ADD]^^355^^^^^331^367^[ADD] char[] curr = _segments.get ( i ) ;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^return _resultArray;  ;^366^^^^^331^367^[REPLACE] return _resultString;^[METHOD] contentsAsString [TYPE] String [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  StringBuilder sb  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr 
[REPLACE]^if  ( _resultArray == this  )  {^386^^^^^384^399^[REPLACE] if  ( _resultArray != null )  {^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^return NumberInput .parseBigDecimal ( buf , _inputStart , _currentSize )  ;^387^^^^^384^399^[REPLACE] return NumberInput.parseBigDecimal ( _resultArray ) ;^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^if  (  (true )  &&  ( _inputBuffer == null )  )  {^390^^^^^384^399^[REPLACE] if  (  ( _inputStart >= 0 )  &&  ( _inputBuffer != null )  )  {^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^return _allocator.allocCharBuffer  (  TEXT_BUFFER, needed  )  ;  ;^391^^^^^384^399^[REPLACE] return NumberInput.parseBigDecimal ( _inputBuffer, _inputStart, _inputLen ) ;^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^if  (   ( true )  )  {^394^^^^^384^399^[REPLACE] if  (  ( _segmentSize == 0 )  &&  ( _currentSegment != null )  )  {^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^return NumberInput.parseBigDecimal ( _currentSegment, 4, _currentSize ) ;^395^^^^^384^399^[REPLACE] return NumberInput.parseBigDecimal ( _currentSegment, 0, _currentSize ) ;^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^return NumberInput.parseDouble ( contentsAsArray (  )  ) ;^398^^^^^384^399^[REPLACE] return NumberInput.parseBigDecimal ( contentsAsArray (  )  ) ;^[METHOD] contentsAsDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  result 
[REPLACE]^if  ( _inputStart  <=  3 )  {^446^^^^^444^479^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^unshare ( segLen ) ;^447^^^^^444^479^[REPLACE] unshare ( len ) ;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultString = false;^449^^^^^444^479^[REPLACE] _resultString = null;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultArray = false;^450^^^^^444^479^[REPLACE] _resultArray = null;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^char[] curr = _charArray ( newLen )  ;^453^^^^^444^479^[REPLACE] char[] curr = _currentSegment;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^int max = curr.length (  )  - _currentSize;^454^^^^^444^479^[REPLACE] int max = curr.length - _currentSize;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  ( max  == start )  {^456^^^^^444^479^[REPLACE] if  ( max >= len )  {^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSize = len  ;^458^^^^^444^479^[REPLACE] _currentSize += len;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^return;  ;^459^^^^^444^479^[REPLACE] return;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  (start  >=  0 )  {^462^^^^^444^479^[REPLACE] if  ( max > 0 )  {^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^start += amount  ;^464^^^^^444^479^[REPLACE] start += max;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^len -=  start;^465^^^^^444^479^[REPLACE] len -= max;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^464^^^^^444^479^[ADD] start += max;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^len -=  null;^465^^^^^444^479^[REPLACE] len -= max;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSize = len  ;^475^^^^^444^479^[REPLACE] _currentSize += amount;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^start +=  null;^476^^^^^444^479^[REPLACE] start += amount;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^len -=  start;^477^^^^^444^479^[REPLACE] len -= amount;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^int amount = Math.min ( _currentSegment.length, segLen ) ;^473^^^^^444^479^[REPLACE] int amount = Math.min ( _currentSegment.length, len ) ;^[METHOD] append [TYPE] void [PARAMETER] char[] c int start int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  ( _inputStart  ==  0 )  {^484^^^^^482^516^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^unshare ( currLen ) ;^485^^^^^482^516^[REPLACE] unshare ( len ) ;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REMOVE]^clearSegments (  )  ;^485^^^^^482^516^[REMOVE] ^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultString = this;^487^^^^^482^516^[REPLACE] _resultString = null;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultArray = false;^488^^^^^482^516^[REPLACE] _resultArray = null;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^char[] curr = _charArray ( newLen )  ;^491^^^^^482^516^[REPLACE] char[] curr = _currentSegment;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^int max = curr.length *  0.5  - _currentSize;^492^^^^^482^516^[REPLACE] int max = curr.length - _currentSize;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  ( max  ==  len )  {^493^^^^^482^516^[REPLACE] if  ( max >= len )  {^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSize = len  ;^495^^^^^482^516^[REPLACE] _currentSize += len;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^return;  ;^496^^^^^482^516^[REPLACE] return;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if   (  max >= len  )   {  ;^499^^^^^482^516^[REPLACE] if  ( max > 0 )  {^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^501^^^^^482^516^[ADD] len -= max;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^offset += amount  ;^502^^^^^482^516^[REPLACE] offset += max;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^len -=  start;^501^^^^^482^516^[REPLACE] len -= max;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^offset +=  start;^502^^^^^482^516^[REPLACE] offset += max;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSize = len  ;^512^^^^^482^516^[REPLACE] _currentSize += amount;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^offset +=  start;^513^^^^^482^516^[REPLACE] offset += amount;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^514^515^^^^482^516^[ADD] len -= amount; } while  ( len > 0 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^int amount = Math.min ( _currentSegment.length, segLen ) ;^510^^^^^482^516^[REPLACE] int amount = Math.min ( _currentSegment.length, len ) ;^[METHOD] append [TYPE] void [PARAMETER] String str int offset int len [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  ( _inputStart  !=  0 )  {^530^^^^^525^542^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if  ( curr != null )  {^534^^^^^530^540^[REPLACE] if  ( curr == null )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^_currentSegment = findBuffer ( 0 ) ;expand ( 1 ) ;^534^535^536^^538^530^540^[ADD] if  ( curr == null )  { _currentSegment = findBuffer ( 0 ) ; } else if  ( _currentSize >= curr.length )  { expand ( 1 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^}  if  ( _currentSize >= curr.length (  )  )  {^536^^^^^530^540^[REPLACE] } else if  ( _currentSize >= curr.length )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = findBuffer ( 4 ) ;^535^^^^^530^540^[REPLACE] _currentSegment = findBuffer ( 0 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^char[] curr = _charArray ( newLen )  ;^533^^^^^530^540^[REPLACE] char[] curr = _currentSegment;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^unshare ( 2 ) ;^531^^^^^525^542^[REPLACE] unshare ( 1 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if   (  result == null  )   {  ;^534^^^^^525^542^[REPLACE] if  ( curr == null )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^}  if  ( _currentSize >= curr.length - 1 )  {^536^^^^^525^542^[REPLACE] } else if  ( _currentSize >= curr.length )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REMOVE]^if  (  ( _currentSize )  >=  ( curr.length )  )  {     expand ( 1 ) ;     curr = _currentSegment; }^536^^^^^525^542^[REMOVE] ^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^expand ( 2 ) ;^538^^^^^525^542^[REPLACE] expand ( 1 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = findBuffer ( needed )  ;^535^^^^^525^542^[REPLACE] _currentSegment = findBuffer ( 0 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^}  else {^536^^^^^525^542^[REPLACE] } else if  ( _currentSize >= curr.length )  {^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^expand ( 4 ) ;^538^^^^^525^542^[REPLACE] expand ( 1 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = findBuffer ( 1 ) ;^535^^^^^525^542^[REPLACE] _currentSegment = findBuffer ( 0 ) ;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^char[] curr = _charArray ( newLen )  ;^533^^^^^525^542^[REPLACE] char[] curr = _currentSegment;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^return _currentSize;  ;^541^^^^^525^542^[REPLACE] return _currentSegment;^[METHOD] getCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_inputStart = start  ;^547^^^^^545^564^[REPLACE] _inputStart = -1;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSize = len  ;^548^^^^^545^564^[REPLACE] _currentSize = 0;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_inputLen = len  ;^549^^^^^545^564^[REPLACE] _inputLen = 0;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^551^^^^^545^564^[ADD] _inputBuffer = null;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultString = ""  ;^552^^^^^545^564^[REPLACE] _resultString = null;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_resultString = null  ;^553^^^^^545^564^[REPLACE] _resultArray = null;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if   (  !_hasSegments  )   {  ;^556^^^^^545^564^[REPLACE] if  ( _hasSegments )  {^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_charArray ( min ( MAX_SEGMENT_LEN,  ( oldLen + sizeAddition )  )  )  ;^557^^^^^545^564^[REPLACE] clearSegments (  ) ;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^559^^^^^545^564^[ADD] char[] curr = _currentSegment;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^if   (  result == null  )   {  ;^560^^^^^545^564^[REPLACE] if  ( curr == null )  {^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = curr = findBuffer ( 4 ) ;^561^^^^^545^564^[REPLACE] _currentSegment = curr = findBuffer ( 0 ) ;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = curr = findBuffer ( 0L ) ;^561^^^^^545^564^[REPLACE] _currentSegment = curr = findBuffer ( 0 ) ;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^_currentSegment = curr = findBuffer ( 0 + 1 ) ;^561^^^^^545^564^[REPLACE] _currentSegment = curr = findBuffer ( 0 ) ;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[ADD]^^561^^^^^545^564^[ADD] _currentSegment = curr = findBuffer ( 0 ) ;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^return curr;  ;^563^^^^^545^564^[REPLACE] return curr;^[METHOD] emptyAndGetCurrentSegment [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needed  offset  segLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  result 
[REPLACE]^int amount = min ( _currentSegment.length, len )  ;^635^^^^^634^652^[REPLACE] int sharedLen = _inputLen;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^636^^^^^634^652^[ADD] _inputLen = 0;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int amount = min ( _currentSegment.length, len )  ;^637^^^^^634^652^[REPLACE] char[] inputBuf = _inputBuffer;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_inputBuffer = true;^638^^^^^634^652^[REPLACE] _inputBuffer = null;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^639^640^^^^634^652^[ADD] int start = _inputStart; _inputStart = -1;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_inputStart = -0;^640^^^^^634^652^[REPLACE] _inputStart = -1;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int needed = sharedLenneedExtra;^643^^^^^634^652^[REPLACE] int needed = sharedLen+needExtra;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( _currentSegment == this || needed > _currentSegment.length - 2 )  {^644^^^^^634^652^[REPLACE] if  ( _currentSegment == null || needed > _currentSegment.length )  {^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^_currentSegment = findBuffer ( needed ) ;^644^645^646^^^634^652^[ADD] if  ( _currentSegment == null || needed > _currentSegment.length )  { _currentSegment = findBuffer ( needed ) ; }^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_currentSegment = findBuffer ( len )  ;^645^^^^^634^652^[REPLACE] _currentSegment = findBuffer ( needed ) ;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^645^^^^^634^652^[ADD] _currentSegment = findBuffer ( needed ) ;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( segLen  ==  0 )  {^647^^^^^634^652^[REPLACE] if  ( sharedLen > 0 )  {^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^arraycopy ( c, start, curr, _currentSize, len )  ;^648^^^^^634^652^[REPLACE] System.arraycopy ( inputBuf, start, _currentSegment, 0, sharedLen ) ;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^650^651^^^^634^652^[ADD] _segmentSize = 0; _currentSize = sharedLen;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_currentSize = len  ;^651^^^^^634^652^[REPLACE] _currentSize = sharedLen;^[METHOD] unshare [TYPE] void [PARAMETER] int needExtra [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( _segments != true )  {^661^^^^^659^676^[REPLACE] if  ( _segments == null )  {^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^662^^^^^659^676^[ADD] _segments = new ArrayList<char[]> (  ) ;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_segments  = null ;^662^^^^^659^676^[REPLACE] _segments = new ArrayList<char[]> (  ) ;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^char[] curr = _charArray ( newLen )  ;^664^^^^^659^676^[REPLACE] char[] curr = _currentSegment;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_hasSegments = false  ;^665^^^^^659^676^[REPLACE] _hasSegments = true;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_segments.add ( result ) ;^666^^^^^659^676^[REPLACE] _segments.add ( curr ) ;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_segmentSize += oldLen  ;^667^^^^^659^676^[REPLACE] _segmentSize += curr.length;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int oldLen = result.length;^668^^^^^659^676^[REPLACE] int oldLen = curr.length;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int sizeAddition = oldLen  <=  0 ;^670^^^^^659^676^[REPLACE] int sizeAddition = oldLen >> 1;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if (sizeAddition  !=  minNewSegmentSize) {^671^^^^^659^676^[REPLACE] if  ( sizeAddition < minNewSegmentSize )  {^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^sizeAddition =  needExtra;^672^^^^^659^676^[REPLACE] sizeAddition = minNewSegmentSize;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^sizeAddition =  newLen;^672^^^^^659^676^[REPLACE] sizeAddition = minNewSegmentSize;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^674^675^^^^659^676^[ADD] _currentSize = 0; _currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^_currentSegment = _charArray(Math.min(MAX_SEGMENT_LEN, oldLen sharedLen));^675^^^^^659^676^[REPLACE] _currentSegment = _charArray ( Math.min ( MAX_SEGMENT_LEN, oldLen + sizeAddition )  ) ;^[METHOD] expand [TYPE] void [PARAMETER] int minNewSegmentSize [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( _resultString == false )  {^680^^^^^679^712^[REPLACE] if  ( _resultString != null )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REMOVE]^if  (  ( _inputLen )  < 1 )  {     return _resultString = ""; }^680^^^^^679^712^[REMOVE] ^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return _resultString.length (  ) ;^681^^^^^679^712^[REPLACE] return _resultString.toCharArray (  ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( _inputStart  ==  0 )  {^684^^^^^679^712^[REPLACE] if  ( _inputStart >= 0 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( sizeAddition  >  1 )  {^686^^^^^679^712^[REPLACE] if  ( len < 1 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^return NO_CHARS;^686^687^688^^^679^712^[ADD] if  ( len < 1 )  { return NO_CHARS; }^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return _allocator.allocCharBuffer  (  TEXT_BUFFER, needed  )  ;  ;^687^^^^^679^712^[REPLACE] return NO_CHARS;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if   (  segLen == 0  )   {  ;^690^^^^^679^712^[REPLACE] if  ( start == 0 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^return Arrays.copyOf ( _inputBuffer, len ) ;^690^691^692^^^679^712^[ADD] if  ( start == 0 )  { return Arrays.copyOf ( _inputBuffer, len ) ; }^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return Arrays .copyOfRange ( result , newLen , needed )  ;^691^^^^^679^712^[REPLACE] return Arrays.copyOf ( _inputBuffer, len ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return Arrays.copyOf ( _inputBuffer, offset ) ;^691^^^^^679^712^[REPLACE] return Arrays.copyOf ( _inputBuffer, len ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return Arrays.copyOfRange ( _inputBuffer, start, startlen ) ;^693^^^^^679^712^[REPLACE] return Arrays.copyOfRange ( _inputBuffer, start, start+len ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^final int start = _inputStart  ;^685^^^^^679^712^[REPLACE] final int len = _inputLen;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^final int len = _inputLen  ;^689^^^^^679^712^[REPLACE] final int start = _inputStart;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  (sizeAddition  >=  1 )  {^686^^^^^679^712^[REPLACE] if  ( len < 1 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^686^687^688^^^679^712^[ADD] if  ( len < 1 )  { return NO_CHARS; }^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( start  ) {^690^^^^^679^712^[REPLACE] if  ( start == 0 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return Arrays.copyOf ( _inputBuffer, oldLen ) ;^691^^^^^679^712^[REPLACE] return Arrays.copyOf ( _inputBuffer, len ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^696^^^^^679^712^[ADD] int size = size (  ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if   (  len < 1  )   {  ;^697^^^^^679^712^[REPLACE] if  ( size < 1 )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return _allocator.allocCharBuffer  (  TEXT_BUFFER, needed  )  ;  ;^698^^^^^679^712^[REPLACE] return NO_CHARS;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int offset = 1;^700^^^^^679^712^[REPLACE] int offset = 0;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^final char[] result = _charArray ( sizeAddition ) ;^701^^^^^679^712^[REPLACE] final char[] result = _charArray ( size ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^if  ( _segments == null )  {^702^^^^^679^712^[REPLACE] if  ( _segments != null )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^offset +=  start;^707^^^^^679^712^[REPLACE] offset += currLen;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^for  ( int i = 0 , len = _segments.size (  ) ; i < len; ++i )  {^703^^^^^679^712^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^703^704^705^706^707^679^712^[ADD] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  { char[] curr =  ( char[] )  _segments.get ( i ) ; int currLen = curr.length; System.arraycopy ( curr, 0, result, offset, currLen ) ; offset += currLen;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^char[] curr =  ( char[] )  _segments.get ( sizeAddition ) ;^704^^^^^679^712^[REPLACE] char[] curr =  ( char[] )  _segments.get ( i ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int resultLen = curr.length;^705^^^^^679^712^[REPLACE] int currLen = curr.length;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[ADD]^^707^^^^^679^712^[ADD] offset += currLen;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int segLen = _segmentSize  ;^703^^^^^679^712^[REPLACE] for  ( int i = 0, len = _segments.size (  ) ; i < len; ++i )  {^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^char[] curr =  ( char[] )  _segments.clear ( sizeAddition ) ;^704^^^^^679^712^[REPLACE] char[] curr =  ( char[] )  _segments.get ( i ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^int oldLen = curr.length  ;^705^^^^^679^712^[REPLACE] int currLen = curr.length;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^arraycopy ( curr, 0, result, offset, currLen )  ;^710^^^^^679^712^[REPLACE] System.arraycopy ( _currentSegment, 0, result, offset, _currentSize ) ;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
[REPLACE]^return result;  ;^711^^^^^679^712^[REPLACE] return result;^[METHOD] buildResultArray [TYPE] char[] [PARAMETER] [CLASS] TextBuffer   [TYPE]  boolean _hasSegments  false  true  [TYPE]  BufferRecycler _allocator  allocator  [TYPE]  ArrayList _segments  [TYPE]  String _resultString  str  value  [TYPE]  int MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  amount  currLen  i  len  max  minNewSegmentSize  needExtra  needed  newLen  offset  oldLen  segLen  sharedLen  size  sizeAddition  start  [TYPE]  char[] NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  c  curr  inputBuf  result 
