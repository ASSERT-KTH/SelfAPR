[REPLACE]^private final static String NULL_CHAR =  ( String )  0;^5^^^^^^^[REPLACE] private final static char NULL_CHAR =  ( char )  0;^ [CLASS] NumberOutput  
[REPLACE]^private static int MILLION  = null ;^7^^^^^^^[REPLACE] private static int MILLION = 1000000;^ [CLASS] NumberOutput  
[REPLACE]^private static int BILLION = 389184708;^8^^^^^^^[REPLACE] private static int BILLION = 1000000000;^ [CLASS] NumberOutput  
[REPLACE]^private static long TEN_BILLION_L ;^9^^^^^^^[REPLACE] private static long TEN_BILLION_L = 10000000000L;^ [CLASS] NumberOutput  
[REPLACE]^private static long THOUSAND_L ;^10^^^^^^^[REPLACE] private static long THOUSAND_L = 1000L;^ [CLASS] NumberOutput  
[REPLACE]^private static  short  MIN_INT_AS_LONG =  (  short  )  Integer.MIN_VALUE;^12^^^^^^^[REPLACE] private static long MIN_INT_AS_LONG =  ( long )  Integer.MIN_VALUE;^ [CLASS] NumberOutput  
[REPLACE]^private static  short  MAX_INT_AS_LONG =  (  short  )  Integer.MAX_VALUE;^13^^^^^^^[REPLACE] private static long MAX_INT_AS_LONG =  ( long )  Integer.MAX_VALUE;^ [CLASS] NumberOutput  
[REPLACE]^final static String SMALLEST_LONG ;^15^^^^^^^[REPLACE] final static String SMALLEST_LONG = String.valueOf ( Long.MIN_VALUE ) ;^ [CLASS] NumberOutput  
[REPLACE]^final static char[] LEADING_TRIPLETS  = null ;^17^^^^^^^[REPLACE] final static char[] LEADING_TRIPLETS = new char[4000];^ [CLASS] NumberOutput  
[REPLACE]^static char[] FULL_TRIPLETS = new char[4000];^18^^^^^^^[REPLACE] final static char[] FULL_TRIPLETS = new char[4000];^ [CLASS] NumberOutput  
[REPLACE]^final static byte[] FULL_TRIPLETS_B  = null ;^45^^^^^^^[REPLACE] final static byte[] FULL_TRIPLETS_B = new byte[4000];^ [CLASS] NumberOutput  
[REPLACE]^final static String[] sSmallIntStrs  = null ;^52^^^^^52^54^[REPLACE] final static String[] sSmallIntStrs = new String[] {^ [CLASS] NumberOutput  
[REPLACE]^final static String[] sSmallIntStrs2 ;^55^^^^^55^57^[REPLACE] final static String[] sSmallIntStrs2 = new String[] {^ [CLASS] NumberOutput  
[REPLACE]^if  ( value  <=  0 )  {^70^^^^^69^127^[REPLACE] if  ( value < 0 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REMOVE]^if  ( value >  ( MIN_INT_AS_LONG )  )  {     return outputInt (  (  ( int )   ( value )  ) , buffer, offset ) ; }^70^^^^^69^127^[REMOVE] ^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  !=  Integer.MIN_VALUE )  {^71^^^^^69^127^[REPLACE] if  ( value == Integer.MIN_VALUE )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return Long.toString  (  value  )  ;  ;^75^^^^^69^127^[REPLACE] return outputLong (  ( long )  value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^77^^^^^69^127^[ADD] buffer[offset++] = '-';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^78^^^^^69^127^[REPLACE] value = -value;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputLong (  ( long )  value, LEADING_TRIPLETS, offset ) ;^75^^^^^69^127^[REPLACE] return outputLong (  ( long )  value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  &&  Integer.MIN_VALUE )  {^71^^^^^69^127^[REPLACE] if  ( value == Integer.MIN_VALUE )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^71^72^^^75^69^127^[ADD] if  ( value == Integer.MIN_VALUE )  {  return outputLong (  ( long )  value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^77^^^^^69^127^[REPLACE] buffer[offset++] = '-';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputLong (  ( long )  value, buffer, value ) ;^75^^^^^69^127^[REPLACE] return outputLong (  ( long )  value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  !=  MILLION )  {^81^^^^^69^127^[REPLACE] if  ( value < MILLION )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (offset  >=  3 )  {^82^^^^^69^127^[REPLACE] if  ( value < 1000 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -=  ( offset  1000 ) ;^90^^^^^82^93^[REPLACE] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^91^^^^^82^93^[REPLACE] offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputLeadingTriplet ( thousands, buffer, offset )  ;^92^^^^^82^93^[REPLACE] offset = outputFullTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^value -=  ( thousands * 1000 ) ;^89^90^^^^82^93^[ADD] int thousands = value / 1000; value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  >= thousands )  {^83^^^^^69^127^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^86^^^^^83^87^[REPLACE] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^84^^^^^69^127^[ADD] buffer[offset++] =  ( char )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[offset] =  ( char )   ( '0'  value ) ;^84^^^^^69^127^[REPLACE] buffer[offset++] =  ( char )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^86^^^^^69^127^[REPLACE] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  ==  10 )  {^83^^^^^69^127^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^90^91^^^^69^127^[ADD] value -=  ( thousands * 1000 ) ; offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^91^^^^^69^127^[REPLACE] offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputLeadingTriplet ( thousands, buffer, offset )  ;^92^^^^^69^127^[REPLACE] offset = outputFullTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^94^^^^^69^127^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands = value  1000;^89^^^^^69^127^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (thousands  ==  1000 )  {^82^^^^^69^127^[REPLACE] if  ( value < 1000 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -=  (value  1000 ) ;^90^^^^^82^93^[REPLACE] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^92^^^^^82^93^[ADD] offset = outputFullTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^89^^^^^82^93^[ADD] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value >= 0  )   {  ;^83^^^^^69^127^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] =  (  ( byte )   ( '0' + value )  )  ;^84^^^^^69^127^[REPLACE] buffer[offset++] =  ( char )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  <=  5 )  {^83^^^^^69^127^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^83^84^85^86^87^69^127^[ADD] if  ( value < 10 )  { buffer[offset++] =  ( char )   ( '0' + value ) ; } else { offset = outputLeadingTriplet ( value, buffer, offset ) ; }^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -=  ( value  1000 ) ;^90^^^^^69^127^[REPLACE] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return offset;  ;^94^^^^^69^127^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands = value thousands;^89^^^^^69^127^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^boolean hasBillions =  ( value  ==  BILLION ) ;^102^^^^^69^127^[REPLACE] boolean hasBillions =  ( value >= BILLION ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value < sSmallIntStrs.length  )   {  ;^103^^^^^69^127^[REPLACE] if  ( hasBillions )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^value -= BILLION;value -= BILLION;buffer[offset++] = '2';^103^104^105^106^107^69^127^[ADD] if  ( hasBillions )  { value -= BILLION; if  ( value >= BILLION )  { value -= BILLION; buffer[offset++] = '2';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  != thousands )  {^105^^^^^69^127^[REPLACE] if  ( value >= BILLION )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^109^^^^^105^110^[ADD] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - =  value -;^106^^^^^69^127^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = c  ;^107^^^^^69^127^[REPLACE] buffer[offset++] = '2';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - = null ;^104^^^^^69^127^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - = null ;^106^^^^^69^127^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^109^^^^^69^127^[ADD] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  ==  BILLION )  {^105^^^^^69^127^[REPLACE] if  ( value >= BILLION )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^value -= BILLION;buffer[offset++] = '2';buffer[offset++] = '1';^105^106^107^108^109^69^127^[ADD] if  ( value >= BILLION )  { value -= BILLION; buffer[offset++] = '2'; } else { buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^109^^^^^105^110^[REPLACE] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - =  value -;^104^^^^^69^127^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -;^106^^^^^69^127^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^109^^^^^69^127^[REPLACE] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^112^113^^^^69^127^[ADD] int newValue = value / 1000; int ones =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int ones =  ( thousands   ( newValue * 1000 )  ) ;^113^^^^^69^127^[REPLACE] int ones =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ivalue = newValue  ;^114^^^^^69^127^[REPLACE] value = newValue;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^newValue /= 2;^115^^^^^69^127^[REPLACE] newValue /= 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands =  (thousands   ( newValue * 815 )  ) ;^116^^^^^69^127^[REPLACE] int thousands =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value < sSmallIntStrs.length  )   {  ;^119^^^^^69^127^[REPLACE] if  ( hasBillions )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^offset = outputFullTriplet ( newValue, buffer, offset ) ;offset = outputLeadingTriplet ( newValue, buffer, offset ) ;^119^120^121^122^123^69^127^[ADD] if  ( hasBillions )  { offset = outputFullTriplet ( newValue, buffer, offset ) ; } else { offset = outputLeadingTriplet ( newValue, buffer, offset ) ; }^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^122^^^^^119^123^[REPLACE] offset = outputLeadingTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^120^^^^^69^127^[REPLACE] offset = outputFullTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^120^^^^^69^127^[ADD] offset = outputFullTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^122^^^^^69^127^[REPLACE] offset = outputLeadingTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^124^^^^^69^127^[ADD] offset = outputFullTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^125^^^^^69^127^[REPLACE] offset = outputFullTriplet ( ones, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return offset;  ;^126^^^^^69^127^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  >  0 * 1 )  {^131^^^^^130^178^[REPLACE] if  ( value < 0 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REMOVE]^if  ( value >  ( MIN_INT_AS_LONG )  )  {     return outputInt (  (  ( int )   ( value )  ) , buffer, offset ) ; }^131^^^^^130^178^[REMOVE] ^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  !=  Integer.MIN_VALUE )  {^132^^^^^130^178^[REPLACE] if  ( value == Integer.MIN_VALUE )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputLong (  ( long )  value, FULL_TRIPLETS_B, offset ) ;^133^^^^^130^178^[REPLACE] return outputLong (  ( long )  value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^135^^^^^130^178^[REPLACE] buffer[offset++] = '-';^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^136^^^^^130^178^[ADD] value = -value;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  &&  Integer.MIN_VALUE )  {^132^^^^^130^178^[REPLACE] if  ( value == Integer.MIN_VALUE )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REMOVE]^if  ( value < 0 )  {     if  ( value ==  ( MIN_VALUE )  )  {         return outputLong (  (  ( long )   ( value )  ) , buffer, offset ) ;     }     buffer[ ( offset++ ) ] = '-';     value = -value; }^132^^^^^130^178^[REMOVE] ^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^136^^^^^130^178^[REPLACE] value = -value;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  <=  MILLION )  {^139^^^^^130^178^[REPLACE] if  ( value < MILLION )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^139^140^141^142^^130^178^[ADD] if  ( value < MILLION )  { if  ( value < 1000 )  { if  ( value < 10 )  { buffer[offset++] =  ( byte )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  <=  1000 )  {^140^^^^^130^178^[REPLACE] if  ( value < 1000 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -=  ( thousands  1000 ) ;^148^^^^^140^151^[REPLACE] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^149^^^^^140^151^[ADD] offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputLeadingTriplet ( thousands, buffer, offset )  ;^150^^^^^140^151^[REPLACE] offset = outputFullTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands =offset  1000;^147^^^^^140^151^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (thousands  ==  10 * 0 )  {^141^^^^^130^178^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^buffer[offset++] =  ( byte )   ( '0' + value ) ;offset = outputLeadingTriplet ( value, buffer, offset ) ;^141^142^143^144^145^130^178^[ADD] if  ( value < 10 )  { buffer[offset++] =  ( byte )   ( '0' + value ) ; } else { offset = outputLeadingTriplet ( value, buffer, offset ) ; }^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^144^^^^^141^145^[REPLACE] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] =  (  ( char )   ( '0' + value )  )  ;^142^^^^^130^178^[REPLACE] buffer[offset++] =  ( byte )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[offset] =  ( byte )   ( '0'  value ) ;^142^^^^^130^178^[REPLACE] buffer[offset++] =  ( byte )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^144^^^^^130^178^[REPLACE] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( thousands  ==  2 )  {^141^^^^^130^178^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^142^^^^^130^178^[ADD] buffer[offset++] =  ( byte )   ( '0' + value ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^148^149^^^^130^178^[ADD] value -=  ( thousands * 1000 ) ; offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^149^^^^^130^178^[REPLACE] offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputLeadingTriplet ( thousands, buffer, offset )  ;^150^^^^^130^178^[REPLACE] offset = outputFullTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^152^^^^^130^178^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands =thousands  3;^147^^^^^130^178^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( offset  ==  1000 )  {^140^^^^^130^178^[REPLACE] if  ( value < 1000 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^140^141^142^143^144^130^178^[ADD] if  ( value < 1000 )  { if  ( value < 10 )  { buffer[offset++] =  ( byte )   ( '0' + value ) ; } else { offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^148^^^^^140^151^[ADD] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^149^^^^^140^151^[REPLACE] offset = outputLeadingTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands = thousands  1000;^147^^^^^140^151^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  >  10 )  {^141^^^^^130^178^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REMOVE]^if  ( value < 0 )  {     if  ( value ==  ( MIN_VALUE )  )  {         return outputLong (  (  ( long )   ( value )  ) , buffer, offset ) ;     }     buffer[ ( offset++ ) ] = '-';     value = -value; }^141^^^^^130^178^[REMOVE] ^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^144^^^^^130^178^[ADD] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value >= 0  )   {  ;^141^^^^^130^178^[REPLACE] if  ( value < 10 )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^144^^^^^141^145^[ADD] offset = outputLeadingTriplet ( value, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value -=  ( thousands value ) ;^148^^^^^130^178^[REPLACE] value -=  ( thousands * 1000 ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return offset;  ;^152^^^^^130^178^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int thousands =thousands  1000;^147^^^^^130^178^[REPLACE] int thousands = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue = value /  ( THOUSAND_L )  ;^154^^^^^130^178^[REPLACE] boolean hasBillions =  ( value >= BILLION ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value < sSmallIntStrs.length  )   {  ;^155^^^^^130^178^[REPLACE] if  ( hasBillions )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value < MILLION  )   {  ;^157^^^^^130^178^[REPLACE] if  ( value >= BILLION )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^161^^^^^157^162^[REPLACE] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - =  value -;^158^^^^^130^178^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^159^^^^^130^178^[ADD] buffer[offset++] = '2';^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value - =  value -;^156^^^^^130^178^[REPLACE] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = c  ;^159^^^^^130^178^[REPLACE] buffer[offset++] = '2';^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^161^^^^^130^178^[REPLACE] buffer[offset++] = '1';^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REMOVE]^if  ( value < 0 )  {     if  ( value ==  ( MIN_VALUE )  )  {         return outputLong (  (  ( long )   ( value )  ) , buffer, offset ) ;     }     buffer[ ( offset++ ) ] = '-';     value = -value; }^157^^^^^130^178^[REMOVE] ^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^158^^^^^130^178^[ADD] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^156^^^^^130^178^[ADD] value -= BILLION;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int newValue = value  1000;^164^^^^^130^178^[REPLACE] int newValue = value / 1000;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int ones =  ( thousands   ( newValue * 1 )  ) ;^165^^^^^130^178^[REPLACE] int ones =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ivalue = newValue  ;^166^^^^^130^178^[REPLACE] value = newValue;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^167^168^^^^130^178^[ADD] newValue /= 1000; int thousands =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int triplet = ivalue -  ( newValue * 1000 )  ;^168^^^^^130^178^[REPLACE] int thousands =  ( value -  ( newValue * 1000 )  ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( false )  {^170^^^^^130^178^[REPLACE] if  ( hasBillions )  {^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^173^^^^^170^174^[REPLACE] offset = outputLeadingTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^171^^^^^130^178^[ADD] offset = outputFullTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^171^^^^^130^178^[REPLACE] offset = outputFullTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^173^^^^^130^178^[ADD] offset = outputLeadingTriplet ( newValue, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset = outputFullTriplet ( value, buffer, offset )  ;^175^^^^^130^178^[REPLACE] offset = outputFullTriplet ( thousands, buffer, offset ) ;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^return offset;^176^177^^^^130^178^[ADD] offset = outputFullTriplet ( ones, buffer, offset ) ; return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^177^^^^^130^178^[REPLACE] return offset;^[METHOD] outputInt [TYPE] int [PARAMETER] int value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  hasBillions  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  newValue  offset  ones  thousands  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value < MILLION  )   {  ;^186^^^^^184^235^[REPLACE] if  ( value < 0L )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  ==  MAX_INT_AS_LONG )  {^202^^^^^186^205^[REPLACE] if  ( value <= MAX_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, LEADING_TRIPLETS, offset ) ;^203^^^^^186^205^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value <= MAX_INT_AS_LONG  )   {  ;^190^^^^^184^235^[REPLACE] if  ( value > MIN_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, buffer, value ) ;^191^^^^^184^235^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  &&  Long.MIN_VALUE )  {^193^^^^^184^235^[REPLACE] if  ( value == Long.MIN_VALUE )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return  ( value  len ) ;^197^^^^^184^235^[REPLACE] return  ( offset + len ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^195^196^^^^184^235^[ADD] int len = SMALLEST_LONG.length (  ) ; SMALLEST_LONG.getChars ( 0, len, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] = '2'  ;^199^^^^^184^235^[REPLACE] buffer[offset++] = '-';^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^200^^^^^184^235^[REPLACE] value = -value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, LEADING_TRIPLETS, offset ) ;^191^^^^^184^235^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return   (  offset + len  )  ;  ;^197^^^^^184^235^[REPLACE] return  ( offset + len ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^195^^^^^184^235^[ADD] int len = SMALLEST_LONG.length (  ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( newValue  !=  value )  {^190^^^^^184^235^[REPLACE] if  ( value > MIN_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (newValue  !=  Long.MIN_VALUE )  {^193^^^^^184^235^[REPLACE] if  ( value == Long.MIN_VALUE )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return  (value  len ) ;^197^^^^^184^235^[REPLACE] return  ( offset + len ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long comp = TEN_BILLION_L  ;^195^^^^^184^235^[REPLACE] int len = SMALLEST_LONG.length (  ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value > MIN_INT_AS_LONG  )   {  ;^202^^^^^184^235^[REPLACE] if  ( value <= MAX_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, LEADING_TRIPLETS, offset ) ;^203^^^^^184^235^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^200^^^^^184^235^[ADD] value = -value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return  ( offset  len ) ;^197^^^^^184^235^[REPLACE] return  ( offset + len ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, buffer, value ) ;^203^^^^^184^235^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int origOffset = value;^210^^^^^184^235^[REPLACE] int origOffset = offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset +=  calcLongStrLength ( THOUSAND_L ) ;^211^^^^^184^235^[REPLACE] offset += calcLongStrLength ( value ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue = value /  ( THOUSAND_L )  ;^212^^^^^184^235^[REPLACE] int ptr = offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ptr -= 2;^216^^^^^184^235^[REPLACE] ptr -= 3;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ivalue = newValue  ;^220^^^^^184^235^[REPLACE] value = newValue;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue =newValue  THOUSAND_L;^217^^^^^184^235^[REPLACE] long newValue = value / THOUSAND_L;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^218^^^^^184^235^[ADD] int triplet =  ( int )   ( value - newValue * THOUSAND_L ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue = value /  ( THOUSAND_L )  ;^223^^^^^184^235^[REPLACE] int ivalue =  ( int )  value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ptr -= 5;^225^^^^^184^235^[REPLACE] ptr -= 3;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^229^^^^^184^235^[REPLACE] ivalue = newValue;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int newValue =value  1000;^226^^^^^184^235^[REPLACE] int newValue = ivalue / 1000;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int triplet = ivalue   ( newValue * 1000 ) ;^227^^^^^184^235^[REPLACE] int triplet = ivalue -  ( newValue * 1000 ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^getChars ( 0, len, buffer, offset )  ;^232^^^^^184^235^[REPLACE] outputLeadingTriplet ( ivalue, buffer, origOffset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^234^^^^^184^235^[REPLACE] return offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value char[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (newValue  ==  0L )  {^239^^^^^238^281^[REPLACE] if  ( value < 0L )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (newValue  >=  MAX_INT_AS_LONG )  {^254^^^^^239^257^[REPLACE] if  ( value <= MAX_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^254^255^256^^^239^257^[ADD] if  ( value <= MAX_INT_AS_LONG )  { return outputInt (  ( int )  value, buffer, offset ) ; }^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, FULL_TRIPLETS_B, offset ) ;^255^^^^^239^257^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, buffer, value ) ;^255^^^^^239^257^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  ==  MIN_INT_AS_LONG )  {^240^^^^^238^281^[REPLACE] if  ( value > MIN_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return Long.toString  (  value  )  ;  ;^241^^^^^238^281^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if   (  value == Integer.MIN_VALUE  )   {  ;^243^^^^^238^281^[REPLACE] if  ( value == Long.MIN_VALUE )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^buffer[ ( offset++ ) ] =  (  ( byte )   ( LEADING_TRIPLETS[digitOffset] )  )  ;^247^^^^^238^281^[REPLACE] buffer[offset++] =  ( byte )  SMALLEST_LONG.charAt ( i ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^249^^^^^238^281^[REPLACE] return offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long comp = TEN_BILLION_L  ;^245^^^^^238^281^[REPLACE] int len = SMALLEST_LONG.length (  ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^for  ( int i = 0L; i < len; ++i )  {^246^^^^^238^281^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^251^252^^^^238^281^[ADD] buffer[offset++] = '-'; value = -value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^252^^^^^238^281^[REPLACE] value = -value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^for  ( int i = 0 - 1; i < len; ++i )  {^246^^^^^238^281^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, buffer, value ) ;^241^^^^^238^281^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  (newValue  ||  Long.MIN_VALUE )  {^243^^^^^238^281^[REPLACE] if  ( value == Long.MIN_VALUE )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^for  ( int i = 0 - 4; i < len; ++i )  {^246^^^^^238^281^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^if  ( value  >  MAX_INT_AS_LONG )  {^254^^^^^238^281^[REPLACE] if  ( value <= MAX_INT_AS_LONG )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^254^255^256^^^238^281^[ADD] if  ( value <= MAX_INT_AS_LONG )  { return outputInt (  ( int )  value, buffer, offset ) ; }^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return outputInt (  ( int )  value, buffer, value ) ;^255^^^^^238^281^[REPLACE] return outputInt (  ( int )  value, buffer, offset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^251^^^^^238^281^[ADD] buffer[offset++] = '-';^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^for  ( int i = 1; i < len; ++i )  {^246^^^^^238^281^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^258^259^^^^238^281^[ADD] int origOffset = offset; offset += calcLongStrLength ( value ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^offset +=  calcLongStrLength ( newValue ) ;^259^^^^^238^281^[REPLACE] offset += calcLongStrLength ( value ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int ptr = value;^260^^^^^238^281^[REPLACE] int ptr = offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^264^^^^^238^281^[ADD] ptr -= 3;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ivalue = newValue  ;^268^^^^^238^281^[REPLACE] value = newValue;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue = value  THOUSAND_L;^265^^^^^238^281^[REPLACE] long newValue = value / THOUSAND_L;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[ADD]^^266^267^^^^238^281^[ADD] int triplet =  ( int )   ( value - newValue * THOUSAND_L ) ; outputFullTriplet ( triplet, buffer, ptr ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^long newValue = value /  ( THOUSAND_L )  ;^271^^^^^238^281^[REPLACE] int ivalue =  ( int )  value;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^ptr -= 4;^273^^^^^238^281^[REPLACE] ptr -= 3;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^value = newValue  ;^277^^^^^238^281^[REPLACE] ivalue = newValue;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int newValue = value  1000;^274^^^^^238^281^[REPLACE] int newValue = ivalue / 1000;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^int triplet = ivalue   ( newValue * 1000 ) ;^275^^^^^238^281^[REPLACE] int triplet = ivalue -  ( newValue * 1000 ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^getChars ( 0, len, buffer, offset )  ;^279^^^^^238^281^[REPLACE] outputLeadingTriplet ( ivalue, buffer, origOffset ) ;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
[REPLACE]^return value;^280^^^^^238^281^[REPLACE] return offset;^[METHOD] outputLong [TYPE] int [PARAMETER] long value byte[] buffer int offset [CLASS] NumberOutput   [TYPE]  byte[] FULL_TRIPLETS_B  buffer  [TYPE]  boolean false  true  [TYPE]  char NULL_CHAR  [TYPE]  String SMALLEST_LONG  [TYPE]  String[] sSmallIntStrs  sSmallIntStrs2  [TYPE]  int BILLION  MILLION  i  ivalue  len  newValue  offset  ones  origOffset  ptr  thousands  triplet  value  [TYPE]  long MAX_INT_AS_LONG  MIN_INT_AS_LONG  TEN_BILLION_L  THOUSAND_L  newValue  value  [TYPE]  char[] FULL_TRIPLETS  LEADING_TRIPLETS  buffer 
