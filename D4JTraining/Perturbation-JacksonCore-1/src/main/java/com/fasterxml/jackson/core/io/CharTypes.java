[REPLACE]^private final static char[] HEX_CHARS  = null ;^7^^^^^^^[REPLACE] private final static char[] HEX_CHARS = "0123456789ABCDEF".toCharArray (  ) ;^ [CLASS] CharTypes  
[REPLACE]^private  static byte[] HEX_BYTES;^8^^^^^^^[REPLACE] private final static byte[] HEX_BYTES;^ [CLASS] CharTypes  
[REPLACE]^static int[] sInputCodes;^22^^^^^^^[REPLACE] final static int[] sInputCodes;^ [CLASS] CharTypes  
[REPLACE]^static int[] sInputCodesJsNames;^73^^^^^^^[REPLACE] final static int[] sInputCodesJsNames;^ [CLASS] CharTypes  
[REPLACE]^final static int[] sInputCodesComment  = null ;^113^^^^^^^[REPLACE] final static int[] sInputCodesComment = new int[256];^ [CLASS] CharTypes  
[REPLACE]^static int[] sOutputEscapes128;^130^^^^^^^[REPLACE] final static int[] sOutputEscapes128;^ [CLASS] CharTypes  
[REPLACE]^final static int[] sHexValues ;^157^^^^^^^[REPLACE] final static int[] sHexValues = new int[128];^ [CLASS] CharTypes  
[ADD]^^193^^^^^192^222^[ADD] final int[] escCodes = sOutputEscapes128;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int escLen = sInputCodesUtf8JsNames.length;^194^^^^^192^222^[REPLACE] int escLen = escCodes.length;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c >= value && escCodes[c] == 0 )  {^197^^^^^192^222^[REPLACE] if  ( c >= escLen || escCodes[c] == 0 )  {^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[ADD]^sb.append ( c ) ;continue;^197^198^199^200^^192^222^[ADD] if  ( c >= escLen || escCodes[c] == 0 )  { sb.append ( c ) ; continue; }^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( 'u' )  ;^198^^^^^192^222^[REPLACE] sb.append ( c ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( escCode  !=  0 )  {^203^^^^^192^222^[REPLACE] if  ( escCode < 0 )  {^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( 'u' )  ;^219^^^^^203^220^[REPLACE] sb.append (  ( char )  escCode ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int i = 0  ;^215^^^^^192^222^[REPLACE] int value = c;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 , len = content.length (  ) ; i < len; ++i )  {^195^^^^^192^222^[REPLACE] for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0, len = content.toCharArray (  ) ; i < len; ++i )  {^195^^^^^192^222^[REPLACE] for  ( int i = 0, len = content.length (  ) ; i < len; ++i )  {^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^char c = content .toCharArray (  )  ;^196^^^^^192^222^[REPLACE] char c = content.charAt ( i ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int escCode = sOutputEscapes128[c];^202^^^^^192^222^[REPLACE] int escCode = escCodes[c];^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] CharTypes   [TYPE]  byte[] HEX_BYTES  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  int[] escCodes  sHexValues  sInputCodes  sInputCodesComment  sInputCodesJsNames  sInputCodesUtf8  sInputCodesUtf8JsNames  sOutputEscapes128  [TYPE]  String content  [TYPE]  int escCode  escLen  i  len  value  [TYPE]  char[] HEX_CHARS 
