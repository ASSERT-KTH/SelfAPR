[REPLACE]^protected  JsonParser[] _parsers;^22^^^^^^^[REPLACE] protected final JsonParser[] _parsers;^ [CLASS] JsonParserSequence  
[REPLACE]^protected  short  _nextParser;^27^^^^^^^[REPLACE] protected int _nextParser;^ [CLASS] JsonParserSequence  
[REPLACE]^if  ( ! ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^53^^^^^52^69^[REPLACE] if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REMOVE]^if  ( second instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( second )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( second ) ; }^53^^^^^52^69^[REMOVE] ^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^return  new JsonParserSequence ( p.toArray ( new size (  ) ] )  )  ;^55^^^^^52^69^[REPLACE] return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^int i =  ( _nextParser )  - 1  ;^57^^^^^52^69^[REPLACE] ArrayList<JsonParser> p = new ArrayList<JsonParser> (  ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^if   (  p instanceof JsonParserSequence  )   {  ;^58^^^^^52^69^[REPLACE] if  ( first instanceof JsonParserSequence )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REMOVE]^if  ( second instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( second )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( second ) ; }^58^^^^^52^69^[REMOVE] ^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^p.toArray ( first ) ;^61^^^^^58^62^[REPLACE] p.add ( first ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^(  ( JsonParserSequence )   ( p )  ) .addFlattenedActiveParsers ( result )  ;^59^^^^^52^69^[REPLACE] (  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^^59^^^^^52^69^[ADD] (  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^if  ( ! second instanceof JsonParserSequence )  {^63^^^^^52^69^[REPLACE] if  ( second instanceof JsonParserSequence )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;p.add ( second ) ;^63^64^65^66^67^52^69^[ADD] if  ( second instanceof JsonParserSequence )  { (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( second ) ; }^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^p.toArray ( second ) ;^66^^^^^63^67^[REPLACE] p.add ( second ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^(  ( JsonParserSequence )  second ) .switchToNext ( p ) ;^64^^^^^52^69^[REPLACE] (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^return  new JsonParserSequence ( new JsonParser[]{ first , second } )  ] )  ) ;^68^^^^^52^69^[REPLACE] return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
