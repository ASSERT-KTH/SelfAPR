[REPLACE]^private JsonParser delegate;^22^^^^^^^[REPLACE] protected JsonParser delegate;^ [CLASS] JsonParserDelegate  
[REPLACE]^delegate =  null;^25^^^^^24^26^[REPLACE] delegate = d;^[METHOD] <init> [TYPE] JsonParser) [PARAMETER] JsonParser d [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[ADD]^^25^^^^^24^26^[ADD] delegate = d;^[METHOD] <init> [TYPE] JsonParser) [PARAMETER] JsonParser d [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.enable ( c ) ;^36^^^^^35^37^[REPLACE] delegate.setCodec ( c ) ;^[METHOD] setCodec [TYPE] void [PARAMETER] ObjectCodec c [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  ObjectCodec c  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getSchema (  ) ;^41^^^^^40^42^[REPLACE] return delegate.getCodec (  ) ;^[METHOD] getCodec [TYPE] ObjectCodec [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.isEnabled ( f ) ;^46^^^^^45^48^[REPLACE] delegate.enable ( f ) ;^[METHOD] enable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REMOVE]^return delegate.nextToken (  ) ;^46^^^^^45^48^[REMOVE] ^[METHOD] enable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return null;^47^^^^^45^48^[REPLACE] return this;^[METHOD] enable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.enable ( f ) ;^52^^^^^51^54^[REPLACE] delegate.disable ( f ) ;^[METHOD] disable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[ADD]^return this;^52^53^^^^51^54^[ADD] delegate.disable ( f ) ; return this;^[METHOD] disable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return null;^53^^^^^51^54^[REPLACE] return this;^[METHOD] disable [TYPE] JsonParser [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.enable ( f ) ;^58^^^^^57^59^[REPLACE] return delegate.isEnabled ( f ) ;^[METHOD] isEnabled [TYPE] boolean [PARAMETER] Feature f [CLASS] JsonParserDelegate   [TYPE]  Feature f  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .setFeatureMask ( this )  ;^63^^^^^62^64^[REPLACE] return delegate.getFeatureMask (  ) ;^[METHOD] getFeatureMask [TYPE] int [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.getValueAsInt ( mask ) ;^68^^^^^67^70^[REPLACE] delegate.setFeatureMask ( mask ) ;^[METHOD] setFeatureMask [TYPE] JsonParser [PARAMETER] int mask [CLASS] JsonParserDelegate   [TYPE]  int mask  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REMOVE]^return delegate.nextToken (  ) ;^68^^^^^67^70^[REMOVE] ^[METHOD] setFeatureMask [TYPE] JsonParser [PARAMETER] int mask [CLASS] JsonParserDelegate   [TYPE]  int mask  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return null;^69^^^^^67^70^[REPLACE] return this;^[METHOD] setFeatureMask [TYPE] JsonParser [PARAMETER] int mask [CLASS] JsonParserDelegate   [TYPE]  int mask  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getCodec (  ) ;^74^^^^^73^75^[REPLACE] return delegate.getSchema (  ) ;^[METHOD] getSchema [TYPE] FormatSchema [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.canUseSchema ( schema ) ;^79^^^^^78^80^[REPLACE] delegate.setSchema ( schema ) ;^[METHOD] setSchema [TYPE] void [PARAMETER] FormatSchema schema [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  FormatSchema schema  [TYPE]  boolean false  true 
[REMOVE]^return delegate.nextToken (  ) ;^79^^^^^78^80^[REMOVE] ^[METHOD] setSchema [TYPE] void [PARAMETER] FormatSchema schema [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  FormatSchema schema  [TYPE]  boolean false  true 
[REPLACE]^return delegate.setSchema ( schema ) ;^84^^^^^83^85^[REPLACE] return delegate.canUseSchema ( schema ) ;^[METHOD] canUseSchema [TYPE] boolean [PARAMETER] FormatSchema schema [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  FormatSchema schema  [TYPE]  boolean false  true 
[REPLACE]^return delegate.nextToken (  ) ;^89^^^^^88^90^[REPLACE] return delegate.version (  ) ;^[METHOD] version [TYPE] Version [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getIntValue (  ) ;^94^^^^^93^95^[REPLACE] return delegate.getInputSource (  ) ;^[METHOD] getInputSource [TYPE] Object [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getCodec (  ) ;^105^^^^^104^106^[REPLACE] return delegate.requiresCustomCodec (  ) ;^[METHOD] requiresCustomCodec [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.isClosed (  ) ;^116^^^^^115^117^[REPLACE] delegate.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.close (  ) ;^121^^^^^120^122^[REPLACE] return delegate.isClosed (  ) ;^[METHOD] isClosed [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.hasCurrentToken (  ) ;^132^^^^^131^133^[REPLACE] return delegate.getCurrentToken (  ) ;^[METHOD] getCurrentToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getCurrentToken (  )  ;^137^^^^^136^138^[REPLACE] return delegate.hasCurrentToken (  ) ;^[METHOD] hasCurrentToken [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getCurrentToken (  ) ;^142^^^^^141^143^[REPLACE] return delegate.getCurrentName (  ) ;^[METHOD] getCurrentName [TYPE] String [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getTokenLocation (  ) ;^147^^^^^146^148^[REPLACE] return delegate.getCurrentLocation (  ) ;^[METHOD] getCurrentLocation [TYPE] JsonLocation [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getCurrentToken (  )  ;^152^^^^^151^153^[REPLACE] return delegate.getParsingContext (  ) ;^[METHOD] getParsingContext [TYPE] JsonStreamContext [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.getCurrentToken (  ) ;^163^^^^^162^164^[REPLACE] delegate.clearCurrentToken (  ) ;^[METHOD] clearCurrentToken [TYPE] void [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getCurrentToken (  ) ;^168^^^^^167^169^[REPLACE] return delegate.getLastClearedToken (  ) ;^[METHOD] getLastClearedToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate.getValueAsString ( name ) ;^173^^^^^172^174^[REPLACE] delegate.overrideCurrentName ( name ) ;^[METHOD] overrideCurrentName [TYPE] void [PARAMETER] String name [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getTypeId (  )  ;^184^^^^^183^185^[REPLACE] return delegate.getText (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getTextCharacters (  )  ;^189^^^^^188^190^[REPLACE] return delegate.hasTextCharacters (  ) ;^[METHOD] hasTextCharacters [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.hasTextCharacters (  ) ;^194^^^^^193^195^[REPLACE] return delegate.getTextCharacters (  ) ;^[METHOD] getTextCharacters [TYPE] char[] [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getText (  )  ;^199^^^^^198^200^[REPLACE] return delegate.getTextLength (  ) ;^[METHOD] getTextLength [TYPE] int [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getText (  ) ;^204^^^^^203^205^[REPLACE] return delegate.getTextOffset (  ) ;^[METHOD] getTextOffset [TYPE] int [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getByteValue (  ) ;^215^^^^^214^216^[REPLACE] return delegate.getBigIntegerValue (  ) ;^[METHOD] getBigIntegerValue [TYPE] BigInteger [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getByteValue (  ) ;^220^^^^^219^221^[REPLACE] return delegate.getBooleanValue (  ) ;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getIntValue (  ) ;^225^^^^^224^226^[REPLACE] return delegate.getByteValue (  ) ;^[METHOD] getByteValue [TYPE] byte [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getFloatValue (  )  ;^230^^^^^229^231^[REPLACE] return delegate.getShortValue (  ) ;^[METHOD] getShortValue [TYPE] short [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getBooleanValue (  ) ;^235^^^^^234^236^[REPLACE] return delegate.getDecimalValue (  ) ;^[METHOD] getDecimalValue [TYPE] BigDecimal [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getBooleanValue (  ) ;^240^^^^^239^241^[REPLACE] return delegate.getDoubleValue (  ) ;^[METHOD] getDoubleValue [TYPE] double [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getShortValue (  )  ;^245^^^^^244^246^[REPLACE] return delegate.getFloatValue (  ) ;^[METHOD] getFloatValue [TYPE] float [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getByteValue (  ) ;^250^^^^^249^251^[REPLACE] return delegate.getIntValue (  ) ;^[METHOD] getIntValue [TYPE] int [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getFloatValue (  ) ;^255^^^^^254^256^[REPLACE] return delegate.getLongValue (  ) ;^[METHOD] getLongValue [TYPE] long [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getCurrentName (  ) ;^260^^^^^259^261^[REPLACE] return delegate.getNumberType (  ) ;^[METHOD] getNumberType [TYPE] NumberType [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getNumberType (  ) ;^265^^^^^264^266^[REPLACE] return delegate.getNumberValue (  ) ;^[METHOD] getNumberValue [TYPE] Number [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsLong (  ) ;^276^^^^^275^277^[REPLACE] return delegate.getValueAsInt (  ) ;^[METHOD] getValueAsInt [TYPE] int [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsLong ( defaultValue ) ;^281^^^^^280^282^[REPLACE] return delegate.getValueAsInt ( defaultValue ) ;^[METHOD] getValueAsInt [TYPE] int [PARAMETER] int defaultValue [CLASS] JsonParserDelegate   [TYPE]  int defaultValue  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsDouble (  ) ;^286^^^^^285^287^[REPLACE] return delegate.getValueAsLong (  ) ;^[METHOD] getValueAsLong [TYPE] long [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsInt ( defaultValue ) ;^291^^^^^290^292^[REPLACE] return delegate.getValueAsLong ( defaultValue ) ;^[METHOD] getValueAsLong [TYPE] long [PARAMETER] long defaultValue [CLASS] JsonParserDelegate   [TYPE]  long defaultValue  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getValueAsDouble (  )  ;^296^^^^^295^297^[REPLACE] return delegate.getValueAsDouble (  ) ;^[METHOD] getValueAsDouble [TYPE] double [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getValueAsBoolean (  )  ;^301^^^^^300^302^[REPLACE] return delegate.getValueAsDouble ( defaultValue ) ;^[METHOD] getValueAsDouble [TYPE] double [PARAMETER] double defaultValue [CLASS] JsonParserDelegate   [TYPE]  double defaultValue  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsDouble (  ) ;^306^^^^^305^307^[REPLACE] return delegate.getValueAsBoolean (  ) ;^[METHOD] getValueAsBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsDouble ( defaultValue ) ;^311^^^^^310^312^[REPLACE] return delegate.getValueAsBoolean ( defaultValue ) ;^[METHOD] getValueAsBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean defaultValue  false  true 
[REPLACE]^return delegate .getValueAsString (  )  ;^316^^^^^315^317^[REPLACE] return delegate.getValueAsString (  ) ;^[METHOD] getValueAsString [TYPE] String [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getValueAsDouble ( defaultValue ) ;^321^^^^^320^322^[REPLACE] return delegate.getValueAsString ( defaultValue ) ;^[METHOD] getValueAsString [TYPE] String [PARAMETER] String defaultValue [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  String defaultValue  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getObjectId (  ) ;^332^^^^^331^333^[REPLACE] return delegate.getEmbeddedObject (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .readBinaryValue ( b64variant , null )  ;^337^^^^^336^338^[REPLACE] return delegate.getBinaryValue ( b64variant ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] JsonParserDelegate   [TYPE]  Base64Variant b64variant  [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getBinaryValue ( b64variant )  ;^343^^^^^341^344^[REPLACE] return delegate.readBinaryValue ( b64variant, out ) ;^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] JsonParserDelegate   [TYPE]  Base64Variant b64variant  [TYPE]  boolean false  true  [TYPE]  JsonParser d  delegate  [TYPE]  OutputStream out 
[REPLACE]^return delegate.getCurrentLocation (  ) ;^348^^^^^347^349^[REPLACE] return delegate.getTokenLocation (  ) ;^[METHOD] getTokenLocation [TYPE] JsonLocation [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getCurrentToken (  )  ;^353^^^^^352^354^[REPLACE] return delegate.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getIntValue (  ) ;^358^^^^^357^359^[REPLACE] return delegate.nextValue (  ) ;^[METHOD] nextValue [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate .setCodec ( true )  ;^363^^^^^362^366^[REPLACE] delegate.skipChildren (  ) ;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return null;^365^^^^^362^366^[REPLACE] return this;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .canReadTypeId (  )  ;^376^^^^^375^377^[REPLACE] return delegate.canReadObjectId (  ) ;^[METHOD] canReadObjectId [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.canReadObjectId (  ) ;^381^^^^^380^382^[REPLACE] return delegate.canReadTypeId (  ) ;^[METHOD] canReadTypeId [TYPE] boolean [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getTypeId (  ) ;^386^^^^^385^387^[REPLACE] return delegate.getObjectId (  ) ;^[METHOD] getObjectId [TYPE] Object [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.nextToken (  ) ;^391^^^^^390^392^[REPLACE] return delegate.getTypeId (  ) ;^[METHOD] getTypeId [TYPE] Object [PARAMETER] [CLASS] JsonParserDelegate   [TYPE]  JsonParser d  delegate  [TYPE]  boolean false  true 
