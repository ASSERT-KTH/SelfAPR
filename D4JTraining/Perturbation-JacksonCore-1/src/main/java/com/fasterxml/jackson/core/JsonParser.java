[REPLACE]^private  static  long  MIN_BYTE_I =  (  long  )  Byte.MIN_VALUE;^25^^^^^^^[REPLACE] private final static int MIN_BYTE_I =  ( int )  Byte.MIN_VALUE;^ [CLASS] JsonParser NumberType Feature  
[REPLACE]^private final static int MAX_BYTE_I  = null ;^27^^^^^^^[REPLACE] private final static int MAX_BYTE_I =  ( int )  255;^ [CLASS] JsonParser NumberType Feature  
[REPLACE]^private final static  long  MIN_SHORT_I =  (  long  )  Short.MIN_VALUE;^29^^^^^^^[REPLACE] private final static int MIN_SHORT_I =  ( int )  Short.MIN_VALUE;^ [CLASS] JsonParser NumberType Feature  
[REPLACE]^private final  int MAX_SHORT_I =  ( int )  Short.MAX_VALUE;^30^^^^^^^[REPLACE] private final static int MAX_SHORT_I =  ( int )  Short.MAX_VALUE;^ [CLASS] JsonParser NumberType Feature  
[REPLACE]^AUTO_CLOSE_SOURCE ( false ) ,^59^60^61^62^^^^[REPLACE] AUTO_CLOSE_SOURCE ( true ) ,^ [CLASS] JsonParser NumberType Feature  
[REPLACE]^ALLOW_SINGLE_QUOTES ( true ) ,^99^100^101^102^^^^[REPLACE] ALLOW_SINGLE_QUOTES ( false ) ,^[METHOD] <init> [TYPE] JsonParser$NumberType() [PARAMETER] [CLASS] Feature   [TYPE]  NumberType BIG_DECIMAL  BIG_INTEGER  DOUBLE  FLOAT  INT  LONG  [TYPE]  boolean false  true 
[REPLACE]^ALLOW_UNQUOTED_CONTROL_CHARS ( true ) ,^112^113^114^115^^^^[REPLACE] ALLOW_UNQUOTED_CONTROL_CHARS ( false ) ,^[METHOD] <init> [TYPE] JsonParser$NumberType() [PARAMETER] [CLASS] Feature   [TYPE]  NumberType BIG_DECIMAL  BIG_INTEGER  DOUBLE  FLOAT  INT  LONG  [TYPE]  boolean false  true 
[REPLACE]^ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER ( true ) ,^123^124^125^126^^^^[REPLACE] ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER ( false ) ,^[METHOD] <init> [TYPE] JsonParser$NumberType() [PARAMETER] [CLASS] Feature   [TYPE]  NumberType BIG_DECIMAL  BIG_INTEGER  DOUBLE  FLOAT  INT  LONG  [TYPE]  boolean false  true 
[REPLACE]^ALLOW_NUMERIC_LEADING_ZEROS ( true ) ,^135^136^137^138^^^^[REPLACE] ALLOW_NUMERIC_LEADING_ZEROS ( false ) ,^[METHOD] <init> [TYPE] JsonParser$NumberType() [PARAMETER] [CLASS] Feature   [TYPE]  NumberType BIG_DECIMAL  BIG_INTEGER  DOUBLE  FLOAT  INT  LONG  [TYPE]  boolean false  true 
[REPLACE]^ALLOW_NON_NUMERIC_NUMBERS ( true ) ,  ;^155^156^157^^^^^[REPLACE] ALLOW_NON_NUMERIC_NUMBERS ( false ) ,  ;^[METHOD] <init> [TYPE] JsonParser$NumberType() [PARAMETER] [CLASS] Feature   [TYPE]  NumberType BIG_DECIMAL  BIG_INTEGER  DOUBLE  FLOAT  INT  LONG  [TYPE]  boolean false  true 
