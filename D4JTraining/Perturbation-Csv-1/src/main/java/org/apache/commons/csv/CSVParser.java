[REPLACE]^private final List<String> record ;^71^^^^^^^[REPLACE] private final List<String> record = new ArrayList<String> (  ) ;^ [CLASS] CSVParser 1  
[REPLACE]^private final Token reusableToken  = null ;^72^^^^^^^[REPLACE] private final Token reusableToken = new Token (  ) ;^ [CLASS] CSVParser 1  
[REPLACE]^CSVRecord result = new CSVRecord ( true, headerMapping ) ;^136^^^^^135^164^[REPLACE] CSVRecord result = new CSVRecord ( null, headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^record.size (  ) ;^137^^^^^135^164^[REPLACE] record.clear (  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^137^^^^^135^164^[ADD] record.clear (  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^if   (  format.getHeader  (    )   != null  )   {  ;^149^^^^^135^164^[REPLACE] if  ( reusableToken.isReady )  {^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result = true;^152^^^^^149^153^[REPLACE] result = null;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^toString (  )  ;^150^^^^^135^164^[REPLACE] record.add ( reusableToken.content.toString (  )  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^record.add ( toString (  )  )  ;^150^^^^^135^164^[REPLACE] record.add ( reusableToken.content.toString (  )  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result = true;^152^^^^^135^164^[REPLACE] result = null;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^156^^^^^135^164^[ADD] throw new IOException  (" ")  ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^if  ( !record.add (  )  )  {^160^^^^^135^164^[REPLACE] if  ( !record.isEmpty (  )  )  {^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result  =  result ;^161^^^^^135^164^[REPLACE] result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^return rec;^163^^^^^135^164^[REPLACE] return result;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^Map<String, Integer> hdrMap = true;^170^^^^^169^193^[REPLACE] Map<String, Integer> hdrMap = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if   (  format.getHeader  (    )  .length == 0  )   {  ;^171^^^^^169^193^[REPLACE] if  ( format.getHeader (  )  != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( format.getHeader (  ) .length *  2 == 0  )  {^175^^^^^169^193^[REPLACE] if  ( format.getHeader (  ) .length == 0 )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  null.getHeader (  ) ;^182^^^^^175^183^[REPLACE] header = format.getHeader (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( result == null )  {^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  result.values (  ) ;^179^^^^^169^193^[REPLACE] header = rec.values (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^CSVRecord next = current  ;^177^^^^^169^193^[REPLACE] CSVRecord rec = getRecord (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if   (  header != null  )   {  ;^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( header == null )  {^186^^^^^169^193^[REPLACE] if  ( header != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^187^188^189^^^169^193^[ADD] for  ( int i = 0; i < header.length; i++ )  { hdrMap.put ( header[i], Integer.valueOf ( i )  ) ; }^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^172^^^^^169^193^[ADD] hdrMap = new HashMap<String, Integer> (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^182^183^^^^169^193^[ADD] header = format.getHeader (  ) ; }^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^174^^^^^169^193^[ADD] String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if   (  format.getHeader  (    )   != null  )   {  ;^175^^^^^169^193^[REPLACE] if  ( format.getHeader (  ) .length == 0 )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( rec == false )  {^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^178^179^180^^^169^193^[ADD] if  ( rec != null )  { header = rec.values (  ) ; }^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^179^^^^^169^193^[ADD] header = rec.values (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if   (  rec != null  )   {  ;^186^^^^^169^193^[REPLACE] if  ( header != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < header.length; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^hdrMap  =  hdrMap ;^172^^^^^169^193^[REPLACE] hdrMap = new HashMap<String, Integer> (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  null.getHeader (  ) ;^182^^^^^169^193^[REPLACE] header = format.getHeader (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^String[] header = true;^174^^^^^169^193^[REPLACE] String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^return this;^192^^^^^169^193^[REPLACE] return hdrMap;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( current != null )  {^204^^^^^199^238^[REPLACE] if  ( current == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^current = getNextRecord (  ) ;^204^205^206^^^199^238^[ADD] if  ( current == null )  { current = getNextRecord (  ) ; }^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^205^^^^^199^238^[ADD] current = getNextRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if   (  header != null  )   {  ;^215^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next != null )  {^218^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^219^^^^^199^238^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = getNextRecord (  )  ;^217^^^^^199^238^[REPLACE] next = getNextRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^219^^^^^199^238^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if   (  header != null  )   {  ;^218^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^return getRecord (  ) ;^227^228^229^230^231^199^238^[ADD] try { return getRecord (  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return getRecord  (    )  ;  ;^228^^^^^199^238^[REPLACE] return getRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = false;^213^^^^^199^238^[REPLACE] current = null;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return new Iterator;^200^^^^^199^238^[REPLACE] return new Iterator<CSVRecord> (  )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return current ;^208^^^^^199^238^[REPLACE] return current != null;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return result;^223^^^^^199^238^[REPLACE] return next;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^CSVRecord rec = getRecord (  )  ;^212^^^^^199^238^[REPLACE] CSVRecord next = current;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^230^^^^^199^238^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^throw new RuntimeException ( e )  ;^235^^^^^199^238^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
