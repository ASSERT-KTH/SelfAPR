[REPLACE]^private static final String CRLF ;^33^^^^^^^[REPLACE] private static final String CRLF = "\r\n";^ [CLASS] CSVFormat  
[REPLACE]^private final String delimiter;^35^^^^^^^[REPLACE] private final char delimiter;^ [CLASS] CSVFormat  
[REPLACE]^private final String encapsulator;^36^^^^^^^[REPLACE] private final char encapsulator;^ [CLASS] CSVFormat  
[REPLACE]^private  char escape;^38^^^^^^^[REPLACE] private final char escape;^ [CLASS] CSVFormat  
[REPLACE]^private  boolean surroundingSpacesIgnored;^39^^^^^^^[REPLACE] private final boolean surroundingSpacesIgnored;^ [CLASS] CSVFormat  
[REPLACE]^static  char DISABLED = '\ufffe';^51^^^^^^^[REPLACE] static final char DISABLED = '\ufffe';^ [CLASS] CSVFormat  
[REPLACE]^private  CSVFormat PRISTINE = new CSVFormat ( DISABLED, DISABLED, DISABLED, DISABLED, false, false, null, null ) ;^56^^^^^^^[REPLACE] private static CSVFormat PRISTINE = new CSVFormat ( DISABLED, DISABLED, DISABLED, DISABLED, false, false, null, null ) ;^ [CLASS] CSVFormat  
[REPLACE]^public static final CSVFormat DEFAULT ;^67^68^69^70^^67^72^[REPLACE] public static final CSVFormat DEFAULT = PRISTINE. withDelimiter ( ',' ) .withEncapsulator ( '"' )^ [CLASS] CSVFormat  
[REPLACE]^public static  CSVFormat RFC4180 = PRISTINE. withDelimiter ( ',' ) .withEncapsulator ( '"' )^83^84^85^86^^83^87^[REPLACE] public static final CSVFormat RFC4180 = PRISTINE. withDelimiter ( ',' ) .withEncapsulator ( '"' )^ [CLASS] CSVFormat  
[REPLACE]^public static final CSVFormat EXCEL  = null ;^100^101^102^103^^100^104^[REPLACE] public static final CSVFormat EXCEL = PRISTINE .withDelimiter ( ',' ) .withEncapsulator ( '"' )^ [CLASS] CSVFormat  
[REPLACE]^public static  CSVFormat TDF = PRISTINE .withDelimiter ( '\t' ) .withEncapsulator ( '"' )^107^108^109^110^^107^113^[REPLACE] public static final CSVFormat TDF = PRISTINE .withDelimiter ( '\t' ) .withEncapsulator ( '"' )^ [CLASS] CSVFormat  
[REPLACE]^public static  CSVFormat MYSQL = PRISTINE .withDelimiter ( '\t' ) .withEscape ( '\\' )^123^124^125^126^^123^127^[REPLACE] public static final CSVFormat MYSQL = PRISTINE .withDelimiter ( '\t' ) .withEscape ( '\\' )^ [CLASS] CSVFormat  
[REPLACE]^this.delimiter =  null;^151^^^^^150^159^[REPLACE] this.delimiter = delimiter;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^this.encapsulator =  escape;^152^^^^^150^159^[REPLACE] this.encapsulator = encapsulator;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[ADD]^^153^^^^^150^159^[ADD] this.commentStart = commentStart;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[ADD]^^154^^^^^150^159^[ADD] this.escape = escape;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^this.surroundingSpacesIgnored =  true;^155^^^^^150^159^[REPLACE] this.surroundingSpacesIgnored = surroundingSpacesIgnored;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^this.emptyLinesIgnored =  true;^156^^^^^150^159^[REPLACE] this.emptyLinesIgnored = emptyLinesIgnored;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^this.lineSeparator =  CRLF;^157^^^^^150^159^[REPLACE] this.lineSeparator = lineSeparator;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[ADD]^^158^^^^^150^159^[ADD] this.header = header;^[METHOD] <init> [TYPE] String[]) [PARAMETER] char delimiter char encapsulator char commentStart char escape boolean surroundingSpacesIgnored boolean emptyLinesIgnored String lineSeparator String[] header [CLASS] CSVFormat   [TYPE]  char DISABLED  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^if   (  delimiter == escape  )   {  ;^176^^^^^175^195^[REPLACE] if  ( delimiter == encapsulator )  {^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^return ;^177^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^throw new IllegalArgumentException (  (  ( "The comment start and the escape character cannot be the same  ( \"" +  ( commentStart )  )  + "\" ) " )  )  ;^177^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^if   (  delimiter == encapsulator  )   {  ;^180^^^^^175^195^[REPLACE] if  ( delimiter == escape )  {^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^return ;^181^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^if  ( escape  ||  escape )  {^184^^^^^175^195^[REPLACE] if  ( delimiter == commentStart )  {^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^return ;^185^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[ADD]^^185^^^^^175^195^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^if  ( encapsulator != surroundingSpacesIgnored || true )  {^188^^^^^175^195^[REPLACE] if  ( encapsulator != DISABLED && encapsulator == commentStart )  {^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[ADD]^^188^189^190^^^175^195^[ADD] if  ( encapsulator != DISABLED && encapsulator == commentStart )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^throw new IllegalArgumentException (  (  ( "The comment start and the escape character cannot be the same  ( \"" +  ( commentStart )  )  + "\" ) " )  )  ;^189^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^if   (  encapsulator != DISABLED && encapsulator == commentStart  )   {  ;^192^^^^^175^195^[REPLACE] if  ( escape != DISABLED && escape == commentStart )  {^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REMOVE]^if  (  ( delimiter )  ==  ( commentStart )  )  {     throw new IllegalArgumentException (  (  ( "The comment start character and the delimiter cannot be the same  ( \"" +  ( commentStart )  )  + "\" ) " )  ) ; }^192^^^^^175^195^[REMOVE] ^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^throw new IllegalArgumentException ( "The delimiter cannot be a line break" )  ;^193^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^return ;^193^^^^^175^195^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] validate [TYPE] void [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header 
[REPLACE]^StringWriter out = new StringWriter (  )  ;^419^^^^^418^440^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )^420^^^^^418^440^[REPLACE] sb.append ( "Delimiter=<" ) .append ( delimiter ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Escape=<" ) .append ( escape )  ;^420^^^^^418^440^[REPLACE] sb.append ( "Delimiter=<" ) .append ( delimiter ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Escape=<" )  ;^420^^^^^418^440^[REPLACE] sb.append ( "Delimiter=<" ) .append ( delimiter ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^if   (  isEncapsulating  (    )    )   {  ;^421^^^^^418^440^[REPLACE] if  ( isEscaping (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[ADD]^sb.append ( ' ' ) ;sb.append ( "Escape=<" ) .append ( escape ) .append ( '>' ) ;^421^422^423^424^^418^440^[ADD] if  ( isEscaping (  )  )  { sb.append ( ' ' ) ; sb.append ( "Escape=<" ) .append ( escape ) .append ( '>' ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^isLineBreak ( encapsulator )  ;^422^^^^^418^440^[REPLACE] sb.append ( ' ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )^423^^^^^418^440^[REPLACE] sb.append ( "Escape=<" ) .append ( escape ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Delimiter=<" )  ;^423^^^^^418^440^[REPLACE] sb.append ( "Escape=<" ) .append ( escape ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^if   (  isEscaping  (    )    )   {  ;^425^^^^^418^440^[REPLACE] if  ( isEncapsulating (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )  ;^426^^^^^418^440^[REPLACE] sb.append ( ' ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )^427^^^^^418^440^[REPLACE] sb.append ( "Encapsulator=<" ) .append ( encapsulator ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[ADD]^^427^^^^^418^440^[ADD] sb.append ( "Encapsulator=<" ) .append ( encapsulator ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Escape=<" ) .append ( escape )  ;^427^^^^^418^440^[REPLACE] sb.append ( "Encapsulator=<" ) .append ( encapsulator ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Escape=<" )  ;^427^^^^^418^440^[REPLACE] sb.append ( "Encapsulator=<" ) .append ( encapsulator ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^if   (  isLineBreak  (  escape  )    )   {  ;^429^^^^^418^440^[REPLACE] if  ( isCommentingEnabled (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )  ;^430^^^^^418^440^[REPLACE] sb.append ( ' ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Delimiter=<" ) .append ( delimiter ) .append ( '>' )  ;^431^^^^^418^440^[REPLACE] sb.append ( "CommentStart=<" ) .append ( commentStart ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "CommentStart=<" ) .append ( commentStart ) .append ( '>' )  ;^431^^^^^418^440^[REPLACE] sb.append ( "CommentStart=<" ) .append ( commentStart ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb.append ( "Escape=<" )  ;^431^^^^^418^440^[REPLACE] sb.append ( "CommentStart=<" ) .append ( commentStart ) .append ( '>' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^if   (  isLineBreak  (  escape  )    )   {  ;^433^^^^^418^440^[REPLACE] if  ( isEmptyLinesIgnored (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[ADD]^^433^434^435^^^418^440^[ADD] if  ( isEmptyLinesIgnored (  )  )  { sb.append ( " EmptyLines:ignored" ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )  ;^434^^^^^418^440^[REPLACE] sb.append ( " EmptyLines:ignored" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^if   (  isLineBreak  (  escape  )    )   {  ;^436^^^^^418^440^[REPLACE] if  ( isSurroundingSpacesIgnored (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^sb .StringBuilder (  )  ;^437^^^^^418^440^[REPLACE] sb.append ( " SurroundingSpaces:ignored" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
[REPLACE]^return sb .StringWriter (  )  ;^439^^^^^418^440^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] CSVFormat   [TYPE]  char DISABLED  c  commentStart  delimiter  encapsulator  escape  [TYPE]  CSVFormat DEFAULT  EXCEL  MYSQL  PRISTINE  RFC4180  TDF  [TYPE]  boolean emptyLinesIgnored  false  surroundingSpacesIgnored  true  [TYPE]  String CRLF  lineSeparator  [TYPE]  String[] header  values  [TYPE]  StringBuilder sb 
