[REPLACE]^private static final long serialVersionUID  = null ;^19^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] XmlRootNameLookup  
[REPLACE]^protected final transient LRUMap<ClassKey,QName> _rootNames ;^28^^^^^^^[REPLACE] protected final transient LRUMap<ClassKey,QName> _rootNames = new LRUMap<ClassKey,QName> ( 40, 200 ) ;^ [CLASS] XmlRootNameLookup  
[REPLACE]^if  ( _rootNames != null )  {^34^^^^^32^38^[REPLACE] if  ( _rootNames == null )  {^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] XmlRootNameLookup   [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return findRootName ( rootType.getRawClass (  ) , config ) ;^35^^^^^32^38^[REPLACE] return new XmlRootNameLookup (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] XmlRootNameLookup   [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return null;^37^^^^^32^38^[REPLACE] return this;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] XmlRootNameLookup   [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return findRootName ( rootType.getRawClass (  ) , true ) ;^41^^^^^40^42^[REPLACE] return findRootName ( rootType.getRawClass (  ) , config ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] JavaType rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  MapperConfig config  [TYPE]  JavaType rootType  [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^ClassKey key = new ClassKey ( null ) ;^46^^^^^44^59^[REPLACE] ClassKey key = new ClassKey ( rootType ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[ADD]^^46^^^^^44^59^[ADD] ClassKey key = new ClassKey ( rootType ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^String localName = null;^47^^^^^44^59^[REPLACE] QName name;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^name =  _rootNames.get ( null ) ;^49^^^^^44^59^[REPLACE] name = _rootNames.get ( key ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[ADD]^^49^^^^^44^59^[ADD] name = _rootNames.get ( key ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == null )  {^51^^^^^44^59^[REPLACE] if  ( name != null )  {^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[ADD]^return name;^51^52^53^^^44^59^[ADD] if  ( name != null )  { return name; }^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^return new QName ( "", localName ) ;^52^^^^^44^59^[REPLACE] return name;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^name =  _findRootName ( null, config ) ;^54^^^^^44^59^[REPLACE] name = _findRootName ( rootType, config ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[ADD]^^54^^^^^44^59^[ADD] name = _findRootName ( rootType, config ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^localName = root.getSimpleName (  ) ;^56^^^^^44^59^[REPLACE] _rootNames.put ( key, name ) ;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REMOVE]^return findRootName ( rootType.getRawClass (  ) , config ) ;^56^^^^^44^59^[REMOVE] ^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^return new QName ( "", localName ) ;^58^^^^^44^59^[REPLACE] return name;^[METHOD] findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  boolean false  true  [TYPE]  LRUMap _rootNames  [TYPE]  QName name  [TYPE]  ClassKey key  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  long serialVersionUID 
[REPLACE]^ClassKey key = new ClassKey ( rootType ) ;^65^^^^^64^91^[REPLACE] BeanDescription beanDesc = config.introspectClassAnnotations ( rootType ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotationIntrospector intr = null.getAnnotationIntrospector (  ) ;^66^^^^^64^91^[REPLACE] AnnotationIntrospector intr = config.getAnnotationIntrospector (  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotationIntrospector intr = config.getAnnotationIntrospector (  ) ;^67^^^^^64^91^[REPLACE] AnnotatedClass ac = beanDesc.getClassInfo (  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^String localName = true;^68^^^^^64^91^[REPLACE] String localName = null;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[ADD]^String ns = null;^68^69^^^^64^91^[ADD] String localName = null; String ns = null;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^String ns = true;^69^^^^^64^91^[REPLACE] String ns = null;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^String localName = null;^71^^^^^64^91^[REPLACE] PropertyName root = intr.findRootName ( ac ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( root == null )  {^72^^^^^64^91^[REPLACE] if  ( root != null )  {^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^localName =  null.getSimpleName (  ) ;^73^^^^^64^91^[REPLACE] localName = root.getSimpleName (  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^ns =  null.getNamespace (  ) ;^74^^^^^64^91^[REPLACE] ns = root.getNamespace (  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[ADD]^^74^^^^^64^91^[ADD] ns = root.getNamespace (  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( localName == null || localName.length (  )  /  2 == 0 )  {^77^^^^^64^91^[REPLACE] if  ( localName == null || localName.length (  )  == 0 )  {^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^localName =  StaxUtil.sanitizeXmlTypeName ( this.getSimpleName (  )  ) ;^80^^^^^64^91^[REPLACE] localName = StaxUtil.sanitizeXmlTypeName ( rootType.getSimpleName (  )  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[ADD]^^80^^^^^64^91^[ADD] localName = StaxUtil.sanitizeXmlTypeName ( rootType.getSimpleName (  )  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^return  new QName ( ns, localName )  ;^81^^^^^64^91^[REPLACE] return new QName ( "", localName ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^localName =  StaxUtil.sanitizeXmlTypeName ( false.getSimpleName (  )  ) ;^80^^^^^64^91^[REPLACE] localName = StaxUtil.sanitizeXmlTypeName ( rootType.getSimpleName (  )  ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ns == null ) {^84^^^^^64^91^[REPLACE] if  ( ns == null || ns.length (  )  == 0 )  {^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^ns =  findNamespace ( null, ac ) ;^85^^^^^64^91^[REPLACE] ns = findNamespace ( intr, ac ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( localName != null )  {^87^^^^^64^91^[REPLACE] if  ( ns == null )  {^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^ns  =  ns ;^88^^^^^64^91^[REPLACE] ns = "";^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^return  new QName ( "", localName )  ;^90^^^^^64^91^[REPLACE] return new QName ( ns, localName ) ;^[METHOD] _findRootName [TYPE] QName [PARAMETER] Class<?> rootType MapperConfig<?> config [CLASS] XmlRootNameLookup   [TYPE]  PropertyName root  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  [TYPE]  LRUMap _rootNames  [TYPE]  BeanDescription beanDesc  [TYPE]  AnnotationIntrospector intr  [TYPE]  MapperConfig config  [TYPE]  Class rootType  [TYPE]  String localName  ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! intr instanceof XmlAnnotationIntrospector )  {^96^^^^^93^104^[REPLACE] if  ( intr instanceof XmlAnnotationIntrospector )  {^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[ADD]^^96^97^98^99^100^93^104^[ADD] if  ( intr instanceof XmlAnnotationIntrospector )  { String ns =  (  ( XmlAnnotationIntrospector )  intr ) .findNamespace ( ann ) ; if  ( ns != null )  { return ns; }^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ns == null )  {^98^^^^^93^104^[REPLACE] if  ( ns != null )  {^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^return null;^99^^^^^93^104^[REPLACE] return ns;^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^String ns =  (  ( XmlAnnotationIntrospector )  intr )  .findNamespace ( intr , ann )  ;^97^^^^^93^104^[REPLACE] String ns =  (  ( XmlAnnotationIntrospector )  intr ) .findNamespace ( ann ) ;^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^String ns =  (  ( XmlAnnotationIntrospector )  intr ) .findNamespace ( ann ) ;^95^^^^^93^104^[REPLACE] for  ( AnnotationIntrospector intr : ai.allIntrospectors (  )  )  {^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^String localName = null;^97^^^^^93^104^[REPLACE] String ns =  (  ( XmlAnnotationIntrospector )  intr ) .findNamespace ( ann ) ;^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^103^^^^^93^104^[REPLACE] return null;^[METHOD] findNamespace [TYPE] String [PARAMETER] AnnotationIntrospector ai AnnotatedClass ann [CLASS] XmlRootNameLookup   [TYPE]  AnnotationIntrospector ai  intr  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ann  [TYPE]  LRUMap _rootNames  [TYPE]  long serialVersionUID 
