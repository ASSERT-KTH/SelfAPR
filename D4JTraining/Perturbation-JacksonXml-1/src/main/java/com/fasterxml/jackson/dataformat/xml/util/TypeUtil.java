[REPLACE]^if  ( type.getRawClass (  )  )  {^16^^^^^15^30^[REPLACE] if  ( type.isContainerType (  )  )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^if  ( null == byte[].class && cls == char[].class )  {^20^^^^^15^30^[REPLACE] if  ( cls == byte[].class || cls == char[].class )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^if  ( Map.class.isAssignableFrom ( null )  )  {^24^^^^^15^30^[REPLACE] if  ( Map.class.isAssignableFrom ( cls )  )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^21^^^^^15^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^25^^^^^15^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return false;^27^^^^^15^30^[REPLACE] return true;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[ADD]^^17^^^^^15^30^[ADD] Class<?> cls = type.getRawClass (  ) ;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^29^^^^^15^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
