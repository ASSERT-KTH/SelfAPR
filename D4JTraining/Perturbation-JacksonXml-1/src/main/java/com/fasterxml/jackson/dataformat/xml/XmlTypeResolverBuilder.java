[REPLACE]^if  ( _customIdResolver == false )  {^49^^^^^48^61^[REPLACE] if  ( _customIdResolver != null )  {^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver   [TYPE]  JavaType baseType  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes 
[REPLACE]^return _customIdResolver;  ;^50^^^^^48^61^[REPLACE] return _customIdResolver;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver   [TYPE]  JavaType baseType  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes 
[REPLACE]^return  new XmlMinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  )   ) ;^55^^^^^48^61^[REPLACE] return new XmlClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver   [TYPE]  JavaType baseType  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes 
[REPLACE]^return  new XmlClassNameIdResolver ( baseType, config.getTypeFactory (  )  )   ) ;^57^^^^^48^61^[REPLACE] return new XmlMinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver   [TYPE]  JavaType baseType  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes 
[REPLACE]^return super.idResolver ( config, baseType, subtypes, true, forDeser ) ;^59^^^^^48^61^[REPLACE] return super.idResolver ( config, baseType, subtypes, forSer, forDeser ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] XmlTypeResolverBuilder XmlClassNameIdResolver XmlMinimalClassNameIdResolver   [TYPE]  JavaType baseType  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes 
