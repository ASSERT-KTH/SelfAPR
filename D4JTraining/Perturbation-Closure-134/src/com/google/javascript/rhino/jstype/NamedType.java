[REPLACE]^private static final long serialVersionUID ;^80^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] NamedType  
[REPLACE]^private  int charno;^85^^^^^^^[REPLACE] private final int charno;^ [CLASS] NamedType  
[REPLACE]^private boolean isResolved ;^86^^^^^^^[REPLACE] private boolean isResolved = false;^ [CLASS] NamedType  
[REPLACE]^private boolean forgiving = true;^98^^^^^^^[REPLACE] private boolean forgiving = false;^ [CLASS] NamedType  
[REPLACE]^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^105^^^^^103^112^[REPLACE] super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^^105^^^^^103^112^[ADD] super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^sourceName   ;^107^^^^^103^112^[REPLACE] Preconditions.checkNotNull ( reference ) ;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^this.reference =  sourceName;^108^^^^^103^112^[REPLACE] this.reference = reference;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^this.sourceName =  reference;^109^^^^^103^112^[REPLACE] this.sourceName = sourceName;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^this.lineno =  charno;^110^^^^^103^112^[REPLACE] this.lineno = lineno;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^this.charno =  null;^111^^^^^103^112^[REPLACE] this.charno = charno;^[METHOD] <init> [TYPE] String,int,int) [PARAMETER] JSTypeRegistry registry String reference String sourceName int lineno int charno [CLASS] NamedType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^forgiving = false;^116^^^^^115^117^[REPLACE] forgiving = true;^[METHOD] forgiveUnknownNames [TYPE] void [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return referencedType;^121^^^^^120^122^[REPLACE] return isResolved;^[METHOD] isResolved [TYPE] boolean [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^isResolved = true;^126^^^^^125^127^[REPLACE] isResolved = false;^[METHOD] clearResolved [TYPE] void [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^^126^^^^^125^127^[ADD] isResolved = false;^[METHOD] clearResolved [TYPE] void [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return;^131^^^^^130^132^[REPLACE] return referencedType;^[METHOD] getReferencedType [TYPE] JSType [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return referencedType;^136^^^^^135^137^[REPLACE] return reference;^[METHOD] getReferenceName [TYPE] String [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return referencedType;^141^^^^^140^142^[REPLACE] return reference;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return false;^146^^^^^145^147^[REPLACE] return true;^[METHOD] hasReferenceName [TYPE] boolean [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return false;^151^^^^^150^152^[REPLACE] return true;^[METHOD] isNamedType [TYPE] boolean [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return false;^156^^^^^155^157^[REPLACE] return true;^[METHOD] isNominalType [TYPE] boolean [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^if  (this  ||  that )  {^170^^^^^169^180^[REPLACE] if  ( this == that )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^}  else {^172^^^^^169^180^[REPLACE] } else if  ( that instanceof JSType )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^}   ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;reference.equals ( objType.getReferenceName (  )  ) ;^172^173^174^175^176^169^180^[ADD] else if  ( that instanceof JSType )  { ObjectType objType = ObjectType.cast (  ( JSType )  that ) ; if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^if  ( objType == null )  {^174^^^^^169^180^[REPLACE] if  ( objType != null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType.isNominalType (  )  && reference.equals ( objType.isNominalType (  )  ) ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType.isNominalType (  )  ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^ObjectType objType = ObjectType.isNominalType (  ( JSType )  that ) ;^173^^^^^169^180^[REPLACE] ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType.isNominalType (  )  && reference .resolveViaRegistry ( null , true )  ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return false;^171^^^^^169^180^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^}  if  ( ! that instanceof JSType )  {^172^^^^^169^180^[REPLACE] } else if  ( that instanceof JSType )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^^174^175^176^177^^169^180^[ADD] if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType .getPropertyType ( reference )   && reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType.getPropertyType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^^173^^^^^169^180^[ADD] ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return objType.isNominalType (  )  || reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^[REPLACE] return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return true;^179^^^^^169^180^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NamedType   [TYPE]  ObjectType objType  [TYPE]  Object that  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^return reference.length (  ) ;^184^^^^^183^185^[REPLACE] return reference.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NamedType   [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^if  ( objType != null )  {^195^^^^^190^208^[REPLACE] if  ( isResolved (  )  )  return;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^return isResolved;^195^^^^^190^208^[REPLACE] if  ( isResolved (  )  )  return;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^resolveViaRegistry ( t, 1 ) ;^197^^^^^190^208^[REPLACE] resolveViaRegistry ( t, enclosing ) ;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^if  ( objType != null )  {^198^^^^^190^208^[REPLACE] if  ( detectImplicitPrototypeCycle (  )  )  {^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^checkEnumElementCycle ( t ) ;^199^^^^^190^208^[REPLACE] handleTypeCycle ( t ) ;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^if  ( objType != null )  {^202^^^^^190^208^[REPLACE] if  ( isResolved (  )  )  return;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^return isResolved;^202^^^^^190^208^[REPLACE] if  ( isResolved (  )  )  return;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^resolveViaProperties ( t, null ) ;^204^^^^^190^208^[REPLACE] resolveViaProperties ( t, enclosing ) ;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^if  ( objType != null )  {^205^^^^^190^208^[REPLACE] if  ( detectImplicitPrototypeCycle (  )  )  {^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[ADD]^handleTypeCycle ( t ) ;^205^206^207^^^190^208^[ADD] if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^checkEnumElementCycle ( t ) ;^206^^^^^190^208^[REPLACE] handleTypeCycle ( t ) ;^[METHOD] resolve [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno  [TYPE]  StaticScope enclosing 
[REPLACE]^ObjectType type = ObjectType.cast ( registry.isForwardDeclaredType ( reference )  ) ;^215^^^^^213^219^[REPLACE] ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[METHOD] resolveViaRegistry [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^^215^^^^^213^219^[ADD] ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[METHOD] resolveViaRegistry [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^if  ( type == null )  {^216^^^^^213^219^[REPLACE] if  ( type != null )  {^[METHOD] resolveViaRegistry [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[ADD]^setReferencedType ( type, t, enclosing ) ;^216^217^218^^^213^219^[ADD] if  ( type != null )  { setReferencedType ( type, t, enclosing ) ; }^[METHOD] resolveViaRegistry [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^setReferencedType ( type, t, this ) ;^217^^^^^213^219^[REPLACE] setReferencedType ( type, t, enclosing ) ;^[METHOD] resolveViaRegistry [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  lineno 
[REPLACE]^for  ( int i = 1; i < componentNames.length; i++ )  { ObjectType parentClass = ObjectType.cast ( value ) ;^228^^^^^227^279^[REPLACE] String[] componentNames = reference.split ( "\\.", -1 ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( componentNames[0].length (  )  %  2 == 0 )  {^229^^^^^227^279^[REPLACE] if  ( componentNames[0].length (  )  == 0 )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^231^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[1] ) ;^233^^^^^227^279^[REPLACE] StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[0] ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( slot != null )  {^234^^^^^227^279^[REPLACE] if  ( slot == null )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^236^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^JSType nullType = slot.getType (  ) ;^241^^^^^227^279^[REPLACE] JSType slotType = slot.getType (  ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^241^^^^^227^279^[ADD] JSType slotType = slot.getType (  ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( slotType != null ) {^242^^^^^227^279^[REPLACE] if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^244^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^JSType value = getTypedefType ( t, slot, componentNames[3] ) ;^246^^^^^227^279^[REPLACE] JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( value != null )  {^247^^^^^227^279^[REPLACE] if  ( value == null )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^247^248^249^250^^227^279^[ADD] if  ( value == null )  { handleUnresolvedType ( t ) ; return; }^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^249^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( parentClass != null )  {^255^^^^^227^279^[REPLACE] if  ( parentClass == null )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^257^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( componentNames[i].length (  )  - 2 == 0 )  {^259^^^^^227^279^[REPLACE] if  ( componentNames[i].length (  )  == 0 )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return referencedType;^261^^^^^227^279^[REPLACE] return;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^for  ( int i = 1; i < componentNames.length /  2; i++ )  {^253^^^^^227^279^[REPLACE] for  ( int i = 1; i < componentNames.length; i++ )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^255^256^257^258^^227^279^[ADD] if  ( parentClass == null )  { handleUnresolvedType ( t ) ; return; }^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( componentNames[i].length (  )  %  2 == 0  )  {^259^^^^^227^279^[REPLACE] if  ( componentNames[i].length (  )  == 0 )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^value =  null.getPropertyType ( componentNames[i] ) ;^263^^^^^227^279^[REPLACE] value = parentClass.getPropertyType ( componentNames[i] ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^ObjectType parentClass = ObjectType.cast ( slotType ) ;^254^^^^^227^279^[REPLACE] ObjectType parentClass = ObjectType.cast ( value ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^for  ( int i = 0 ; i < componentNames.length; i++ )  {^253^^^^^227^279^[REPLACE] for  ( int i = 1; i < componentNames.length; i++ )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^ObjectType parentClass = ObjectType.getPropertyType ( slotType ) ;^254^^^^^227^279^[REPLACE] ObjectType parentClass = ObjectType.cast ( value ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( ! value instanceof FunctionType )  {^267^^^^^227^279^[REPLACE] if  ( value instanceof FunctionType )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^267^268^269^270^^227^279^[ADD] if  ( value instanceof FunctionType )  { FunctionType functionType =  ( FunctionType ) value; if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  { setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^}  if  ( ! value instanceof EnumType )  {^274^^^^^227^279^[REPLACE] } else if  ( value instanceof EnumType )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^}   setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;handleUnresolvedType ( t ) ;^274^275^276^277^278^227^279^[ADD] else if  ( value instanceof EnumType )  { setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ; } else { handleUnresolvedType ( t ) ; }^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^checkEnumElementCycle ( t ) ;^277^^^^^274^278^[REPLACE] handleUnresolvedType ( t ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^277^^^^^274^278^[ADD] handleUnresolvedType ( t ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^reference.equals ( objType.getReferenceName (  )  ) ;^275^^^^^227^279^[REPLACE] setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^275^^^^^227^279^[ADD] setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^setReferencedType (  (  ( EnumType )  value ) .getPrimitiveType (  ) , t, enclosing ) ;^275^^^^^227^279^[REPLACE] setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( functionType.isConstructor (  )  ) {^269^^^^^227^279^[REPLACE] if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^checkEnumElementCycle ( t ) ;^272^^^^^269^273^[REPLACE] handleUnresolvedType ( t ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^setReferencedType ( functionType.isConstructor (  ) , t, enclosing ) ;^270^^^^^227^279^[REPLACE] setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[ADD]^^270^^^^^227^279^[ADD] setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^JSType type = slot.getType (  ) ;^268^^^^^227^279^[REPLACE] FunctionType functionType =  ( FunctionType ) value;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  (  functionType.isInterface (  )  )  {^269^^^^^227^279^[REPLACE] if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^setReferencedType ( functionType .isConstructor (  )  , t, enclosing ) ;^270^^^^^227^279^[REPLACE] setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^}  else {^274^^^^^227^279^[REPLACE] } else if  ( value instanceof EnumType )  {^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^setReferencedType (  (  ( EnumType )  value )  .getPrimitiveType (  )  , t, enclosing ) ;^275^^^^^227^279^[REPLACE] setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[METHOD] resolveViaProperties [TYPE] void [PARAMETER] ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType parentClass  [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType slotType  value  [TYPE]  StaticScope enclosing  [TYPE]  FunctionType functionType  [TYPE]  String reference  sourceName  [TYPE]  String[] componentNames  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^referencedType =  null;^283^^^^^281^286^[REPLACE] referencedType = type;^[METHOD] setReferencedType [TYPE] void [PARAMETER] ObjectType type ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return reference.hashCode (  ) ;^284^^^^^281^286^[REPLACE] checkEnumElementCycle ( t ) ;^[METHOD] setReferencedType [TYPE] void [PARAMETER] ObjectType type ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^isResolved = false;^285^^^^^281^286^[REPLACE] isResolved = true;^[METHOD] setReferencedType [TYPE] void [PARAMETER] ObjectType type ErrorReporter t JSType> enclosing [CLASS] NamedType   [TYPE]  ObjectType type  [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  StaticScope enclosing  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ; ;^289^^^^^288^293^[REPLACE] referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] handleTypeCycle [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^t.warning ( "Cycle detected in inheritance chain of type " +sourceName, sourceName, lineno, null, charno ) ;^290^291^^^^288^293^[REPLACE] t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[METHOD] handleTypeCycle [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^isResolved = false; ;^292^^^^^288^293^[REPLACE] isResolved = true;^[METHOD] handleTypeCycle [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  (  (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^296^297^^^^295^300^[REPLACE] if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[METHOD] checkEnumElementCycle [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^checkEnumElementCycle ( t ) ;^298^^^^^295^300^[REPLACE] handleTypeCycle ( t ) ;^[METHOD] checkEnumElementCycle [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^[REPLACE] if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[METHOD] handleUnresolvedType [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^referencedType  = null ;^310^311^^^^304^315^[REPLACE] referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[METHOD] handleUnresolvedType [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^t.warning ( sourceName + reference, sourceName, lineno, null, charno ) ;^307^308^^^^304^315^[REPLACE] t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[METHOD] handleUnresolvedType [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^referencedType ;^310^311^^^^304^315^[REPLACE] referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[METHOD] handleUnresolvedType [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^isResolved = false;^314^^^^^304^315^[REPLACE] isResolved = true;^[METHOD] handleUnresolvedType [TYPE] void [PARAMETER] ErrorReporter t [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  String reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^JSType slotType = slot.getType (  ) ;^318^^^^^317^324^[REPLACE] JSType type = slot.getType (  ) ;^[METHOD] getTypedefType [TYPE] JSType [PARAMETER] ErrorReporter t JSType> slot String name [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType type  [TYPE]  String name  reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^if  ( type == false )  {^319^^^^^317^324^[REPLACE] if  ( type != null )  {^[METHOD] getTypedefType [TYPE] JSType [PARAMETER] ErrorReporter t JSType> slot String name [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType type  [TYPE]  String name  reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return true;^320^^^^^317^324^[REPLACE] return type;^[METHOD] getTypedefType [TYPE] JSType [PARAMETER] ErrorReporter t JSType> slot String name [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType type  [TYPE]  String name  reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^checkEnumElementCycle ( t ) ;^322^^^^^317^324^[REPLACE] handleUnresolvedType ( t ) ;^[METHOD] getTypedefType [TYPE] JSType [PARAMETER] ErrorReporter t JSType> slot String name [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType type  [TYPE]  String name  reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
[REPLACE]^return this;^323^^^^^317^324^[REPLACE] return null;^[METHOD] getTypedefType [TYPE] JSType [PARAMETER] ErrorReporter t JSType> slot String name [CLASS] NamedType   [TYPE]  ErrorReporter t  [TYPE]  StaticSlot slot  [TYPE]  boolean false  forgiving  isResolved  true  [TYPE]  JSType type  [TYPE]  String name  reference  sourceName  [TYPE]  long serialVersionUID  [TYPE]  int charno  i  lineno 
