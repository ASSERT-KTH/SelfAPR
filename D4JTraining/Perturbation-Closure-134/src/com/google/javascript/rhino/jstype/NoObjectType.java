[REPLACE]^private static final long serialVersionUID  = null ;^67^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  
[REPLACE]^private final Visitor<JSType> leastSupertypeVisitor  = null ;^72^73^^^^72^73^[REPLACE] private final Visitor<JSType> leastSupertypeVisitor = new LeastSupertypeVisitor (  ) ;^ [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  
[REPLACE]^private static final long serialVersionUID ;^76^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  
[REPLACE]^private final Visitor<JSType> greatestSubtypeVisitor ;^143^144^^^^143^144^[REPLACE] private final Visitor<JSType> greatestSubtypeVisitor = new GreatestSupertypeVisitor (  ) ;^ [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  
[REPLACE]^private static final long serialVersionUID ;^148^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor  
[REPLACE]^super ( registry, true, true, true, true, true, true, true, true ) ;^211^^^^^210^212^[REPLACE] super ( registry, null, null, null, null, null, null, true, true ) ;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] JSTypeRegistry registry [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^79^^^^^78^80^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^83^^^^^82^84^[REPLACE] return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^87^^^^^86^88^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^91^92^^^^90^93^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return true;^96^^^^^95^97^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  FunctionType type 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^100^101^^^^99^102^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^105^106^^^^104^107^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return true;^110^^^^^109^111^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.BOOLEAN_TYPE ) ;^114^115^^^^113^116^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return   getNativeType ( JSTypeNative.NO_OBJECT_TYPE )  ;^119^120^^^^118^121^[REPLACE] return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType type  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^124^^^^^123^125^[REPLACE] return getNativeType ( JSTypeNative.ALL_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^128^129^^^^127^130^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^JSType anyObjectType = getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^133^^^^^132^137^[REPLACE] JSType primitive = type.getPrimitiveType (  ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType primitive  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  EnumElementType type 
[REPLACE]^return primitive.isNoType (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^134^135^136^^^132^137^[REPLACE] return primitive.isObject (  )  ? primitive : registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType primitive  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  EnumElementType type 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^151^^^^^150^152^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^155^^^^^154^156^[REPLACE] return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^159^^^^^158^160^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^163^^^^^162^164^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^167^^^^^166^168^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  FunctionType type 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^171^^^^^170^172^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^175^^^^^174^176^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^179^^^^^178^180^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^183^^^^^182^184^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^JSType primitive = type.getPrimitiveType (  ) ;^187^^^^^186^195^[REPLACE] JSType anyObjectType = getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( JSType.isSubtype ( this, that )  )  {^188^^^^^186^195^[REPLACE] if  ( anyObjectType.isSubtype ( that )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[ADD]^return anyObjectType;return that;^188^189^190^191^^186^195^[ADD] if  ( anyObjectType.isSubtype ( that )  )  { return anyObjectType; } else if  ( that.isSubtype ( anyObjectType )  )  { return that;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^}  else {^190^^^^^186^195^[REPLACE] } else if  ( that.isSubtype ( anyObjectType )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^193^^^^^186^195^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return this;^191^^^^^186^195^[REPLACE] return that;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return that;^189^^^^^186^195^[REPLACE] return anyObjectType;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^198^^^^^197^199^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^202^^^^^201^203^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return type.getPrimitiveType (  ) .getNativeType ( this ) ;^206^^^^^205^207^[REPLACE] return type.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType type [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  EnumElementType type 
[REPLACE]^return null;^216^^^^^215^217^[REPLACE] return this;^[METHOD] getReturnType [TYPE] JSType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return null;^221^^^^^220^222^[REPLACE] return this;^[METHOD] getInstanceType [TYPE] ObjectType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that .isSubtype ( null )   ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^226^^^^^225^227^[REPLACE] return that.isEmptyType (  )  ? TernaryValue.TRUE : TernaryValue.UNKNOWN;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( anyObjectType.isSubtype ( that )  )  {^231^^^^^230^236^[REPLACE] if  ( JSType.isSubtype ( this, that )  )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return that.isObject (  )  && !that.visit (  ) ;^234^^^^^230^236^[REPLACE] return that.isObject (  )  && !that.isNoType (  ) ;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^232^^^^^230^236^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return type;^232^^^^^230^236^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^240^^^^^239^241^[REPLACE] return false;^[METHOD] isFunctionType [TYPE] boolean [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^245^^^^^244^246^[REPLACE] return true;^[METHOD] isNoObjectType [TYPE] boolean [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that.isSubtype ( leastSupertypeVisitor ) ;^250^^^^^249^251^[REPLACE] return that.visit ( leastSupertypeVisitor ) ;^[METHOD] getLeastSupertype [TYPE] JSType [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return that.isSubtype ( greatestSubtypeVisitor ) ;^255^^^^^254^256^[REPLACE] return that.visit ( greatestSubtypeVisitor ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^260^^^^^259^261^[REPLACE] return null;^[METHOD] getImplicitPrototype [TYPE] ObjectType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return this;^265^^^^^264^266^[REPLACE] return null;^[METHOD] getReferenceName [TYPE] String [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^270^^^^^269^271^[REPLACE] return true;^[METHOD] matchesNumberContext [TYPE] boolean [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^275^^^^^274^276^[REPLACE] return true;^[METHOD] matchesObjectContext [TYPE] boolean [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^280^^^^^279^281^[REPLACE] return true;^[METHOD] matchesStringContext [TYPE] boolean [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^returnfalse  &&  that;^285^^^^^284^286^[REPLACE] return this == that;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return   this   ;^290^^^^^289^291^[REPLACE] return System.identityHashCode ( this ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that;^297^^^^^294^298^[REPLACE] return Integer.MAX_VALUE;^[METHOD] getPropertiesCount [TYPE] int [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^303^^^^^301^304^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] getPropertyType [TYPE] JSType [PARAMETER] String propertyName [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  String propertyName  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^309^^^^^307^310^[REPLACE] return true;^[METHOD] hasProperty [TYPE] boolean [PARAMETER] String propertyName [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  String propertyName  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return type;^316^^^^^313^317^[REPLACE] return true;^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String propertyName JSType type boolean inferred boolean inExterns [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  String propertyName  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^321^^^^^320^322^[REPLACE] return null;^[METHOD] getOwnPropertyJSDocInfo [TYPE] JSDocInfo [PARAMETER] String propertyName [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  String propertyName  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^332^^^^^331^333^[REPLACE] return false;^[METHOD] isPropertyTypeInferred [TYPE] boolean [PARAMETER] String propertyName [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  String propertyName  [TYPE]  boolean false  true  [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  [TYPE]  long serialVersionUID 
[REPLACE]^return null.caseNoObjectType (  ) ;^337^^^^^336^338^[REPLACE] return visitor.caseNoObjectType (  ) ;^[METHOD] visit [TYPE] <T> [PARAMETER] Visitor<T> visitor [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  visitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that;^342^^^^^341^343^[REPLACE] return "NoObject";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  visitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return this;^347^^^^^346^348^[REPLACE] return null;^[METHOD] getConstructor [TYPE] FunctionType [PARAMETER] [CLASS] NoObjectType LeastSupertypeVisitor GreatestSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  visitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^private static final long serialVersionUID ;^76^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] getConstructor [TYPE] FunctionType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  Visitor greatestSubtypeVisitor  leastSupertypeVisitor  visitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^79^^^^^78^80^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.ALL_TYPE ) ;^83^^^^^82^84^[REPLACE] return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^87^^^^^86^88^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^91^92^^^^90^93^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^100^101^^^^99^102^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^105^106^^^^104^107^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^110^^^^^109^111^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] LeastSupertypeVisitor   [TYPE]  ObjectType type  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^114^115^^^^113^116^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^119^120^^^^118^121^[REPLACE] return registry.createUnionType ( getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , type ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] LeastSupertypeVisitor   [TYPE]  UnionType type  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^124^^^^^123^125^[REPLACE] return getNativeType ( JSTypeNative.ALL_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.NUMBER_TYPE ) ;^128^129^^^^127^130^[REPLACE] return registry.createUnionType ( JSTypeNative.NO_OBJECT_TYPE, JSTypeNative.VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] LeastSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^private static final long serialVersionUID = 1;^148^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType type [CLASS] GreatestSupertypeVisitor   [TYPE]  JSType primitive  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  EnumElementType type 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^151^^^^^150^152^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.NO_TYPE ) ;^155^^^^^154^156^[REPLACE] return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^159^^^^^158^160^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^163^^^^^162^164^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^167^^^^^166^168^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  FunctionType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^171^^^^^170^172^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^175^^^^^174^176^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^179^^^^^178^180^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] GreatestSupertypeVisitor   [TYPE]  ObjectType type  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^183^^^^^182^184^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^187^^^^^186^195^[ADD] JSType anyObjectType = getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^} else if  ( that.isSubtype ( anyObjectType )  )  {^188^^^^^186^195^[REPLACE] if  ( anyObjectType.isSubtype ( that )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^}  else {^190^^^^^186^195^[REPLACE] } else if  ( that.isSubtype ( anyObjectType )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^193^^^^^186^195^[REPLACE] return getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return anyObjectType;^191^^^^^186^195^[REPLACE] return that;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^189^^^^^186^195^[REPLACE] return anyObjectType;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^}  if  ( that.isSubtype ( anyObjectType )  )  {^190^^^^^186^195^[REPLACE] } else if  ( that.isSubtype ( anyObjectType )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^}   return that;return getNativeType ( JSTypeNative.NO_TYPE ) ;^190^191^192^193^194^186^195^[ADD] else if  ( that.isSubtype ( anyObjectType )  )  { return that; } else { return getNativeType ( JSTypeNative.NO_TYPE ) ; }^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType that [CLASS] GreatestSupertypeVisitor   [TYPE]  UnionType that  [TYPE]  JSType anyObjectType  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^198^^^^^197^199^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^202^^^^^201^203^[REPLACE] return getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return type.getPrimitiveType (  ) .visit ( null ) ;^206^^^^^205^207^[REPLACE] return type.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType type [CLASS] GreatestSupertypeVisitor   [TYPE]  long serialVersionUID  [TYPE]  EnumElementType type  [TYPE]  boolean false  true 
