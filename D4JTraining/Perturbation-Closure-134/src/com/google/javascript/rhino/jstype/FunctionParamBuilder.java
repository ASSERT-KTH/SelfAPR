[REPLACE]^private  JSTypeRegistry registry;^51^^^^^^^[REPLACE] private final JSTypeRegistry registry;^ [CLASS] FunctionParamBuilder  
[REPLACE]^private final Node root ;^52^^^^^^^[REPLACE] private final Node root = new Node ( Token.LP ) ;^ [CLASS] FunctionParamBuilder  
[REPLACE]^this.registry =  null;^55^^^^^54^56^[REPLACE] this.registry = registry;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] JSTypeRegistry registry [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node root  [TYPE]  boolean false  true 
[ADD]^^55^^^^^54^56^[ADD] this.registry = registry;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] JSTypeRegistry registry [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node root  [TYPE]  boolean false  true 
[REPLACE]^if  ( hasVarArgs (  )  )  {^63^^^^^62^71^[REPLACE] if  ( hasOptionalOrVarArgs (  )  )  {^[METHOD] addRequiredParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[ADD]^return false;^63^64^65^^^62^71^[ADD] if  ( hasOptionalOrVarArgs (  )  )  { return false; }^[METHOD] addRequiredParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^return true;^64^^^^^62^71^[REPLACE] return false;^[METHOD] addRequiredParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^for  ( JSType type : types )  { newParameter ( type ) ;^67^^^^^62^71^[REPLACE] for  ( JSType type : types )  {^[METHOD] addRequiredParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^return false;^70^^^^^62^71^[REPLACE] return true;^[METHOD] addRequiredParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^if  ( !type.isEmptyType (  )  )  {^80^^^^^79^88^[REPLACE] if  ( hasVarArgs (  )  )  {^[METHOD] addOptionalParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[ADD]^return false;^80^81^82^^^79^88^[ADD] if  ( hasVarArgs (  )  )  { return false; }^[METHOD] addOptionalParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^return true;^81^^^^^79^88^[REPLACE] return false;^[METHOD] addOptionalParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^for  ( JSType type : types )  { newParameter ( type ) ;^84^^^^^79^88^[REPLACE] for  ( JSType type : types )  {^[METHOD] addOptionalParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^return false;^87^^^^^79^88^[REPLACE] return true;^[METHOD] addOptionalParams [TYPE] boolean [PARAMETER]  types [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  JSType[] types  [TYPE]  Node root 
[REPLACE]^if  ( !type.isEmptyType (  )  )  {^95^^^^^94^109^[REPLACE] if  ( hasVarArgs (  )  )  {^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REMOVE]^if  ( hasOptionalOrVarArgs (  )  )  {     return false; }^95^^^^^94^109^[REMOVE] ^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^return true;^96^^^^^94^109^[REPLACE] return false;^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^if  ( type.isEmptyType (  )  )  {^104^^^^^94^109^[REPLACE] if  ( !type.isEmptyType (  )  )  {^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[ADD]^^104^105^106^^^94^109^[ADD] if  ( !type.isEmptyType (  )  )  { type = registry.createOptionalType ( type ) ; }^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^type =  registry.createOptionalType ( null ) ;^105^^^^^94^109^[REPLACE] type = registry.createOptionalType ( type ) ;^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^newParameter ( type ) .setVarArgs ( false ) ;^107^^^^^94^109^[REPLACE] newParameter ( type ) .setVarArgs ( true ) ;^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^newParameter ( registry.createOptionalType ( type )  ) .setOptionalArg ( true ) ;^107^^^^^94^109^[REPLACE] newParameter ( type ) .setVarArgs ( true ) ;^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^return false;^108^^^^^94^109^[REPLACE] return true;^[METHOD] addVarArgs [TYPE] boolean [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node root 
[REPLACE]^Node newParamewParam = newParameter ( n .setJSType ( this )   ) ;^115^^^^^114^118^[REPLACE] Node newParam = newParameter ( n.getJSType (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[REPLACE]^newParam.newString ( n.isVarArgs (  )  ) ;^116^^^^^114^118^[REPLACE] newParam.setVarArgs ( n.isVarArgs (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[REPLACE]^newParam.setVarArgs ( newParam.isVarArgs (  )  ) ;^116^^^^^114^118^[REPLACE] newParam.setVarArgs ( n.isVarArgs (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[ADD]^^116^117^^^^114^118^[ADD] newParam.setVarArgs ( n.isVarArgs (  )  ) ; newParam.setOptionalArg ( n.isOptionalArg (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[REPLACE]^newParam.setOptionalArg ( n.setOptionalArg (  )  ) ;^117^^^^^114^118^[REPLACE] newParam.setOptionalArg ( n.isOptionalArg (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[REPLACE]^newParam.setOptionalArg ( newParam.isOptionalArg (  )  ) ;^117^^^^^114^118^[REPLACE] newParam.setOptionalArg ( n.isOptionalArg (  )  ) ;^[METHOD] newParameterFromNode [TYPE] void [PARAMETER] Node n [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  root  [TYPE]  boolean false  true 
[REPLACE]^Node newParam = newParameter ( n.getJSType (  )  ) ;^122^^^^^121^126^[REPLACE] Node paramNode = Node.newString ( Token.NAME, "" ) ;^[METHOD] newParameter [TYPE] Node [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node n  newParam  paramNode  root 
[REPLACE]^paramNode .getJSType (  )  ;^123^^^^^121^126^[REPLACE] paramNode.setJSType ( type ) ;^[METHOD] newParameter [TYPE] Node [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node n  newParam  paramNode  root 
[REPLACE]^root.addChildToBack ( root ) ;^124^^^^^121^126^[REPLACE] root.addChildToBack ( paramNode ) ;^[METHOD] newParameter [TYPE] Node [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node n  newParam  paramNode  root 
[REPLACE]^return root;^125^^^^^121^126^[REPLACE] return paramNode;^[METHOD] newParameter [TYPE] Node [PARAMETER] JSType type [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Node n  newParam  paramNode  root 
[REPLACE]^return false;^129^^^^^128^130^[REPLACE] return root;^[METHOD] build [TYPE] Node [PARAMETER] [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node n  newParam  paramNode  root  [TYPE]  boolean false  true 
[REPLACE]^Node lastChild = root .getJSType (  )  ;^133^^^^^132^136^[REPLACE] Node lastChild = root.getLastChild (  ) ;^[METHOD] hasOptionalOrVarArgs [TYPE] boolean [PARAMETER] [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node lastChild  n  newParam  paramNode  root  [TYPE]  boolean false  true 
[REPLACE]^return lastChild != this ;;^134^135^^^^132^136^[REPLACE] return lastChild != null && ( lastChild.isOptionalArg (  )  || lastChild.isVarArgs (  )  ) ;^[METHOD] hasOptionalOrVarArgs [TYPE] boolean [PARAMETER] [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node lastChild  n  newParam  paramNode  root  [TYPE]  boolean false  true 
[REPLACE]^Node lastChild = root .getJSType (  )  ;^139^^^^^138^141^[REPLACE] Node lastChild = root.getLastChild (  ) ;^[METHOD] hasVarArgs [TYPE] boolean [PARAMETER] [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node lastChild  n  newParam  paramNode  root  [TYPE]  boolean false  true 
[REPLACE]^return lastChild != false && lastChild.newString (  ) ;^140^^^^^138^141^[REPLACE] return lastChild != null && lastChild.isVarArgs (  ) ;^[METHOD] hasVarArgs [TYPE] boolean [PARAMETER] [CLASS] FunctionParamBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  Node lastChild  n  newParam  paramNode  root  [TYPE]  boolean false  true 
