[REPLACE]^private static final long serialVersionUID  = null ;^71^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] JSType 1  
[REPLACE]^public static final String UNKNOWN_NAME  = null ;^73^74^^^^73^74^[REPLACE] public static final String UNKNOWN_NAME = "Unknown class name";^ [CLASS] JSType 1  
[REPLACE]^public static final String NOT_A_CLASS  = null ;^76^77^^^^76^77^[REPLACE] public static final String NOT_A_CLASS = "Not declared as a constructor";^ [CLASS] JSType 1  
[REPLACE]^public static final  char  NOT_A_TYPE = "Not declared as a type name";^79^80^^^^79^80^[REPLACE] public static final String NOT_A_TYPE = "Not declared as a type name";^ [CLASS] JSType 1  
[REPLACE]^public static final String EMPTY_TYPE_COMPONENT  = null ;^82^83^^^^82^83^[REPLACE] public static final String EMPTY_TYPE_COMPONENT = "Named type with empty name component";^ [CLASS] JSType 1  
[REPLACE]^final Comparator<JSType> ALPHA = new Comparator<JSType> (  )  {^90^^^^^90^94^[REPLACE] static final Comparator<JSType> ALPHA = new Comparator<JSType> (  )  {^ [CLASS] JSType 1  
[REPLACE]^public static final int ENUMDECL = 1 * 3;^97^^^^^^^[REPLACE] public static final int ENUMDECL = 1;^ [CLASS] JSType 1  
[REPLACE]^public static final int NOT_ENUMDECL = 0 + 2;^98^^^^^^^[REPLACE] public static final int NOT_ENUMDECL = 0;^ [CLASS] JSType 1  
[REPLACE]^if  ( that.isAllType (  )  && that.isNoType (  )  &&true (  )  )  {^476^^^^^475^495^[REPLACE] if  ( that.isAllType (  )  || that.isNoType (  )  || that.isUnknownType (  )  )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return getGreatestSubtype  (  this, that  )  ;  ;^477^^^^^475^495^[REPLACE] return UNKNOWN;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( t .isNoObjectType (  )   )  {^479^^^^^475^495^[REPLACE] if  ( that.isEnumElementType (  )  )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^479^480^481^^^475^495^[ADD] if  ( that.isEnumElementType (  )  )  { return that.testForEquality ( this ) ; }^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return that.testForEquality  (  this  )  ;  ;^480^^^^^475^495^[REPLACE] return that.testForEquality ( this ) ;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return t.canTestForEqualityWith ( this ) ;^480^^^^^475^495^[REPLACE] return that.testForEquality ( this ) ;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( ! that instanceof UnionType )  {^482^^^^^475^495^[REPLACE] if  ( that instanceof UnionType )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^UnionType union =  ( UnionType )  that;TernaryValue result = null;^482^483^484^485^486^475^495^[ADD] if  ( that instanceof UnionType )  { UnionType union =  ( UnionType )  that; TernaryValue result = null; for  ( JSType t : union.alternates )  { TernaryValue test = this.testForEquality ( t ) ;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( result !=test )  {^487^^^^^475^495^[REPLACE] if  ( result == null )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^487^488^489^490^491^475^495^[ADD] if  ( result == null )  { result = test; } else if  ( !result.equals ( test )  )  { return UNKNOWN; }^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  else {^489^^^^^475^495^[REPLACE] } else if  ( !result.equals ( test )  )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return getGreatestSubtype  (  this, that  )  ;  ;^490^^^^^475^495^[REPLACE] return UNKNOWN;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^result =  null;^488^^^^^475^495^[REPLACE] result = test;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^} else if  ( result.equals ( test )  )  {^489^^^^^475^495^[REPLACE] } else if  ( !result.equals ( test )  )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}^489^490^491^^^475^495^[ADD] else if  ( !result.equals ( test )  )  { return UNKNOWN; }^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^result =  null;^488^^^^^482^493^[REPLACE] result = test;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return getGreatestSubtype  (  this, that  )  ;  ;^490^^^^^482^493^[REPLACE] return UNKNOWN;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^UnionType union =  (  ( UnionType )   ( thatType )  )  ;^483^^^^^482^493^[REPLACE] UnionType union =  ( UnionType )  that;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^JSType element  ;^484^^^^^482^493^[REPLACE] TernaryValue result = null;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^JSType element  ;^485^^^^^482^493^[REPLACE] for  ( JSType t : union.alternates )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^TernaryValue test = this.canTestForEqualityWith ( t ) ;^486^^^^^482^493^[REPLACE] TernaryValue test = this.testForEquality ( t ) ;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  (test != null )  {^487^^^^^475^495^[REPLACE] if  ( result == null )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^result = test;return UNKNOWN;^487^488^489^490^491^475^495^[ADD] if  ( result == null )  { result = test; } else if  ( !result.equals ( test )  )  { return UNKNOWN; }^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( !result .testForEquality ( t )   )  {^489^^^^^475^495^[REPLACE] } else if  ( !result.equals ( test )  )  {^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}   return UNKNOWN;^489^490^491^^^475^495^[ADD] else if  ( !result.equals ( test )  )  { return UNKNOWN; }^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^485^486^487^488^^482^493^[ADD] for  ( JSType t : union.alternates )  { TernaryValue test = this.testForEquality ( t ) ; if  ( result == null )  { result = test;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^TernaryValue result = false;^484^^^^^482^493^[REPLACE] TernaryValue result = null;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^494^^^^^475^495^[REPLACE] return null;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType t  that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  TernaryValue result  test  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  (  thatType.isAllType (  )  )  {^574^^^^^573^591^[REPLACE] if  ( thatType.isEmptyType (  )  || thatType.isAllType (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REMOVE]^if  ( thisType.isSubtype ( thatType )  )  {     return thisType; }else     if  ( thatType.isSubtype ( thisType )  )  {         return thatType;     }else         if  (  ( thisType.isObject (  )  )  &&  ( thatType.isObject (  )  )  )  {             return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;         }^574^^^^^573^591^[REMOVE] ^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thisType.isUnknownType (  )  && true (  )  )  {^578^^^^^573^591^[REPLACE] } else if  ( thisType.isUnknownType (  )  || thatType.isUnknownType (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}   thisType.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^578^579^^581^582^573^591^[ADD] else if  ( thisType.isUnknownType (  )  || thatType.isUnknownType (  )  )  {  return thisType.equals ( thatType )  ? thisType : thisType.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  else {^583^^^^^573^591^[REPLACE] } else if  ( thisType.isSubtype ( thatType )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  else {^585^^^^^573^591^[REPLACE] } else if  ( thatType.isSubtype ( thisType )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}   return thatType;return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^585^586^587^588^589^573^591^[ADD] else if  ( thatType.isSubtype ( thisType )  )  { return thatType; } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  { return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ; }^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  else {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thisType.getLeastSupertype ( JSTypeNative.NO_OBJECT_TYPE ) ;^588^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^588^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType;  ;^586^^^^^573^591^[REPLACE] return thatType;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  (true (  )  || thatType.isObject (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType;^584^^^^^573^591^[REPLACE] return thisType;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^} else if  ( thisType.equals (  )  || thatType.isObject (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thisType.getNativeType  (  JSTypeNative.NO_OBJECT_TYPE  )  ;  ;^588^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thisType;^586^^^^^573^591^[REPLACE] return thatType;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}   return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^587^588^589^^^573^591^[ADD] else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  { return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ; }^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thisType.equals ( thatType )  ? thisType : thisType.getLeastSupertype ( JSTypeNative.UNKNOWN_TYPE ) ;^581^582^^^^573^591^[REPLACE] return thisType.equals ( thatType )  ? thisType : thisType.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thisType.isSubtype ( thatType )  )  {^583^^^^^573^591^[REPLACE] } else if  ( thisType.isSubtype ( thatType )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REMOVE]^if  ( literals.contains ( outcome )  )  {     return this; }else {     return getNativeType ( JSTypeNative.NO_TYPE ) ; }^585^^^^^573^591^[REMOVE] ^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thisType.isObject (  )  ) {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^} else if  (  thatType.isObject (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REMOVE]^if  (  (  ( that.isAllType (  )  )  ||  ( that.isNoType (  )  )  )  ||  ( that.isUnknownType (  )  )  )  {     return UNKNOWN; }^587^^^^^573^591^[REMOVE] ^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType.getLeastSupertype ( JSTypeNative.NO_OBJECT_TYPE ) ;^588^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^} else if  ( thisType.isObject (  )  ||true (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType .createUnionType ( thisType , thisType )  ;^588^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType;  ;^584^^^^^573^591^[REPLACE] return thisType;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType.getGreatestSubtype  (  thisType  )  ;  ;^577^^^^^573^591^[REPLACE] return thatType.getGreatestSubtype ( thisType ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thisType.isUnknownType (  )  && thatType.isUnknownType (  )  )  {^578^^^^^573^591^[REPLACE] } else if  ( thisType.isUnknownType (  )  || thatType.isUnknownType (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thatType.isSubtype ( thisType )  )  {^585^^^^^573^591^[REPLACE] } else if  ( thatType.isSubtype ( thisType )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^} else if  ( thisType.isObject (  )  ) {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( true (  )  || thatType.isObject (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^}   return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ;^585^586^587^588^589^573^591^[ADD] else if  ( thatType.isSubtype ( thisType )  )  { return thatType; } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  { return thisType.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ; }^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return nullType;^584^^^^^573^591^[REPLACE] return thisType;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^}  if  ( thisType.isObject (  )  || thatType.isObject (  )  )  {^587^^^^^573^591^[REPLACE] } else if  ( thisType.isObject (  )  && thatType.isObject (  )  )  {^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType.getLeastSupertype ( thisType ) ;^577^^^^^573^591^[REPLACE] return thatType.getGreatestSubtype ( thisType ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thisType .testForEquality ( thatType )   ? thisType : thisType.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^581^582^^^^573^591^[REPLACE] return thisType.equals ( thatType )  ? thisType : thisType.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return getNativeType  (  JSTypeNative.NO_TYPE  )  ;  ;^590^^^^^573^591^[REPLACE] return thisType.getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( ! that instanceof UnionType )  {^648^^^^^646^665^[REPLACE] if  ( that instanceof UnionType )  {^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[ADD]^^648^649^650^651^^646^665^[ADD] if  ( that instanceof UnionType )  { Pair<JSType, JSType> p = that.getTypesUnderEquality ( this ) ; return Pair.of ( p.second, p.first ) ; }^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair .of (  )  ;^650^^^^^646^665^[REPLACE] return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^Pair<JSType, JSType> p = that .getTypesUnderInequality ( that )  ;^649^^^^^646^665^[REPLACE] Pair<JSType, JSType> p = that.getTypesUnderEquality ( this ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( false.second, p.first ) ;^650^^^^^646^665^[REPLACE] return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^Pair<JSType, JSType> p = that.getTypesUnderInequality ( this ) ;^649^^^^^646^665^[REPLACE] Pair<JSType, JSType> p = that.getTypesUnderEquality ( this ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( this, this ) ;^656^^^^^646^665^[REPLACE] return Pair.of ( null, null ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( null, that ) ;^660^^^^^646^665^[REPLACE] return Pair.of ( this, that ) ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return ;^664^^^^^646^665^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getTypesUnderEquality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^if  ( ! that instanceof UnionType )  {^681^^^^^679^698^[REPLACE] if  ( that instanceof UnionType )  {^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( null.second, p.first ) ;^683^^^^^679^698^[REPLACE] return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[ADD]^^682^683^^^^679^698^[ADD] Pair<JSType, JSType> p = that.getTypesUnderInequality ( this ) ; return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( 0.second, p.first ) ;^683^^^^^679^698^[REPLACE] return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^Pair<JSType, JSType> p = that.getTypesUnderEquality ( this ) ;^682^^^^^679^698^[REPLACE] Pair<JSType, JSType> p = that.getTypesUnderInequality ( this ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( true, true ) ;^689^^^^^679^698^[REPLACE] return Pair.of ( null, null ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( null, that ) ;^693^^^^^679^698^[REPLACE] return Pair.of ( this, that ) ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return ;^697^^^^^679^698^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getTypesUnderInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^if  ( ! that instanceof UnionType )  {^725^^^^^723^739^[REPLACE] if  ( that instanceof UnionType )  {^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( false.second, p.first ) ;^727^^^^^723^739^[REPLACE] return Pair.of ( p.second, p.first ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^Pair<JSType, JSType> p = that.getTypesUnderShallowEquality ( this ) ;^726^^^^^723^739^[REPLACE] Pair<JSType, JSType> p = that.getTypesUnderShallowInequality ( this ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^JSType, JSType> p = that.getTypesUnderInequality ( this )  ;^726^^^^^723^739^[REPLACE] Pair<JSType, JSType> p = that.getTypesUnderShallowInequality ( this ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^if  ( this .isAllType (  )   && that^733^734^^^^723^739^[REPLACE] if  ( this.isNullType (  )  && that.isNullType (  )  || this.isVoidType (  )  && that.isVoidType (  )  )  {^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( null, that ) ;^737^^^^^733^738^[REPLACE] return Pair.of ( this, that ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( this, this ) ;^735^^^^^733^738^[REPLACE] return Pair.of ( null, null ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( true, true ) ;^735^^^^^723^739^[REPLACE] return Pair.of ( null, null ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^return Pair.of ( null, that ) ;^737^^^^^723^739^[REPLACE] return Pair.of ( this, that ) ;^[METHOD] getTypesUnderShallowInequality [TYPE] Pair [PARAMETER] JSType that [CLASS] JSType 1   [TYPE]  JSTypeRegistry registry  [TYPE]  JSType that  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA  [TYPE]  Pair p 
[REPLACE]^if  ( thisType.isUnknownType (  )  )  {^800^^^^^798^825^[REPLACE] if  ( thatType.isUnknownType (  )  )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^801^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( thisType .testForEquality ( thisType )   )  {^804^^^^^798^825^[REPLACE] if  ( thisType.equals ( thatType )  )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^804^805^806^^^798^825^[ADD] if  ( thisType.equals ( thatType )  )  { return true; }^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^805^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return true;  ;^805^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( thisType.isNullType (  )  )  {^808^^^^^798^825^[REPLACE] if  ( thatType.isAllType (  )  )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^808^809^810^^^798^825^[ADD] if  ( thatType.isAllType (  )  )  { return true; }^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^809^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( ! thatType instanceof UnionType )  {^812^^^^^798^825^[REPLACE] if  ( thatType instanceof UnionType )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^UnionType union =  ( UnionType ) thatType;^812^813^814^815^816^798^825^[ADD] if  ( thatType instanceof UnionType )  { UnionType union =  ( UnionType ) thatType; for  ( JSType element : union.alternates )  { if  ( thisType.isSubtype ( element )  )  { return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( thatType.isSubtype ( element )  )  {^815^^^^^798^825^[REPLACE] if  ( thisType.isSubtype ( element )  )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^816^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[ADD]^^814^815^816^817^^812^819^[ADD] for  ( JSType element : union.alternates )  { if  ( thisType.isSubtype ( element )  )  { return true; }^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return true;  ;^816^^^^^812^819^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^UnionType union =  (  ( UnionType )   ( that )  )  ;^813^^^^^812^819^[REPLACE] UnionType union =  ( UnionType ) thatType;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^TernaryValue result = null  ;^814^^^^^812^819^[REPLACE] for  ( JSType element : union.alternates )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return true;  ;^816^^^^^798^825^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return false;^816^^^^^812^819^[REPLACE] return true;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^if  ( ! thatType instanceof NamedType )  {^821^^^^^798^825^[REPLACE] if  ( thatType instanceof NamedType )  {^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return thatType.isSubtype (  (  ( NamedType ) thatType ) .referencedType ) ;^822^^^^^798^825^[REPLACE] return thisType.isSubtype (  (  ( NamedType ) thatType ) .referencedType ) ;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
[REPLACE]^return true;^824^^^^^798^825^[REPLACE] return false;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType thisType JSType thatType [CLASS] JSType 1   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  JSType element  thatType  thisType  [TYPE]  boolean false  true  [TYPE]  String EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  propertyName  [TYPE]  long serialVersionUID  [TYPE]  int ENUMDECL  NOT_ENUMDECL  [TYPE]  Comparator ALPHA 
