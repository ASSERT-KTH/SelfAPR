[REPLACE]^private  final long serialVersionUID = 1L;^62^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private static final int MAX_UNION_SIZE ;^66^^^^^^^[REPLACE] private static final int MAX_UNION_SIZE = 20;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private  JSTypeRegistry registry;^68^^^^^^^[REPLACE] private final JSTypeRegistry registry;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private final List<JSType> alternates ;^69^^^^^^^[REPLACE] private final List<JSType> alternates = Lists.newArrayList (  ) ;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private boolean isAllType ;^70^^^^^^^[REPLACE] private boolean isAllType = false;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private boolean isNativeUnknownType ;^71^^^^^^^[REPLACE] private boolean isNativeUnknownType = false;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private boolean areAllUnknownsChecked ;^72^^^^^^^[REPLACE] private boolean areAllUnknownsChecked = true;^ [CLASS] UnionTypeBuilder  
[REPLACE]^private JSType result ;^75^^^^^^^[REPLACE] private JSType result = null;^ [CLASS] UnionTypeBuilder  
[REPLACE]^if  ( unionAlt.isNoType (  )  )  {^88^^^^^85^129^[REPLACE] if  ( alternate.isNoType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return null;^89^^^^^85^129^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^isAllType = isAllType  >  alternate.isAllType (  ) ;^92^^^^^85^129^[REPLACE] isAllType = isAllType || alternate.isAllType (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^94^^^^^85^129^[ADD] boolean isAlternateUnknown = alternate instanceof UnknownType;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^95^^^^^85^129^[ADD] isNativeUnknownType = isNativeUnknownType || isAlternateUnknown;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( true )  {^96^^^^^85^129^[REPLACE] if  ( isAlternateUnknown )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^97^98^^^^85^129^[ADD] areAllUnknownsChecked = areAllUnknownsChecked && alternate.isCheckedUnknownType (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( isAllType && !isNativeUnknownType )  {^100^^^^^85^129^[REPLACE] if  ( !isAllType && !isNativeUnknownType )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^100^101^102^103^104^85^129^[ADD] if  ( !isAllType && !isNativeUnknownType )  { if  ( alternate instanceof UnionType )  { UnionType union =  ( UnionType )  alternate; for  ( JSType unionAlt : union.getAlternates (  )  )  { addAlternate ( unionAlt ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^result = false;^126^^^^^100^127^[REPLACE] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( ! alternate instanceof UnionType )  {^101^^^^^85^129^[REPLACE] if  ( alternate instanceof UnionType )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^UnionType union =  ( UnionType )  alternate;^101^102^103^104^105^85^129^[ADD] if  ( alternate instanceof UnionType )  { UnionType union =  ( UnionType )  alternate; for  ( JSType unionAlt : union.getAlternates (  )  )  { addAlternate ( unionAlt ) ; }^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( alternate.isUnknownType (  )  )  {^107^^^^^101^124^[REPLACE] if  ( !alternate.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^Iterator<JSType> it = alternates.iterator (  ) ;JSType current = it.next (  ) ;^107^108^109^110^^101^124^[ADD] if  ( !alternate.isUnknownType (  )  )  { Iterator<JSType> it = alternates.iterator (  ) ; while  ( it.hasNext (  )  )  { JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if   (  !alternate.isUnknownType  (    )    )   {  ;^111^^^^^101^124^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^111^112^^114^^101^124^[ADD] if  ( !current.isUnknownType (  )  )  { if  ( alternate.isSubtype ( current )  )  { return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( alternate .isNoType (  )   )  {^112^^^^^101^124^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  if  ( current.isSubtype ( unionAlt )  )  {^115^^^^^101^124^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^it.next (  ) ;^117^^^^^101^124^[REPLACE] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return this;  ;^114^^^^^101^124^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^}   it.remove (  ) ;^115^116^117^118^^101^124^[ADD] else if  ( current.isSubtype ( alternate )  )  {  it.remove (  ) ; }^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^117^^^^^101^124^[ADD] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return null;^114^^^^^101^124^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( alternate.isSubtype ( unionAlt )  )  {^112^^^^^101^124^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  else {^115^^^^^101^124^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.next (  )  ;^108^^^^^101^124^[REPLACE] Iterator<JSType> it = alternates.iterator (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = null.next (  ) ;^110^^^^^101^124^[REPLACE] JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( current.isUnknownType (  )  )  {^111^^^^^101^124^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if   (  alternate.isNoType  (    )    )   {  ;^112^^^^^101^124^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^112^113^114^115^^101^124^[ADD] if  ( alternate.isSubtype ( current )  )  {  return this; } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  if  ( current.isSubtype ( alternate )  )  {^115^^^^^101^124^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REMOVE]^it.next (  )  ;^117^^^^^101^124^[REMOVE] ^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^} else if  ( unionAlt.isSubtype ( alternate )  )  {^115^^^^^101^124^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^123^^^^^101^124^[ADD] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^for  ( JSType result : union.getAlternates (  )  )  {^103^^^^^101^106^[REPLACE] for  ( JSType unionAlt : union.getAlternates (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^102^^^^^101^106^[ADD] UnionType union =  ( UnionType )  alternate;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.next (  )  ;^103^^^^^101^106^[REPLACE] for  ( JSType unionAlt : union.getAlternates (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( alternate.isUnknownType (  )  )  {^107^^^^^85^129^[REPLACE] if  ( !alternate.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^Iterator<JSType> it = alternates.iterator (  ) ;JSType current = it.next (  ) ;^107^108^109^110^^85^129^[ADD] if  ( !alternate.isUnknownType (  )  )  { Iterator<JSType> it = alternates.iterator (  ) ; while  ( it.hasNext (  )  )  { JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( current.isUnknownType (  )  )  {^111^^^^^85^129^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( unionAlt.isSubtype ( current )  )  {^112^^^^^85^129^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  else {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^it.next (  ) ;^117^^^^^85^129^[REPLACE] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return null;^114^^^^^85^129^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^}   it.remove (  ) ;^115^116^117^118^^85^129^[ADD] else if  ( current.isSubtype ( alternate )  )  {  it.remove (  ) ; }^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^112^113^114^115^^85^129^[ADD] if  ( alternate.isSubtype ( current )  )  {  return this; } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  if  ( current.isSubtype ( alternate )  )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return this;  ;^114^^^^^85^129^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^117^^^^^85^129^[ADD] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.next (  )  ;^108^^^^^85^129^[REPLACE] Iterator<JSType> it = alternates.iterator (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.hasNext (  ) ;^110^^^^^85^129^[REPLACE] JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( !current.isSubtype (  )  )  {^111^^^^^85^129^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^111^112^^114^^85^129^[ADD] if  ( !current.isUnknownType (  )  )  { if  ( alternate.isSubtype ( current )  )  { return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if   (  alternate.isNoType  (    )    )   {  ;^112^^^^^85^129^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^} else if  ( current .isNoType (  )   )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^it .next (  )  ;^117^^^^^85^129^[REPLACE] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^103^104^105^^^101^106^[ADD] for  ( JSType unionAlt : union.getAlternates (  )  )  { addAlternate ( unionAlt ) ; }^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^result = this;^123^^^^^101^106^[REPLACE] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return null;^114^^^^^101^106^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.next (  )  ;^108^^^^^101^106^[REPLACE] Iterator<JSType> it = alternates.iterator (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^110^^^^^101^106^[ADD] JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^107^108^109^110^^101^124^[ADD] if  ( !alternate.isUnknownType (  )  )  { Iterator<JSType> it = alternates.iterator (  ) ; while  ( it.hasNext (  )  )  { JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if   (  areAllUnknownsChecked  )   {  ;^115^^^^^101^124^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^110^^^^^101^124^[ADD] JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( !current.isSubtype (  )  )  {^111^^^^^101^124^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^it .next (  )  ;^117^^^^^101^124^[REPLACE] it.remove (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^result = this;^123^^^^^101^124^[REPLACE] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if   (  alternate.isNoType  (    )    )   {  ;^107^^^^^85^129^[REPLACE] if  ( !alternate.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( alternate.isSubtype ( unionAlt )  )  {^112^^^^^85^129^[REPLACE] if  ( alternate.isSubtype ( current )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^} else if  ( unionAlt.isSubtype ( alternate )  )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  if  ( unionAlt.isSubtype ( alternate )  )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REMOVE]^if  ( alternate.isNoType (  )  )  {     return this; }^115^^^^^85^129^[REMOVE] ^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( !current .isCheckedUnknownType (  )   )  {^111^^^^^85^129^[REPLACE] if  ( !current.isUnknownType (  )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^} else if  ( current.isSubtype ( unionAlt )  )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^}  if  ( current.isSubtype ( unionAlt )  )  {^115^^^^^85^129^[REPLACE] } else if  ( current.isSubtype ( alternate )  )  {^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[ADD]^^123^^^^^101^106^[ADD] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^result = true;^126^^^^^101^106^[REPLACE] result = null;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = it.next (  )  ;^102^^^^^101^106^[REPLACE] UnionType union =  ( UnionType )  alternate;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^JSType current = null.next (  ) ;^110^^^^^101^106^[REPLACE] JSType current = it.next (  ) ;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^return null;^128^^^^^85^129^[REPLACE] return this;^[METHOD] addAlternate [TYPE] UnionTypeBuilder [PARAMETER] JSType alternate [CLASS] UnionTypeBuilder   [TYPE]  UnionType union  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Iterator it  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE 
[REPLACE]^if  ( result != null )  {^137^^^^^136^163^[REPLACE] if  ( result == null )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if   (  areAllUnknownsChecked  )   {  ;^138^^^^^136^163^[REPLACE] if  ( isAllType )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  else {^140^^^^^136^163^[REPLACE] } else if  ( isNativeUnknownType )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ;result = registry.getNativeType ( UNKNOWN_TYPE ) ;^140^141^142^143^144^136^163^[ADD] else if  ( isNativeUnknownType )  { if  ( areAllUnknownsChecked )  { result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ; } else { result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  ==  MAX_UNION_SIZE) {^149^^^^^140^160^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  == MAX_UNION_SIZE) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  else {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, this ) ;^153^^^^^149^159^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result ;^155^^^^^149^159^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^157^^^^^149^159^[REPLACE] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^150^^^^^140^160^[REPLACE] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  <=  1) {^152^^^^^140^160^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (size  ) {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REMOVE]^if  ( size > 1 )  {     result = new UnionType ( registry, alternateSet ) ; }else     if  ( size == 1 )  {         result = alternates.iterator (  ) .next (  ) ;     }else {         result = registry.getNativeType ( NO_TYPE ) ;     }^154^^^^^140^160^[REMOVE] ^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^157^^^^^154^158^[REPLACE] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^155^^^^^140^160^[ADD] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  = null ;^155^^^^^140^160^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^157^^^^^140^160^[ADD] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^153^^^^^140^160^[ADD] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (size  !=  0 ) {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^140^160^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  =  result ;^155^^^^^140^160^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^150^^^^^140^160^[ADD] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result ;^155^^^^^140^160^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^157^^^^^140^160^[REPLACE] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^JSType current = it.next (  )  ;^147^^^^^140^160^[REPLACE] Set<JSType> alternateSet = Sets.newUnmodifiableHashSet ( alternates ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^148^^^^^140^160^[ADD] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if   (  !alternate.isUnknownType  (    )    )   {  ;^141^^^^^136^163^[REPLACE] if  ( areAllUnknownsChecked )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ;result = registry.getNativeType ( UNKNOWN_TYPE ) ;^141^142^143^144^145^136^163^[ADD] if  ( areAllUnknownsChecked )  { result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ; } else { result = registry.getNativeType ( UNKNOWN_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^144^^^^^141^145^[REPLACE] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^142^^^^^136^163^[REPLACE] result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^142^^^^^136^163^[ADD] result = registry.getNativeType ( CHECKED_UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^144^^^^^136^163^[REPLACE] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  ==  size) {^149^^^^^136^163^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  ==  1) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (size  !=  0 ) {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, null ) ;^153^^^^^149^159^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  = null ;^155^^^^^149^159^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^157^^^^^149^159^[ADD] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^150^^^^^136^163^[REPLACE] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  <  1) {^152^^^^^136^163^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  else {^154^^^^^136^163^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^136^163^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^155^^^^^136^163^[ADD] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^157^^^^^136^163^[ADD] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, null ) ;^153^^^^^136^163^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (   1) {^154^^^^^136^163^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^157^^^^^154^158^[ADD] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result ;^155^^^^^136^163^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, false ) ;^153^^^^^136^163^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  =  result ;^155^^^^^136^163^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^int size = alternateSet.size (  ) ;result = registry.getNativeType ( UNKNOWN_TYPE ) ;^147^148^149^150^^136^163^[ADD] Set<JSType> alternateSet = Sets.newUnmodifiableHashSet ( alternates ) ; int size = alternateSet.size (  ) ; if  ( size > MAX_UNION_SIZE )  { result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^148^^^^^136^163^[ADD] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^139^^^^^136^163^[ADD] result = registry.getNativeType ( ALL_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if  ( isNativeUnknownType )  {^140^^^^^136^163^[REPLACE] } else if  ( isNativeUnknownType )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  <  MAX_UNION_SIZE) {^149^^^^^140^160^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  ==  0 ) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (size  !=  1) {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  =  result ;^155^^^^^149^159^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  ==  1) {^152^^^^^140^160^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (size  ||  1) {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, this ) ;^153^^^^^140^160^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  else {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^int size = null.size (  ) ;^148^^^^^140^160^[REPLACE] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REMOVE]^if  ( size > 1 )  {     result = new UnionType ( registry, alternateSet ) ; }else     if  ( size == 1 )  {         result = alternates.iterator (  ) .next (  ) ;     }else {         result = registry.getNativeType ( NO_TYPE ) ;     }^141^^^^^136^163^[REMOVE] ^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^144^^^^^136^163^[ADD] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^144^^^^^141^145^[ADD] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  !=  MAX_UNION_SIZE) {^149^^^^^136^163^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  >=  1) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^152^153^154^155^^149^159^[ADD] if  ( size > 1 )  { result = new UnionType ( registry, alternateSet ) ; } else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = alternates.iterator (  ) .next (  ) ;result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^149^159^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  >=  0 ) {^152^^^^^136^163^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = alternates.iterator (  ) .next (  ) ;result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^136^163^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( ALL_TYPE )  ;^157^^^^^136^163^[REPLACE] result = registry.getNativeType ( NO_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, true ) ;^153^^^^^136^163^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result = registry.getNativeType ( UNKNOWN_TYPE )  ;^139^^^^^136^163^[REPLACE] result = registry.getNativeType ( ALL_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^JSType current = it.next (  )  ;^147^^^^^136^163^[REPLACE] Set<JSType> alternateSet = Sets.newUnmodifiableHashSet ( alternates ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^int size = null.size (  ) ;^148^^^^^136^163^[REPLACE] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  >= MAX_UNION_SIZE) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (size  &&  1) {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^149^159^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, false ) ;^153^^^^^149^159^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  <  1) {^152^^^^^140^160^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^result = new UnionType ( registry, alternateSet ) ;result = alternates.iterator (  ) .next (  ) ;^152^153^154^155^^140^160^[ADD] if  ( size > 1 )  { result = new UnionType ( registry, alternateSet ) ; } else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (size  !=  1) {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result =  new UnionType ( registry, null ) ;^153^^^^^140^160^[REPLACE] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  <=  MAX_UNION_SIZE) {^149^^^^^136^163^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  <  0 ) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (size  != MAX_UNION_SIZE) {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^150^^^^^136^163^[ADD] result = registry.getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^result = new UnionType ( registry, alternateSet ) ;result = alternates.iterator (  ) .next (  ) ;^152^153^154^155^^136^163^[ADD] if  ( size > 1 )  { result = new UnionType ( registry, alternateSet ) ; } else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (size  !=  1) {^154^^^^^136^163^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^result  = null ;^155^^^^^136^163^[REPLACE] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (MAX_UNION_SIZE  ||  1) {^154^^^^^136^163^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^int size = 1.size (  ) ;^148^^^^^136^163^[REPLACE] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  !=  MAX_UNION_SIZE) {^149^^^^^140^160^[REPLACE] if  ( size > MAX_UNION_SIZE )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^result = registry.getNativeType ( UNKNOWN_TYPE ) ;result = new UnionType ( registry, alternateSet ) ;^149^150^151^152^153^140^160^[ADD] if  ( size > MAX_UNION_SIZE )  { result = registry.getNativeType ( UNKNOWN_TYPE ) ; } else { if  ( size > 1 )  { result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  !=  1) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^result = new UnionType ( registry, alternateSet ) ;result = alternates.iterator (  ) .next (  ) ;^152^153^154^155^^149^159^[ADD] if  ( size > 1 )  { result = new UnionType ( registry, alternateSet ) ; } else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (MAX_UNION_SIZE  &&  1) {^154^^^^^149^159^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^155^^^^^149^159^[ADD] result = alternates.iterator (  ) .next (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (size  >=  1) {^152^^^^^140^160^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^} else if (size  ) {^154^^^^^140^160^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^}   result = alternates.iterator (  ) .next (  ) ;result = registry.getNativeType ( NO_TYPE ) ;^154^155^156^157^158^140^160^[ADD] else if  ( size == 1 )  { result = alternates.iterator (  ) .next (  ) ; } else { result = registry.getNativeType ( NO_TYPE ) ; }^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^JSType current = it.next (  )  ;^148^^^^^140^160^[REPLACE] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  !=  1) {^152^^^^^149^159^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^if (MAX_UNION_SIZE  ==  0 ) {^152^^^^^136^163^[REPLACE] if  ( size > 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^}  if (   1) {^154^^^^^136^163^[REPLACE] } else if  ( size == 1 )  {^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[ADD]^^153^^^^^136^163^[ADD] result = new UnionType ( registry, alternateSet ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^int size = false.size (  ) ;^148^^^^^136^163^[REPLACE] int size = alternateSet.size (  ) ;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
[REPLACE]^return result;  ;^162^^^^^136^163^[REPLACE] return result;^[METHOD] build [TYPE] JSType [PARAMETER] [CLASS] UnionTypeBuilder   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean areAllUnknownsChecked  false  isAllType  isAlternateUnknown  isNativeUnknownType  true  [TYPE]  JSType alternate  current  result  unionAlt  [TYPE]  Set alternateSet  [TYPE]  List alternates  [TYPE]  long serialVersionUID  [TYPE]  int MAX_UNION_SIZE  size 
