[REPLACE]^public static  int ONLY_BODY_FLAG = 1 << 0;^83^^^^^^^[REPLACE] public static final int ONLY_BODY_FLAG = 1 << 0;^ [CLASS] Decompiler  
[REPLACE]^public static final int TO_SOURCE_FLAG  = null ;^88^^^^^^^[REPLACE] public static final int TO_SOURCE_FLAG = 1 << 1;^ [CLASS] Decompiler  
[REPLACE]^public  final int INITIAL_INDENT_PROP = 1;^93^^^^^^^[REPLACE] public static final int INITIAL_INDENT_PROP = 1;^ [CLASS] Decompiler  
[REPLACE]^public static   long  INDENT_GAP_PROP = 2;^98^^^^^^^[REPLACE] public static final int INDENT_GAP_PROP = 2;^ [CLASS] Decompiler  
[REPLACE]^public static final int CASE_GAP_PROP  = null ;^103^^^^^^^[REPLACE] public static final int CASE_GAP_PROP = 3;^ [CLASS] Decompiler  
[REPLACE]^private static final int FUNCTION_END  = null ;^107^^^^^^^[REPLACE] private static final int FUNCTION_END = Token.LAST_TOKEN + 1;^ [CLASS] Decompiler  
[REPLACE]^private char[] sourceBuffer = new char[128 >>> 1];^901^^^^^^^[REPLACE] private char[] sourceBuffer = new char[128];^ [CLASS] Decompiler  
[REPLACE]^private static final boolean printSource = true;^908^^^^^^^[REPLACE] private static final boolean printSource = false;^ [CLASS] Decompiler  
[REPLACE]^addToken ( Token.NAME )  ;^171^^^^^170^220^[REPLACE] addToken ( Token.NUMBER ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^int lengthEncodingSize = 1  ;^190^^^^^170^220^[REPLACE] long lbits =  ( long ) n;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  ==  n )  {^191^^^^^170^220^[REPLACE] if  ( lbits != n )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  !=  0 )  Kit.codeBug (  ) ;^204^^^^^191^219^[REPLACE] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[ADD]^^204^205^^^^191^219^[ADD] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >=  Character.MAX_VALUE )  {^208^^^^^191^219^[REPLACE] if  ( lbits <= Character.MAX_VALUE )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^sb.append ( '"' )  ;^213^^^^^208^218^[REPLACE] append ( 'J' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  (  ( char )   ( lbits >> 16 )  )  )  ;^214^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 48 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  >=  32 - 3 )  ) ;^215^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 32 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  ==  16 )  ) ;^216^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 16 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  (  ( char )   ( lbits >> 16 )  )  )  ;^217^^^^^208^218^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'J' )  ;^209^^^^^191^219^[REPLACE] append ( 'S' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  (  ( char )   ( lbits >> 16 )  )  )  ;^210^^^^^191^219^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^lbits =  Double.doubleToLonullgBits ( null ) ;^194^^^^^170^220^[REPLACE] lbits = Double.doubleToLongBits ( n ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >  0 % 3 )  Kit.codeBug (  ) ;^204^^^^^170^220^[REPLACE] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  !=  Character.MAX_VALUE )  {^208^^^^^170^220^[REPLACE] if  ( lbits <= Character.MAX_VALUE )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  >=  4 )  ) ;^214^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 48 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  (  ( char )   ( lbits >> 16 )  )  )  ;^215^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 32 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'J' )  ;^209^^^^^170^220^[REPLACE] append ( 'S' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  (  ( char )   ( lbits >> 16 )  )  )  ;^210^^^^^170^220^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^int length = source.length (  )  ;^224^^^^^223^243^[REPLACE] int L = str.length (  ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^int lengthEncodingSize = 0 ;^225^^^^^223^243^[REPLACE] int lengthEncodingSize = 1;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lengthEncodingSize  >  0x8000 )  {^226^^^^^223^243^[REPLACE] if  ( L >= 0x8000 )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^lengthEncodingSize = 0 ;^227^^^^^223^243^[REPLACE] lengthEncodingSize = 2;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^int nextTop = sourceTop + length /  2EncodingSize + L;^229^^^^^223^243^[REPLACE] int nextTop = sourceTop + lengthEncodingSize + L;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( nextTop > sourceBuffer.length (  )  )  {^230^^^^^223^243^[REPLACE] if  ( nextTop > sourceBuffer.length )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^increaseSourceCapacity ( sourceTop ) ;^231^^^^^223^243^[REPLACE] increaseSourceCapacity ( nextTop ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( L  ==  0x8000 )  {^233^^^^^223^243^[REPLACE] if  ( L >= 0x8000 )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^233^234^^236^237^223^243^[ADD] if  ( L >= 0x8000 )  {  sourceBuffer[sourceTop] =  ( char )  ( 0x8000 |  ( L >>> 16 )  ) ; ++sourceTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceBuffer[sourceTop] =  ( char )  ( 0x8000 &  ( L >>> 16 )  ) ;^236^^^^^223^243^[REPLACE] sourceBuffer[sourceTop] =  ( char )  ( 0x8000 |  ( L >>> 16 )  ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceBuffer[sourceTop] = c  ;^239^^^^^223^243^[REPLACE] sourceBuffer[sourceTop] =  ( char ) L;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^str.getChars ( 2, lengthEncodingSize, sourceBuffer, sourceTop ) ;^241^^^^^223^243^[REPLACE] str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^241^^^^^223^243^[ADD] str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceTop =  savedOffset;^242^^^^^223^243^[REPLACE] sourceTop = nextTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^292^^^^^291^830^[ADD] int length = source.length (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( lengthEncodingSize + 1 == 0 )  { return ""; }^293^^^^^291^830^[REPLACE] if  ( length == 0 )  { return ""; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^293^294^295^296^297^291^830^[ADD] if  ( length == 0 )  { return ""; }  int indent = properties.getInt ( INITIAL_INDENT_PROP, 0 ) ; if   (" ")  ; int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return offset + length;  ;^293^^^^^291^830^[REPLACE] if  ( length == 0 )  { return ""; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int caseGap = properties.getInt ( CASE_GAP_PROP, 2 )  ;^295^^^^^291^830^[REPLACE] int indent = properties.getInt ( INITIAL_INDENT_PROP, 0 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if    ( " " )   ;  ;^296^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^296^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 - 0 ) ;^297^^^^^291^830^[REPLACE] int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if    ( " " )   ;  ;^298^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ;if   (" ")  ;StringBuffer result = new StringBuffer (  ) ;^298^299^300^^302^291^830^[ADD] if   (" ")  ; int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ; if   (" ")  ; StringBuffer result = new StringBuffer (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new RuntimeException (  )  ;^298^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^298^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int caseGap = properties.getInt ( CASE_GAP_PROP, 2 / 4 ) ;^299^^^^^291^830^[REPLACE] int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if    ( " " )   ;  ;^300^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new RuntimeException (  )  ;^300^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int lengthEncodingSize = 1  ;^302^^^^^291^830^[REPLACE] StringBuffer result = new StringBuffer (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean justFunctionBody =  ( 2  ==   ( topFunctionType & Decompiler.ONLY_BODY_FLAG )  ) ;^303^^^^^291^830^[REPLACE] boolean justFunctionBody =  ( 0 !=  ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean justFunctionBody = 0 !=  ( flags &  ( ONLY_BODY_FLAG )  )  ;^304^^^^^291^830^[REPLACE] boolean toSource =  ( 0 !=  ( flags & Decompiler.TO_SOURCE_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if   (  !toSource  )   {  ;^308^^^^^291^830^[REPLACE] if  ( printSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if   (  Token.EOL != getNext  (  source, length, i  )    )   {  ;^314^^^^^291^830^[REPLACE] if  ( Token.printNames )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^tokenname = Token.name ( source.charAt ( i )  ) ;^314^315^316^^^291^830^[ADD] if  ( Token.printNames )  { tokenname = Token.name ( source.charAt ( i )  ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^tokenname =  Token.name ( null.charAt ( i )  ) ;^315^^^^^291^830^[REPLACE] tokenname = Token.name ( source.charAt ( i )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source != true )  {^317^^^^^291^830^[REPLACE] if  ( tokenname == null )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^318^^^^^291^830^[ADD] tokenname = "---";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^tokenname  =  tokenname ;^318^^^^^291^830^[REPLACE] tokenname = "---";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^310^311^^313^^291^830^[ADD] for  ( int i = 0; i < length; ++i )  {  String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^313^^^^^291^830^[ADD] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = tokenname.size (  )  > 7 ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname != null )  {^317^^^^^291^830^[REPLACE] if  ( tokenname == null )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^tokenname = "---";^317^318^319^^^291^830^[ADD] if  ( tokenname == null )  { tokenname = "---"; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^315^^^^^291^830^[ADD] tokenname = Token.name ( source.charAt ( i )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String tokenname = false;^313^^^^^291^830^[REPLACE] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = tokenname.length (  )  + 2 > 7 ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int braceNesting = 1;^333^^^^^291^830^[REPLACE] int braceNesting = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean afterFirstEOL = true;^334^^^^^291^830^[REPLACE] boolean afterFirstEOL = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int i = 2;^335^^^^^291^830^[REPLACE] int i = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int lengthEncodingSize = 1  ;^336^^^^^291^830^[REPLACE] int topFunctionType;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname.charAt ( i )   != null )  {^337^^^^^291^830^[REPLACE] if  ( source.charAt ( i )  == Token.SCRIPT )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^++i;topFunctionType = -1;topFunctionType = source.charAt ( i + 1 ) ;^337^338^339^340^341^291^830^[ADD] if  ( source.charAt ( i )  == Token.SCRIPT )  { ++i; topFunctionType = -1; } else { topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = source.charAt ( i  1 >>> 2 ) ;^341^^^^^337^342^[REPLACE] topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = -2;^339^^^^^291^830^[REPLACE] topFunctionType = -1;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = -4;^339^^^^^291^830^[REPLACE] topFunctionType = -1;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFuncttopFunctionTypeonType = source.charAt ( i  1 ) ;^341^^^^^291^830^[REPLACE] topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( true )  {^344^^^^^291^830^[REPLACE] if  ( !toSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( topFunctionType  ||  FunctionNode.FUNCTION_EXPRESSION )  {^350^^^^^344^353^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^350^351^352^^^344^353^[ADD] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  { result.append ( ' ( ' ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^347^348^349^350^351^291^830^[ADD] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ; } else { if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  { result.append ( ' ( ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( lengthEncodingSize  !=  FunctionNode.FUNCTION_EXPRESSION )  {^350^^^^^291^830^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^350^351^352^^^291^830^[ADD] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  { result.append ( ' ( ' ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.StringBuffer ( ' ( ' ) ;^351^^^^^291^830^[REPLACE] result.append ( ' ( ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int j = 4; j < indent; j++ ) result.append ( ' ' ) ;^347^348^^^^291^830^[REPLACE] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length %  2, i )  ) indent += indentGap;^410^411^^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^411^^^^^291^830^[ADD] indent += indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( justFunctionBody || braceNesting == 0 ) break;^421^422^^^^291^830^[REPLACE] if  ( justFunctionBody && braceNesting == 0 ) break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.LC == getNext ( source, length (  ) , i )  ) result.append ( ' ' ) ;^444^445^^^^291^830^[REPLACE] if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^445^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( printSource )  break;^457^^^^^291^830^[REPLACE] if  ( toSource )  break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^boolean newLine = true;afterFirstEOL = true;^457^458^459^460^^291^830^[ADD] if  ( toSource )  break; boolean newLine = true; if  ( !afterFirstEOL )  { afterFirstEOL = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( afterFirstEOL )  {^459^^^^^291^830^[REPLACE] if  ( !afterFirstEOL )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^459^460^461^^^291^830^[ADD] if  ( !afterFirstEOL )  { afterFirstEOL = true; if  ( justFunctionBody )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if   (  Token.EOL != getNext  (  source, length, i  )    )   {  ;^461^^^^^291^830^[REPLACE] if  ( justFunctionBody )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^466^^^^^291^830^[ADD] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^newLine = true;^467^^^^^291^830^[REPLACE] newLine = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^460^^^^^291^830^[ADD] afterFirstEOL = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap  ;^466^^^^^291^830^[REPLACE] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^467^^^^^291^830^[ADD] newLine = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^newLine = false;^466^467^^^^291^830^[ADD] indent -= indentGap; newLine = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( true )  {^470^^^^^291^830^[REPLACE] if  ( newLine )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( '\n' ) ;^471^^^^^291^830^[REPLACE] result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^sb.append ( str )  ;^471^^^^^291^830^[REMOVE] ^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( i + 1 < length *  2 )  {^478^^^^^291^830^[REPLACE] if  ( i + 1 < length )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^int less = 0;int nextToken = source.charAt ( i + 1 ) ;^478^479^480^481^482^291^830^[ADD] if  ( i + 1 < length )  { int less = 0; int nextToken = source.charAt ( i + 1 ) ; if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT )^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken == Token.CASE && nextToken == Token.DEFAULT ) {^481^482^483^^^291^830^[REPLACE] if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  else {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypef  ( nextToken  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^int afterName = getSourceStringEnd ( source, i + 2 ) ;less = indentGap;^492^493^494^495^496^291^830^[ADD] else if  ( nextToken == Token.NAME )  { int afterName = getSourceStringEnd ( source, i + 2 ) ; if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   !=  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^495^^^^^291^830^[ADD] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i topFunctionType ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( offset )   &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  newCapacity;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^493^^^^^291^830^[ADD] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  sourceTop;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^else {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   ||  Token.COLON ) less = less;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextToken;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname .getChars ( CASE_GAP_PROP , caseGap , tmp , indent )    &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  savedOffset;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  lengthEncodingSize;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap  ;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent afterName = getSourceStringEnd ( tokenname, i  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = nextTop  newCapacity;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^else if   (  nextToken == Token.NAME  )   {  ;^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^}^485^486^487^^^291^830^[ADD] else if  ( nextToken == Token.RC )  { less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   != false ) less = lengthEncodingSize;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^494^495^496^^^291^830^[ADD] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( tokenname,topFunctionType  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextTop;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  null;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  minimalCapacity;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   && true ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  lengthEncodingSize;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^484^^^^^291^830^[ADD] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  newCapacity;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int less = 3;^479^^^^^291^830^[REPLACE] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int nextToken = source.length (topFunctionType  0 ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken == Token.CASE ) {^481^482^483^^^291^830^[REPLACE] if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^}   less = indentGap;^485^486^487^^^291^830^[ADD] else if  ( nextToken == Token.RC )  { less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  token;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i  4 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, topFunctionType  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  topFunctionType;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (newCapacity  &&  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname .getChars ( caseGap , topFunctionType , sourceBuffer , minimalCapacity )    &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  topFunctionType;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^less = indentGap;^494^495^496^^^291^830^[ADD] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  length;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = indentGap nextTop;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   != 0 ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap  ;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (topFunctionType  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   ||  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, length *  0.5 , i )  ) result.append ( ' ' ) ;^565^566^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( "typeof " )  ;^566^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, newCapacity + 1, i )  ) result.append ( ' ' ) ;^571^572^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^572^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^572^^^^^291^830^[ADD] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.SEMI != getNext ( source, length + 1, i )  ) result.append ( ' ' ) ;^585^586^^^^291^830^[REPLACE] if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( "typeof " )  ;^586^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL != getNext ( source, length %  0.5 , i )  )  {^595^^^^^291^830^[REPLACE] if  ( Token.EOL != getNext ( source, length, i )  )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( "typeof " )  ;^597^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^597^^^^^291^830^[ADD] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length - 4, i )  )  result.setLength ( ':' ) ;^663^664^665^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( "typeof " )  ;^668^^^^^291^830^[REPLACE] result.append ( " : " ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^break;^668^669^^^^291^830^[ADD] result.append ( " : " ) ; break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( source )  ;^665^^^^^291^830^[REPLACE] result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source, i topFunctionType, false, result ) ;^361^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source, i  1, false, result ) ;^368^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source,topFunctionType  1, true, result ) ;^372^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, true, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source,  ( i + 1 ) , false, result )  ;^376^^^^^291^830^[REPLACE] i = printSourceNumber ( source, i + 1, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^411^412^^^^291^830^[ADD] indent += indentGap; result.append ( '{' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^428^429^^^^291^830^[ADD] indent -= indentGap; break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap  ;^432^^^^^291^830^[REPLACE] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^afterFirstEOL = false;^460^^^^^291^830^[REPLACE] afterFirstEOL = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^458^^^^^291^830^[ADD] boolean newLine = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int less = 4;^479^^^^^291^830^[REPLACE] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int nextToken = source.charAt (topFunctionType  1 ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^813^814^^^^291^830^[REPLACE] throw new RuntimeException ( "Token: " + Token.name ( source.charAt ( i )  )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( toSource )  {^819^^^^^291^830^[REPLACE] if  ( !toSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^819^820^821^822^^291^830^[ADD] if  ( !toSource )  {  if  ( !justFunctionBody ) result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (token  &&  FunctionNode.FUNCTION_EXPRESSION )  {^824^^^^^819^827^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !justFunctionBody ) result.setLength ( '\n' ) ;^821^822^^^^291^830^[REPLACE] if  ( !justFunctionBody ) result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( '\n' ) ;^822^^^^^291^830^[REPLACE] result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !justFunctionBody ) result .appendString ( source )  ;^821^822^^^^291^830^[REPLACE] if  ( !justFunctionBody ) result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (token  !=  FunctionNode.FUNCTION_EXPRESSION )  {^824^^^^^291^830^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ) ' ) ;^825^^^^^291^830^[REPLACE] result.append ( ' ) ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return result .StringBuffer (  )  ;^829^^^^^291^830^[REPLACE] return result.toString (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int length = source.charAt ( lengthEncodingSize ) ;^846^^^^^845^863^[REPLACE] int length = source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (  ( 0x8000 & length /  2 )  != 0 )  {^848^^^^^845^863^[REPLACE] if  (  ( 0x8000 & length )  != 0 )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^length + 4 =  (  ( 0x7FFF & length + 4 )  << 16 )  | source.charAt ( offset ) ;^849^^^^^845^863^[REPLACE] length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^849^^^^^845^863^[ADD] length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^852^^^^^845^863^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !toSource )  {^854^^^^^845^863^[REPLACE] if  ( !asQuotedString )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb .appendString ( str )  ;^857^^^^^854^860^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime.escapeString ( source )  ) ;^858^^^^^854^860^[REPLACE] sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.setLength ( '"' ) ;^859^^^^^854^860^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( '"' )  ;^855^^^^^845^863^[REPLACE] sb.append ( str ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String str = str.substring ( offset, offset + length /  0.5  ) ;^853^^^^^845^863^[REPLACE] String str = source.substring ( offset, offset + length ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !printSource )  {^854^^^^^845^863^[REPLACE] if  ( !asQuotedString )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.setLength ( '"' ) ;^857^^^^^854^860^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^857^^^^^854^860^[ADD] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^sb.append ( '"' ) ;^858^859^^^^854^860^[ADD] sb.append ( ScriptRuntime.escapeString ( str )  ) ; sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( escapeString ( str )  )  ;^858^^^^^854^860^[REPLACE] sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( str )  ;^859^^^^^854^860^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^859^^^^^854^860^[ADD] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( source ) ;^855^^^^^845^863^[REPLACE] sb.append ( str ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String str = source.substring ( offset, offset + length + 2 ) ;^853^^^^^845^863^[REPLACE] String str = source.substring ( offset, offset + length ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return offset + length %  2;^862^^^^^845^863^[REPLACE] return offset + length;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^double number = 0.0D;^868^^^^^867^899^[REPLACE] double number = 0.0;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^++offset;^869^870^^^^867^899^[ADD] char type = source.charAt ( offset ) ; ++offset;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  ||  'S' )  {^871^^^^^867^899^[REPLACE] if  ( type == 'S' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^} else if  (true && type == 'D' )  {^877^^^^^867^899^[REPLACE] } else if  ( type == 'J' || type == 'D' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^}   long lbits;lbits =  ( long ) source.charAt ( offset )  << 48;lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^877^878^879^880^881^867^899^[ADD] else if  ( type == 'J' || type == 'D' )  { if  ( sb != null )  { long lbits; lbits =  ( long ) source.charAt ( offset )  << 48; lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new IllegalArgumentException (  )  ;^893^^^^^877^894^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^878^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  &&  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  Double.longBitsToDouble ( null ) ;^887^^^^^884^888^[REPLACE] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^885^^^^^867^899^[ADD] number = lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  ( long ) source.charAt ( offset )   ==  48;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 / 1 )   <=  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )   <=  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^883^^^^^867^899^[ADD] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  Double.longBitsToDouble ( null ) ;^887^^^^^867^899^[REPLACE] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^879^^^^^867^899^[ADD] long lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  ||  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  null;^885^^^^^867^899^[REPLACE] number = lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  (  ( long )   ( source.charAt (  ( offset + 2 )  )  )  )  << 16  ;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )   <=  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )   !=  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  (  ( long )   ( source.charAt (  ( offset + 2 )  )  )  )  << 16  ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^890^^^^^867^899^[ADD] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int lengthEncodingSize = 1  ;^879^^^^^867^899^[REPLACE] long lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )   == type;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  (  ( long )   ( source.charAt ( offset )  )  )  << 48  ;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt (minimalCapacity  3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  (  ( long )   ( source.charAt (  ( offset + 2 )  )  )  )  << 16  ;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )   >=  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt (topFunctionType  3 - 0 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 3;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^893^^^^^867^899^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^872^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^int ival = source.charAt ( offset ) ;number = ival;^872^873^874^875^^867^899^[ADD] if  ( sb != null )  { int ival = source.charAt ( offset ) ; number = ival; }^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  topFunctionType;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source.charAt ( newCapacity ) ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  null;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int length = source.charAt ( offset )  ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == false )  {^872^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source.charAt ( topFunctionType ) ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  if  (  type == 'D' )  {^877^^^^^867^899^[REPLACE] } else if  ( type == 'J' || type == 'D' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^893^^^^^877^894^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if   (  type == 'S'  )   {  ;^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^887^^^^^884^888^[ADD] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^880^^^^^867^899^[ADD] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^881^882^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( savedOffset  3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  ) {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 3 )   !=  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( offset  3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 7;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^long lbits;lbits =  ( long ) source.charAt ( offset )  << 48;lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^878^879^880^881^882^867^899^[ADD] if  ( sb != null )  { long lbits; lbits =  ( long ) source.charAt ( offset )  << 48; lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  !=  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^884^885^886^887^888^867^899^[ADD] if  ( type == 'J' )  { number = lbits; } else { number = Double.longBitsToDouble ( lbits ) ; }^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^881^882^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^882^883^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16; lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( offset  3L ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  indentGap;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  ( long ) source.charAt ( offset )   >  48;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^lbits |= source.charAt ( offset + 3 ) ;^882^883^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16; lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( offset sourceTop ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^879^880^^^^867^899^[ADD] long lbits; lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new IllegalArgumentException (  )  ;^893^^^^^867^899^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^895^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( escapeString ( str )  )  ;^896^^^^^867^899^[REPLACE] sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime.numberToString ( number, 2 )  ) ;^896^^^^^867^899^[REPLACE] sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return offset;  ;^898^^^^^867^899^[REPLACE] return offset;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
