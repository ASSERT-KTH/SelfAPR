[REPLACE]^static  long serialVersionUID = 4174889037736658296L;^52^^^^^^^[REPLACE] static final long serialVersionUID = 4174889037736658296L;^ [CLASS] ObjArray  
[REPLACE]^private static final int FIELDS_STORE_SIZE = 5 - 1;^391^^^^^^^[REPLACE] private static final int FIELDS_STORE_SIZE = 5;^ [CLASS] ObjArray  
[REPLACE]^if    ( " " )   ; if   (  sealed  )   throw onSeledMutation  (    )  ;  ;^167^^^^^166^184^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^167^168^169^170^^166^184^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; int N = size; --N; Object top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int i = size  ;^168^^^^^166^184^[REPLACE] int N = size;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object tmp  ;^170^^^^^166^184^[REPLACE] Object top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^173^^^^^166^184^[REPLACE] case 0: top = f0; f0 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = null  ;^173^^^^^166^184^[REPLACE] case 0: top = f0; f0 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^174^^^^^166^184^[ADD] case 1: top = f1; f1 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^case 2: top = f2; f2 = null; break;^174^175^^^^166^184^[ADD] case 1: top = f1; f1 = null; break; case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^175^^^^^166^184^[REPLACE] case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = null  ;^175^^^^^166^184^[REPLACE] case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^case 4: top = f4; f4 = null; break;^176^177^^^^166^184^[ADD] case 3: top = f3; f3 = null; break; case 4: top = f4; f4 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f2 = null  ;^176^^^^^166^184^[REPLACE] case 3: top = f3; f3 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^177^^^^^166^184^[REPLACE] case 4: top = f4; f4 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = true; break;^177^^^^^166^184^[REPLACE] case 4: top = f4; f4 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = data[N newSize];^179^^^^^166^184^[REPLACE] top = data[N - FIELDS_STORE_SIZE];^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^index = FIELDS_STORE_SIZE  ;^180^^^^^166^184^[REPLACE] data[N - FIELDS_STORE_SIZE] = null;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^172^^^^^166^184^[REPLACE] case -1: throw onEmptyStackTopRead (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^182^^^^^166^184^[ADD] size = N;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return top;  ;^183^^^^^166^184^[REPLACE] return top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int i = size  ;^205^^^^^204^237^[REPLACE] int N = size;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (  ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^206^207^208^209^210^204^237^[ADD] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0:^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (  ( 0 <= index && index <= newSize )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N >=  ( FIELDS_STORE_SIZE )  )   { if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; }^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if    ( " " )   ; if   (  sealed  )   throw onSeledMutation  (    )  ;  ;^207^^^^^204^237^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^207^^^^^204^237^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^207^208^209^210^211^204^237^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object top  ;^208^^^^^204^237^[REPLACE] Object tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  ||  0 )  { f0 = value; break; }^211^^^^^204^237^[REPLACE] if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f0; f0 = value; value = tmp;^211^212^213^214^^204^237^[ADD] if  ( N == 0 )  { f0 = value; break; } tmp = f0; f0 = value; value = tmp; case 1: if  ( N == 1 )  { f1 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^211^^^^^204^237^[REPLACE] if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  ||  1 )  { f1 = value; break; }^214^^^^^204^237^[REPLACE] if  ( N == 1 )  { f1 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^214^215^216^217^^204^237^[ADD] if  ( N == 1 )  { f1 = value; break; } tmp = f1; f1 = value; value = tmp; case 2: if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  && newSize )  { f2 = value; break; }^217^^^^^204^237^[REPLACE] if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^217^^^^^204^237^[REPLACE] if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  !=  3 )  { f3 = value; break; }^220^^^^^204^237^[REPLACE] if  ( N == 3 )  { f3 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( N == 4 )  {     f4 = value;     break; }^220^^^^^204^237^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^220^^^^^204^237^[REPLACE] if  ( N == 3 )  { f3 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (newSize  &&  4 )  { f4 = value; break; }^223^^^^^204^237^[REPLACE] if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f4; f4 = value; value = tmp;index = FIELDS_STORE_SIZE;^223^224^^226^227^204^237^[ADD] if  ( N == 4 )  { f4 = value; break; } tmp = f4; f4 = value; value = tmp; index = FIELDS_STORE_SIZE; default:^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f2 = value  ;^223^^^^^204^237^[REPLACE] if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( index  ==  N )  {^229^^^^^204^237^[REPLACE] if  ( index != N )  {^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^System.arraycopy ( data, index  FIELDS_STORE_SIZE, data, index  FIELDS_STORE_SIZE + 1, newSize  index ) ;^230^231^232^^^204^237^[REPLACE] System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^212^^^^^204^237^[REPLACE] tmp = f0; f0 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^212^^^^^204^237^[ADD] tmp = f0; f0 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^215^^^^^204^237^[ADD] tmp = f1; f1 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^215^^^^^204^237^[REPLACE] tmp = f1; f1 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp =  f1; f1^215^^^^^204^237^[REPLACE] tmp = f1; f1 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^218^^^^^204^237^[ADD] tmp = f2; f2 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^218^^^^^204^237^[REPLACE] tmp = f2; f2 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp =  f2; f2^218^^^^^204^237^[REPLACE] tmp = f2; f2 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f3; f3 = value; value = tmp;^220^221^222^223^^204^237^[ADD] if  ( N == 3 )  { f3 = value; break; } tmp = f3; f3 = value; value = tmp; case 4: if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^221^^^^^204^237^[REPLACE] tmp = f3; f3 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = value  ;^221^^^^^204^237^[REPLACE] tmp = f3; f3 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp =  f3; f3^221^^^^^204^237^[REPLACE] tmp = f3; f3 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = f1  ;^224^^^^^204^237^[REPLACE] tmp = f4; f4 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^224^^^^^204^237^[ADD] tmp = f4; f4 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp =  f4; f4^224^^^^^204^237^[REPLACE] tmp = f4; f4 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^226^^^^^204^237^[ADD] index = FIELDS_STORE_SIZE;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^234^^^^^204^237^[ADD] data[index - FIELDS_STORE_SIZE] = value;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = N  1;^236^^^^^204^237^[REPLACE] size = N + 1;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int i = size  ;^242^^^^^241^273^[REPLACE] int N = size;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (  ( 0 - 4 <= index &&true )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^243^244^245^246^247^241^273^[ADD] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ; if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0:^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^throw onSeledMutation (  )  ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if    ( " " )   ; if   (  sealed  )   throw onSeledMutation  (    )  ;  ;^244^^^^^241^273^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^--N;^244^245^246^247^248^241^273^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^244^^^^^241^273^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (  N == 3  )   { f3 = null; break; } f3 = f4;  ;^248^^^^^241^273^[REPLACE] if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = null  ;^248^^^^^241^273^[REPLACE] if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N != 1 )  { f1 = null; break; }^251^^^^^241^273^[REPLACE] if  ( N == 1 )  { f1 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( N == 4 )  {     f4 = value;     break; }^251^^^^^241^273^[REMOVE] ^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 1 )  { f1 = this; break; }^251^^^^^241^273^[REPLACE] if  ( N == 1 )  { f1 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (  N == 3  )   { f3 = null; break; } f3 = f4;  ;^254^^^^^241^273^[REPLACE] if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = this; break; }^254^^^^^241^273^[REPLACE] if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N != 3 )  { f3 = null; break; }^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f2 = null  ;^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N != 4 )  { f4 = null; break; }^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 4 )  { f4 = true; break; }^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (size  ==  N )  {^265^^^^^241^273^[REPLACE] if  ( index != N )  {^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^265^^^^^241^273^[REMOVE] ^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^System.arraycopy ( data, index -size  1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^241^273^[REPLACE] System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^266^267^268^^^241^273^[ADD] System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^249^^^^^241^273^[ADD] f0 = f1;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^f1 = f2;^251^252^253^254^^241^273^[ADD] if  ( N == 1 )  { f1 = null; break; } f1 = f2; case 2: if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f2 = f3  ;^252^^^^^241^273^[REPLACE] f1 = f2;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^254^255^256^257^^241^273^[ADD] if  ( N == 2 )  { f2 = null; break; } f2 = f3; case 3: if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^255^^^^^241^273^[ADD] f2 = f3;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 3 )  { f3 = this; break; }^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^258^^^^^241^273^[ADD] f3 = f4;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 4 )  { f4 = this; break; }^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^261^^^^^241^273^[ADD] f4 = data[0];^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^data[ ( N -  ( FIELDS_STORE_SIZE )  ) ] = null  ;^263^^^^^241^273^[REPLACE] index = FIELDS_STORE_SIZE;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^data[N  FIELDS_STORE_SIZE] = null;^270^^^^^241^273^[REPLACE] data[N - FIELDS_STORE_SIZE] = null;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = 0  ;^272^^^^^241^273^[REPLACE] size = N;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^316^^^^^315^343^[ADD] int required = minimalCapacity - FIELDS_STORE_SIZE;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^} else if   (  newSize > N  )   {  ;^317^^^^^315^343^[REPLACE] if   (" ")  ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^317^318^319^320^321^315^343^[ADD] if   (" ")  ; if  ( data == null )  { int alloc = FIELDS_STORE_SIZE * 2; if  ( alloc < required )  { alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^return ;^317^^^^^315^343^[REPLACE] if   (" ")  ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( array != true )  {^318^^^^^315^343^[REPLACE] if  ( data == null )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  >=  required )  {^326^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  ==  FIELDS_STORE_SIZE )  {^327^^^^^318^342^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 3;^330^^^^^327^331^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^328^^^^^318^342^[ADD] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  >  size )  {^332^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  null;^333^^^^^318^342^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  <=  FIELDS_STORE_SIZE) {^336^^^^^318^342^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0 , tmp, 0 , size  FIELDS_STORE_SIZE);^337^338^^^^318^342^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 4;^330^^^^^318^342^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^333^^^^^318^342^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  null;^340^^^^^318^342^[REPLACE] data = tmp;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^Object[] array = new Object[size]  ;^335^^^^^318^342^[REPLACE] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  !=  FIELDS_STORE_SIZE )  {^327^^^^^318^342^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 2 - 4;^330^^^^^327^331^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  <=  required )  {^332^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^alloc = required;^332^333^334^^^318^342^[ADD] if  ( alloc < required )  { alloc = required; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^333^^^^^318^342^[ADD] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if   (  alloc <= FIELDS_STORE_SIZE  )   {  ;^336^^^^^318^342^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0, tmp, 0, size  FIELDS_STORE_SIZE);^337^338^^^^318^342^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE  2;^328^^^^^318^342^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 2L;^330^^^^^318^342^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc =  ( FIELDS_STORE_SIZE )  * 2  ;^325^^^^^318^342^[REPLACE] int alloc = data.length;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( minimalCapacity  !=  size )  {^320^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^alloc = required;^320^321^322^^^315^343^[ADD] if  ( alloc < required )  { alloc = required; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^321^^^^^315^343^[ADD] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^321^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  new Object[minimalCapacity];^323^^^^^315^343^[REPLACE] data = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc =size  2;^319^^^^^315^343^[REPLACE] int alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  ==  required )  {^320^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  >=  required )  {^326^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if   (  N > FIELDS_STORE_SIZE  )   {  ;^327^^^^^315^343^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REMOVE]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^327^^^^^315^343^[REMOVE] ^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE size;^328^^^^^315^343^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  !=  required )  {^332^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^333^^^^^315^343^[ADD] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  <=  FIELDS_STORE_SIZE) {^336^^^^^315^343^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^336^337^338^339^^315^343^[ADD] if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0, tmp, 0, size  FIELDS_STORE_SIZE);^337^338^^^^315^343^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE  2;^328^^^^^315^343^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 3;^330^^^^^315^343^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^333^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  null;^340^^^^^315^343^[REPLACE] data = tmp;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^Object[] array = new Object[size]  ;^335^^^^^315^343^[REPLACE] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( minimalCapacity  >  FIELDS_STORE_SIZE )  {^327^^^^^315^343^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 2 + 1;^330^^^^^327^331^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE  3;^328^^^^^315^343^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  ==  required )  {^332^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^332^333^334^^^315^343^[ADD] if  ( alloc < required )  { alloc = required; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  !=  FIELDS_STORE_SIZE) {^336^^^^^315^343^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 3, tmp, 3,required  FIELDS_STORE_SIZE);^337^338^^^^315^343^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data[ ( N -  ( FIELDS_STORE_SIZE )  ) ] = null  ;^328^^^^^315^343^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 0;^330^^^^^315^343^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc = FIELDS_STORE_SIZE size;^319^^^^^315^343^[REPLACE] int alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc =  ( FIELDS_STORE_SIZE )  * 2  ;^325^^^^^315^343^[REPLACE] int alloc = data.length;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^335^^^^^315^343^[ADD] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
