[REPLACE]^private static final int DEFAULT_REQUIRED_USAGE ;^82^^^^^^^[REPLACE] private static final int DEFAULT_REQUIRED_USAGE = 4;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  short  requiredUsage = DEFAULT_REQUIRED_USAGE;^85^^^^^^^[REPLACE] private int requiredUsage = DEFAULT_REQUIRED_USAGE;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private static final int MIN_PROP_SIZE ;^88^^^^^^^[REPLACE] private static final int MIN_PROP_SIZE = 4;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^static final String PROTOTYPE_PROPERTY_NAME ;^96^97^^^^96^97^[REPLACE] static final String PROTOTYPE_PROPERTY_NAME = getArrayNotationNameFor ( "prototype" ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<String, Property> props  = null ;^100^^^^^^^[REPLACE] private final Map<String, Property> props = Maps.newHashMap (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final List<Node> accessors ;^103^^^^^^^[REPLACE] private final List<Node> accessors = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final List<Node> mutators ;^106^^^^^^^[REPLACE] private final List<Node> mutators = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<Node, Node> replacementMap  = null ;^112^113^^^^112^113^[REPLACE] private final Map<Node, Node> replacementMap = new IdentityHashMap<Node, Node> (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<String, Property> globals ;^116^^^^^^^[REPLACE] private final Map<String, Property> globals = Maps.newHashMap (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final List<Node> globalUses ;^119^^^^^^^[REPLACE] private final List<Node> globalUses = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  AbstractCompiler compiler;^122^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  JSModuleGraph moduleGraph;^125^^^^^^^[REPLACE] private final JSModuleGraph moduleGraph;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Set<String> unaliasableGlobals ;^137^138^139^140^^137^149^[REPLACE] private final Set<String> unaliasableGlobals = Sets.newHashSet (^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Set<String> aliasableGlobals  = null ;^152^^^^^^^[REPLACE] private final Set<String> aliasableGlobals = Sets.newHashSet (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  Set<String> whitelist;^479^^^^^^^[REPLACE] private final Set<String> whitelist;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public  long  accessorCount = 0 / 3;^733^^^^^^^[REPLACE] public int accessorCount = 0;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public int mutatorCount ;^734^^^^^^^[REPLACE] public int mutatorCount = 0;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public boolean aliasMutator  = null ;^735^^^^^^^[REPLACE] public boolean aliasMutator = false;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public boolean aliasAccessor ;^736^^^^^^^[REPLACE] public boolean aliasAccessor = false;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^JSModule deepestModuleAccess ;^738^^^^^^^[REPLACE] JSModule deepestModuleAccess = null;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^JSModule deepestModuleMutate  = null ;^739^^^^^^^[REPLACE] JSModule deepestModuleMutate = null;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^this ( compiler, moduleGraph, false, false ) ;^162^^^^^161^163^[REPLACE] this ( compiler, moduleGraph, null, null ) ;^[METHOD] <init> [TYPE] JSModuleGraph) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  name  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.compiler =  null;^180^^^^^177^202^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.moduleGraph =  null;^181^^^^^177^202^[REPLACE] this.moduleGraph = moduleGraph;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (  !StringUtil.isEmpty ( aliasableGlobals )  )  {^183^184^^^^177^202^[REPLACE] if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return ;^185^186^187^^^177^202^[REPLACE] throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + ;^185^186^187^^^177^202^[REPLACE] throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( !StringUtil.isEmpty ( name )  )  {^190^^^^^177^202^[REPLACE] if  ( !StringUtil.isEmpty ( unaliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.unaliasableGlobals.addAll ( Arrays.asList ( name.split ( "," )  )  ) ;^191^192^^^^177^202^[REPLACE] this.unaliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Arrays.asList ( name .length (  )   )  ) ;^192^^^^^177^202^[REPLACE] Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^moduleRoots.put ( m, root ) ;^192^^^^^177^202^[REMOVE] ^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Arrays.asList ( name.split ( "," )  )  ) ;^192^^^^^177^202^[REPLACE] Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  )  {^195^^^^^177^202^[REPLACE] if  ( !StringUtil.isEmpty ( aliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.aliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^196^^^^^177^202^[REPLACE] this.aliasableGlobals.addAll ( Arrays.asList ( aliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph == null )  {^199^^^^^177^202^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^moduleRoots ;^200^^^^^177^202^[REPLACE] moduleRoots = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^moduleRoots  =  moduleRoots ;^200^^^^^177^202^[REPLACE] moduleRoots = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.whitelist =  null;^482^^^^^481^483^[REPLACE] this.whitelist = whitelist;^[METHOD] <init> [TYPE] Set) [PARAMETER] String> whitelist [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.name =  unaliasableGlobals;^742^^^^^741^743^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.requiredUsage =  requiredUsage;^210^^^^^209^211^[REPLACE] this.requiredUsage = usage;^[METHOD] setRequiredUsage [TYPE] void [PARAMETER] int usage [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^defaultRoot =  null.getFirstChild (  ) ;^217^^^^^216^222^[REPLACE] defaultRoot = root.getFirstChild (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^217^^^^^216^222^[ADD] defaultRoot = root.getFirstChild (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Preconditions.checkState ( defaultRoot.getType (  )   ||  Token.SCRIPT ) ;^218^^^^^216^222^[REPLACE] Preconditions.checkState ( defaultRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Preconditions.checkState ( defaultRoot.setString (  )  == Token.SCRIPT ) ;^218^^^^^216^222^[REPLACE] Preconditions.checkState ( defaultRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^aliasProperties ( externs, defaultRoot ) ;^220^^^^^216^222^[REPLACE] aliasProperties ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^aliasGlobals ( defaultRoot, root ) ;^221^^^^^216^222^[REPLACE] aliasGlobals ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^221^^^^^216^222^[ADD] aliasGlobals ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, propInfo, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^224^270^[REPLACE] NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^228^^^^^224^270^[REPLACE] props.put ( "prototype", new Property ( "prototype" )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, propInfo, new PropertyGatherer (  )  ) ;^231^^^^^224^270^[REPLACE] NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^231^^^^^224^270^[ADD] NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.name.length (  )  %  2 >= MIN_PROP_SIZE )  {^237^^^^^224^270^[REPLACE] if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.accessorCount  >  requiredUsage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasAccessor = false;^239^^^^^224^270^[REPLACE] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.mutatorCount  <= mutatorCount )  {^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasMutator = false;^242^^^^^224^270^[REPLACE] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^242^^^^^224^270^[ADD] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasMutator = true; ;^239^^^^^224^270^[REPLACE] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^239^^^^^224^270^[ADD] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasAccessor = true; ;^242^^^^^224^270^[REPLACE] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.accessorCount  <  requiredUsage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^if  (  ( prop.mutatorCount )  >=  ( requiredUsage )  )  {     prop.aliasMutator = true; }^238^^^^^224^270^[REMOVE] ^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.mutatorCount  !=  requiredUsage )  {^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  ) ;^236^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^236^237^238^239^240^224^270^[ADD] for  ( Property prop : props.values (  )  )  { if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  { if  ( prop.accessorCount >= requiredUsage )  { prop.aliasAccessor = true; }^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node propInfo : mutators )  { replaceMutator ( propInfo ) ;^247^^^^^224^270^[REPLACE] for  ( Node propInfo : accessors )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node propInfo : mutators )  { replaceMutator ( propInfo ) ;^252^^^^^224^270^[REPLACE] for  ( Node propInfo : mutators )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.aliasMutator )  {^260^^^^^224^270^[REPLACE] if  ( prop.aliasAccessor )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  ) ;^261^^^^^224^270^[REPLACE] addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^261^^^^^224^270^[ADD] addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^Node propDest = parentNode.getLastChild (  ) ;^261^^^^^224^270^[REMOVE] ^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  ) ;^259^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^259^260^261^262^^224^270^[ADD] for  ( Property prop : props.values (  )  )  { if  ( prop.aliasAccessor )  { addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ; }^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.aliasAccessor )  {^266^^^^^224^270^[REPLACE] if  ( prop.aliasMutator )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String localPropName = getMutatorFor ( propName )  + "$a";^267^^^^^224^270^[REPLACE] addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  ) ;^265^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = root .getFirstChild (  )  ;^288^^^^^277^302^[REPLACE] Node propNameNode = getPropNode.getLastChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^String propName = propNameNode.getString (  ) ;^288^289^^^^277^302^[ADD] Node propNameNode = getPropNode.getLastChild (  ) ; String propName = propNameNode.getString (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = root.newString (  ) ;^289^^^^^277^302^[REPLACE] String propName = propNameNode.getString (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( globals.get ( globalName ) .aliasAccessor )  {^290^^^^^277^302^[REPLACE] if  ( props.get ( propName ) .aliasAccessor )  {^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = propNameNode.getLastChild (  ) ;^291^^^^^277^302^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^291^^^^^277^302^[ADD] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( unaliasableGlobals )  ) ;^294^295^^^^277^302^[REPLACE] Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( Token.GETELEM, root, newNameNode ) ;^297^^^^^277^302^[REPLACE] Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = root.getFirstChild (  ) ;^291^^^^^277^302^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^294^295^^^^277^302^[ADD] Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( Token.GETELEM, propSrc, root ) ;^297^^^^^277^302^[REPLACE] Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^297^^^^^277^302^[ADD] Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = propDest .getFirstChild (  )  ;^324^^^^^307^348^[REPLACE] Node propNameNode = getPropNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node parentNode = root.getParent (  ) ;^325^^^^^307^348^[REPLACE] Node parentNode = getPropNode.getParent (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^325^^^^^307^348^[ADD] Node parentNode = getPropNode.getParent (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property prop = props.get ( propInfo.getString (  )  ) ;^327^^^^^307^348^[REPLACE] Property prop = props.get ( propNameNode.getString (  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.aliasAccessor )  {^328^^^^^307^348^[REPLACE] if  ( prop.aliasMutator )  {^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = root.getFirstChild (  ) ;^329^^^^^307^348^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^329^330^^^^307^348^[ADD] Node propSrc = getPropNode.getFirstChild (  ) ; Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propDest = root.getLastChild (  ) ;^330^^^^^307^348^[REPLACE] Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^330^^^^^307^348^[ADD] Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( root.getString (  )  )  ) ;^339^340^^^^307^348^[REPLACE] Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^339^340^^^^307^348^[ADD] Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node call = new Node ( Token.CALL, callName, root, propDest ) ;^341^^^^^307^348^[REPLACE] Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = propNameNode.getFirstChild (  ) ;^329^^^^^307^348^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propDest = propDest.getLastChild (  ) ;^330^^^^^307^348^[REPLACE] Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.newString (  )  )  ) ;^339^340^^^^307^348^[REPLACE] Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node call = new Node ( Token.CALL, propNameNode, propSrc, propDest ) ;^341^^^^^307^348^[REPLACE] Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( replacementMap.containsKey ( propInfo )  )  {^359^^^^^358^364^[REPLACE] if  ( replacementMap.containsKey ( parent )  )  {^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^parent =  replacementMap.get ( propNameNode ) ;^360^^^^^358^364^[REPLACE] parent = replacementMap.get ( parent ) ;^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^parent =  replacementMap.get ( propSrc ) ;^360^^^^^358^364^[REPLACE] parent = replacementMap.get ( parent ) ;^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^parent .getLastChild (  )  ;^362^^^^^358^364^[REPLACE] parent.replaceChild ( before, after ) ;^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replacementMap.put ( root, after ) ;^363^^^^^358^364^[REPLACE] replacementMap.put ( before, after ) ;^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^replaceMutator ( propInfo ) ;^363^^^^^358^364^[REMOVE] ^[METHOD] replaceNode [TYPE] void [PARAMETER] Node parent Node before Node after [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propValue = Node.newString ( Token.STRING, unaliasableGlobals ) ;^383^^^^^375^391^[REPLACE] Node propValue = Node.newString ( Token.STRING, propName ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^383^^^^^375^391^[ADD] Node propValue = Node.newString ( Token.STRING, propName ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node unaliasableGlobalsNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^384^385^^^^375^391^[REPLACE] Node propNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^propNameNode .getParent (  )  ;^386^^^^^375^391^[REPLACE] propNameNode.addChildToFront ( propValue ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node var = new Node ( Token.VAR, var ) ;^387^^^^^375^391^[REPLACE] Node var = new Node ( Token.VAR, propNameNode ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^root.addChildToFront ( var ) ;^387^388^^^^375^391^[ADD] Node var = new Node ( Token.VAR, propNameNode ) ; root.addChildToFront ( var ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root .getParent (  )  ;^388^^^^^375^391^[REPLACE] root.addChildToFront ( var ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propDest = parentNode.getLastChild (  ) ;^390^^^^^375^391^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node functionName = Node.newString ( Token.NAME, getMutatorFor ( unaliasableGlobals )  ) ;^417^418^^^^400^448^[REPLACE] Node functionName = Node.newString ( Token.NAME, getMutatorFor ( propName )  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String localPropName = getMutatorFor ( propName )   ==  "$a";^421^^^^^400^448^[REPLACE] String localPropName = getMutatorFor ( propName )  + "$a";^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^421^422^^^^400^448^[ADD] String localPropName = getMutatorFor ( propName )  + "$a"; String localValueName = getMutatorFor ( propName )  + "$b";^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String localValueName = getMutatorFor ( propName )  +unaliasableGlobals;^422^^^^^400^448^[REPLACE] String localValueName = getMutatorFor ( propName )  + "$b";^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^Node hasPropNode = Node.newString ( Token.NAME, localPropName ) ;^422^423^^^^400^448^[ADD] String localValueName = getMutatorFor ( propName )  + "$b"; Node hasPropNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node hasPropNode = Node.replaceChild ( Token.NAME, unaliasableGlobals ) ;^423^^^^^400^448^[REPLACE] Node hasPropNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propValueNode = Node.newString ( Token.NAME, propName ) ;^424^^^^^400^448^[REPLACE] Node propValueNode = Node.newString ( Token.NAME, localValueName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^424^^^^^400^448^[ADD] Node propValueNode = Node.newString ( Token.NAME, localValueName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node args = new Node ( Token.LP, hasPropNode, newNameNode ) ;^425^^^^^400^448^[REPLACE] Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = Node .newString ( name )  ;^428^^^^^400^448^[REPLACE] Node propNameNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^428^^^^^400^448^[ADD] Node propNameNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propValue = Node .newString ( localPropName )  ;^429^^^^^400^448^[REPLACE] Node propValue = Node.newString ( Token.STRING, propName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node getProp = new Node ( Token.GETPROP, propDest, propValue ) ;^430^^^^^400^448^[REPLACE] Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assignFrom = Node.newString ( Token.NAME, unaliasableGlobals ) ;^431^^^^^400^448^[REPLACE] Node assignFrom = Node.newString ( Token.NAME, localValueName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assign = new Node ( Token.ASSIGN, getProp, parentNode ) ;^432^^^^^400^448^[REPLACE] Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node returnNode = new Node ( Token.RETURN, returnNode ) ;^433^^^^^400^448^[REPLACE] Node returnNode = new Node ( Token.RETURN, assign ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node functionBlock = new Node ( Token.BLOCK, newNameNode ) ;^434^^^^^400^448^[REPLACE] Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^FunctionNode fnNode = new FunctionNode ( newNameNode.newString (  )  ) ;^437^^^^^400^448^[REPLACE] FunctionNode fnNode = new FunctionNode ( functionName.getString (  )  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( functionBlock ) ;^442^^^^^400^448^[REPLACE] fnNode.addChildToBack ( functionName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( functionBlock ) ;^443^^^^^400^448^[REPLACE] fnNode.addChildToBack ( args ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( functionName ) ;^444^^^^^400^448^[REPLACE] fnNode.addChildToBack ( functionBlock ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( functionBlock ) ;^445^^^^^400^448^[REPLACE] root.addChildToFront ( fnNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^compiler .getNodeForCodeInsertion ( deepestModuleMutate )  ;^447^^^^^400^448^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( m == this  )  {^459^^^^^458^473^[REPLACE] if  ( m != null )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( root == null )  {^461^^^^^458^473^[REPLACE] if  ( root != null )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propInfo;^462^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (returnNode == null )  {^466^^^^^458^473^[REPLACE] if  ( root != null )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^moduleRoots.put ( m, root ) ;return root;^466^467^468^469^^458^473^[ADD] if  ( root != null )  { moduleRoots.put ( m, root ) ; return root; }^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propInfo;^468^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root =  codeepestModuleMutatepiler.getNodeForCodeInsertion ( deepestModuleMutate ) ;^465^^^^^458^473^[REPLACE] root = compiler.getNodeForCodeInsertion ( m ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^465^^^^^458^473^[ADD] root = compiler.getNodeForCodeInsertion ( m ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propNameNode;^468^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node root = deepestModuleMutateoduleRoots.get ( m ) ;^460^^^^^458^473^[REPLACE] Node root = moduleRoots.get ( m ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^461^462^463^^^458^473^[ADD] if  ( root != null )  { return root; }^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propSrc;^462^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( root == this )  {^466^^^^^458^473^[REPLACE] if  ( root != null )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propValueNode;^462^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return propValueNode;^468^^^^^458^473^[REPLACE] return root;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return "$$PROP_" + prop;^472^^^^^458^473^[REPLACE] return defaultRoot;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] JSModule m [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( propSrc.getType (  )  == Token.STRING || ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^[REPLACE] if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^490^491^492^493^^485^495^[ADD] if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  { props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^props.put ( root.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^[REPLACE] props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^props.put ( propValueNode.newString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^[REPLACE] props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node dest = returnNode.getFirstChild (  ) .getNext (  ) ;^489^^^^^485^495^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( n.getType (  )   ||  Token.GETPROP )  {^505^^^^^504^520^[REPLACE] if  ( n.getType (  )  == Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^Node propNameNode = n.getLastChild (  ) ;String name = propNameNode.getString (  ) ;^505^506^^508^509^504^520^[ADD] if  ( n.getType (  )  == Token.GETPROP )  { Node propNameNode = n.getLastChild (  ) ; if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^508^509^510^511^512^504^520^[ADD] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ; accessors.add ( n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = propValueNode.getString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = propNameNode .setString ( PROTOTYPE_PROPERTY_NAME )  ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = n.getFirstChild (  ) ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = propNameNode .setString ( name )  ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^509^510^^^^504^520^[ADD] String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = root.newString (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^514^^^^^504^520^[ADD] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithGetProp ( propNameNode, returnNode, parent )  )  {^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = parentNode.getString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^509^^^^^504^520^[ADD] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithSetProp ( parent, n, parent )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = parent.getString (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = returnNode.getLastChild (  ) ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = propValueNode.newString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) ;^535^536^^^^533^545^[REPLACE] boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent )  <   ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^[REPLACE] boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^boolean isIncOrDec =  ( parent.setString (  )  == Token.INC )  ;^539^540^^^^533^545^[REPLACE] boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return   isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.newString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^[REPLACE] return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN )  ||   ( parent .getLastChild (  )   == getPropNode ) ;^558^559^^^^556^562^[REPLACE] boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithSetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return  ( newNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.get ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^[REPLACE] return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[METHOD] canReplaceWithSetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return "$$PROP_" + prop;^569^^^^^568^570^[REPLACE] return "SETPROP_" + prop;^[METHOD] getMutatorFor [TYPE] String [PARAMETER] String prop [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return "$$PROP_" +unaliasableGlobals;^576^^^^^575^577^[REPLACE] return "$$PROP_" + prop;^[METHOD] getArrayNotationNameFor [TYPE] String [PARAMETER] String prop [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, newNameNode, new GetGlobals (  )  ) ;^581^^^^^579^613^[REPLACE] NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^581^^^^^579^613^[ADD] NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, returnNode, new GlobalGatherer (  )  ) ;^584^^^^^579^613^[REPLACE] NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^Node propDest = parentNode.getLastChild (  ) ;^584^^^^^579^613^[REMOVE] ^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( global.mutatorCount  !=  0 )  {^588^^^^^579^613^[REPLACE] if  ( global.mutatorCount > 0 )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (usage  ==  currentBytes )  {^597^^^^^579^613^[REPLACE] if  ( aliasedBytes < currentBytes )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^global.aliasAccessor = false;^598^^^^^579^613^[REPLACE] global.aliasAccessor = true;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasAccessor = true; ;^598^^^^^579^613^[REPLACE] global.aliasAccessor = true;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node globalUse : globalUses )  { replaceGlobalUse ( globalUse ) ;^587^^^^^579^613^[REPLACE] for  ( Property global : globals.values (  )  )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int currentBytes = global.name.length (  )  + 4 * global.accessorCount;^594^^^^^579^613^[REPLACE] int currentBytes = global.name.length (  )  * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int aliasedBytes = 8 + global.name.size (  )  + 2 * global.accessorCount;^595^^^^^579^613^[REPLACE] int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node globalUse : globalUses )  { replaceGlobalUse ( globalUse ) ;^603^^^^^579^613^[REPLACE] for  ( Node globalUse : globalUses )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.aliasAccessor )  {^608^^^^^579^613^[REPLACE] if  ( global.aliasAccessor )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.getModule (  ) , deepestModuleMutate ) ;^610^^^^^579^613^[REPLACE] getAddingRoot ( global.deepestModuleAccess )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node globalUse : globalUses )  { replaceGlobalUse ( globalUse ) ;^607^^^^^579^613^[REPLACE] for  ( Property global : globals.values (  )  )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( dest.getType (  )   ||  Token.NAME )  {^620^^^^^619^636^[REPLACE] if  ( dest.getType (  )  == Token.NAME )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^^620^621^622^623^624^619^636^[ADD] if  ( dest.getType (  )  == Token.NAME )  {  JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ; boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  &&^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( true )  {^627^^^^^619^636^[REPLACE] if  ( aliasable )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  (  !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^globals.put ( unaliasableGlobals, new Property ( name )  ) ;^632^^^^^619^636^[REPLACE] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = root.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^^628^629^^^^619^636^[ADD] String name = dest.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^Scope.Var var = t .getModule (  )  .getVar ( name ) ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( var == null && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^^632^^^^^619^636^[ADD] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^JSDocInfo docInfo  =  dest.getJSDocInfo (  ) ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )   >  ( docInfo == false || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = propValueNode.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^Scope.Var var = t.getScope (  ) .getVar ( unaliasableGlobals ) ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( isIncOrDec )  {^627^^^^^619^636^[REPLACE] if  ( aliasable )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REMOVE]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( whitelist.isEmpty (  )  )  ||  ( whitelist.contains ( dest.getString (  )  )  )  )  )  {     props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ; }^627^^^^^619^636^[REMOVE] ^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( var == null ) {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^Scope.Var var = t.getScope (  )  .getNext (  )  ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( var == false && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^globals.put ( name, new Property ( name )  ) ;^631^632^633^^^619^636^[ADD] if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ; }^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^JSDocInfo docInfo  =  parent.getJSDocInfo (  )  ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^boolean aliasable = unaliasableGlobals.contains ( propNameNode.getString (  )  )  ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = propValueNode .setString ( aliasableGlobals )  ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^for  ( NodepropValue = n.getLastChild (  ) ;^644^^^^^638^651^[REPLACE] for  ( Node varChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^getGlobalName ( t, var, n ) ;^647^^^^^638^651^[REPLACE] getGlobalName ( t, varChild, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^647^^^^^638^651^[ADD] getGlobalName ( t, varChild, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^varChild =  propValue.getNext (  )  )  {^646^^^^^638^651^[REPLACE] varChild = varChild.getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node varChild = returnNode.getLastChild (  ) ;^644^^^^^638^651^[REPLACE] for  ( Node varChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( n .getString (  )    ||  Token.NAME )  {^660^^^^^659^690^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^return;^666^667^668^^^659^690^[ADD] if  ( var != null && var.isLocal (  )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^return defaultRoot;^667^^^^^659^690^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  ( global == null )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^671^672^^^^659^690^[ADD] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global .recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^684^^^^^677^685^[ADD] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordAccessor ( t ) ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.setString (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t ) ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global .recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^String returnNodeame = n.getString (  ) ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Scope.Var var = t.getScope (  ) .getVar ( unaliasableGlobals ) ;^662^^^^^659^690^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Property global = globals.get ( unaliasableGlobals ) ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  ( global == true )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REMOVE]^if  (  ( n.getType (  )  )  ==  ( NAME )  )  {     String name = n.getString (  ) ;     Var var = t.getScope (  ) .getVar ( name ) ;     if  (  ( var != null )  &&  ( var.isLocal (  )  )  )  {         return ;     }     Property global = globals.get ( name ) ;     if  ( global != null )  {         if  (  (  (  (  ( isAssignmentOp ( parent )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  ||  (  ( parent.getType (  )  )  ==  ( INC )  )  )  ||  (  ( parent.getType (  )  )  ==  ( DEC )  )  )  ||  (  ( parent.getType (  )  )  ==  ( NEW )  )  )  {             global.recordMutator ( t ) ;         }else {             global.recordAccessor ( t ) ;         }         globalUses.add ( n ) ;     } }^671^^^^^659^690^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  (   parent    && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^677^678^679^680^^659^690^[ADD] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^String returnNodeame = n .setString ( aliasableGlobals )  ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^661^662^^^^659^690^[ADD] String name = n.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Scope.Var var = t.getModule (  ) .getVar ( name ) ;^662^^^^^659^690^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^662^^^^^659^690^[ADD] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Property global = globals.containsKey ( unaliasableGlobals ) ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^String globalName = var.getString (  ) ;^697^^^^^696^702^[REPLACE] String globalName = globalUse.getString (  ) ;^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^697^^^^^696^702^[ADD] String globalName = globalUse.getString (  ) ;^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( props.get ( propName ) .aliasAccessor )  {^698^^^^^696^702^[REPLACE] if  ( globals.get ( globalName ) .aliasAccessor )  {^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^globalUse.setString ( "GLOBAL_" + globalName ) ;compiler.reportCodeChange (  ) ;^698^699^700^701^^696^702^[ADD] if  ( globals.get ( globalName ) .aliasAccessor )  { globalUse.setString ( "GLOBAL_" + globalName ) ; compiler.reportCodeChange (  ) ; }^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^globalUse.setString (unaliasableGlobals + unaliasableGlobals ) ;^699^^^^^696^702^[REPLACE] globalUse.setString ( "GLOBAL_" + globalName ) ;^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propDest = parentNode.getLastChild (  ) ;^700^^^^^696^702^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] replaceGlobalUse [TYPE] void [PARAMETER] Node globalUse [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node globalValue = Node.newString ( Token.NAME, name ) ;^720^^^^^712^728^[REPLACE] Node globalValue = Node.newString ( Token.NAME, globalName ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node globalNameNode = Node.replaceChild ( Token.NAME,unaliasableGlobals + globalName ) ;^721^722^^^^712^728^[REPLACE] Node globalNameNode = Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^globalNameNode.addChildToFront ( parentNode ) ;^723^^^^^712^728^[REPLACE] globalNameNode.addChildToFront ( globalValue ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node var = new Node ( Token.VAR, returnNode ) ;^724^^^^^712^728^[REPLACE] Node var = new Node ( Token.VAR, globalNameNode ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root.addChildToFront ( varChild ) ;^725^^^^^712^728^[REPLACE] root.addChildToFront ( var ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^compiler .getNodeForCodeInsertion ( deepestModuleAccess )  ;^727^^^^^712^728^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph == true )  {^747^^^^^745^753^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] recordAccessor [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestModuleAccess  =  t.getModule (  )  ;^748^749^750^751^^745^753^[REPLACE] deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[METHOD] recordAccessor [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph == false )  {^757^^^^^755^763^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^757^758^759^760^761^755^763^[ADD] if  ( moduleGraph != null )  { deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestModuleMutate  =  moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^[REPLACE] deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestModuleMutate =  ( deepestModuleMutate != this )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^[REPLACE] deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^private  Set<String> whitelist;^479^^^^^^^[REPLACE] private final Set<String> whitelist;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GetAliasableNames   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.whitelist =  1;^482^^^^^481^483^[REPLACE] this.whitelist = whitelist;^[METHOD] <init> [TYPE] Set) [PARAMETER] String> whitelist [CLASS] GetAliasableNames   [TYPE]  Set whitelist  [TYPE]  boolean false  true 
[ADD]^^482^^^^^481^483^[ADD] this.whitelist = whitelist;^[METHOD] <init> [TYPE] Set) [PARAMETER] String> whitelist [CLASS] GetAliasableNames   [TYPE]  Set whitelist  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getType (  )  )  )  )  {^490^491^^^^485^495^[REPLACE] if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetAliasableNames   [TYPE]  Set whitelist  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node dest  n  parent 
[REPLACE]^props.put ( parent.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^[REPLACE] props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetAliasableNames   [TYPE]  Set whitelist  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node dest  n  parent 
[REPLACE]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^489^^^^^485^495^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetAliasableNames   [TYPE]  Set whitelist  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node dest  n  parent 
[REPLACE]^if  ( n.getType (  )   ||  Token.GETPROP )  {^505^^^^^504^520^[REPLACE] if  ( n.getType (  )  == Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^Node propNameNode = n.getLastChild (  ) ;String name = propNameNode.getString (  ) ;^505^506^^508^509^504^520^[ADD] if  ( n.getType (  )  == Token.GETPROP )  { Node propNameNode = n.getLastChild (  ) ; if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if  ( canReplaceWithGetProp ( propNameNode, propNameNode, parent )  )  {^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REMOVE]^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {     String name = propNameNode.getString (  ) ;     props.get ( name ) .recordMutator ( t ) ;     mutators.add ( n ) ; }^508^^^^^504^520^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent .getLastChild (  )  ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if  ( canReplaceWithSetProp ( n, n, parent )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^^513^514^^516^517^504^520^[ADD] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ; props.get ( name ) .recordMutator ( t ) ; mutators.add ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = propNameNode.getType (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^Node propNameNode = propNameNode.getLastChild (  ) ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^^506^^^^^504^520^[ADD] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent.getString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^props.get ( name ) .recordAccessor ( t ) ;^509^510^^^^504^520^[ADD] String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent.getType (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if  ( canReplaceWithGetProp ( parent, n, parent )  )  {^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^String name = propNameNode.getString (  ) ;props.get ( name ) .recordAccessor ( t ) ;accessors.add ( n ) ;^508^509^510^511^512^504^520^[ADD] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ; accessors.add ( n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = propNameNode.getType (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent.getString (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^^514^^^^^504^520^[ADD] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) ;^535^536^^^^533^545^[REPLACE] boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^[REPLACE] boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  && ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^[REPLACE] boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^return  ( propName      == Token.STRING )  && !isAssignTarget &&  ( !true || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^[REPLACE] return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[METHOD] canReplaceWithGetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN )  ^   ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^[REPLACE] boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[METHOD] canReplaceWithSetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^return  ( propNameNode .getString (  )   == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^[REPLACE] return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[METHOD] canReplaceWithSetProp [TYPE] boolean [PARAMETER] Node propNameNode Node getPropNode Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  isAssignTarget  true  [TYPE]  Node getPropNode  parent  propNameNode 
[REPLACE]^if  ( dest.getType (  )   !=  Token.NAME )  {^620^^^^^619^636^[REPLACE] if  ( dest.getType (  )  == Token.NAME )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( dest.getType (  )  == Token.NAME )  {^627^^^^^619^636^[REPLACE] if  ( aliasable )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^627^628^629^^^619^636^[ADD] if  ( aliasable )  { String name = dest.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( var == false ) {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ;^632^^^^^619^636^[REPLACE] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^String name = parent.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^628^629^^^^619^636^[ADD] String name = dest.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( var == true ) {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^632^^^^^619^636^[ADD] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^JSDocInfo docInfo = dest .getString (  )   != true ? parent^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^622^623^^^^619^636^[ADD] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )   !=  ( docInfo != null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^String name = parent.getType (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  (  !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REMOVE]^if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ;^632^^^^^619^636^[REMOVE] ^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^String name = dest.getType (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^globals.put ( name, new Property ( name )  ) ;^631^632^633^^^619^636^[ADD] if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ; }^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^JSDocInfo docInfo  =  dest.getJSDocInfo (  ) ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^629^^^^^619^636^[ADD] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^for  ( Node parent = parent.getFirstChild (  ) ;^644^^^^^638^651^[REPLACE] for  ( Node varChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetGlobals   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  varChild 
[REPLACE]^getGlobalName ( t, parent, n ) ;^647^^^^^638^651^[REPLACE] getGlobalName ( t, varChild, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetGlobals   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  varChild 
[REPLACE]^varChild =  parent.getNext (  )  )  {^646^^^^^638^651^[REPLACE] varChild = varChild.getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetGlobals   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  varChild 
[REPLACE]^for  ( Node varChild = n.getString (  ) ;^644^^^^^638^651^[REPLACE] for  ( Node varChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetGlobals   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  varChild 
[ADD]^^644^645^646^647^648^638^651^[ADD] for  ( Node varChild = n.getFirstChild (  ) ; varChild != null; varChild = varChild.getNext (  )  )  { getGlobalName ( t, varChild, n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GetGlobals   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  varChild 
[REPLACE]^if  ( n.getType (  )   !=  Token.NAME )  {^660^^^^^659^690^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( null == null ) {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( global == null )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^671^672^^^^659^690^[ADD] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t ) ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global .recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REMOVE]^globalUses.add ( n ) ;^682^^^^^677^685^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global.recordAccessor ( t ) ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^682^^^^^677^685^[ADD] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^String parentame = n.getString (  ) ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^Property global = globals.get ( name ) ;^662^^^^^659^690^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^670^^^^^659^690^[ADD] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( global == this  )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^677^678^679^680^^659^690^[ADD] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global .recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REMOVE]^globalUses.add ( n ) ;^684^^^^^677^685^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^String parentame = n .getFirstChild (  )  ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^public  short  accessorCount = 0;^733^^^^^^^[REPLACE] public int accessorCount = 0;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^private int mutatorCount = 0;^734^^^^^^^[REPLACE] public int mutatorCount = 0;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^public boolean aliasMutator ;^735^^^^^^^[REPLACE] public boolean aliasMutator = false;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^public boolean aliasAccessor ;^736^^^^^^^[REPLACE] public boolean aliasAccessor = false;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^JSModule deepestModuleAccess = false;^738^^^^^^^[REPLACE] JSModule deepestModuleAccess = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^JSModule deepestModuleMutate = this;^739^^^^^^^[REPLACE] JSModule deepestModuleMutate = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^this.name =  null;^742^^^^^741^743^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^if  ( moduleGraph == this  )  {^747^^^^^745^753^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] recordAccessor [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^deepestModuleAccess  =  moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^[REPLACE] deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[METHOD] recordAccessor [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^deepestModuleAccess  =  moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) ,deepestModuleMutate ) ;^748^749^750^751^^745^753^[REPLACE] deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[METHOD] recordAccessor [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^if  ( true == this )  {^757^^^^^755^763^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^deepestModuleMutate  =  t.getModule (  )  ;^758^759^760^761^^755^763^[REPLACE] deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
[REPLACE]^deepestModuleMutate =  ( deepestModuleMutate != false )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^[REPLACE] deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[METHOD] recordMutator [TYPE] void [PARAMETER] NodeTraversal t [CLASS] Property   [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  String name  [TYPE]  NodeTraversal t  [TYPE]  int accessorCount  mutatorCount 
