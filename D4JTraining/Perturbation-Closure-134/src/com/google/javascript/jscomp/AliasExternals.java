[REPLACE]^private static final int DEFAULT_REQUIRED_USAGE ;^82^^^^^^^[REPLACE] private static final int DEFAULT_REQUIRED_USAGE = 4;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  short  requiredUsage = DEFAULT_REQUIRED_USAGE;^85^^^^^^^[REPLACE] private int requiredUsage = DEFAULT_REQUIRED_USAGE;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private static final int MIN_PROP_SIZE ;^88^^^^^^^[REPLACE] private static final int MIN_PROP_SIZE = 4;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^static final String PROTOTYPE_PROPERTY_NAME ;^96^97^^^^96^97^[REPLACE] static final String PROTOTYPE_PROPERTY_NAME = getArrayNotationNameFor ( "prototype" ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<String, Property> props ;^100^^^^^^^[REPLACE] private final Map<String, Property> props = Maps.newHashMap (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final List<Node> accessors ;^103^^^^^^^[REPLACE] private final List<Node> accessors = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final List<Node> mutators ;^106^^^^^^^[REPLACE] private final List<Node> mutators = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<Node, Node> replacementMap  = null ;^112^113^^^^112^113^[REPLACE] private final Map<Node, Node> replacementMap = new IdentityHashMap<Node, Node> (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Map<String, Property> globals ;^116^^^^^^^[REPLACE] private final Map<String, Property> globals = Maps.newHashMap (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private  List<Node> globalUses = Lists.newArrayList (  ) ;^119^^^^^^^[REPLACE] private final List<Node> globalUses = Lists.newArrayList (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Set<String> unaliasableGlobals ;^137^138^139^140^^137^149^[REPLACE] private final Set<String> unaliasableGlobals = Sets.newHashSet (^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^private final Set<String> aliasableGlobals ;^152^^^^^^^[REPLACE] private final Set<String> aliasableGlobals = Sets.newHashSet (  ) ;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public int accessorCount  = null ;^733^^^^^^^[REPLACE] public int accessorCount = 0;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public int mutatorCount = 0 / 2;^734^^^^^^^[REPLACE] public int mutatorCount = 0;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public boolean aliasMutator = true;^735^^^^^^^[REPLACE] public boolean aliasMutator = false;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^public boolean aliasAccessor  = null ;^736^^^^^^^[REPLACE] public boolean aliasAccessor = false;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^JSModule deepestModuleAccess ;^738^^^^^^^[REPLACE] JSModule deepestModuleAccess = null;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^JSModule deepestModuleMutate ;^739^^^^^^^[REPLACE] JSModule deepestModuleMutate = null;^ [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  
[REPLACE]^this.compiler =  null;^180^^^^^179^202^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.moduleGraph =  null;^181^^^^^179^202^[REPLACE] this.moduleGraph = moduleGraph;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^183^184^^^^179^202^[REPLACE] if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^185^186^187^^^183^188^[ADD] throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return ;^185^186^187^^^179^202^[REPLACE] throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( !StringUtil.isEmpty ( name )  )  {^190^^^^^179^202^[REPLACE] if  ( !StringUtil.isEmpty ( unaliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.unaliasableGlobals.addAll ( Arrays.asList ( name.split ( "," )  )  ) ;^191^192^^^^179^202^[REPLACE] this.unaliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^asList ( aliasableGlobals.split ( "," )  )  ;^192^^^^^179^202^[REPLACE] Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Arrays.asList ( name.split ( "," )  )  ) ;^192^^^^^179^202^[REPLACE] Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^asList ( unaliasableGlobals.split ( "," )  )  ;^192^^^^^179^202^[REMOVE] ^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  !StringUtil.isEmpty  (  unaliasableGlobals  )    )   {  ;^195^^^^^179^202^[REPLACE] if  ( !StringUtil.isEmpty ( aliasableGlobals )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^this.aliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^196^^^^^179^202^[REPLACE] this.aliasableGlobals.addAll ( Arrays.asList ( aliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^unaliasableGlobals.split ( "," )  ;^196^^^^^179^202^[REPLACE] this.aliasableGlobals.addAll ( Arrays.asList ( aliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^196^^^^^179^202^[ADD] this.aliasableGlobals.addAll ( Arrays.asList ( aliasableGlobals.split ( "," )  )  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph == null )  {^199^^^^^179^202^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^moduleRoots ;^200^^^^^179^202^[REPLACE] moduleRoots = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^moduleRoots  = null ;^200^^^^^179^202^[REPLACE] moduleRoots = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, propInfo, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^224^270^[REPLACE] NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replacementMap.containsKey ( parent )  ;^228^^^^^224^270^[REPLACE] props.put ( "prototype", new Property ( "prototype" )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, propInfo, new PropertyGatherer (  )  ) ;^231^^^^^224^270^[REPLACE] NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.name.split (  )  %  0.5  >= MIN_PROP_SIZE )  {^237^^^^^224^270^[REPLACE] if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^237^238^239^240^^224^270^[ADD] if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  { if  ( prop.accessorCount >= requiredUsage )  { prop.aliasAccessor = true; }^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (usage  <=  requiredUsage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^238^239^240^^^224^270^[ADD] if  ( prop.accessorCount >= requiredUsage )  { prop.aliasAccessor = true; }^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^239^^^^^224^270^[ADD] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.mutatorCount  >  requiredUsage )  {^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasMutator = false;^242^^^^^224^270^[REPLACE] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^global.aliasAccessor = true  ;^239^^^^^224^270^[REPLACE] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasAccessor = true  ;^242^^^^^224^270^[REPLACE] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.accessorCount  < usage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^if  (  ( prop.mutatorCount )  >=  ( requiredUsage )  )  {     prop.aliasMutator = true; }^238^^^^^224^270^[REMOVE] ^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^prop.aliasAccessor = false;^239^^^^^224^270^[REPLACE] prop.aliasAccessor = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.mutatorCount  < usage )  {^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^241^242^243^^^224^270^[ADD] if  ( prop.mutatorCount >= requiredUsage )  { prop.aliasMutator = true; }^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^242^^^^^224^270^[ADD] prop.aliasMutator = true;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.name .split ( name )   /  0.5  >= MIN_PROP_SIZE )  {^237^^^^^224^270^[REPLACE] if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.accessorCount  >  requiredUsage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (usage  >  requiredUsage )  {^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( prop.accessorCount  <=  requiredUsage )  {^238^^^^^224^270^[REPLACE] if  ( prop.accessorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  prop.accessorCount >= requiredUsage  )   {  ;^241^^^^^224^270^[REPLACE] if  ( prop.mutatorCount >= requiredUsage )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property global  ;^236^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node root : accessors )  {^247^^^^^224^270^[REPLACE] for  ( Node propInfo : accessors )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replaceAccessor ( root ) ;^248^^^^^224^270^[REPLACE] replaceAccessor ( propInfo ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node globalUse  ;^247^^^^^224^270^[REPLACE] for  ( Node propInfo : accessors )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node root : mutators )  {^252^^^^^224^270^[REPLACE] for  ( Node propInfo : mutators )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replaceAccessor ( propInfo )  ;^253^^^^^224^270^[REPLACE] replaceMutator ( propInfo ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node globalUse  ;^252^^^^^224^270^[REPLACE] for  ( Node propInfo : mutators )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  prop.aliasMutator  )   {  ;^260^^^^^224^270^[REPLACE] if  ( prop.aliasAccessor )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  )  ;^261^^^^^224^270^[REPLACE] addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^getAddingRoot ( prop.deepestModuleMutate )  ;^261^^^^^224^270^[REPLACE] addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^getAddingRoot ( prop.deepestModuleAccess )  ;^261^^^^^224^270^[REMOVE] ^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property global  ;^259^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  prop.aliasAccessor  )   {  ;^266^^^^^224^270^[REPLACE] if  ( prop.aliasMutator )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  )  ;^267^^^^^224^270^[REPLACE] addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^getAddingRoot ( prop.deepestModuleAccess )  ;^267^^^^^224^270^[REPLACE] addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^267^^^^^224^270^[ADD] addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property global  ;^265^^^^^224^270^[REPLACE] for  ( Property prop : props.values (  )  )  {^[METHOD] aliasProperties [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  externs  propInfo  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^288^^^^^277^302^[ADD] Node propNameNode = getPropNode.getLastChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = root.getString (  ) ;^289^^^^^277^302^[REPLACE] String propName = propNameNode.getString (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( props.get ( unaliasableGlobals ) .aliasAccessor )  {^290^^^^^277^302^[REPLACE] if  ( props.get ( propName ) .aliasAccessor )  {^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = propSrc.getLastChild (  ) ;^291^^^^^277^302^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node newNameNode = Node.replaceChild ( Token.NAME, getArrayNotationNameFor ( unaliasableGlobals )  ) ;^294^295^^^^277^302^[REPLACE] Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node functionBlock = new Node ( BLOCK, returnNode )  ;^297^^^^^277^302^[REPLACE] Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propSrc = propNameNode.getFirstChild (  ) ;^291^^^^^277^302^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^294^295^^^^277^302^[ADD] Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^297^^^^^277^302^[ADD] Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[METHOD] replaceAccessor [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = propInfo.getLastChild (  ) ;^324^^^^^307^348^[REPLACE] Node propNameNode = getPropNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node parentNode = root.getParent (  ) ;^325^^^^^307^348^[REPLACE] Node parentNode = getPropNode.getParent (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property prop = props.get ( root.getString (  )  ) ;^327^^^^^307^348^[REPLACE] Property prop = props.get ( propNameNode.getString (  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  prop.aliasAccessor  )   {  ;^328^^^^^307^348^[REPLACE] if  ( prop.aliasMutator )  {^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^329^330^^^^307^348^[ADD] Node propSrc = getPropNode.getFirstChild (  ) ; Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propDest = root.getLastChild (  ) ;^330^^^^^307^348^[REPLACE] Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propInfo.getString (  )  )  ) ;^339^340^^^^307^348^[REPLACE] Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( GETELEM, propSrc, newNameNode )  ;^341^^^^^307^348^[REPLACE] Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node parentNode = getPropNode.getParent (  )  ;^329^^^^^307^348^[REPLACE] Node propSrc = getPropNode.getFirstChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node parentNode = getPropNode.getParent (  )  ;^330^^^^^307^348^[REPLACE] Node propDest = parentNode.getLastChild (  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( root.getString (  )  )  ) ;^339^340^^^^307^348^[REPLACE] Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node call = new Node ( Token.CALL, callName, root, propDest ) ;^341^^^^^307^348^[REPLACE] Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[METHOD] replaceMutator [TYPE] void [PARAMETER] Node getPropNode [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property prop  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^383^^^^^375^391^[ADD] Node propValue = Node.newString ( Token.STRING, propName ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node unaliasableGlobalsNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^384^385^^^^375^391^[REPLACE] Node propNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^globalNameNode.addChildToFront ( globalValue )  ;^386^^^^^375^391^[REPLACE] propNameNode.addChildToFront ( propValue ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( GETELEM, propSrc, newNameNode )  ;^387^^^^^375^391^[REPLACE] Node var = new Node ( Token.VAR, propNameNode ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root.addChildToFront ( fnNode )  ;^388^^^^^375^391^[REPLACE] root.addChildToFront ( var ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replacementMap.containsKey ( parent )  ;^390^^^^^375^391^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addAccessorPropName [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^417^418^^^^400^448^[ADD] Node functionName = Node.newString ( Token.NAME, getMutatorFor ( propName )  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String localPropName = getMutatorFor ( propName )   "$a";^421^^^^^400^448^[REPLACE] String localPropName = getMutatorFor ( propName )  + "$a";^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String localPropName =  ( getMutatorFor ( propName )  )  + "$a"  ;^422^^^^^400^448^[REPLACE] String localValueName = getMutatorFor ( propName )  + "$b";^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assignFrom = newString ( Token.NAME, localValueName )  ;^423^^^^^400^448^[REPLACE] Node hasPropNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assignFrom = newString ( Token.NAME, localValueName )  ;^424^^^^^400^448^[REPLACE] Node propValueNode = Node.newString ( Token.NAME, localValueName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node args = new Node ( Token.LP, hasPropNode, var ) ;^425^^^^^400^448^[REPLACE] Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = Node.newString ( Token.NAME, propName ) ;^428^^^^^400^448^[REPLACE] Node propNameNode = Node.newString ( Token.NAME, localPropName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^429^430^^^^400^448^[ADD] Node propValue = Node.newString ( Token.STRING, propName ) ; Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node getProp = new Node ( Token.GETPROP, propInfo, propValue ) ;^430^^^^^400^448^[REPLACE] Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assignFrom = Node.replaceChild ( Token.NAME, unaliasableGlobals ) ;^431^^^^^400^448^[REPLACE] Node assignFrom = Node.newString ( Token.NAME, localValueName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node assign = new Node ( Token.ASSIGN, propValue, assignFrom ) ;^432^^^^^400^448^[REPLACE] Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( GETELEM, propSrc, newNameNode )  ;^433^^^^^400^448^[REPLACE] Node returnNode = new Node ( Token.RETURN, assign ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( GETELEM, propSrc, newNameNode )  ;^434^^^^^400^448^[REPLACE] Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^FunctionNode fnNode = new FunctionNode ( functionName.newString (  )  ) ;^437^^^^^400^448^[REPLACE] FunctionNode fnNode = new FunctionNode ( functionName.getString (  )  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( args )  ;^442^^^^^400^448^[REPLACE] fnNode.addChildToBack ( functionName ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( functionName )  ;^443^^^^^400^448^[REPLACE] fnNode.addChildToBack ( args ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^fnNode.addChildToBack ( propInfo ) ;^444^^^^^400^448^[REPLACE] fnNode.addChildToBack ( functionBlock ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root.addChildToFront ( var )  ;^445^^^^^400^448^[REPLACE] root.addChildToFront ( fnNode ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replacementMap.containsKey ( parent )  ;^447^^^^^400^448^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^447^^^^^400^448^[ADD] compiler.reportCodeChange (  ) ;^[METHOD] addMutatorFunction [TYPE] void [PARAMETER] String propName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  FunctionNode fnNode  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( n.getType (  )   !=  Token.GETPROP )  {^505^^^^^504^520^[REPLACE] if  ( n.getType (  )  == Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  canReplaceWithSetProp  (  propNameNode, n, parent  )    )   {  ;^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  )  ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithSetProp ( propNameNode, n, propDest )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^514^^^^^504^520^[ADD] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = returnNode.getLastChild (  ) ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = propNameNode .setString ( propName )  ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String propName = propNameNode.getString (  )  ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^String name = propNameNode.getString (  ) ;props.get ( name ) .recordAccessor ( t ) ;accessors.add ( n ) ;^508^509^510^511^512^504^520^[ADD] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ; accessors.add ( n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = var.getString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( canReplaceWithSetProp ( propNameNode, n, parentNode )  )  {^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node parentNode = getPropNode.getParent (  )  ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String name = var.getString (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  true  [TYPE]  NodeTraversal t  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, newNameNode, new GetGlobals (  )  ) ;^581^^^^^579^613^[REPLACE] NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^NodeTraversal.traverse ( compiler, propValue, new GlobalGatherer (  )  ) ;^584^^^^^579^613^[REPLACE] NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( global.mutatorCount  <  0 )  {^588^^^^^579^613^[REPLACE] if  ( global.mutatorCount > 0 )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( usage  ==  mutatorCount )  {^597^^^^^579^613^[REPLACE] if  ( aliasedBytes < currentBytes )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^598^^^^^579^613^[ADD] global.aliasAccessor = true;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^587^588^589^590^^579^613^[ADD] for  ( Property global : globals.values (  )  )  { if  ( global.mutatorCount > 0 )  { continue; }^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( global.mutatorCount  <  3 )  {^588^^^^^579^613^[REPLACE] if  ( global.mutatorCount > 0 )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (usage  >  currentBytes )  {^597^^^^^579^613^[REPLACE] if  ( aliasedBytes < currentBytes )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^global.aliasAccessor = true;^597^598^599^^^579^613^[ADD] if  ( aliasedBytes < currentBytes )  { global.aliasAccessor = true; }^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^global.aliasAccessor = false;^598^^^^^579^613^[REPLACE] global.aliasAccessor = true;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int currentBytes = global.name.length (  )  + 3 * global.accessorCount;^594^^^^^579^613^[REPLACE] int currentBytes = global.name.length (  )  * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int currentBytes =  ( length (  )  )  *  ( global.accessorCount )  ;^595^^^^^579^613^[REPLACE] int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Property prop  ;^587^^^^^579^613^[REPLACE] for  ( Property global : globals.values (  )  )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int currentBytes = global.name.length (  )  + 5 * global.accessorCount;^594^^^^^579^613^[REPLACE] int currentBytes = global.name.length (  )  * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^int aliasedBytes = 8 + global.name.size (  )  + 2 * global.accessorCount;^595^^^^^579^613^[REPLACE] int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^for  ( Node propValueNode : globalUses )  {^603^^^^^579^613^[REPLACE] for  ( Node globalUse : globalUses )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^replaceGlobalUse ( propDest ) ;^604^^^^^579^613^[REPLACE] replaceGlobalUse ( globalUse ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propInfo  ;^603^^^^^579^613^[REPLACE] for  ( Node globalUse : globalUses )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  prop.aliasAccessor  )   {  ;^608^^^^^579^613^[REPLACE] if  ( global.aliasAccessor )  {^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^getAddingRoot ( prop.deepestModuleAccess )  ;^610^^^^^579^613^[REPLACE] getAddingRoot ( global.deepestModuleAccess )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^607^608^609^610^611^579^613^[ADD] for  ( Property global : globals.values (  )  )  { if  ( global.aliasAccessor )  { addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ; }^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^610^^^^^579^613^[ADD] getAddingRoot ( global.deepestModuleAccess )  ) ;^[METHOD] aliasGlobals [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^620^^^^^619^636^[REPLACE] if  ( dest.getType (  )  == Token.NAME )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^627^^^^^619^636^[REPLACE] if  ( aliasable )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REMOVE]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( whitelist.isEmpty (  )  )  ||  ( whitelist.contains ( dest.getString (  )  )  )  )  )  {     props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ; }^627^^^^^619^636^[REMOVE] ^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( var == null && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^globals.put ( unaliasableGlobals, new Property ( name )  ) ;^632^^^^^619^636^[REPLACE] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = root.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^^629^^^^^619^636^[ADD] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( var == true && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^globals.put ( name, new Property ( name )  ) ;^631^632^633^^^619^636^[ADD] if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ; }^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^JSDocInfo docInfo  =  parent.getJSDocInfo (  )  ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = returnNode.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^Scope.Var var = t .getModule (  )  .getVar ( name ) ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[ADD]^^627^628^629^^^619^636^[ADD] if  ( aliasable )  { String name = dest.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  ( null == this ) {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REMOVE]^newString ( Token.NAME, getMutatorFor ( propName )  )  ;^632^^^^^619^636^[REMOVE] ^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = propValueNode.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^Scope.Var var = t.getScope (  ) .getVar ( unaliasableGlobals ) ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^JSDocInfo docInfo  =  dest.getJSDocInfo (  ) ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^String name = propNameNode.newString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  JSDocInfo docInfo  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap 
[REPLACE]^if  (   Token.NAME )  {^660^^^^^659^690^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^String name = n.getString (  ) ;Scope.Var var = t.getScope (  ) .getVar ( name ) ;^660^661^662^^^659^690^[ADD] if  ( n.getType (  )  == Token.NAME )  { String name = n.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if   (  var != null && !var.isLocal  (    )    )   {  ;^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^return;  ;^667^^^^^659^690^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  ( global == null )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^677^678^679^680^^659^690^[ADD] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t ) ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[ADD]^^684^^^^^677^685^[ADD] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordAccessor ( t ) ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global .recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global .recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^String returnNodeame = n.newString (  ) ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Scope.Var var = t.getModule (  ) .getVar ( name ) ;^662^^^^^659^690^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Property global = globals.get ( propName ) ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == returnNode )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( varChild )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^global.recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^String returnNodeame = n.getString (  ) ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Property global = globals.get ( unaliasableGlobals ) ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  Property global 
[REPLACE]^Node assignFrom = newString ( Token.NAME, localValueName )  ;^720^^^^^712^728^[REPLACE] Node globalValue = Node.newString ( Token.NAME, globalName ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node propNameNode = Node.replaceChild ( Token.NAME,name  globalName ) ;^721^722^^^^712^728^[REPLACE] Node globalNameNode = Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^globalNameNode.addChildToFront ( root ) ;^723^^^^^712^728^[REPLACE] globalNameNode.addChildToFront ( globalValue ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^723^724^^^^712^728^[ADD] globalNameNode.addChildToFront ( globalValue ) ; Node var = new Node ( Token.VAR, globalNameNode ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node elemNode = new Node ( GETELEM, propSrc, newNameNode )  ;^724^^^^^712^728^[REPLACE] Node var = new Node ( Token.VAR, globalNameNode ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^root.addChildToFront ( fnNode )  ;^725^^^^^712^728^[REPLACE] root.addChildToFront ( var ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^compiler .getNodeForCodeInsertion ( m )  ;^727^^^^^712^728^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] addGlobalAliasNode [TYPE] void [PARAMETER] String globalName Node root [CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [TYPE]  AbstractCompiler compiler  [TYPE]  Set aliasableGlobals  unaliasableGlobals  whitelist  [TYPE]  boolean aliasAccessor  aliasMutator  aliasable  false  isAssignTarget  isCallTarget  isIncOrDec  true  [TYPE]  Node after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  [TYPE]  JSModule deepestModuleAccess  deepestModuleMutate  m  [TYPE]  List accessors  globalUses  mutators  [TYPE]  String PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  [TYPE]  Map globals  moduleRoots  props  replacementMap  [TYPE]  int DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( n.getType (  )   ||  Token.GETPROP )  {^505^^^^^504^520^[REPLACE] if  ( n.getType (  )  == Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if   (  canReplaceWithSetProp  (  propNameNode, n, parent  )    )   {  ;^508^^^^^504^520^[REPLACE] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^String name = propNameNode.getString (  ) ;props.get ( name ) .recordAccessor ( t ) ;accessors.add ( n ) ;^508^509^510^511^512^504^520^[ADD] if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  { String name = propNameNode.getString (  ) ; props.get ( name ) .recordAccessor ( t ) ; accessors.add ( n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent.getString (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if   (  canReplaceWithGetProp  (  propNameNode, n, parent  )    )   {  ;^513^^^^^504^520^[REPLACE] if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REMOVE]^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {     String name = propNameNode.getString (  ) ;     props.get ( name ) .recordAccessor ( t ) ;     accessors.add ( n ) ; }^513^^^^^504^520^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^^514^^^^^504^520^[ADD] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[ADD]^^506^^^^^504^520^[ADD] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = propNameNode.getType (  ) ;^509^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^String name = parent.getString (  ) ;^514^^^^^504^520^[REPLACE] String name = propNameNode.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^Node propNameNode = propNameNode.getFirstChild (  ) ;^506^^^^^504^520^[REPLACE] Node propNameNode = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] PropertyGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent  propNameNode  [TYPE]  String name 
[REPLACE]^if  ( dest.getType (  )   !=  Token.NAME )  {^620^^^^^619^636^[REPLACE] if  ( dest.getType (  )  == Token.NAME )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if   (  dest.getType  (    )   == Token.NAME  )   {  ;^627^^^^^619^636^[REPLACE] if  ( aliasable )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( var == true && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^631^632^633^^^619^636^[ADD] if  ( var != null && !var.isLocal (  )  )  { globals.put ( name, new Property ( name )  ) ; }^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^parent.getJSDocInfo (  )  ;^632^^^^^619^636^[REPLACE] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^String name = parent.getString (  ) ;^628^^^^^619^636^[REPLACE] String name = dest.getString (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable =  ( ! ( unaliasableGlobals.contains ( dest.getString (  )  )  )  )  &&  (  ( docInfo == null )  ||  ( ! ( docInfo.isNoAlias (  )  )  )  )  ;^629^^^^^619^636^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( var == false && !var.isLocal (  )  )  {^631^^^^^619^636^[REPLACE] if  ( var != null && !var.isLocal (  )  )  {^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^JSDocInfo docInfo  =  dest.getJSDocInfo (  ) ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )   &  ( docInfo == this || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[ADD]^^632^^^^^619^636^[ADD] globals.put ( name, new Property ( name )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^JSDocInfo docInfo = dest.getJSDocInfo (  )  != this ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^[REPLACE] JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )   ^  ( docInfo == true || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^[REPLACE] boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[METHOD] getGlobalName [TYPE] void [PARAMETER] NodeTraversal t Node dest Node parent [CLASS] GetGlobals   [TYPE]  boolean aliasable  false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node dest  parent  [TYPE]  String name  [TYPE]  JSDocInfo docInfo 
[REPLACE]^if  ( n.getType (  )   &&  Token.NAME )  {^660^^^^^659^690^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  (  var.isLocal (  )  )  {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^return;^666^667^668^^^659^690^[ADD] if  ( var != null && var.isLocal (  )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^return;  ;^667^^^^^659^690^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( global == null )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC && parent.getType (  )  == Token.DEC &&^677^678^679^680^^659^690^[REPLACE] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^677^678^679^680^^659^690^[ADD] if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global .recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^684^^^^^677^685^[ADD] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global.recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t ) ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^String parentame = n.getType (  ) ;^661^^^^^659^690^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^String name = n.getString (  )  ;^662^^^^^659^690^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^670^^^^^659^690^[ADD] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^659^690^[REPLACE] if  ( var != null && var.isLocal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^if  ( global == parentull )  {^671^^^^^659^690^[REPLACE] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^671^672^^^^659^690^[ADD] if  ( global != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^682^^^^^677^685^[ADD] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global.recordMutator ( t )  ;^684^^^^^677^685^[REPLACE] global.recordAccessor ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^global .recordAccessor ( t )  ;^682^^^^^677^685^[REPLACE] global.recordMutator ( t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[ADD]^^662^^^^^659^690^[ADD] Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^String name = n.getString (  )  ;^670^^^^^659^690^[REPLACE] Property global = globals.get ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalGatherer   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^public int accessorCount ;^733^^^^^^^[REPLACE] public int accessorCount = 0;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^public int mutatorCount ;^734^^^^^^^[REPLACE] public int mutatorCount = 0;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^private boolean aliasMutator = true;^735^^^^^^^[REPLACE] public boolean aliasMutator = false;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^private boolean aliasAccessor = false;^736^^^^^^^[REPLACE] public boolean aliasAccessor = false;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^JSModule deepestModuleAccess  = null ;^738^^^^^^^[REPLACE] JSModule deepestModuleAccess = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
[REPLACE]^JSModule deepestModuleMutate ;^739^^^^^^^[REPLACE] JSModule deepestModuleMutate = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] Property   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name  [TYPE]  Property global 
