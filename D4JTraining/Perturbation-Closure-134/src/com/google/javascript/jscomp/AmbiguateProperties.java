[REPLACE]^private static final Logger logger ;^81^82^^^^81^82^[REPLACE] private static final Logger logger = Logger.getLogger ( AmbiguateProperties.class.getName (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final List<Node> stringNodesToRename ;^86^^^^^^^[REPLACE] private final List<Node> stringNodesToRename = Lists.newArrayList (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Map<String, Property> propertyMap ;^90^^^^^^^[REPLACE] private final Map<String, Property> propertyMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private  Set<String> externedNames = Sets.newHashSet (  ) ;^93^^^^^^^[REPLACE] private final Set<String> externedNames = Sets.newHashSet (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private  Set<String> quotedNames = Sets.newHashSet (  ) ;^96^^^^^^^[REPLACE] private final Set<String> quotedNames = Sets.newHashSet (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Map<String, String> renamingMap ;^99^^^^^^^[REPLACE] private final Map<String, String> renamingMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Map<Integer, String> colorMap ;^102^^^^^^^[REPLACE] private final Map<Integer, String> colorMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private static final Comparator<Property> FREQUENCY_COMPARATOR  = null ;^108^109^^^^108^116^[REPLACE] private static final Comparator<Property> FREQUENCY_COMPARATOR = new Comparator<Property> (  )  {^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private BiMap<JSType, Integer> intForType  = null ;^119^^^^^^^[REPLACE] private BiMap<JSType, Integer> intForType = HashBiMap.create (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private Map<JSType, JSTypeBitSet> relatedBitsets ;^125^^^^^^^[REPLACE] private Map<JSType, JSTypeBitSet> relatedBitsets = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private  Set<JSType> invalidatingTypes;^128^^^^^^^[REPLACE] private final Set<JSType> invalidatingTypes;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^static final String SKIP_PREFIX ;^134^^^^^^^[REPLACE] static final String SKIP_PREFIX = "JSAbstractCompiler";^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^protected  Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^303^^^^^^^[REPLACE] protected final Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet typesInSet ;^340^^^^^^^[REPLACE] JSTypeBitSet typesInSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypenew Property ( name )   ) ;^343^^^^^^^[REPLACE] JSTypeBitSet typesRelatedToSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private Annotation annotation;^396^^^^^^^[REPLACE] protected Annotation annotation;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^String oldName;^551^^^^^^^[REPLACE] final String oldName;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet typesSet ;^555^^^^^^^[REPLACE] JSTypeBitSet typesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet relatedTypesSet ;^556^^^^^^^[REPLACE] JSTypeBitSet relatedTypesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private static final  short  serialVersionUID = 1L;^604^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[ADD]^^138^139^^^^137^161^[ADD] this.compiler = compiler; this.reservedCharacters = reservedCharacters;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^this.reservedCharacters =  null;^139^^^^^137^161^[REPLACE] this.reservedCharacters = reservedCharacters;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^JSTypeRegistry r = compiler.getTypeValidator (  ) ;^141^^^^^137^161^[REPLACE] JSTypeRegistry r = compiler.getTypeRegistry (  ) ;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[ADD]^^142^143^144^^^137^161^[ADD] invalidatingTypes = Sets.newHashSet ( r.getNativeType ( JSTypeNative.ALL_TYPE ) , r.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ,^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[ADD]^^157^158^159^160^^137^161^[ADD] for  ( TypeMismatch mis : compiler.getTypeValidator (  ) .getMismatches (  )  )  { addInvalidatingType ( mis.first ) ; addInvalidatingType ( mis.second ) ; }^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^addInvalidatingType ( mis.second )  ;^158^^^^^137^161^[REPLACE] addInvalidatingType ( mis.first ) ;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^addInvalidatingType ( alt )  ;^159^^^^^137^161^[REPLACE] addInvalidatingType ( mis.second ) ;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^NodeTraversal.traverse ( compiler, n, new ProcessExterns (  )  ) ;^196^^^^^195^248^[REPLACE] NodeTraversal.traverse ( compiler, externs, new ProcessExterns (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^( key.getType (  )  )  ;^197^^^^^195^248^[REPLACE] NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^197^^^^^195^248^[ADD] NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  - 3 + quotedNames.size (  )  - 3 ) ;^199^200^^^^195^248^[REPLACE] Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  + quotedNames.size (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.add ( p.oldName )  ;^201^^^^^195^248^[REPLACE] reservedNames.addAll ( externedNames ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.contains ( quotedNames ) ;^202^^^^^195^248^[REPLACE] reservedNames.addAll ( quotedNames ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int numRenamedPropertyNames = 1;^204^^^^^195^248^[REPLACE] int numRenamedPropertyNames = 0;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^205^206^^^^195^248^[ADD] int numSkippedPropertyNames = 0; Set<Property> propsByFreq = new TreeSet<Property> ( FREQUENCY_COMPARATOR ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName )  ;^206^^^^^195^248^[REPLACE] Set<Property> propsByFreq = new TreeSet<Property> ( FREQUENCY_COMPARATOR ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( p.skipAmbiguating )  {^208^^^^^195^248^[REPLACE] if  ( !p.skipAmbiguating )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^++numRenamedPropertyNames;propsByFreq.add ( p ) ;++numSkippedPropertyNames;^208^209^210^211^212^195^248^[ADD] if  ( !p.skipAmbiguating )  { ++numRenamedPropertyNames; propsByFreq.add ( p ) ; } else { ++numSkippedPropertyNames;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.addAll ( p.oldName ) ;^213^^^^^208^214^[REPLACE] reservedNames.add ( p.oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^213^^^^^208^214^[ADD] reservedNames.add ( p.oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^propsByFreq.addAll ( p ) ;^210^^^^^195^248^[REPLACE] propsByFreq.add ( p ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^propertyMap.values (  )  ;^210^^^^^195^248^[REMOVE] ^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.add ( property.oldName ) ;^213^^^^^208^214^[REPLACE] reservedNames.add ( p.oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^propsByFreq .addAll ( this )  ;^210^^^^^195^248^[REPLACE] propsByFreq.add ( p ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName )  ;^207^^^^^195^248^[REPLACE] for  ( Property p : propertyMap.values (  )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^217^^^^^195^248^[ADD] PropertyGraph graph = new PropertyGraph ( Lists.newLinkedList ( propsByFreq )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int numNewPropertyNames = null.color (  ) ;^220^^^^^195^248^[REPLACE] int numNewPropertyNames = coloring.color (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^NameGenerator nameGen = new NameGenerator ( this, "", reservedCharacters ) ;^222^223^^^^195^248^[REPLACE] NameGenerator nameGen = new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( int i = 3; i < numNewPropertyNames; ++i )  {^224^^^^^195^248^[REPLACE] for  ( int i = 0; i < numNewPropertyNames; ++i )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^227^228^229^230^^195^248^[ADD] for  ( GraphNode<Property, Void> node : graph.getNodes (  )  )  { node.getValue (  ) .newName = colorMap.get ( node.getAnnotation (  ) .hashCode (  )  ) ; renamingMap.put ( node.getValue (  ) .oldName, node.getValue (  ) .newName ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^node.getValue (  ) .newName =  colorMap.get ( null.getAnnotation (  ) .hashCode (  )  ) ;^228^^^^^195^248^[REPLACE] node.getValue (  ) .newName = colorMap.get ( node.getAnnotation (  ) .hashCode (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName )  ;^227^^^^^195^248^[REPLACE] for  ( GraphNode<Property, Void> node : graph.getNodes (  )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( p == null && p.newName != null )  {^236^^^^^195^248^[REPLACE] if  ( p != null && p.newName != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !p.newName.equals ( newName )  )  {^238^^^^^195^248^[REPLACE] if  ( !p.newName.equals ( oldName )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^( key.getType (  )  )  ;^239^^^^^195^248^[REPLACE] n.setString ( p.newName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^compiler.getTypeRegistry (  ) ;^240^^^^^195^248^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^240^^^^^195^248^[ADD] compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !p.newName.compareTo ( oldName )  )  {^238^^^^^195^248^[REPLACE] if  ( !p.newName.equals ( oldName )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^n.setString ( p.newName ) ;compiler.reportCodeChange (  ) ;^238^239^240^241^^195^248^[ADD] if  ( !p.newName.equals ( oldName )  )  { n.setString ( p.newName ) ; compiler.reportCodeChange (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node externs : stringNodesToRename )  {^233^^^^^195^248^[REPLACE] for  ( Node n : stringNodesToRename )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( p == null ) {^236^^^^^195^248^[REPLACE] if  ( p != null && p.newName != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^239^240^^^^195^248^[ADD] n.setString ( p.newName ) ; compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^n .getString (  )  ;^239^^^^^195^248^[REPLACE] n.setString ( p.newName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^String oldName = externs.getString (  ) ;^234^^^^^195^248^[REPLACE] String oldName = n.getString (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^235^^^^^195^248^[ADD] Property p = propertyMap.get ( oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType alt  ;^233^^^^^195^248^[REPLACE] for  ( Node n : stringNodesToRename )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^String oldName = externs.getType (  ) ;^234^^^^^195^248^[REPLACE] String oldName = n.getString (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^PropertyGraphNode node  ;^235^^^^^195^248^[REPLACE] Property p = propertyMap.get ( oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^logger.info ( "Collapsed "  numRenamedPropertyNames  " properties into "  numNewPropertyNames  " and skipped renaming "  numSkippedPropertyNames  " properties." ) ;^245^246^247^^^195^248^[REPLACE] logger.info ( "Collapsed " + numRenamedPropertyNames + " properties into " + numNewPropertyNames + " and skipped renaming " + numSkippedPropertyNames + " properties." ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^263^^^^^262^300^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^265^^^^^262^300^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  type ) .getOwnerFunction (  )  )  {^266^^^^^265^270^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return;  ;^269^^^^^265^270^[REPLACE] return;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jsType = n.getJSType (  )  ;^266^^^^^265^270^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  type )  .getOwnerFunction (  )   )  {^266^^^^^265^270^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^newType = newType.restrictByNotNullOrUndefined (  )  ;^264^^^^^265^270^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^265^266^267^268^^262^300^[ADD] if  ( type instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { computeRelatedTypes ( alt ) ; }^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( relatedBitsets .inverse (  )   )  {^273^^^^^262^300^[REPLACE] if  ( relatedBitsets.containsKey ( type )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return;  ;^275^^^^^262^300^[REPLACE] return;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSTypeBitSet related = new JSTypeBitSet ( intForType .containsKey ( type )   ) ;^278^^^^^262^300^[REPLACE] JSTypeBitSet related = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^relatedBitsets .get ( alt )  ;^279^^^^^262^300^[REPLACE] relatedBitsets.put ( type, related ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^ObjectType parentType = type .restrictByNotNullOrUndefined (  )  ;^281^^^^^262^300^[REPLACE] ObjectType parentType = type.toObjectType (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^parentType =  null.getImplicitPrototype (  ) ;^284^^^^^262^300^[REPLACE] parentType = parentType.getImplicitPrototype (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^FunctionType constructor = this;^287^^^^^262^300^[REPLACE] FunctionType constructor = null;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof FunctionType )  {^288^^^^^262^300^[REPLACE] if  ( type instanceof FunctionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^}  else {^290^^^^^262^300^[REPLACE] } else if  ( type instanceof FunctionPrototypeType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^}   constructor = type.toObjectType (  ) .getConstructor (  ) ;^290^291^292^293^294^262^300^[ADD] else if  ( type instanceof FunctionPrototypeType )  { constructor =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ; } else { constructor = type.toObjectType (  ) .getConstructor (  ) ; }^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  null.toObjectType (  ) .getConstructor (  ) ;^293^^^^^290^294^[REPLACE] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^291^^^^^262^300^[ADD] constructor =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  (  ( FunctionType )   ( type )  )  ;^291^^^^^262^300^[REPLACE] constructor =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  null.toObjectType (  ) .getConstructor (  ) ;^293^^^^^262^300^[REPLACE] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  (  ( FunctionPrototypeType )   ( type )  ) .getOwnerFunction (  )  ;^289^^^^^262^300^[REPLACE] constructor =  ( FunctionType )  type;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^}  if  ( ! type instanceof FunctionPrototypeType )  {^290^^^^^262^300^[REPLACE] } else if  ( type instanceof FunctionPrototypeType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^293^^^^^290^294^[ADD] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( constructor == null )  {^295^^^^^262^300^[REPLACE] if  ( constructor != null )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( ObjectType parentType : constructor.getAllImplementedInterfaces (  )  )  {^296^^^^^295^299^[REPLACE] for  ( ObjectType itype : constructor.getAllImplementedInterfaces (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType alt  ;^296^^^^^295^299^[REPLACE] for  ( ObjectType itype : constructor.getAllImplementedInterfaces (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( child.getType (  )   &&  Token.STRING )  {^429^^^^^419^435^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^externedNames.add ( child.getString (  )  ) ;^429^430^431^^^419^435^[ADD] if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( child.getString (  )  )  ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^externedNames.add ( child.getType (  )  ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^428^429^430^^^419^435^[ADD] child = child.getNext (  ) .getNext (  )  )  { if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^422^^^^^419^435^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node child = n.getLastChild (  )  ;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.getType (  )   ||  Token.STRING )  {^455^^^^^440^477^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^455^456^457^458^^440^477^[ADD] if  ( key.getType (  )  == Token.STRING )  { if  ( !key.isQuotedString (  )  )  { JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^440^477^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^JSType jstype = getJSType ( n.getFirstChild (  )  ) ;maybeMarkCandidate ( key, jstype, t ) ;^456^457^458^459^^440^477^[ADD] if  ( !key.isQuotedString (  )  )  { JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ; } else {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( child.getString (  )  )  ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^( key.getType (  )  )  ;^462^^^^^456^463^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getString (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^457^458^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( key.getType (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getType (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( child.getType (  )   ) {^472^^^^^440^477^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^quotedNames.add ( child.getString (  )  ) ;^472^473^474^^^440^477^[ADD] if  ( child.getType (  )  == Token.STRING )  { quotedNames.add ( child.getString (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( propNode.getType (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( propNode.getString (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^key =  null.getNext (  ) .getNext (  )  )  {^452^^^^^440^477^[REPLACE] key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node propNode = n.getLastChild (  ) .getNext (  ) ;^443^^^^^440^477^[REPLACE] Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^444^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node key = propNode.getLastChild (  ) ; key != null;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^457^^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node child = propNode.getFirstChild (  ) ;^471^^^^^440^477^[REPLACE] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^503^^^^^502^520^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^type = type.restrictByNotNullOrUndefined (  ) ;^503^504^505^506^^502^520^[ADD] if  ( type instanceof UnionType )  { type = type.restrictByNotNullOrUndefined (  ) ; if  ( type instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^505^^^^^502^520^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if   (  !externedNames.contains  (  name  )    )   {  ;^507^^^^^502^520^[REPLACE] if  ( isInvalidatingType ( alt )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return true;  ;^508^^^^^502^520^[REPLACE] return true;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  type ) .getOwnerFunction (  )  )  {^506^^^^^505^512^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return false;^508^^^^^505^512^[REPLACE] return true;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return true;^511^^^^^505^512^[REPLACE] return false;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jsType = n.getJSType (  )  ;^506^^^^^505^512^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return false;^508^^^^^502^520^[REPLACE] return true;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^506^507^508^509^^505^512^[ADD] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { if  ( isInvalidatingType ( alt )  )  { return true; }^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^newType = newType.restrictByNotNullOrUndefined (  )  ;^504^^^^^505^512^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^if  ( relatedBitsets.containsKey ( type )  )  {     return ; }^507^^^^^502^520^[REMOVE] ^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^504^^^^^505^512^[ADD] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName )  ;^514^^^^^502^520^[REPLACE] ObjectType objType = ObjectType.cast ( type ) ;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return objType != this || invalidatingTypes.contains ( objType ) || !objType.hasReferenceName (  ) ||  ( objType.isNamedType (  )  ;;^515^516^517^518^^502^520^[REPLACE] return objType == null || invalidatingTypes.contains ( objType ) || !objType.hasReferenceName (  ) ||  ( objType.isNamedType (  )  && objType.isUnknownType (  )  )^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if   (  !p.skipAmbiguating  )   {  ;^569^^^^^568^585^[REPLACE] if  ( skipAmbiguating )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return;  ;^570^^^^^568^585^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if   (  type instanceof UnionType  )   {  ;^575^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^if  (  ( key.getType (  )  )  ==  ( STRING )  )  {     if  ( ! ( key.isQuotedString (  )  )  )  {         JSType jstype = getJSType ( n.getFirstChild (  )  ) ;         maybeMarkCandidate ( key, jstype, t ) ;     }else {         quotedNames.add ( key.getString (  )  ) ;     } }^577^^^^^568^585^[REMOVE] ^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType )  .getOwnerFunction (  )   )  {^578^^^^^577^582^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return;  ;^581^^^^^577^582^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jsType = n.getJSType (  )  ;^578^^^^^577^582^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^578^579^580^^^577^582^[ADD] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ; }^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^type = type.restrictByNotNullOrUndefined (  )  ;^576^^^^^577^582^[REPLACE] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType newType :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^578^^^^^577^582^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^576^^^^^577^582^[ADD] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^addNonUnionType ( alt ) ;^584^^^^^568^585^[REPLACE] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^584^^^^^568^585^[ADD] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^protected final Map<Property, PropertyGraphNode> nodes  = null ;^303^^^^^^^[REPLACE] protected final Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] PropertyGraph   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^JSTypeBitSet typesInSet  = null ;^340^^^^^^^[REPLACE] JSTypeBitSet typesInSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] PropertySubGraph   [TYPE]  Map nodes  [TYPE]  Property value  [TYPE]  boolean false  true 
[REPLACE]^JSTypeBitSet typesRelatedToSet ;^343^^^^^^^[REPLACE] JSTypeBitSet typesRelatedToSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] PropertySubGraph   [TYPE]  Map nodes  [TYPE]  Property value  [TYPE]  boolean false  true 
[REPLACE]^private Annotation annotation;^396^^^^^^^[REPLACE] protected Annotation annotation;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] PropertyGraphNode   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^if  ( child.getType (  )   &&  Token.STRING )  {^429^^^^^419^435^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[ADD]^externedNames.add ( child.getString (  )  ) ;^429^430^431^^^419^435^[ADD] if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^externedNames.add ( dest.getString (  )  )  ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[ADD]^^430^^^^^419^435^[ADD] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^externedNames.add ( child.getType (  )  ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[ADD]^^428^429^430^^^419^435^[ADD] child = child.getNext (  ) .getNext (  )  )  { if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^422^^^^^419^435^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^for  ( Node child = n.getString (  ) ;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^if  ( key.getType (  )   &&  Token.STRING )  {^455^^^^^440^477^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^440^477^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REMOVE]^if  (  ( key.getType (  )  )  ==  ( STRING )  )  {     if  ( ! ( key.isQuotedString (  )  )  )  {         JSType jstype = getJSType ( n.getFirstChild (  )  ) ;         maybeMarkCandidate ( key, jstype, t ) ;     }else {         quotedNames.add ( key.getString (  )  ) ;     } }^456^^^^^440^477^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames .contains ( true )  ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( parent .isQuotedString (  )   ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^457^^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getLastChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( parent.getType (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( key.getType (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^462^^^^^456^463^[ADD] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^maybeMarkCandidate ( key, jstype, t ) ;^457^458^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( child.getType (  )   !=  Token.STRING )  {^472^^^^^440^477^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REMOVE]^if  ( ! ( key.isQuotedString (  )  )  )  {     JSType jstype = getJSType ( n.getFirstChild (  )  ) ;     maybeMarkCandidate ( key, jstype, t ) ; }else {     quotedNames.add ( key.getString (  )  ) ; }^472^^^^^440^477^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.contains ( propNode.getString (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^473^^^^^440^477^[ADD] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( child.getType (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^key =  null.getNext (  ) .getNext (  )  )  {^452^^^^^440^477^[REPLACE] key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^Node propNode = propNode.getFirstChild (  ) .getNext (  ) ;^443^^^^^440^477^[REPLACE] Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^444^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^Node child = n.getLastChild (  )  ;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^Node child = n.getFirstChild (  ) ;^471^^^^^440^477^[REPLACE] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^final  short  oldName;^551^^^^^^^[REPLACE] final String oldName;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^short  numOccurrences;^553^^^^^^^[REPLACE] int numOccurrences;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^JSTypeBitSet typesSet  = null ;^555^^^^^^^[REPLACE] JSTypeBitSet typesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^JSTypeBitSet relatedTypesSet  = null ;^556^^^^^^^[REPLACE] JSTypeBitSet relatedTypesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^if   (  !typesSet.get  (  typeInt  )    )   {  ;^569^^^^^568^585^[REPLACE] if  ( skipAmbiguating )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^return;  ;^570^^^^^568^585^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^575^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( ! alt instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^for  ( JSType newType :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^578^^^^^577^582^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^return;  ;^581^^^^^577^582^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^int typeInt = getIntForType ( newType )  ;^578^^^^^577^582^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^576^^^^^577^582^[ADD] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^578^579^580^^^577^582^[ADD] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ; }^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^newType =  null.restrictByNotNullOrUndefined (  ) ;^576^^^^^577^582^[REPLACE] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^addNonUnionType ( alt ) ;^584^^^^^568^585^[REPLACE] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^private static  long serialVersionUID = 1L;^604^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] JSTypeBitSet   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
